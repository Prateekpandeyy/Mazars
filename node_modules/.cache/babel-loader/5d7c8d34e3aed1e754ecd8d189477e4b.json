{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx\";\nimport React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport { Modal, ModalTitle, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green, red } from '@material-ui/core/colors';\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/13\"],\n  \"5\": [\"span 3/span 4/13/9\", \"span 3/span 4/13/13\", \"span 3/span 4/13/17\", \"span 3/span 4/13/21\", \"span 9/span 16/10/21\"],\n  \"6\": [\"span 3/span 4/13/7\", \"span 3/span 4/13/11\", \"span 3/span 4/13/15\", \"span 3/span 4/13/19\", \"span 3/span 4/13/23\", \"span 9/span 16/10/21\"],\n  \"7\": [\"span 3/span 4/13/5\", \"span 3/span 4/13/9\", \"span 3/span 4/13/13\", \"span 3/span 4/13/17\", \"span 3/span 4/13/21\", \"span 3/span 4/13/25\", \"span 9/span 16/10/21\"]\n};\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.teamKey = window.localStorage.getItem(\"tlkey\");\n    this.uid = Math.floor(Math.random() * 10000 + 1);\n    this.channelName = this.props.channel;\n    this.vendor = 1;\n    this.region = 14;\n    this.bucket = \"vride-multitvm\";\n    this.accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n    this.secretKey = \"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\";\n\n    this.getSchedulerData = () => {\n      console.log(\"getSchedulerData--\", this.props.id);\n      axios.get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          this.setState({\n            item: res.data.result.items[0],\n            showButton: res.data.result.items[0].owner_id\n          });\n        }\n      });\n    };\n\n    this.streamInit = (uid, attendeeMode, videoProfile, config) => {\n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: true,\n        screen: false\n      };\n\n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n\n        default:\n        case \"video\":\n          break;\n      }\n\n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n\n    this.subscribeStreamEvents = () => {\n      let rt = this;\n      rt.client.on(\"stream-added\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"New stream added: \" + stream.getId());\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        console.log(\"Subscribe \", stream);\n        rt.client.subscribe(stream, function (err) {\n          console.log(\"Subscribe stream failed\", err);\n        });\n      });\n      rt.client.on(\"peer-leave\", function (evt) {\n        console.log(\"Peer has left: \" + evt.uid);\n        console.log(new Date().toLocaleTimeString());\n        console.log(evt);\n        rt.removeStream(evt.uid);\n      });\n      rt.client.on(\"stream-subscribed\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"Got stream-subscribed event\");\n        console.log(new Date().toLocaleTimeString());\n        console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n        console.log(evt);\n        rt.addStream(stream);\n      });\n      rt.client.on(\"stream-removed\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"Stream removed: \" + stream.getId());\n        console.log(new Date().toLocaleTimeString());\n        console.log(evt);\n        rt.removeStream(stream.getId());\n      });\n    };\n\n    this.removeStream = uid => {\n      this.state.streamList.map((item, index) => {\n        if (item.getId() === uid) {\n          item.close();\n          let element = document.querySelector(\"#ag-item-\" + uid);\n\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n\n          let tempList = [...this.state.streamList];\n          tempList.splice(index, 1);\n          this.setState({\n            streamList: tempList\n          });\n        }\n      });\n    };\n\n    this.addStream = (stream, push = false) => {\n      let repeatition = this.state.streamList.some(item => {\n        return item.getId() === stream.getId();\n      });\n\n      if (repeatition) {\n        return;\n      }\n\n      if (push) {\n        this.setState({\n          streamList: this.state.streamList.concat([stream])\n        });\n      } else {\n        this.setState({\n          streamList: [stream].concat(this.state.streamList)\n        });\n      }\n    };\n\n    this.handleCamera = e => {\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isVideoOn() ? this.localStream.disableVideo() : this.localStream.enableVideo();\n    };\n\n    this.handleMic = e => {\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isAudioOn() ? this.localStream.disableAudio() : this.localStream.enableAudio();\n    };\n\n    this.switchDisplay = e => {\n      if (e.currentTarget.classList.contains(\"disabled\") || this.state.streamList.length <= 1) {\n        return;\n      }\n\n      if (this.state.displayMode === \"pip\") {\n        this.setState({\n          displayMode: \"tile\"\n        });\n      } else if (this.state.displayMode === \"tile\") {\n        this.setState({\n          displayMode: \"pip\"\n        });\n      } else if (this.state.displayMode === \"share\") {// do nothing or alert, tbd\n      } else {\n        console.error(\"Display Mode can only be tile/pip/share\");\n      }\n    };\n\n    this.hideRemote = e => {\n      if (e.currentTarget.classList.contains(\"disabled\") || this.state.streamList.length <= 1) {\n        return;\n      }\n\n      let list;\n      let id = this.state.streamList[this.state.streamList.length - 1].getId();\n      list = Array.from(document.querySelectorAll(`.ag-item:not(#ag-item-${id})`));\n      list.map(item => {\n        if (item.style.display !== \"none\") {\n          item.style.display = \"none\";\n        } else {\n          item.style.display = \"block\";\n        }\n      });\n    };\n\n    this.handleExit = e => {\n      if (e.currentTarget.classList.contains(\"disabled\")) {\n        return;\n      }\n\n      try {\n        this.client && this.client.unpublish(this.localStream);\n        this.localStream && this.localStream.close();\n\n        if (this.state.stateSharing) {\n          this.shareClient && this.shareClient.unpublish(this.shareStream);\n          this.shareStream && this.shareStream.close();\n        }\n\n        this.client && this.client.leave(() => {\n          console.log(\"Client succeed to leave.\");\n        }, () => {\n          console.log(\"Client failed to leave.\");\n        });\n      } finally {\n        this.setState({\n          readyState: false\n        });\n        this.client = null;\n        this.localStream = null; // redirect to index\n\n        window.location.hash = \"/teamleader/schedule\";\n      }\n    };\n\n    this.sharingScreen = e => {\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n        this.state.stateSharing = false;\n      } else {\n        this.state.stateSharing = true;\n        let $ = this.props; // init AgoraRTC local client\n\n        this.shareClient = AgoraRTC.createClient({\n          mode: $.transcode\n        });\n        this.shareClient.init($.appId, () => {\n          console.log(\"AgoraRTC client initialized\");\n          this.subscribeStreamEvents();\n          this.shareClient.join($.appId, $.channel, $.uid, uid => {\n            this.state.uid = uid;\n            console.log(\"User \" + uid + \" join channel successfully\");\n            console.log(\"At \" + new Date().toLocaleTimeString()); // create local stream\n            // It is not recommended to setState in function addStream\n\n            this.shareStream = this.streamInitSharing(uid, $.attendeeMode, $.videoProfile);\n            this.shareStream.init(() => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, err => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n\n              this.setState({\n                readyState: true\n              });\n            }, err => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({\n                readyState: true\n              });\n            });\n          });\n        });\n      }\n    };\n\n    this.streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: false,\n        screen: true\n      };\n\n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n\n        default:\n        case \"video\":\n          break;\n      }\n\n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n\n    this.CreateS3Folder = uid => {\n      console.log(\"CreateS3Folder\", uid);\n      axios.get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.encodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n    this.accuire = () => {\n      console.log(\"accuire - \");\n      var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\";\n      axios({\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json;charset=utf-8\",\n          \"authorization\": \"Basic \" + this.encodedString,\n          \"cache-control\": \"no-cache\"\n        },\n        url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n        data: data\n      }).then(json => this.startRecording(json)) // console.log(\"accuire - \",json))\n      .catch(error => {\n        console.log(\"error - \", error);\n      });\n    };\n\n    this.toggleModal = key => {\n      console.log(\"key\", key);\n      this.setState({\n        showModal: !this.state.showModal,\n        recordDisplay: false\n      });\n    };\n\n    this.stopRecording = () => {\n      console.log(\"stopRecording - \");\n      var resourceId = localStorage.getItem(\"resourceId\");\n      var sid = localStorage.getItem(\"sid\");\n      var data = JSON.stringify({\n        \"cname\": this.channelName,\n        \"uid\": JSON.stringify(this.uid),\n        \"clientRequest\": {}\n      });\n      axios({\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json;charset=utf-8\",\n          \"authorization\": \"Basic \" + this.encodedString,\n          \"cache-control\": \"no-cache\"\n        },\n        url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n        data: data\n      }).then(json => this.toggleModal(json)).catch(error => {\n        console.log(\"error - \", error);\n      });\n    };\n\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item: {},\n      showButton: ''\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  } // userId = window.localStorage.getItem(\"tlkey\");\n\n\n  componentWillMount() {\n    let $ = this.props; // init AgoraRTC local client\n\n    this.client = AgoraRTC.createClient({\n      mode: $.transcode\n    });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n      this.client.join($.appId, $.channel, $.uid, uid => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString()); // create local stream\n        // It is not recommended to setState in function addStream\n\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(() => {\n          if ($.attendeeMode !== \"audience\") {\n            this.addStream(this.localStream, true);\n            this.client.publish(this.localStream, err => {\n              console.log(\"Publish local stream error: \" + err);\n            });\n          }\n\n          this.setState({\n            readyState: true\n          });\n        }, err => {\n          console.log(\"getUserMedia failed\", err);\n          this.setState({\n            readyState: true\n          });\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData();\n    this.accuire(); // this.accuire()\n  }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\"); // pip mode (can only use when less than 4 people in channel)\n\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n\n      if (no > 4) {\n        this.setState({\n          displayMode: \"tile\"\n        });\n        return;\n      }\n\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\"style\", `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`);\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    } // tile mode\n    else if (this.state.displayMode === \"tile\") {\n        let no = this.state.streamList.length;\n        this.state.streamList.map((item, index) => {\n          let id = item.getId();\n          let dom = document.querySelector(\"#ag-item-\" + id);\n\n          if (!dom) {\n            dom = document.createElement(\"section\");\n            dom.setAttribute(\"id\", \"ag-item-\" + id);\n            dom.setAttribute(\"class\", \"ag-item\");\n            canvas.appendChild(dom);\n            item.play(\"ag-item-\" + id);\n          }\n\n          dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n          item.player.resize && item.player.resize();\n        });\n      } // screen share mode (tbd)\n      else if (this.state.displayMode === \"share\") {}\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n\n    this.client && this.client.leave(() => {\n      console.log(\"Client succeed to leave.\");\n    }, () => {\n      console.log(\"Client failed to leave.\");\n    });\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  } //get recording status\n\n\n  async GetRecordingStatus(json) {\n    console.log(\"GetRecordingStatus\", json);\n    await this.sleep(3000);\n    var resourceId = json.data.resourceId;\n    var sid = json.data.sid;\n    localStorage.setItem(\"resourceId\", resourceId);\n    localStorage.setItem(\"sid\", sid);\n    fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \" + this.encodedString,\n        \"cache-control\": \"no-cache\"\n      }\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      this.setState({\n        data: response,\n        recordDisplay: !this.state.recordDisplay\n      });\n    }).catch(error => console.log(error));\n  } //start recording\n\n\n  async startRecording(key) {\n    console.log(\"startRecording - \", key);\n    var resourceId = key.data.resourceId;\n    this.CreateS3Folder(JSON.stringify(this.uid));\n    var data = \"{\\n\\t\\\"cname\\\":\\\"\" + this.channelName + \"\\\",\\n\\t\\\"uid\\\":\\\"\" + this.uid + \"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\" + this.uid + \"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\" + this.vendor + \",\\n\\t\\t\\t\\\"region\\\":\" + this.region + \",\\n\\t\\t\\t\\\"bucket\\\":\\\"\" + this.bucket + \"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\" + this.accessKey + \"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\" + this.uid + \"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\" + this.secretKey + \"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\";\n    await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \" + this.encodedString,\n        \"cache-control\": \"no-cache\"\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data\n    }).then(json => this.GetRecordingStatus(json)).catch(error => {\n      console.log(\"error - \", error);\n    });\n  }\n\n  render() {\n    // console.log(\"data\",this.state.data)\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\"\n    };\n    const videoControlBtn = this.props.attendeeMode === \"video\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: this.handleCamera,\n      className: \"ag-btn videoControlBtn\",\n      title: \"Enable/Disable Video\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-camera-off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 9\n    }, this) : \"\";\n    const audioControlBtn = this.props.attendeeMode !== \"audience\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: this.handleMic,\n      className: \"ag-btn audioControlBtn\",\n      title: \"Enable/Disable Audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-mic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-mic-off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }, this) : \"\";\n\n    const switchDisplayBtn = /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: this.switchDisplay,\n      className: this.state.streamList.length > 4 ? \"ag-btn displayModeBtn disabled\" : \"ag-btn displayModeBtn\",\n      title: \"Switch Display Mode\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-switch-display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this);\n\n    const hideRemoteBtn = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: this.state.streamList.length > 4 || this.state.displayMode !== \"pip\" ? \"ag-btn disableRemoteBtn disabled\" : \"ag-btn disableRemoteBtn\",\n      onClick: this.hideRemote,\n      title: \"Hide Remote Stream\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-remove-pip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this);\n\n    const exitBtn = /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: this.handleExit,\n      className: this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\",\n      title: \"Exit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ag-icon ag-icon-leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this); //recording btn on\n    // const recordingBtn = (\n    //   <span\n    //     onClick={this.accuire}\n    //     className={\n    //       this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    //     }\n    //     title=\"Record On\"\n    //   >\n    //     <FiberManualRecordIcon style={{ color: green[500] }}/>\n    //   </span>\n    // );\n    //recording btn off\n\n\n    const recordingBtnOff = /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: this.stopRecording,\n      className: this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\",\n      title: \"Record Off\",\n      children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n        style: {\n          color: red[500]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 3\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ag-canvas\",\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ag-btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(RecordingModal, {\n            isOpen: this.state.showModal,\n            toggle: this.toggleModal,\n            data: this.state.data,\n            item: this.state.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 9\n          }, this), exitBtn, videoControlBtn, audioControlBtn, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.sharingScreen,\n            className: \"ag-btn shareScreenBtn\",\n            title: \"Share/unShare Screen\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"ag-icon ag-icon-screen-share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), switchDisplayBtn, hideRemoteBtn, this.state.recordDisplay ? recordingBtnOff : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AgoraCanvas;","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx"],"names":["React","merge","AgoraRTC","MicNoneIcon","MicOffIcon","axios","baseUrl","Modal","ModalTitle","ModalHeader","ModalBody","ModalFooter","Button","RecordingModal","FiberManualRecordIcon","green","red","tile_canvas","AgoraCanvas","Component","constructor","props","teamKey","window","localStorage","getItem","uid","Math","floor","random","channelName","channel","vendor","region","bucket","accessKey","secretKey","getSchedulerData","console","log","id","get","then","res","data","code","setState","item","result","items","showButton","owner_id","streamInit","attendeeMode","videoProfile","config","defaultConfig","streamID","audio","video","screen","stream","createStream","setVideoProfile","subscribeStreamEvents","rt","client","on","evt","getId","Date","toLocaleTimeString","subscribe","err","removeStream","addStream","state","streamList","map","index","close","element","document","querySelector","parentNode","removeChild","tempList","splice","push","repeatition","some","concat","handleCamera","e","currentTarget","classList","toggle","localStream","isVideoOn","disableVideo","enableVideo","handleMic","isAudioOn","disableAudio","enableAudio","switchDisplay","contains","length","displayMode","error","hideRemote","list","Array","from","querySelectorAll","style","display","handleExit","unpublish","stateSharing","shareClient","shareStream","leave","readyState","location","hash","sharingScreen","$","createClient","mode","transcode","init","appId","join","streamInitSharing","publish","CreateS3Folder","JSON","parse","encodedString","accuire","method","headers","url","json","startRecording","catch","toggleModal","key","showModal","recordDisplay","stopRecording","resourceId","sid","stringify","resID","bind","componentWillMount","componentDidMount","canvas","btnGroup","addEventListener","global","_toolbarToggle","clearTimeout","add","setTimeout","remove","componentDidUpdate","no","dom","createElement","setAttribute","appendChild","play","player","resize","componentWillUnmount","sleep","ms","Promise","resolve","GetRecordingStatus","setItem","fetch","response","render","gridGap","alignItems","justifyItems","gridTemplateRows","gridTemplateColumns","videoControlBtn","audioControlBtn","switchDisplayBtn","hideRemoteBtn","exitBtn","recordingBtnOff","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAO,cAAP;AACA,OAAO,qCAAP;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,EAMEC,MANF,QAOO,YAPP;AAQA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA0B,0BAA1B;AAGA,MAAMC,WAAW,GAAG;AAClB,OAAK,CAAC,iBAAD,CADa;AAElB,OAAK,CAAC,uBAAD,EAA0B,uBAA1B,CAFa;AAGlB,OAAK,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,qBAArC,CAHa;AAIlB,OAAK,CACH,gBADG,EAEH,gBAFG,EAGH,gBAHG,EAIH,qBAJG,CAJa;AAUlB,OAAK,CACH,oBADG,EAEH,qBAFG,EAGH,qBAHG,EAIH,qBAJG,EAKH,sBALG,CAVa;AAiBlB,OAAK,CACH,oBADG,EAEH,qBAFG,EAGH,qBAHG,EAIH,qBAJG,EAKH,qBALG,EAMH,sBANG,CAjBa;AAyBlB,OAAK,CACH,oBADG,EAEH,oBAFG,EAGH,qBAHG,EAIH,qBAJG,EAKH,qBALG,EAMH,qBANG,EAOH,sBAPG;AAzBa,CAApB;AAoCA;AACA;AACA;AACA;;AAGA,MAAMC,WAAN,SAA0BlB,KAAK,CAACmB,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAwBnBC,OAxBmB,GAwBTC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAxBS;AAAA,SAyBnBC,GAzBmB,GAyBbC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAAjB,GAA0B,CAArC,CAzBa;AAAA,SA0BnBC,WA1BmB,GA0BL,KAAKT,KAAL,CAAWU,OA1BN;AAAA,SA4BpBC,MA5BoB,GA4BX,CA5BW;AAAA,SA6BpBC,MA7BoB,GA6BX,EA7BW;AAAA,SA8BpBC,MA9BoB,GA8BX,gBA9BW;AAAA,SA+BpBC,SA/BoB,GA+BR,sBA/BQ;AAAA,SAgCpBC,SAhCoB,GAgCR,0CAhCQ;;AAAA,SAwFnBC,gBAxFmB,GAwFD,MAAK;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKlB,KAAL,CAAWmB,EAA5C;AAEAnC,MAAAA,KAAK,CACIoC,GADT,CACc,GAAEnC,OAAQ,yBAAwB,KAAKe,KAAL,CAAWmB,EAAG,EAD9D,EAESE,IAFT,CAEeC,GAAD,IAAS;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;;AAGA,YAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,CAAtB,EAAyB;AACvB,eAAKC,QAAL,CAAc;AACZC,YAAAA,IAAI,EAACJ,GAAG,CAACC,IAAJ,CAASI,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,CADO;AAEbC,YAAAA,UAAU,EAAGP,GAAG,CAACC,IAAJ,CAASI,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBE;AAFzB,WAAd;AAKD;AACJ,OAbT;AAcD,KAzGkB;;AAAA,SAqLnBC,UArLmB,GAqLN,CAAC1B,GAAD,EAAM2B,YAAN,EAAoBC,YAApB,EAAkCC,MAAlC,KAA6C;AACxD,UAAIC,aAAa,GAAG;AAClBC,QAAAA,QAAQ,EAAE/B,GADQ;AAElBgC,QAAAA,KAAK,EAAE,IAFW;AAGlBC,QAAAA,KAAK,EAAE,IAHW;AAIlBC,QAAAA,MAAM,EAAE;AAJU,OAApB;;AAOA,cAAQP,YAAR;AACE,aAAK,YAAL;AACEG,UAAAA,aAAa,CAACG,KAAd,GAAsB,KAAtB;AACA;;AACF,aAAK,UAAL;AACEH,UAAAA,aAAa,CAACG,KAAd,GAAsB,KAAtB;AACAH,UAAAA,aAAa,CAACE,KAAd,GAAsB,KAAtB;AACA;;AACF;AACA,aAAK,OAAL;AACE;AAVJ;;AAaA,UAAIG,MAAM,GAAG3D,QAAQ,CAAC4D,YAAT,CAAsB7D,KAAK,CAACuD,aAAD,EAAgBD,MAAhB,CAA3B,CAAb;AACAM,MAAAA,MAAM,CAACE,eAAP,CAAuBT,YAAvB;AACA,aAAOO,MAAP;AACD,KA7MkB;;AAAA,SA+MnBG,qBA/MmB,GA+MK,MAAM;AAC5B,UAAIC,EAAE,GAAG,IAAT;AACAA,MAAAA,EAAE,CAACC,MAAH,CAAUC,EAAV,CAAa,cAAb,EAA6B,UAAUC,GAAV,EAAe;AAC1C,YAAIP,MAAM,GAAGO,GAAG,CAACP,MAAjB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBsB,MAAM,CAACQ,KAAP,EAAnC;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,IAAI+B,IAAJ,GAAWC,kBAAX,EAApB;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BsB,MAA1B;AACAI,QAAAA,EAAE,CAACC,MAAH,CAAUM,SAAV,CAAoBX,MAApB,EAA4B,UAAUY,GAAV,EAAe;AACzCnC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCkC,GAAvC;AACD,SAFD;AAGD,OARD;AAUAR,MAAAA,EAAE,CAACC,MAAH,CAAUC,EAAV,CAAa,YAAb,EAA2B,UAAUC,GAAV,EAAe;AACxC9B,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB6B,GAAG,CAAC1C,GAApC;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAI+B,IAAJ,GAAWC,kBAAX,EAAZ;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY6B,GAAZ;AACAH,QAAAA,EAAE,CAACS,YAAH,CAAgBN,GAAG,CAAC1C,GAApB;AACD,OALD;AAOAuC,MAAAA,EAAE,CAACC,MAAH,CAAUC,EAAV,CAAa,mBAAb,EAAkC,UAAUC,GAAV,EAAe;AAC/C,YAAIP,MAAM,GAAGO,GAAG,CAACP,MAAjB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAI+B,IAAJ,GAAWC,kBAAX,EAAZ;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CsB,MAAM,CAACQ,KAAP,EAAvD;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAY6B,GAAZ;AACAH,QAAAA,EAAE,CAACU,SAAH,CAAad,MAAb;AACD,OAPD;AASAI,MAAAA,EAAE,CAACC,MAAH,CAAUC,EAAV,CAAa,gBAAb,EAA+B,UAAUC,GAAV,EAAe;AAC5C,YAAIP,MAAM,GAAGO,GAAG,CAACP,MAAjB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBsB,MAAM,CAACQ,KAAP,EAAjC;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAI+B,IAAJ,GAAWC,kBAAX,EAAZ;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY6B,GAAZ;AACAH,QAAAA,EAAE,CAACS,YAAH,CAAgBb,MAAM,CAACQ,KAAP,EAAhB;AACD,OAND;AAOD,KAlPkB;;AAAA,SAoPnBK,YApPmB,GAoPHhD,GAAD,IAAS;AACtB,WAAKkD,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,CAAC/B,IAAD,EAAOgC,KAAP,KAAiB;AACzC,YAAIhC,IAAI,CAACsB,KAAL,OAAiB3C,GAArB,EAA0B;AACxBqB,UAAAA,IAAI,CAACiC,KAAL;AACA,cAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAczD,GAArC,CAAd;;AACA,cAAIuD,OAAJ,EAAa;AACXA,YAAAA,OAAO,CAACG,UAAR,CAAmBC,WAAnB,CAA+BJ,OAA/B;AACD;;AACD,cAAIK,QAAQ,GAAG,CAAC,GAAG,KAAKV,KAAL,CAAWC,UAAf,CAAf;AACAS,UAAAA,QAAQ,CAACC,MAAT,CAAgBR,KAAhB,EAAuB,CAAvB;AACA,eAAKjC,QAAL,CAAc;AACZ+B,YAAAA,UAAU,EAAES;AADA,WAAd;AAGD;AACF,OAbD;AAcD,KAnQkB;;AAAA,SAqQnBX,SArQmB,GAqQP,CAACd,MAAD,EAAS2B,IAAI,GAAG,KAAhB,KAA0B;AACpC,UAAIC,WAAW,GAAG,KAAKb,KAAL,CAAWC,UAAX,CAAsBa,IAAtB,CAA4B3C,IAAD,IAAU;AACrD,eAAOA,IAAI,CAACsB,KAAL,OAAiBR,MAAM,CAACQ,KAAP,EAAxB;AACD,OAFiB,CAAlB;;AAGA,UAAIoB,WAAJ,EAAiB;AACf;AACD;;AACD,UAAID,IAAJ,EAAU;AACR,aAAK1C,QAAL,CAAc;AACZ+B,UAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBc,MAAtB,CAA6B,CAAC9B,MAAD,CAA7B;AADA,SAAd;AAGD,OAJD,MAIO;AACL,aAAKf,QAAL,CAAc;AACZ+B,UAAAA,UAAU,EAAE,CAAChB,MAAD,EAAS8B,MAAT,CAAgB,KAAKf,KAAL,CAAWC,UAA3B;AADA,SAAd;AAGD;AACF,KArRkB;;AAAA,SAuRnBe,YAvRmB,GAuRHC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,aAAF,CAAgBC,SAAhB,CAA0BC,MAA1B,CAAiC,KAAjC;AACA,WAAKC,WAAL,CAAiBC,SAAjB,KACI,KAAKD,WAAL,CAAiBE,YAAjB,EADJ,GAEI,KAAKF,WAAL,CAAiBG,WAAjB,EAFJ;AAGD,KA5RkB;;AAAA,SA8RnBC,SA9RmB,GA8RNR,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,aAAF,CAAgBC,SAAhB,CAA0BC,MAA1B,CAAiC,KAAjC;AACA,WAAKC,WAAL,CAAiBK,SAAjB,KACI,KAAKL,WAAL,CAAiBM,YAAjB,EADJ,GAEI,KAAKN,WAAL,CAAiBO,WAAjB,EAFJ;AAGD,KAnSkB;;AAAA,SAqSnBC,aArSmB,GAqSFZ,CAAD,IAAO;AACrB,UACEA,CAAC,CAACC,aAAF,CAAgBC,SAAhB,CAA0BW,QAA1B,CAAmC,UAAnC,KACA,KAAK9B,KAAL,CAAWC,UAAX,CAAsB8B,MAAtB,IAAgC,CAFlC,EAGE;AACA;AACD;;AACD,UAAI,KAAK/B,KAAL,CAAWgC,WAAX,KAA2B,KAA/B,EAAsC;AACpC,aAAK9D,QAAL,CAAc;AAAE8D,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OAFD,MAEO,IAAI,KAAKhC,KAAL,CAAWgC,WAAX,KAA2B,MAA/B,EAAuC;AAC5C,aAAK9D,QAAL,CAAc;AAAE8D,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OAFM,MAEA,IAAI,KAAKhC,KAAL,CAAWgC,WAAX,KAA2B,OAA/B,EAAwC,CAC7C;AACD,OAFM,MAEA;AACLtE,QAAAA,OAAO,CAACuE,KAAR,CAAc,yCAAd;AACD;AACF,KArTkB;;AAAA,SAuTnBC,UAvTmB,GAuTLjB,CAAD,IAAO;AAClB,UACEA,CAAC,CAACC,aAAF,CAAgBC,SAAhB,CAA0BW,QAA1B,CAAmC,UAAnC,KACA,KAAK9B,KAAL,CAAWC,UAAX,CAAsB8B,MAAtB,IAAgC,CAFlC,EAGE;AACA;AACD;;AACD,UAAII,IAAJ;AACA,UAAIvE,EAAE,GAAG,KAAKoC,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWC,UAAX,CAAsB8B,MAAtB,GAA+B,CAArD,EAAwDtC,KAAxD,EAAT;AACA0C,MAAAA,IAAI,GAAGC,KAAK,CAACC,IAAN,CACL/B,QAAQ,CAACgC,gBAAT,CAA2B,yBAAwB1E,EAAG,GAAtD,CADK,CAAP;AAGAuE,MAAAA,IAAI,CAACjC,GAAL,CAAU/B,IAAD,IAAU;AACjB,YAAIA,IAAI,CAACoE,KAAL,CAAWC,OAAX,KAAuB,MAA3B,EAAmC;AACjCrE,UAAAA,IAAI,CAACoE,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACD,SAFD,MAEO;AACLrE,UAAAA,IAAI,CAACoE,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACD;AACF,OAND;AAOD,KA1UkB;;AAAA,SA4UnBC,UA5UmB,GA4ULxB,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACC,aAAF,CAAgBC,SAAhB,CAA0BW,QAA1B,CAAmC,UAAnC,CAAJ,EAAoD;AAClD;AACD;;AACD,UAAI;AACF,aAAKxC,MAAL,IAAe,KAAKA,MAAL,CAAYoD,SAAZ,CAAsB,KAAKrB,WAA3B,CAAf;AACA,aAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiBjB,KAAjB,EAApB;;AACA,YAAI,KAAKJ,KAAL,CAAW2C,YAAf,EAA6B;AAC3B,eAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBF,SAAjB,CAA2B,KAAKG,WAAhC,CAApB;AACA,eAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiBzC,KAAjB,EAApB;AACD;;AACD,aAAKd,MAAL,IACE,KAAKA,MAAL,CAAYwD,KAAZ,CACE,MAAM;AACJpF,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,SAHH,EAIE,MAAM;AACJD,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SANH,CADF;AASD,OAhBD,SAgBU;AACR,aAAKO,QAAL,CAAc;AAAE6E,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKzD,MAAL,GAAc,IAAd;AACA,aAAK+B,WAAL,GAAmB,IAAnB,CAHQ,CAIR;;AACA1E,QAAAA,MAAM,CAACqG,QAAP,CAAgBC,IAAhB,GAAuB,sBAAvB;AACD;AACF,KAvWkB;;AAAA,SAyWnBC,aAzWmB,GAyWFjC,CAAD,IAAO;AACrB,UAAI,KAAKjB,KAAL,CAAW2C,YAAf,EAA6B;AAC3B,aAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBF,SAAjB,CAA2B,KAAKG,WAAhC,CAApB;AACA,aAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiBzC,KAAjB,EAApB;AACA,aAAKJ,KAAL,CAAW2C,YAAX,GAA0B,KAA1B;AACD,OAJD,MAIO;AACL,aAAK3C,KAAL,CAAW2C,YAAX,GAA0B,IAA1B;AACA,YAAIQ,CAAC,GAAG,KAAK1G,KAAb,CAFK,CAGL;;AACA,aAAKmG,WAAL,GAAmBtH,QAAQ,CAAC8H,YAAT,CAAsB;AAAEC,UAAAA,IAAI,EAAEF,CAAC,CAACG;AAAV,SAAtB,CAAnB;AAEA,aAAKV,WAAL,CAAiBW,IAAjB,CAAsBJ,CAAC,CAACK,KAAxB,EAA+B,MAAM;AACnC9F,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,eAAKyB,qBAAL;AACA,eAAKwD,WAAL,CAAiBa,IAAjB,CAAsBN,CAAC,CAACK,KAAxB,EAA+BL,CAAC,CAAChG,OAAjC,EAA0CgG,CAAC,CAACrG,GAA5C,EAAkDA,GAAD,IAAS;AACxD,iBAAKkD,KAAL,CAAWlD,GAAX,GAAiBA,GAAjB;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAUb,GAAV,GAAgB,4BAA5B;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,IAAI+B,IAAJ,GAAWC,kBAAX,EAApB,EAHwD,CAIxD;AACA;;AAEA,iBAAKkD,WAAL,GAAmB,KAAKa,iBAAL,CACjB5G,GADiB,EAEjBqG,CAAC,CAAC1E,YAFe,EAGjB0E,CAAC,CAACzE,YAHe,CAAnB;AAKA,iBAAKmE,WAAL,CAAiBU,IAAjB,CACE,MAAM;AACJ,kBAAIJ,CAAC,CAAC1E,YAAF,KAAmB,UAAvB,EAAmC;AACjC,qBAAKsB,SAAL,CAAe,KAAK8C,WAApB,EAAiC,IAAjC;AACA,qBAAKD,WAAL,CAAiBe,OAAjB,CAAyB,KAAKd,WAA9B,EAA4ChD,GAAD,IAAS;AAClDnC,kBAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCkC,GAA7C;AACD,iBAFD;AAGD;;AACD,mBAAK3B,QAAL,CAAc;AAAE6E,gBAAAA,UAAU,EAAE;AAAd,eAAd;AACD,aATH,EAUGlD,GAAD,IAAS;AACPnC,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCkC,GAAnC;AACA,mBAAK3B,QAAL,CAAc;AAAE6E,gBAAAA,UAAU,EAAE;AAAd,eAAd;AACD,aAbH;AAeD,WA3BD;AA4BD,SAhCD;AAiCD;AACF,KAtZkB;;AAAA,SAwZnBW,iBAxZmB,GAwZC,CAAC5G,GAAD,EAAM2B,YAAN,EAAoBC,YAApB,EAAkCC,MAAlC,KAA6C;AAC/D,UAAIC,aAAa,GAAG;AAClBC,QAAAA,QAAQ,EAAE/B,GADQ;AAElBgC,QAAAA,KAAK,EAAE,IAFW;AAGlBC,QAAAA,KAAK,EAAE,KAHW;AAIlBC,QAAAA,MAAM,EAAE;AAJU,OAApB;;AAOA,cAAQP,YAAR;AACE,aAAK,YAAL;AACEG,UAAAA,aAAa,CAACG,KAAd,GAAsB,KAAtB;AACA;;AACF,aAAK,UAAL;AACEH,UAAAA,aAAa,CAACG,KAAd,GAAsB,KAAtB;AACAH,UAAAA,aAAa,CAACE,KAAd,GAAsB,KAAtB;AACA;;AACF;AACA,aAAK,OAAL;AACE;AAVJ;;AAaA,UAAIG,MAAM,GAAG3D,QAAQ,CAAC4D,YAAT,CAAsB7D,KAAK,CAACuD,aAAD,EAAgBD,MAAhB,CAA3B,CAAb;AACAM,MAAAA,MAAM,CAACE,eAAP,CAAuBT,YAAvB;AACA,aAAOO,MAAP;AACD,KAhbkB;;AAAA,SAmbnB2E,cAnbmB,GAmbD9G,GAAD,IAAQ;AACvBY,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Bb,GAA7B;AACArB,MAAAA,KAAK,CACIoC,GADT,CACc,0EAAyEgG,IAAI,CAACC,KAAL,CAAWhH,GAAX,CAAgB,EADvG,EAESgB,IAFT,CAEeC,GAAD,IAAS;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,OAJT;AAKD,KA1bkB;;AAAA,SA6brBgG,aA7bqB,GA6bL,0FA7bK;;AAAA,SAkgBlBC,OAlgBkB,GAkgBR,MAAK;AACdtG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAIK,IAAI,GAAG,uBAAuB,KAAKd,WAA5B,GAA0C,oBAA1C,GAAiE,KAAKJ,GAAtE,GAA4E,oCAAvF;AAEArB,MAAAA,KAAK,CAAC;AACJwI,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,OAAO,EAAE;AACP,0BAAgB,gCADT;AAEP,2BAAiB,WAAS,KAAKH,aAFxB;AAGP,2BAAiB;AAHV,SAFL;AAOJI,QAAAA,GAAG,EAAG,gCAA+B,KAAK1H,KAAL,CAAW+G,KAAM,0BAPlD;AAQJxF,QAAAA,IAAI,EAAEA;AARF,OAAD,CAAL,CAUGF,IAVH,CAUQsG,IAAI,IACR,KAAKC,cAAL,CAAoBD,IAApB,CAXJ,EAYI;AAZJ,OAaGE,KAbH,CAaUrC,KAAD,IAAW;AAChBvE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsE,KAAxB;AACD,OAfH;AAgBD,KAthBkB;;AAAA,SA2hBnBsC,WA3hBmB,GA2hBJC,GAAD,IAAQ;AACtB9G,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB6G,GAAlB;AACA,WAAKtG,QAAL,CAAc;AACZuG,QAAAA,SAAS,EAAE,CAAC,KAAKzE,KAAL,CAAWyE,SADX;AAEZC,QAAAA,aAAa,EAAC;AAFF,OAAd;AAID,KAjiBoB;;AAAA,SAqiBpBC,aAriBoB,GAqiBJ,MAAM;AACrBjH,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,UAAIiH,UAAU,GAAGhI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;AACA,UAAIgI,GAAG,GAAGjI,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;AAEA,UAAImB,IAAI,GAAG6F,IAAI,CAACiB,SAAL,CAAe;AACxB,iBAAQ,KAAK5H,WADW;AAExB,eAAM2G,IAAI,CAACiB,SAAL,CAAe,KAAKhI,GAApB,CAFkB;AAGxB,yBAAgB;AAHQ,OAAf,CAAX;AAIArB,MAAAA,KAAK,CAAC;AACJwI,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,OAAO,EAAE;AACP,0BAAgB,gCADT;AAEP,2BAAiB,WAAS,KAAKH,aAFxB;AAGP,2BAAiB;AAHV,SAFL;AAOJI,QAAAA,GAAG,EAAG,gCAA+B,KAAK1H,KAAL,CAAW+G,KAAM,+BAA8BoB,UAAW,QAAOC,GAAI,gBAPtG;AAQJ7G,QAAAA,IAAI,EAAEA;AARF,OAAD,CAAL,CAUCF,IAVD,CAUMsG,IAAI,IACR,KAAKG,WAAL,CAAiBH,IAAjB,CAXF,EAYGE,KAZH,CAYUrC,KAAD,IAAW;AAChBvE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsE,KAAxB;AACD,OAdH;AAeD,KA9jBoB;;AAEjB,SAAK3C,MAAL,GAAc,EAAd;AACA,SAAK+B,WAAL,GAAmB,EAAnB;AACA,SAAKuB,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAK7C,KAAL,GAAa;AACXgC,MAAAA,WAAW,EAAE,KADF;AAEX/B,MAAAA,UAAU,EAAE,EAFD;AAGX8C,MAAAA,UAAU,EAAE,KAHD;AAIXJ,MAAAA,YAAY,EAAE,KAJH;AAKXoC,MAAAA,KAAK,EAAE,EALI;AAMXN,MAAAA,SAAS,EAAE,KANA;AAOXC,MAAAA,aAAa,EAAE,KAPJ;AAQX1G,MAAAA,IAAI,EAAE,EARK;AASXG,MAAAA,IAAI,EAAC,EATM;AAUXG,MAAAA,UAAU,EAAG;AAVF,KAAb;AAaA,SAAKiG,WAAL,GAAmB,KAAKA,WAAL,CAAiBS,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKX,cAAL,GAAsB,KAAKA,cAAL,CAAoBW,IAApB,CAAyB,IAAzB,CAAtB;AACD,GAtBuC,CAwBxC;;;AAYAC,EAAAA,kBAAkB,GAAG;AACnB,QAAI9B,CAAC,GAAG,KAAK1G,KAAb,CADmB,CAEnB;;AACA,SAAK6C,MAAL,GAAchE,QAAQ,CAAC8H,YAAT,CAAsB;AAAEC,MAAAA,IAAI,EAAEF,CAAC,CAACG;AAAV,KAAtB,CAAd;AACA,SAAKhE,MAAL,CAAYiE,IAAZ,CAAiBJ,CAAC,CAACK,KAAnB,EAA0B,MAAM;AAC9B9F,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,WAAKyB,qBAAL;AAEA,WAAKE,MAAL,CAAYmE,IAAZ,CAAiBN,CAAC,CAACK,KAAnB,EAA0BL,CAAC,CAAChG,OAA5B,EAAqCgG,CAAC,CAACrG,GAAvC,EAA6CA,GAAD,IAAS;AACnD,aAAKkD,KAAL,CAAWlD,GAAX,GAAiBA,GAAjB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUb,GAAV,GAAgB,4BAA5B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,IAAI+B,IAAJ,GAAWC,kBAAX,EAApB,EAHmD,CAInD;AACA;;AACA,aAAK0B,WAAL,GAAmB,KAAK7C,UAAL,CAAgB1B,GAAhB,EAAqBqG,CAAC,CAAC1E,YAAvB,EAAqC0E,CAAC,CAACzE,YAAvC,CAAnB;AACA,aAAK2C,WAAL,CAAiBkC,IAAjB,CACE,MAAM;AACJ,cAAIJ,CAAC,CAAC1E,YAAF,KAAmB,UAAvB,EAAmC;AACjC,iBAAKsB,SAAL,CAAe,KAAKsB,WAApB,EAAiC,IAAjC;AACA,iBAAK/B,MAAL,CAAYqE,OAAZ,CAAoB,KAAKtC,WAAzB,EAAuCxB,GAAD,IAAS;AAC7CnC,cAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCkC,GAA7C;AACD,aAFD;AAGD;;AACD,eAAK3B,QAAL,CAAc;AAAE6E,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SATH,EAUGlD,GAAD,IAAS;AACPnC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCkC,GAAnC;AACA,eAAK3B,QAAL,CAAc;AAAE6E,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SAbH;AAeD,OAtBD;AAuBD,KA3BD;AA4BD;;AAEDmC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,MAAM,GAAG7E,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAb;AACA,QAAI6E,QAAQ,GAAG9E,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAf;AACA4E,IAAAA,MAAM,CAACE,gBAAP,CAAwB,WAAxB,EAAqC,MAAM;AACzC,UAAIC,MAAM,CAACC,cAAX,EAA2B;AACzBC,QAAAA,YAAY,CAACF,MAAM,CAACC,cAAR,CAAZ;AACD;;AACDH,MAAAA,QAAQ,CAACjE,SAAT,CAAmBsE,GAAnB,CAAuB,QAAvB;AACAH,MAAAA,MAAM,CAACC,cAAP,GAAwBG,UAAU,CAAC,YAAY;AAC7CN,QAAAA,QAAQ,CAACjE,SAAT,CAAmBwE,MAAnB,CAA0B,QAA1B;AACD,OAFiC,EAE/B,IAF+B,CAAlC;AAGD,KARD;AASA,SAAKlI,gBAAL;AACA,SAAKuG,OAAL,GAdkB,CAelB;AACD;;AAuBD4B,EAAAA,kBAAkB,GAAG;AACnB;AACA,QAAIT,MAAM,GAAG7E,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAb,CAFmB,CAGnB;;AACA,QAAI,KAAKP,KAAL,CAAWgC,WAAX,KAA2B,KAA/B,EAAsC;AACpC,UAAI6D,EAAE,GAAG,KAAK7F,KAAL,CAAWC,UAAX,CAAsB8B,MAA/B;;AACA,UAAI8D,EAAE,GAAG,CAAT,EAAY;AACV,aAAK3H,QAAL,CAAc;AAAE8D,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA;AACD;;AACD,WAAKhC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,CAAC/B,IAAD,EAAOgC,KAAP,KAAiB;AACzC,YAAIvC,EAAE,GAAGO,IAAI,CAACsB,KAAL,EAAT;AACA,YAAIqG,GAAG,GAAGxF,QAAQ,CAACC,aAAT,CAAuB,cAAc3C,EAArC,CAAV;;AACA,YAAI,CAACkI,GAAL,EAAU;AACRA,UAAAA,GAAG,GAAGxF,QAAQ,CAACyF,aAAT,CAAuB,SAAvB,CAAN;AACAD,UAAAA,GAAG,CAACE,YAAJ,CAAiB,IAAjB,EAAuB,aAAapI,EAApC;AACAkI,UAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA0B,SAA1B;AACAb,UAAAA,MAAM,CAACc,WAAP,CAAmBH,GAAnB;AACA3H,UAAAA,IAAI,CAAC+H,IAAL,CAAU,aAAatI,EAAvB;AACD;;AACD,YAAIuC,KAAK,KAAK0F,EAAE,GAAG,CAAnB,EAAsB;AACpBC,UAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA2B,kCAA3B;AACD,SAFD,MAEO;AACLF,UAAAA,GAAG,CAACE,YAAJ,CACE,OADF,EAEG,4BAA2B,IAAI,IAAI7F,KAAM;AACtD,+EAHU;AAKD;;AAEDhC,QAAAA,IAAI,CAACgI,MAAL,CAAYC,MAAZ,IAAsBjI,IAAI,CAACgI,MAAL,CAAYC,MAAZ,EAAtB;AACD,OArBD;AAsBD,KA5BD,CA6BA;AA7BA,SA8BK,IAAI,KAAKpG,KAAL,CAAWgC,WAAX,KAA2B,MAA/B,EAAuC;AAC1C,YAAI6D,EAAE,GAAG,KAAK7F,KAAL,CAAWC,UAAX,CAAsB8B,MAA/B;AACA,aAAK/B,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,CAAC/B,IAAD,EAAOgC,KAAP,KAAiB;AACzC,cAAIvC,EAAE,GAAGO,IAAI,CAACsB,KAAL,EAAT;AACA,cAAIqG,GAAG,GAAGxF,QAAQ,CAACC,aAAT,CAAuB,cAAc3C,EAArC,CAAV;;AACA,cAAI,CAACkI,GAAL,EAAU;AACRA,YAAAA,GAAG,GAAGxF,QAAQ,CAACyF,aAAT,CAAuB,SAAvB,CAAN;AACAD,YAAAA,GAAG,CAACE,YAAJ,CAAiB,IAAjB,EAAuB,aAAapI,EAApC;AACAkI,YAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA0B,SAA1B;AACAb,YAAAA,MAAM,CAACc,WAAP,CAAmBH,GAAnB;AACA3H,YAAAA,IAAI,CAAC+H,IAAL,CAAU,aAAatI,EAAvB;AACD;;AACDkI,UAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA2B,cAAa3J,WAAW,CAACwJ,EAAD,CAAX,CAAgB1F,KAAhB,CAAuB,EAA/D;AACAhC,UAAAA,IAAI,CAACgI,MAAL,CAAYC,MAAZ,IAAsBjI,IAAI,CAACgI,MAAL,CAAYC,MAAZ,EAAtB;AACD,SAZD;AAaD,OAfI,CAgBL;AAhBK,WAiBA,IAAI,KAAKpG,KAAL,CAAWgC,WAAX,KAA2B,OAA/B,EAAwC,CAC5C;AACF;;AAEDqE,EAAAA,oBAAoB,GAAG;AACrB,SAAK/G,MAAL,IAAe,KAAKA,MAAL,CAAYoD,SAAZ,CAAsB,KAAKrB,WAA3B,CAAf;AACA,SAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiBjB,KAAjB,EAApB;;AACA,QAAI,KAAKJ,KAAL,CAAW2C,YAAf,EAA6B;AAC3B,WAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBF,SAAjB,CAA2B,KAAKG,WAAhC,CAApB;AACA,WAAKA,WAAL,IAAoB,KAAKA,WAAL,CAAiBzC,KAAjB,EAApB;AACD;;AACD,SAAKd,MAAL,IACE,KAAKA,MAAL,CAAYwD,KAAZ,CACE,MAAM;AACJpF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAHH,EAIE,MAAM;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KANH,CADF;AASD;;AA+QH2I,EAAAA,KAAK,CAACC,EAAD,EAAK;AACR,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIf,UAAU,CAACe,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACD,GArcyC,CAuc1C;;;AACC,QAAMG,kBAAN,CAAyBtC,IAAzB,EAA8B;AAC3B1G,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCyG,IAAjC;AAEA,UAAM,KAAKkC,KAAL,CAAW,IAAX,CAAN;AACA,QAAI1B,UAAU,GAAGR,IAAI,CAACpG,IAAL,CAAU4G,UAA3B;AACA,QAAIC,GAAG,GAAGT,IAAI,CAACpG,IAAL,CAAU6G,GAApB;AAEAjI,IAAAA,YAAY,CAAC+J,OAAb,CAAqB,YAArB,EAAmC/B,UAAnC;AACAhI,IAAAA,YAAY,CAAC+J,OAAb,CAAqB,KAArB,EAA4B9B,GAA5B;AAEA+B,IAAAA,KAAK,CAAE,gCAA+B,KAAKnK,KAAL,CAAW+G,KAAM,+BAA8BoB,UAAW,QAAOC,GAAI,iBAAtG,EAAwH;AAC3HZ,MAAAA,MAAM,EAAE,KADmH;AAE3HC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiB,WAAS,KAAKH,aAFxB;AAGP,yBAAiB;AAHV;AAFkH,KAAxH,CAAL,CAQGjG,IARH,CAQSC,GAAD,IAASA,GAAG,CAACqG,IAAJ,EARjB,EASGtG,IATH,CASS+I,QAAD,IAAc;AAChBnJ,MAAAA,OAAO,CAACC,GAAR,CAAYkJ,QAAZ;AACA,WAAK3I,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAC6I,QADO;AAEZnC,QAAAA,aAAa,EAAC,CAAC,KAAK1E,KAAL,CAAW0E;AAFd,OAAd;AAIH,KAfH,EAgBGJ,KAhBH,CAgBUrC,KAAD,IAAWvE,OAAO,CAACC,GAAR,CAAYsE,KAAZ,CAhBpB;AAiBD,GAneuC,CAue1C;;;AACA,QAAMoC,cAAN,CAAqBG,GAArB,EAAyB;AACrB9G,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC6G,GAAhC;AACA,QAAII,UAAU,GAAGJ,GAAG,CAACxG,IAAJ,CAAS4G,UAA1B;AAEA,SAAKhB,cAAL,CAAoBC,IAAI,CAACiB,SAAL,CAAe,KAAKhI,GAApB,CAApB;AAEA,QAAIkB,IAAI,GAAI,sBAAoB,KAAKd,WAAzB,GAAqC,mBAArC,GAAyD,KAAKJ,GAA9D,GAAkE,+SAAlE,GAAkX,KAAKA,GAAvX,GAA2X,qEAA3X,GAAic,KAAKM,MAAtc,GAA6c,sBAA7c,GAAoe,KAAKC,MAAze,GAAgf,wBAAhf,GAAygB,KAAKC,MAA9gB,GAAqhB,6BAArhB,GAAmjB,KAAKC,SAAxjB,GAAkkB,oDAAlkB,GAAunB,KAAKT,GAA5nB,GAAgoB,8BAAhoB,GAA+pB,KAAKU,SAApqB,GAA8qB,wBAA1rB;AAGF,UAAM/B,KAAK,CAAC;AACRwI,MAAAA,MAAM,EAAE,MADA;AAERC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiB,WAAS,KAAKH,aAFxB;AAGP,yBAAiB;AAHV,OAFD;AAORI,MAAAA,GAAG,EAAG,gCAA+B,KAAK1H,KAAL,CAAW+G,KAAM,+BAA8BoB,UAAW,iBAPvF;AAQR5G,MAAAA,IAAI,EAAEA;AARE,KAAD,CAAL,CAUHF,IAVG,CAUEsG,IAAI,IAAI,KAAKsC,kBAAL,CAAwBtC,IAAxB,CAVV,EAWDE,KAXC,CAWMrC,KAAD,IAAW;AAChBvE,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsE,KAAxB;AACD,KAbC,CAAN;AAcC;;AAmED6E,EAAAA,MAAM,GAAG;AAEP;AAEA,UAAMvE,KAAK,GAAG;AACZC,MAAAA,OAAO,EAAE,MADG;AAEZuE,MAAAA,OAAO,EAAE,WAFG;AAGZC,MAAAA,UAAU,EAAE,QAHA;AAIZC,MAAAA,YAAY,EAAE,QAJF;AAKZC,MAAAA,gBAAgB,EAAE,kBALN;AAMZC,MAAAA,mBAAmB,EAAE;AANT,KAAd;AASA,UAAMC,eAAe,GACnB,KAAK3K,KAAL,CAAWgC,YAAX,KAA4B,OAA5B,gBACE;AACE,MAAA,OAAO,EAAE,KAAKuC,YADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,KAAK,EAAC,sBAHR;AAAA,8BAKE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAUE,EAXJ;AAeA,UAAMqG,eAAe,GACnB,KAAK5K,KAAL,CAAWgC,YAAX,KAA4B,UAA5B,gBACE;AACE,MAAA,OAAO,EAAE,KAAKgD,SADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,KAAK,EAAC,sBAHR;AAAA,8BAKE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAUE,EAXJ;;AAcA,UAAM6F,gBAAgB,gBACpB;AACE,MAAA,OAAO,EAAE,KAAKzF,aADhB;AAEE,MAAA,SAAS,EACP,KAAK7B,KAAL,CAAWC,UAAX,CAAsB8B,MAAtB,GAA+B,CAA/B,GACI,gCADJ,GAEI,uBALR;AAOE,MAAA,KAAK,EAAC,qBAPR;AAAA,6BASE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADF;;AAcA,UAAMwF,aAAa,gBACjB;AACE,MAAA,SAAS,EACP,KAAKvH,KAAL,CAAWC,UAAX,CAAsB8B,MAAtB,GAA+B,CAA/B,IAAoC,KAAK/B,KAAL,CAAWgC,WAAX,KAA2B,KAA/D,GACI,kCADJ,GAEI,yBAJR;AAME,MAAA,OAAO,EAAE,KAAKE,UANhB;AAOE,MAAA,KAAK,EAAC,oBAPR;AAAA,6BASE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADF;;AAcA,UAAMsF,OAAO,gBACX;AACE,MAAA,OAAO,EAAE,KAAK/E,UADhB;AAEE,MAAA,SAAS,EACP,KAAKzC,KAAL,CAAW+C,UAAX,GAAwB,gBAAxB,GAA2C,yBAH/C;AAKE,MAAA,KAAK,EAAC,MALR;AAAA,6BAOE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,CAtEO,CAkFX;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;;;AACA,UAAM0E,eAAe,gBACnB;AACE,MAAA,OAAO,EAAE,KAAK9C,aADhB;AAEE,MAAA,SAAS,EACP,KAAK3E,KAAL,CAAW+C,UAAX,GAAwB,gBAAxB,GAA2C,yBAH/C;AAKE,MAAA,KAAK,EAAC,YALR;AAAA,6BAOU,QAAC,qBAAD;AAAuB,QAAA,KAAK,EAAE;AAAE2E,UAAAA,KAAK,EAAEtL,GAAG,CAAC,GAAD;AAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA;AAPV;AAAA;AAAA;AAAA;AAAA,YADF;;AAYI,wBACE;AAAA,6BACA;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,KAAK,EAAEmG,KAA3B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCAEA,QAAC,cAAD;AACA,YAAA,MAAM,EAAE,KAAKvC,KAAL,CAAWyE,SADnB;AAEC,YAAA,MAAM,EAAE,KAAKF,WAFd;AAGC,YAAA,IAAI,EAAE,KAAKvE,KAAL,CAAWhC,IAHlB;AAIC,YAAA,IAAI,EAAE,KAAKgC,KAAL,CAAW7B;AAJlB;AAAA;AAAA;AAAA;AAAA,kBAFA,EASGqJ,OATH,EAUGJ,eAVH,EAWGC,eAXH,eAaI;AACE,YAAA,OAAO,EAAE,KAAKnE,aADhB;AAEE,YAAA,SAAS,EAAC,uBAFZ;AAGE,YAAA,KAAK,EAAC,sBAHR;AAAA,mCAKE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBAbJ,EAqBGoE,gBArBH,EAsBGC,aAtBH,EA6BI,KAAKvH,KAAL,CAAW0E,aAAX,GAA2B+C,eAA3B,GAA6C,IA7BjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAsCD;;AArtBuC;;AAwtB1C,eAAenL,WAAf","sourcesContent":["import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport {\n  Modal,\n  ModalTitle,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\n\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      showButton : ''\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  teamKey = window.localStorage.getItem(\"tlkey\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n\n vendor = 1\n region = 14;\n bucket = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\n\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n \n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n    // this.accuire()\n  }\nschdrularName;\n\n  getSchedulerData =() =>{\n    console.log(\"getSchedulerData--\",this.props.id)\n\n    axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                console.log(res);\n           \n               \n                if (res.data.code === 1) {\n                  this.setState({\n                    item:res.data.result.items[0],\n                   showButton : res.data.result.items[0].owner_id\n                  })  \n                        \n                }\n            });\n  }\n\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/teamleader/schedule\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n    console.log(\"CreateS3Folder\",uid)\n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                console.log(res);    \n            });\n  }\n\n\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n\n\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\n async GetRecordingStatus(json){\n    console.log(\"GetRecordingStatus\",json)\n\n    await this.sleep(3000); \n    var resourceId = json.data.resourceId;\n    var sid = json.data.sid;\n\n    localStorage.setItem(\"resourceId\", resourceId);\n    localStorage.setItem(\"sid\", sid);\n\n    fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n  })\n      .then((res) => res.json())\n      .then((response) => {\n          console.log(response);\n          this.setState({\n            data:response,\n            recordDisplay:!this.state.recordDisplay\n          })\n      })\n      .catch((error) => console.log(error));\n  }\n\n\n\n//start recording\nasync startRecording(key){\n    console.log(\"startRecording - \",key);\n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n \n\n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n        console.log(\"error - \", error);\n      });\n  };\n\n\n  //recording  acquire\n   accuire = () =>{\n    console.log(\"accuire - \");\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n        // console.log(\"accuire - \",json))\n      .catch((error) => {\n        console.log(\"error - \", error);\n      });\n  };\n\n\n\n  //toggelStop\n  toggleModal = (key) =>{\n  console.log(\"key\",key)\n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n\n\n //stop recording \n stopRecording = () => {\n  console.log(\"stopRecording - \");\n\n  var resourceId = localStorage.getItem(\"resourceId\");\n  var sid = localStorage.getItem(\"sid\");\n\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n    this.toggleModal(json)) \n    .catch((error) => {\n      console.log(\"error - \", error);\n    });\n};\n\n\n  render() {\n\n    // console.log(\"data\",this.state.data)\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n//recording btn on\n    // const recordingBtn = (\n    //   <span\n    //     onClick={this.accuire}\n    //     className={\n    //       this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    //     }\n    //     title=\"Record On\"\n    //   >\n    //     <FiberManualRecordIcon style={{ color: green[500] }}/>\n    //   </span>\n    // );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n    onClick={this.stopRecording}\n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n            <FiberManualRecordIcon style={{ color: red[500] }}/>\n  </span>\n);\n\n    return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {/* {\n            this.state.recordDisplay || this.state.showButton == JSON.parse(this.teamKey) ? recordingBtn : null\n          } */}\n\n          {\n            this.state.recordDisplay ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;"]},"metadata":{},"sourceType":"module"}
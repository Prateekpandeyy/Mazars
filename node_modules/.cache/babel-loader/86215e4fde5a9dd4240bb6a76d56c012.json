{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\n\nfunction Unpaid() {\n  _s();\n\n  const [payment, setPayment] = useState([]);\n  const [paymentcount, setPaymentCount] = useState(\"\");\n  const [pay, setPay] = useState([]);\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then(res => {\n      console.log(res);\n\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setPaymentCount(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = key => {\n    console.log(\"key\", key);\n    setModal(!modal);\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\"\n      })\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      setPay(response.payment_detail);\n    }).catch(error => console.log(error));\n  };\n\n  const columns = [{\n    dataField: \"\",\n    text: \"S.No\",\n    formatter: (cellContent, row, rowIndex) => {\n      return rowIndex + 1;\n    },\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    }\n  }, {\n    dataField: \"query_created_date\",\n    text: \"Date\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    },\n    formatter: function dateFormat(cell, row) {\n      console.log(\"dt\", row.query_created_date);\n      var oldDate = row.query_created_date;\n\n      if (oldDate == null) {\n        return null;\n      }\n\n      return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    }\n  }, {\n    dataField: \"assign_no\",\n    text: \"Query No\",\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    },\n    formatter: function nameFormatter(cell, row) {\n      console.log(row);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/admin/queries/${row.assign_id}`,\n            routes: \"paymentstatus\"\n          },\n          children: row.assign_no\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    dataField: \"parent_id\",\n    text: \"Category\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    }\n  }, {\n    dataField: \"cat_name\",\n    text: \"Sub Category\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    }\n  }, {\n    text: \"Date of acceptance of Proposal\",\n    dataField: \"cust_accept_date\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    },\n    formatter: function dateFormat(cell, row) {\n      console.log(\"dt\", row.cust_accept_date);\n      var oldDate = row.cust_accept_date;\n\n      if (oldDate == null) {\n        return null;\n      }\n\n      return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    }\n  }, {\n    text: \"Status\",\n    dataField: \"status\",\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    }\n  }, {\n    dataField: \"accepted_amount\",\n    text: \"Accepted Amount \",\n    sort: true,\n    style: {\n      fontSize: \"11px\",\n      color: \"#21a3ce\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\",\n        color: \"#21a3ce\"\n      };\n    }\n  }, {\n    text: \"Amount Paid\",\n    dataField: \"paid_amount\",\n    sort: true,\n    style: {\n      fontSize: \"11px\",\n      color: \"#064606\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\",\n        color: \"#064606\"\n      };\n    }\n  }, {\n    text: \"Amount Outstanding\",\n    dataField: \"\",\n    sort: true,\n    style: {\n      fontSize: \"11px\",\n      color: \"darkred\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\",\n        color: \"darkred\"\n      };\n    },\n    formatter: function amountOutstading(cell, row) {\n      console.log(\"dt\", row.paid_amount);\n      console.log(\"dt\", row.accepted_amount);\n      var p = row.paid_amount;\n      var a = row.accepted_amount;\n      return a - p;\n    }\n  }, {\n    text: \"Date of Payment\",\n    dataField: \"cust_paid_date\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    },\n    formatter: function dateFormat(cell, row) {\n      console.log(\"dt\", row.cust_paid_date);\n      var oldDate = row.cust_paid_date;\n\n      if (oldDate == null) {\n        return null;\n      }\n\n      return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    }\n  }, {\n    dataField: \"tl_name\",\n    text: \"TL name\",\n    sort: true,\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    }\n  }, {\n    text: \"Action\",\n    style: {\n      fontSize: \"11px\"\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"11px\"\n      };\n    },\n    formatter: function (cell, row) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            title: \"Payment History\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-credit-card\",\n              style: {\n                color: \"green\",\n                fontSize: \"16px\"\n              },\n              onClick: () => toggle(row.assign_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(AdminFilter, {\n          setData: setPayment,\n          getData: getPaymentStatus,\n          unpaid: \"unpaid\",\n          setRecords: setRecords,\n          records: records\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Records, {\n          records: records\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          bootstrap4: true,\n          keyField: \"id\",\n          data: payment,\n          columns: columns,\n          classes: \"table-responsive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modal,\n          fade: false,\n          toggle: toggle,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggle,\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: \"S.No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this), pay.length > 0 ? pay.map((p, i) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: i + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: CommonServices.removeTime(p.payment_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: p.paid_amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 41\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: toggle,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Unpaid, \"g8xQo2jpUXTFR1G44YZlc2bh2jw=\");\n\n_c = Unpaid;\nexport default Unpaid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Unpaid\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js"],"names":["React","useState","useEffect","axios","baseUrl","Card","CardHeader","CardBody","CardTitle","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","Button","useForm","Select","Link","BootstrapTable","AdminFilter","CommonServices","Records","Unpaid","payment","setPayment","paymentcount","setPaymentCount","pay","setPay","records","setRecords","getPaymentStatus","get","then","res","console","log","data","code","result","length","modal","setModal","toggle","key","fetch","method","headers","Headers","Accept","json","response","payment_detail","catch","error","columns","dataField","text","formatter","cellContent","row","rowIndex","style","fontSize","headerStyle","sort","dateFormat","cell","query_created_date","oldDate","slice","toString","split","reverse","join","nameFormatter","pathname","assign_id","routes","assign_no","cust_accept_date","color","amountOutstading","paid_amount","accepted_amount","p","a","cust_paid_date","display","cursor","map","i","removeTime","payment_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\n\n\n\nfunction Unpaid() {\n\n    const [payment, setPayment] = useState([]);\n\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then((res) => {\n            console.log(res);\n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    const [modal, setModal] = useState(false);\n    const toggle = (key) => {\n        console.log(\"key\", key);\n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                console.log(response);\n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.query_created_date);\n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_accept_date);\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#064606\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#064606\" };\n            },\n        },\n\n        {\n            text: \"Amount Outstanding\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"darkred\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function amountOutstading(cell, row) {\n                console.log(\"dt\", row.paid_amount);\n                console.log(\"dt\", row.accepted_amount);\n                var p = row.paid_amount;\n                var a = row.accepted_amount;\n                return a - p;\n            },\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_paid_date);\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n\n\n                            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\n                                <i\n                                    class=\"fa fa-credit-card\"\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\n                                    onClick={() => toggle(row.assign_id)}\n                                ></i>\n                            </div>\n\n                            {/* <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"5\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/admin/paymentstatus`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div> */}\n\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <div>\n            <Card>\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        unpaid=\"unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Unpaid;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nfunction AddAdditionalQuery({\n  addHandler,\n  addModal,\n  assingNo,\n  getQuery\n}) {\n  _s();\n\n  console.log(\"assingNo :\", assingNo);\n  const alert = useAlert();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setLoading(false);\n        var variable = \"File uploaded successfully.\";\n        Alerts.SuccessNormal(variable);\n        reset();\n        getQuery();\n      } else if (response.data.code === 0) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: addModal,\n      toggle: addHandler,\n      size: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: addHandler,\n        children: \"UPLOAD DOCUMENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Upload Your Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"p_upload\",\n              ref: register,\n              className: \"form-control-file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-footer\",\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: addHandler,\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddAdditionalQuery, \"qDhxZgxNzb5jh3OY8L8gTl4rJXo=\", false, function () {\n  return [useAlert, useForm];\n});\n\n_c = AddAdditionalQuery;\nexport default AddAdditionalQuery;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAdditionalQuery\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js"],"names":["React","useState","useEffect","Modal","ModalHeader","ModalBody","axios","baseUrl","useForm","useAlert","Alerts","Spinner","AddAdditionalQuery","addHandler","addModal","assingNo","getQuery","console","log","alert","handleSubmit","register","reset","loading","setLoading","onSubmit","value","formData","FormData","append","p_upload","method","url","data","then","response","code","variable","SuccessNormal","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n\n  console.log(\"assingNo :\", assingNo);\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"File uploaded successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          getQuery();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>\n          UPLOAD DOCUMENTS\n        </ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    onClick={addHandler}\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  password: yup.string().required(\"\")\n});\n\nfunction Login(props) {\n  _s();\n\n  const alert = useAlert();\n  const {\n    handleSubmit,\n    register,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(Schema)\n  });\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('');\n  const [isPasswordShow, setPasswordShow] = useState(false);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow);\n  };\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setShow(true);\n        setLoading(false);\n        Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\");\n        setUid(response.data.user_id);\n      } else if (response.data.code === 0) {\n        setLoading(false);\n        Alerts.ErrorNormal(\"Invalid email or password.\");\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  };\n\n  const handleChange = e => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mtl: \"mtl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: show ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(VerifyOtpLogin, {\n          email: email,\n          uid: uid,\n          loading: loading,\n          setLoading: setLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"MTL Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email\n                  }),\n                  name: \"p_email\",\n                  ref: register,\n                  placeholder: \"Enter Email\",\n                  onChange: e => handleChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this), errors.p_email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.p_email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: isPasswordShow ? \"text\" : \"password\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.password\n                  }),\n                  name: \"password\",\n                  placeholder: \"Enter Password\",\n                  autocomplete: \"off\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`,\n                  onClick: togglePasssword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row-reverse\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/teamleader/forget-password\",\n                email: `${email}`\n              },\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"BTGeeIN3gm/cHGJ6fDVf1E9GNv8=\", false, function () {\n  return [useAlert, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js"],"names":["React","useState","Header","Footer","yupResolver","yup","useForm","axios","baseUrl","useAlert","classNames","Swal","Link","Alerts","Mandatory","VerifyOtpLogin","Spinner","Schema","object","shape","p_email","string","email","required","password","Login","props","alert","handleSubmit","register","reset","errors","resolver","loading","setLoading","setEmail","show","setShow","uid","setUid","isPasswordShow","setPasswordShow","togglePasssword","onSubmit","value","console","log","formData","FormData","append","method","url","data","then","response","code","SuccessNormal","user_id","ErrorNormal","catch","error","handleChange","e","target","message","display","flexDirection","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAIA,MAAMC,MAAM,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,OAAO,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB,eAAnB,EAAoCC,QAApC,CAA6C,EAA7C,CADuB;AAEhCC,EAAAA,QAAQ,EAAEnB,GAAG,CACVgB,MADO,GAEPE,QAFO,CAEE,EAFF;AAFsB,CAAnB,CAAf;;AAOA,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAMC,KAAK,GAAGlB,QAAQ,EAAtB;AACA,QAAM;AAAEmB,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CzB,OAAO,CAAC;AACxD0B,IAAAA,QAAQ,EAAE5B,WAAW,CAACa,MAAD;AADmC,GAAD,CAAzD;AAGA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,KAAD,EAAQa,QAAR,IAAoBlC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACqC,GAAD,EAAMC,MAAN,IAAgBtC,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACuC,cAAD,EAAiBC,eAAjB,IAAoCxC,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMyC,eAAe,GAAG,MAAM;AAC5BD,IAAAA,eAAe,CAAC,CAACD,cAAF,CAAf;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAV,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAIa,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsBL,KAAK,CAACxB,OAA5B;AACA2B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BL,KAAK,CAACpB,QAAlC;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,IAAxB;AAEA1C,IAAAA,KAAK,CAAC;AACJ2C,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAG,GAAE3C,OAAQ,WAFZ;AAGJ4C,MAAAA,IAAI,EAAEL;AAHF,KAAD,CAAL,CAKGM,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxBT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBQ,QAApB;;AACA,UAAIA,QAAQ,CAACF,IAAT,CAAcG,IAAd,KAAuB,CAA3B,EAA8B;AAC5BlB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACArB,QAAAA,MAAM,CAAC2C,aAAP,CAAqB,0EAArB;AACAjB,QAAAA,MAAM,CAACe,QAAQ,CAACF,IAAT,CAAcK,OAAf,CAAN;AACD,OALD,MAKO,IAAIH,QAAQ,CAACF,IAAT,CAAcG,IAAd,KAAuB,CAA3B,EAA8B;AACnCrB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACArB,QAAAA,MAAM,CAAC6C,WAAP,CAAmB,4BAAnB;AACD;AACF,KAhBH,EAiBGC,KAjBH,CAiBUC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,KAA1B;AACD,KAnBH;AAoBD,GA7BD;;AA+BA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BjB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBgB,CAAC,CAACC,MAAF,CAASnB,KAA7B;AACAT,IAAAA,QAAQ,CAAC2B,CAAC,CAACC,MAAF,CAASnB,KAAV,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAGIR,IAAI,gBAAG;AAAA,+BACL,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEd,KAAvB;AAA8B,UAAA,GAAG,EAAEgB,GAAnC;AAAwC,UAAA,OAAO,EAAEL,OAAjD;AACE,UAAA,UAAU,EAAEC;AADd;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,cAAH,gBAKF;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,QAAQ,EAAEN,YAAY,CAACe,QAAD,CAA5B;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,SAAS,EAAEjC,UAAU,CAAC,cAAD,EAAiB;AACpC,kCAAcqB,MAAM,CAACX;AADe,mBAAjB,CAFvB;AAKE,kBAAA,IAAI,EAAC,SALP;AAME,kBAAA,GAAG,EAAES,QANP;AAOE,kBAAA,WAAW,EAAC,aAPd;AAQE,kBAAA,QAAQ,EAAGiC,CAAD,IAAOD,YAAY,CAACC,CAAD;AAR/B;AAAA;AAAA;AAAA;AAAA,wBAFF,EAYG/B,MAAM,CAACX,OAAP,iBACC;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,4BACGW,MAAM,CAACX,OAAP,CAAe4C;AADlB;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAqBE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAExB,cAAc,GAAG,MAAH,GAAY,UADlC;AAEE,kBAAA,SAAS,EAAE9B,UAAU,CAAC,cAAD,EAAiB;AACpC,kCAAcqB,MAAM,CAACP;AADe,mBAAjB,CAFvB;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,WAAW,EAAC,gBANd;AAOE,kBAAA,YAAY,EAAC,KAPf;AAQE,kBAAA,GAAG,EAAEK;AARP;AAAA;AAAA;AAAA;AAAA,wBAFF,eAYE;AACE,kBAAA,SAAS,EAAG,MAAKW,cAAc,GAAG,cAAH,GAAoB,QAAS,gBAD9D;AAEE,kBAAA,OAAO,EAAEE;AAFX;AAAA;AAAA;AAAA;AAAA,wBAZF,EAgBGX,MAAM,CAACP,QAAP,iBACC;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,4BACGO,MAAM,CAACP,QAAP,CAAgBwC;AADnB;AAAA;AAAA;AAAA;AAAA,wBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAgDI/B,OAAO,gBACL;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADK,gBAKL;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDN,eA2DE;AAAK,YAAA,KAAK,EAAE;AAAEgC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,aAAa,EAAE;AAAlC,aAAZ;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,EAAE,EAAE;AACFC,gBAAAA,QAAQ,EAAE,6BADR;AAEF7C,gBAAAA,KAAK,EAAG,GAAEA,KAAM;AAFd,eADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3DF,eAsEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,YAFF,eA0FE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA1FF;AAAA,kBADF;AA8FD;;GAhJQG,K;UACOhB,Q,EACoCH,O;;;KAF3CmB,K;AAkJT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\n\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  password: yup\n    .string()\n    .required(\"\")\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setShow(true)\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data.user_id)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid} loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div className=\"form\">\n              <div className=\"heading\">\n                <h2>MTL Login</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password</label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        autocomplete=\"off\"\n                        ref={register}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/teamleader/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
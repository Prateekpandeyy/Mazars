{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup.string().required(\"required phone no\").matches(/^[0-9]+$/, \"Must be only digits\").min(10, \"Must be exactly 10 digits\").max(20, \"max 20 digits\")\n});\n\nfunction AddNew() {\n  _s();\n\n  const alert = useAlert();\n  const history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(Schema)\n  });\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState();\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([]);\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([]);\n  const [custCate, setCustcate] = useState([]);\n  const [custCate2, setCustcate2] = useState([]);\n  const [numExist, setNumExist] = useState(null);\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null);\n  const [categoryData, setCategoryData] = useState([]);\n  const [indNumError, setIndNumError] = useState(null);\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [emailPost, setEmailPost] = useState('');\n  const [valiEmail, setValiemail] = useState(null);\n  const [valiEmailPost, setValiemailPost] = useState(null);\n  const [invalid, setInvalid] = useState(null);\n  const [invalidPost, setInvalidPost] = useState(null);\n  const [wEmail, setWemail] = useState();\n  const [wEmailPost, setWemailPost] = useState();\n  const [display, setDisplay] = useState(false);\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: []\n  });\n  var kk = [];\n  var vv = [];\n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }));\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }));\n  useEffect(() => {\n    const postName = async () => {\n      await axios.get(`${baseUrl}/admin/addTlPost`).then(res => {\n        if (res.data.code === 1) {\n          console.log(\"myData\", res.data.result.post);\n          setPostName(res.data.result);\n        }\n      });\n    };\n\n    postName();\n  }, []);\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then(res => {\n        if (res.data.code === 1) {\n          console.log(res.data.result);\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n  useEffect(() => {\n    const getSubCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then(res => {\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n\n    getSubCategory();\n  }, [store]); // OnSubmit Function\n\n  const onSubmit = value => {\n    console.log(JSON.stringify(dd));\n    var categeryList = [];\n    var categeryName = [];\n    var categeryName = [];\n    var kk = [];\n    var parentCategoryName = [];\n    console.log(subData);\n    subData.map(i => {\n      console.log(i);\n      categeryList.push(i.value);\n      categeryName.push(i.label);\n    });\n    categoryData.map(i => {\n      kk.push(i.value);\n      parentCategoryName.push(i.label);\n    });\n    console.log(\"subData\", subData);\n\n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\");\n    } else if (subData.length < 1) {\n      setError2(\"Please select at least one value\");\n    } else if (invalid || wEmail || indNumError) {\n      setDisplay(false);\n    } else {\n      setDisplay(true);\n      console.log(\"ddd\", dd);\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.p_email);\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"type\", \"tl\");\n      formData.append(\"cat_id\", categeryList);\n      formData.append(\"post_name\", value.post_name);\n      formData.append(\"email\", value.post_email);\n      formData.append(\"pcat_id\", kk);\n      formData.append(\"allpcat_id\", parentCategoryName);\n      formData.append(\"allcat_id\", JSON.stringify(dd));\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/AddTeamLead`,\n        data: formData\n      }).then(function (response) {\n        if (response.data.code === 1) {\n          Swal.fire({\n            \"title\": \"Success\",\n            \"html\": \"Team Leader created successfully.\",\n            \"icon\": \"success\"\n          });\n          history.goBack();\n        }\n\n        if (response.data.code === 0) {\n          response.data.message.map(i => {});\n        }\n      }).catch(error => {});\n    }\n  };\n\n  var allData1 = {};\n  var dir = [];\n  var indir = []; // Sub Category Function\n\n  const subCategory = e => {\n    console.log(\"categoryData\", dd);\n    subCategeryData(e);\n    setCustcate2(e);\n    setError2(\"\");\n    console.log(e);\n    console.log(\"allData\", allData1);\n    e.map(i => {\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label);\n    }); // allData1 = e.map(v => ({\n    //   \"direct Tax\" : dir,\n    //   \"indirect Tax\" : indir\n    // }))\n\n    setDd({\n      direct: dir,\n      indirect: indir\n    });\n  }; // Category Function\n\n\n  const category = v => {\n    setCategoryData(v);\n    setNn(oldData => {\n      return [...oldData, mcategory];\n    });\n    setError(\"\");\n    setCustcate(v);\n    v.map(val => {\n      vv.push(val.value);\n      setmcategory(val.value);\n      setmcatname(oldData => {\n        return [...oldData, val.label];\n      });\n      setStore(val.value);\n    });\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        console.log(\"hdd\");\n      } else if (vv.includes(\"1\")) {\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i]);\n          }\n        }\n\n        subCategeryData(kk);\n      } else if (vv.includes(\"2\")) {\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i]);\n          }\n        }\n\n        subCategeryData(kk);\n      }\n    } else if (vv.length === 0) {\n      subCategeryData(\"\");\n    }\n  }; // Phone onChange \n\n\n  const phoneHandler = e => {\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\");\n      setNumAvail(\"\");\n      setNumExist('Please enter number only');\n      e.target.value = \"\";\n      setPhone(\"\");\n    } else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value);\n    }\n  }; // Phone Validation function \n\n\n  const phoneValidation = () => {\n    console.log(phone.length);\n\n    if (phone.length > 10) {\n      console.log(phone.length);\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setIndNumError(\"Maximum 10 digit should be enter\");\n    } else if (phone.length < 10) {\n      console.log(phone.length);\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setIndNumError(\"Minimum 10 digit should be enter\");\n    } else if (phone.length > 15) {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setIndNumError(\"Maximum 15 digit should be enter\");\n    } else {\n      setIndNumError(\"\");\n      let formData = new FormData();\n      formData.append(\"phone\", phone);\n      formData.append(\"type\", 2);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          console.log(response.data.result);\n          setNumExist('');\n          setNumAvail(response.data.result);\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setNumAvail('');\n          setNumExist(response.data.result);\n          console.log(\"mobile\" + setNumExist);\n        }\n      }).catch(error => {// console.log(\"erroror - \", error);\n      });\n    }\n  }; //eamil onchange\n\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length);\n\n    if (e.target.value.length < 1) {\n      setWemail(\"\");\n    }\n  }; //email validaation with api\n\n\n  const emailValidation = key => {\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"resEmail-\", response);\n\n        if (response.data.code === 1) {\n          setValiemail(response.data.result);\n          setInvalid('');\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result);\n          setValiemail('');\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    } else {\n      setWemail(\"invalid email\");\n    }\n  }; // EmailHandlerPost1\n\n\n  const emailHandlerPost = e => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length);\n\n    if (e.target.value.length < 1) {\n      setWemailPost(\"\");\n    }\n  }; // Email Validation Post \n  //email validaation Post with api\n\n\n  const emailValidationPost = key => {\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (emailPost.match(validRegex)) {\n      setWemailPost(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"resEmail-\", response);\n\n        if (response.data.code === 1) {\n          setValiemailPost(response.data.result);\n          setInvalidPost('');\n        } else if (response.data.code === 0) {\n          setInvalidPost(response.data.result);\n          setValiemailPost('');\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    } else {\n      setWemailPost(\"invalid email\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    adminDashboard: \"adminDashboard\",\n    adminUserId: userid,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-12 d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-success ml-3\",\n              onClick: () => history.goBack(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-arrow-left mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), \"Go Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text-center ml-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Add New Team Leader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-2 col-xl-2 col-md-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-8 col-xl-8 col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Teamleader Post Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_name\n                      }),\n                      defaultValue: postValue.post,\n                      name: \"post_name\",\n                      ref: register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Teamleader Post Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 50\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.post_email || wEmail || invalid\n                      }),\n                      name: \"post_email\",\n                      ref: register,\n                      onChange: e => emailHandler(e),\n                      onBlur: emailValidation\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 23\n                    }, this), wEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: wEmail\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 34\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: valiEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"completed\",\n                        children: valiEmail\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"declined\",\n                        children: invalid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 521,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 542,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_name\n                      }),\n                      name: \"p_name\",\n                      ref: register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Phone Number \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 557,\n                        columnNumber: 43\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_phone || indNumError\n                      }),\n                      name: \"p_phone\",\n                      ref: register,\n                      onChange: e => phoneHandler(e),\n                      onBlur: phoneValidation\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 23\n                    }, this), indNumError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: indNumError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 38\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: numAvail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"completed\",\n                        children: [\" \", numAvail]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"declined\",\n                        children: numExist\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 574,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 36\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email\n                      }),\n                      name: \"p_email\",\n                      ref: register // onChange={(e) => emailHandler(e)}\n                      // onBlur={emailValidation}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      isMulti: true,\n                      options: options,\n                      className: error ? \"customError\" : \"\",\n                      styles: {\n                        option: (styles, {\n                          data\n                        }) => {\n                          return { ...styles,\n                            color: data.value == 2 ? \"green\" : \"blue\"\n                          };\n                        },\n                        multiValueLabel: (styles, {\n                          data\n                        }) => ({ ...styles,\n                          color: data.value == 2 ? \"green\" : \"blue\"\n                        })\n                      },\n                      onChange: category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Sub Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 43\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      isMulti: true,\n                      options: options2,\n                      className: error2 ? \"customError\" : \"\",\n                      onChange: subCategory,\n                      styles: {\n                        option: (styles, {\n                          data\n                        }) => {\n                          return { ...styles,\n                            color: data.value > 8 ? \"green\" : \"blue\"\n                          };\n                        },\n                        multiValueLabel: (styles, {\n                          data\n                        }) => ({ ...styles,\n                          color: data.value > 8 ? \"green\" : \"blue\"\n                        })\n                      },\n                      value: subData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-2 col-xl-2 col-md-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNew, \"5FpQnHvL8R9BxiOTLGovR93wPR0=\", false, function () {\n  return [useAlert, useHistory, useForm];\n});\n\n_c = AddNew;\nexport default AddNew; // import React, { useState, useEffect } from \"react\";\n// import Layout from \"../../../components/Layout/Layout\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// import Select from \"react-select\";\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import { baseUrl } from \"../../../config/config\";\n// import { useAlert } from \"react-alert\";\n// import { Card, CardHeader } from \"reactstrap\";\n// import { useHistory } from \"react-router-dom\";\n// import classNames from \"classnames\";\n// import Mandatory from \"../../../components/Common/Mandatory\";\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//     .string()\n//     .required(\"required phone no\")\n//     .matches(/^[0-9]+$/, \"Must be only digits\")\n//     .min(10, \"Must be exactly 10 digits\")\n//     .max(20, \"max 20 digits\"),\n// });\n// function AddNew() {\n//   const alert = useAlert();\n//   const history = useHistory();\n//   const { handleSubmit, register, reset, errors } = useForm({\n//     resolver: yupResolver(Schema),\n//   });\n//   const userid = window.localStorage.getItem(\"adminkey\");\n//   const [error, setError] = useState()\n//   const [error2, setError2] = useState();\n//   const [tax, setTax] = useState([]);\n//   const [tax2, setTax2] = useState([]);\n//   const [nn, setNn] = useState([])\n//   const [mcatname, setmcatname] = useState([]);\n//   const [mcategory, setmcategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   const [subData, subCategeryData] = useState([])\n//   const [custCate, setCustcate] = useState([])\n//   const [custCate2, setCustcate2] = useState([])\n//   const [numExist, setNumExist] = useState(null)\n//   const [phone, setPhone] = useState('');\n//   const [numAvail, setNumAvail] = useState(null)\n//   const [categoryData, setCategoryData] = useState([])\n//   const [indNumError, setIndNumError] = useState(null)\n//   const [postValue, setPostName] = useState([]);\n//   const [email, setEmail] = useState('');\n//   const [valiEmail, setValiemail] = useState(null)\n//   const [invalid, setInvalid] = useState(null)\n//   const [wEmail, setWemail] = useState();\n//   const [display, setDisplay] = useState(false);\n//   const [dd, setDd] = useState({\n//     direct: [],\n//     indirect: [],\n//   });\n//   var kk = []\n//   var vv = []\n//   const options = tax.map(d => (\n//     {\n//       \"value\": d.id,\n//       \"label\": d.details\n//     }))\n//   const options2 = tax2.map(v => ({\n//     \"value\": v.id,\n//     \"label\": v.details\n//   }))\n//   useEffect(() => {\n//     const postName = async () => {\n//       await axios.get(`${baseUrl}/admin/addTlPost`).then((res) => {\n//         if (res.data.code === 1) {\n//           console.log(\"myData\", res.data.result.post)\n//           setPostName(res.data.result);\n//         }\n//       });\n//     };\n//     postName();\n//   }, []);\n//   useEffect(() => {\n//     const getCategory = async () => {\n//       await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n//         if (res.data.code === 1) {\n//           console.log(res.data.result)\n//           setTax(res.data.result);\n//         }\n//       });\n//     };\n//     getCategory();\n//   }, []);\n//   useEffect(() => {\n//     const getSubCategory = async () => {\n//       await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n//         if (res.data.code === 1) {\n//           setTax2(res.data.result)\n//         }\n//       });\n//     };\n//     getSubCategory();\n//   }, [store]);\n//   // OnSubmit Function\n//   const onSubmit = (value) => {\n//     var categeryList = []\n//     var categeryName = []\n//     var categeryName = []\n//     var kk = []\n//     var parentCategoryName = []\n//     console.log(subData)\n//     subData.map((i) => {\n//       console.log(i)\n//       categeryList.push(i.value)\n//       categeryName.push(i.label)\n//     })\n//     categoryData.map((i) => {\n//       kk.push(i.value)\n//       parentCategoryName.push(i.label)\n//     })\n//     console.log(\"subData\", subData)\n//     if (custCate.length < 1) {\n//       setError(\"Please select at least one value\")\n//     }\n//     else if (subData.length < 1) {\n//       setError2(\"Please select at least one value\")\n//     }\n//     else if (invalid || wEmail || indNumError) {\n//       setDisplay(false)\n//     }\n//     else {\n//       setDisplay(true)\n//       console.log(\"ddd\", dd)\n//       let formData = new FormData();\n//       formData.append(\"personal_email\", value.p_email);\n//       formData.append(\"name\", value.p_name);\n//       formData.append(\"phone\", value.p_phone);\n//       formData.append(\"type\", \"tl\");\n//       formData.append(\"cat_id\", categeryList)\n//       formData.append(\"post_name\", postValue.post)\n//       formData.append(\"email\", postValue.email)\n//       formData.append(\"pcat_id\", kk)\n//       formData.append(\"allpcat_id\", parentCategoryName)\n//       formData.append(\"allcat_id\", JSON.stringify(dd))\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/tl/AddTeamLead`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           if (response.data.code === 1) {\n//             Swal.fire({\n//               \"title\": \"Success\",\n//               \"html\": \"Team Leader created successfully.\",\n//               \"icon\": \"success\"\n//             })\n//             history.goBack();\n//           }\n//           if (response.data.code === 0) {\n//             response.data.message.map((i) => {\n//             })\n//           }\n//         })\n//         .catch((error) => {\n//         });\n//     }\n//   };\n// var allData1 = {}\n// var dir = []\n// var indir = []\n//   // Sub Category Function\n//   const subCategory = (e) => {\n//     console.log(\"categoryData\", dd)\n//     subCategeryData(e)\n//     setCustcate2(e)\n//     setError2(\"\")\n//     console.log(e)\n//     console.log(\"allData\", allData1)\n//     e.map((i) => {\n//       i.value > 8 ? dir.push(i.label) : indir.push(i.label)\n//     })\n//     // allData1 = e.map(v => ({\n//     //   \"direct Tax\" : dir,\n//     //   \"indirect Tax\" : indir\n//     // }))\n//     setDd({\n//       direct: dir,\n//       indirect: indir\n//     })\n//   }\n//   // Category Function\n//   const category = (v) => {\n//     setCategoryData(v)\n//     setNn((oldData) => {\n//       return [...oldData, mcategory]\n//     })\n//     setError(\"\")\n//     setCustcate(v)\n//     v.map((val) => {\n//       vv.push(val.value)\n//       setmcategory(val.value);\n//       setmcatname((oldData) => {\n//         return [...oldData, val.label]\n//       })\n//       setStore(val.value)\n//     })\n//     if (vv.length > 0) {\n//       if (vv.includes(\"1\") && vv.includes(\"2\")) {\n//         console.log(\"hdd\")\n//       }\n//       else if (vv.includes(\"1\")) {\n//         for (let i = 0; i < subData.length; i++) {\n//           if (subData[i].value < 9) {\n//             kk.push(subData[i])\n//           }\n//         }\n//         subCategeryData(kk)\n//       }\n//       else if (vv.includes(\"2\")) {\n//         for (let i = 0; i < subData.length; i++) {\n//           if (subData[i].value > 8) {\n//             kk.push(subData[i])\n//           }\n//         }\n//         subCategeryData(kk)\n//       }\n//     }\n//     else if (vv.length === 0) {\n//       subCategeryData(\"\")\n//     }\n//   }\n//   // Phone onChange \n//   const phoneHandler = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setIndNumError(\"\")\n//       setNumAvail(\"\");\n//       setNumExist('Please enter number only')\n//       e.target.value = \"\"\n//       setPhone(\"\")\n//     }\n//     else {\n//       setNumAvail(\"\");\n//       setNumExist(\"\");\n//       setPhone(e.target.value)\n//     }\n//   };\n//   // Phone Validation function \n//   const phoneValidation = () => {\n//     console.log(phone.length)\n//     if (phone.length > 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 10 digit should be enter\")\n//     }\n//     else if (phone.length < 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Minimum 10 digit should be enter\")\n//     }\n//     else if (phone.length > 15) {\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 15 digit should be enter\")\n//     }\n//     else {\n//       setIndNumError(\"\")\n//       let formData = new FormData();\n//       formData.append(\"phone\", phone);\n//       formData.append(\"type\", 2);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res-\", response);\n//           if (response.data.code === 1) {\n//             console.log(response.data.result)\n//             setNumExist('')\n//             setNumAvail(response.data.result);\n//           }\n//           else if (response.data.code === 0) {\n//             console.log(response.data.result)\n//             setNumAvail('')\n//             setNumExist(response.data.result)\n//             console.log(\"mobile\" + setNumExist)\n//           }\n//         })\n//         .catch((error) => {\n//           // console.log(\"erroror - \", error);\n//         });\n//     }\n//   }\n//   //eamil onchange\n//   const emailHandler = (e) => {\n//     setEmail(e.target.value);\n//     console.log(e.target.value.length)\n//     if (e.target.value.length < 1) {\n//       setWemail(\"\")\n//     }\n//   };\n//   //email validaation with api\n//   const emailValidation = (key) => {\n//     var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     if (email.match(validRegex)) {\n//       setWemail(\"\");\n//       let formData = new FormData();\n//       formData.append(\"email\", email);\n//       formData.append(\"type\", 1);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"resEmail-\", response);\n//           if (response.data.code === 1) {\n//             setValiemail(response.data.result)\n//             setInvalid('')\n//           } else if (response.data.code === 0) {\n//             setInvalid(response.data.result)\n//             setValiemail('')\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n//     else {\n//       setWemail(\"invalid email\")\n//     }\n//   }\n//  console.log(subData)\n//   return (\n//     <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n//       <Card>\n//         <CardHeader>\n//           <div class=\"col-md-12 d-flex\">\n//             <div>\n//               <button\n//                 class=\"btn btn-success ml-3\"\n//                 onClick={() => history.goBack()}\n//               >\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\n//                 Go Back\n//               </button>\n//             </div>\n//             <div class=\"text-center ml-5\">\n//               <h4>Add New Team Leader</h4>\n//             </div>\n//           </div>\n//         </CardHeader>\n//         <CardHeader>\n//           <div class=\"row mt-3\">\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n//             <div class=\"col-lg-8 col-xl-8 col-md-12\">\n//               <form onSubmit={handleSubmit(onSubmit)}>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Post Name</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"post_name\"\n//                         disabled\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.post_name,\n//                         })}\n//                         ref={register}\n//                         value={postValue.post}\n//                       />\n//                     </div>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Post Email</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"post_email\"\n//                         ref={register}\n//                         value={postValue.email}\n//                         disabled\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.post_email,\n//                         })}\n//                       />\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Name <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_name,\n//                         })}\n//                         name=\"p_name\"\n//                         ref={register}\n//                       />\n//                     </div>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Phone Number <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_phone || indNumError,\n//                         })}\n//                         name=\"p_phone\"\n//                         ref={register}\n//                         onChange={(e) => phoneHandler(e)}\n//                         onBlur={phoneValidation}\n//                       />\n//                       {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n//                         {\n//                           numAvail ?\n//                             <p className=\"completed\"> {numAvail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{numExist}</p>\n//                         }\n//                       </>}\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-12\">\n//                     <div class=\"form-group\">\n//                       <label>Email <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"email\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_email || wEmail || invalid,\n//                         })}\n//                         name=\"p_email\"\n//                         ref={register}\n//                         onChange={(e) => emailHandler(e)}\n//                         onBlur={emailValidation}\n//                       />\n//                       {\n//                         wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n//                           {valiEmail ?\n//                             <p className=\"completed\">\n//                               {valiEmail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{invalid}</p>}\n//                         </>\n//                       }\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Category <span className=\"declined\">*</span></label>\n//                       <Select isMulti options={options}\n//                         className={error ? \"customError\" : \"\"}\n//                         onChange={category}>\n//                       </Select>\n//                     </div>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Sub Category <span className=\"declined\">*</span></label>\n//                       <Select isMulti options={options2}\n//                         className={error2 ? \"customError\" : \"\"}\n//                         onChange={subCategory}\n//                         styles={{\n//                           option: (styles, { data }) => {\n//                             return {\n//                               ...styles,\n//                               color: data.value > 8\n//                                 ? \"green\"\n//                                 : \"blue\"\n//                             };\n//                           },\n//                           multiValueLabel: (styles, { data }) => ({\n//                             ...styles,\n//                             color: data.value > 8\n//                                 ? \"green\"\n//                                 : \"blue\"\n//                           }),\n//                         }}\n//                         value={subData}>\n//                       </Select>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <button type=\"submit\" className=\"btn btn-primary\">\n//                   Submit\n//                 </button>\n//               </form>\n//             </div>\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\">\n//             </div>\n//             <Mandatory />\n//           </div>\n//         </CardHeader>\n//       </Card>\n//     </Layout>\n//   );\n// }\n// export default AddNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNew\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js"],"names":["React","useState","useEffect","Layout","useForm","yupResolver","yup","Select","Swal","axios","baseUrl","useAlert","Card","CardHeader","useHistory","classNames","Mandatory","Schema","object","shape","p_name","string","required","p_email","email","p_phone","matches","min","max","AddNew","alert","history","handleSubmit","register","reset","errors","resolver","userid","window","localStorage","getItem","error","setError","error2","setError2","tax","setTax","tax2","setTax2","nn","setNn","mcatname","setmcatname","mcategory","setmcategory","store","setStore","subData","subCategeryData","custCate","setCustcate","custCate2","setCustcate2","numExist","setNumExist","phone","setPhone","numAvail","setNumAvail","categoryData","setCategoryData","indNumError","setIndNumError","postValue","setPostName","setEmail","emailPost","setEmailPost","valiEmail","setValiemail","valiEmailPost","setValiemailPost","invalid","setInvalid","invalidPost","setInvalidPost","wEmail","setWemail","wEmailPost","setWemailPost","display","setDisplay","dd","setDd","direct","indirect","kk","vv","options","map","d","id","details","options2","v","postName","get","then","res","data","code","console","log","result","post","getCategory","getSubCategory","onSubmit","value","JSON","stringify","categeryList","categeryName","parentCategoryName","i","push","label","length","formData","FormData","append","post_name","post_email","method","url","response","fire","goBack","message","catch","allData1","dir","indir","subCategory","e","category","oldData","val","includes","phoneHandler","isNaN","target","phoneValidation","emailHandler","emailValidation","key","validRegex","match","emailHandlerPost","emailValidationPost","option","styles","color","multiValueLabel"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [emailPost, setEmailPost] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [valiEmailPost, setValiemailPost] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [invalidPost, setInvalidPost] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [wEmailPost, setWemailPost] = useState();\n\n  const [display, setDisplay] = useState(false);\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n\n\n\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n  useEffect(() => {\n    const postName = async () => {\n      await axios.get(`${baseUrl}/admin/addTlPost`).then((res) => {\n        if (res.data.code === 1) {\n          console.log(\"myData\", res.data.result.post)\n          setPostName(res.data.result);\n        }\n      });\n    };\n\n    postName();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        if (res.data.code === 1) {\n          console.log(res.data.result)\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n\n  const onSubmit = (value) => {\n    console.log((JSON.stringify(dd)))\n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    console.log(subData)\n    subData.map((i) => {\n      console.log(i)\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n    console.log(\"subData\", subData)\n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n      setDisplay(true)\n      console.log(\"ddd\", dd)\n      let formData = new FormData();\n\n      formData.append(\"personal_email\", value.p_email);\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"type\", \"tl\");\n      formData.append(\"cat_id\", categeryList)\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"email\", value.post_email)\n      formData.append(\"pcat_id\", kk)\n      formData.append(\"allpcat_id\", parentCategoryName)\n      formData.append(\"allcat_id\", JSON.stringify(dd))\n\n\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/AddTeamLead`,\n        data: formData,\n      })\n\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader created successfully.\",\n              \"icon\": \"success\"\n            })\n\n            history.goBack();\n          }\n          if (response.data.code === 0) {\n            response.data.message.map((i) => {\n\n            })\n          }\n\n        })\n        .catch((error) => {\n\n        });\n    }\n\n  };\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  // Sub Category Function\n  const subCategory = (e) => {\n    console.log(\"categoryData\", dd)\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n    console.log(e)\n    console.log(\"allData\", allData1)\n    e.map((i) => {\n\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\n    })\n    // allData1 = e.map(v => ({\n    //   \"direct Tax\" : dir,\n    //   \"indirect Tax\" : indir\n    // }))\n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    v.map((val) => {\n      vv.push(val.value)\n      setmcategory(val.value);\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        console.log(\"hdd\")\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n    console.log(phone.length)\n    if (phone.length > 10) {\n      console.log(phone.length)\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n      console.log(phone.length)\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n      let formData = new FormData();\n      formData.append(\"phone\", phone);\n      formData.append(\"type\", 2);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n\n            console.log(response.data.result)\n            setNumExist('')\n            setNumAvail(response.data.result);\n\n          }\n          else if (response.data.code === 0) {\n            console.log(response.data.result)\n            setNumAvail('')\n            setNumExist(response.data.result)\n\n            console.log(\"mobile\" + setNumExist)\n          }\n\n        })\n        .catch((error) => {\n          // console.log(\"erroror - \", error);\n        });\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length)\n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"resEmail-\", response);\n          if (response.data.code === 1) {\n            setValiemail(response.data.result)\n            setInvalid('')\n          } else if (response.data.code === 0) {\n            setInvalid(response.data.result)\n            setValiemail('')\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    else {\n      setWemail(\"invalid email\")\n    }\n\n  }\n  // EmailHandlerPost1\n  const emailHandlerPost = (e) => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length)\n    if (e.target.value.length < 1) {\n      setWemailPost(\"\")\n    }\n  };\n  // Email Validation Post \n  //email validaation Post with api\n  const emailValidationPost = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailPost.match(validRegex)) {\n      setWemailPost(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"resEmail-\", response);\n          if (response.data.code === 1) {\n            setValiemailPost(response.data.result)\n            setInvalidPost('')\n          } else if (response.data.code === 0) {\n            setInvalidPost(response.data.result)\n            setValiemailPost('')\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    else {\n      setWemailPost(\"invalid email\")\n    }\n\n  }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  {/* <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Post Name</label>\n                      <input\n                        type=\"text\"\n                        name=\"post_name\"\n                      \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_name,\n                        })}\n                        ref={register}\n                        defaultValue={postValue.post}\n\n                      />\n\n                    </div>\n                  </div> */}\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    <label>Teamleader Post Name <span className=\"declined\">*</span></label>\n                      \n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        defaultValue={postValue.post}\n                        name=\"post_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    <label>Teamleader Post Email <span className=\"declined\">*</span></label>\n                    \n                   \n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email || wEmail || invalid,\n                        })}\n                        name=\"post_email\"\n                        ref={register}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={emailValidation}\n                      />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                      \n                      {/* {\n                        wEmailPost ? <p className=\"declined\">{wEmailPost}</p> : <>\n                          {valiEmailPost ?\n                            <p className=\"completed\">\n                              {valiEmailPost}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalidPost}</p>}\n                        </>\n                      } */}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone || indNumError,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                        onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <label>Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        // onChange={(e) => emailHandler(e)}\n                        // onBlur={emailValidation}\n                      />\n                      {/* {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } */}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category}>\n                      </Select>\n\n\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\">\n\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../../../components/Layout/Layout\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// import Select from \"react-select\";\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n\n// import { baseUrl } from \"../../../config/config\";\n// import { useAlert } from \"react-alert\";\n// import { Card, CardHeader } from \"reactstrap\";\n// import { useHistory } from \"react-router-dom\";\n// import classNames from \"classnames\";\n// import Mandatory from \"../../../components/Common/Mandatory\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//     .string()\n//     .required(\"required phone no\")\n//     .matches(/^[0-9]+$/, \"Must be only digits\")\n//     .min(10, \"Must be exactly 10 digits\")\n//     .max(20, \"max 20 digits\"),\n\n// });\n\n\n// function AddNew() {\n//   const alert = useAlert();\n//   const history = useHistory();\n//   const { handleSubmit, register, reset, errors } = useForm({\n//     resolver: yupResolver(Schema),\n//   });\n\n//   const userid = window.localStorage.getItem(\"adminkey\");\n//   const [error, setError] = useState()\n//   const [error2, setError2] = useState();\n//   const [tax, setTax] = useState([]);\n//   const [tax2, setTax2] = useState([]);\n//   const [nn, setNn] = useState([])\n//   const [mcatname, setmcatname] = useState([]);\n//   const [mcategory, setmcategory] = useState([]);\n//   const [store, setStore] = useState([]);\n//   const [subData, subCategeryData] = useState([])\n//   const [custCate, setCustcate] = useState([])\n//   const [custCate2, setCustcate2] = useState([])\n//   const [numExist, setNumExist] = useState(null)\n//   const [phone, setPhone] = useState('');\n//   const [numAvail, setNumAvail] = useState(null)\n//   const [categoryData, setCategoryData] = useState([])\n//   const [indNumError, setIndNumError] = useState(null)\n//   const [postValue, setPostName] = useState([]);\n//   const [email, setEmail] = useState('');\n//   const [valiEmail, setValiemail] = useState(null)\n//   const [invalid, setInvalid] = useState(null)\n//   const [wEmail, setWemail] = useState();\n//   const [display, setDisplay] = useState(false);\n//   const [dd, setDd] = useState({\n//     direct: [],\n//     indirect: [],\n//   });\n\n//   var kk = []\n//   var vv = []\n\n\n\n//   const options = tax.map(d => (\n//     {\n//       \"value\": d.id,\n//       \"label\": d.details\n//     }))\n\n//   const options2 = tax2.map(v => ({\n//     \"value\": v.id,\n//     \"label\": v.details\n//   }))\n\n\n//   useEffect(() => {\n//     const postName = async () => {\n//       await axios.get(`${baseUrl}/admin/addTlPost`).then((res) => {\n//         if (res.data.code === 1) {\n//           console.log(\"myData\", res.data.result.post)\n//           setPostName(res.data.result);\n//         }\n//       });\n//     };\n\n//     postName();\n//   }, []);\n\n//   useEffect(() => {\n//     const getCategory = async () => {\n//       await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n//         if (res.data.code === 1) {\n//           console.log(res.data.result)\n//           setTax(res.data.result);\n//         }\n//       });\n//     };\n\n//     getCategory();\n//   }, []);\n\n\n\n//   useEffect(() => {\n//     const getSubCategory = async () => {\n\n//       await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n//         if (res.data.code === 1) {\n//           setTax2(res.data.result)\n//         }\n//       });\n//     };\n//     getSubCategory();\n//   }, [store]);\n\n//   // OnSubmit Function\n\n//   const onSubmit = (value) => {\n\n//     var categeryList = []\n//     var categeryName = []\n//     var categeryName = []\n//     var kk = []\n//     var parentCategoryName = []\n//     console.log(subData)\n//     subData.map((i) => {\n//       console.log(i)\n//       categeryList.push(i.value)\n//       categeryName.push(i.label)\n//     })\n//     categoryData.map((i) => {\n//       kk.push(i.value)\n//       parentCategoryName.push(i.label)\n//     })\n//     console.log(\"subData\", subData)\n//     if (custCate.length < 1) {\n//       setError(\"Please select at least one value\")\n//     }\n//     else if (subData.length < 1) {\n\n//       setError2(\"Please select at least one value\")\n//     }\n//     else if (invalid || wEmail || indNumError) {\n//       setDisplay(false)\n//     }\n\n//     else {\n//       setDisplay(true)\n//       console.log(\"ddd\", dd)\n//       let formData = new FormData();\n\n//       formData.append(\"personal_email\", value.p_email);\n//       formData.append(\"name\", value.p_name);\n//       formData.append(\"phone\", value.p_phone);\n//       formData.append(\"type\", \"tl\");\n//       formData.append(\"cat_id\", categeryList)\n//       formData.append(\"post_name\", postValue.post)\n//       formData.append(\"email\", postValue.email)\n//       formData.append(\"pcat_id\", kk)\n//       formData.append(\"allpcat_id\", parentCategoryName)\n//       formData.append(\"allcat_id\", JSON.stringify(dd))\n\n\n\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/tl/AddTeamLead`,\n//         data: formData,\n//       })\n\n//         .then(function (response) {\n\n//           if (response.data.code === 1) {\n//             Swal.fire({\n//               \"title\": \"Success\",\n//               \"html\": \"Team Leader created successfully.\",\n//               \"icon\": \"success\"\n//             })\n\n//             history.goBack();\n//           }\n//           if (response.data.code === 0) {\n//             response.data.message.map((i) => {\n\n//             })\n//           }\n\n//         })\n//         .catch((error) => {\n\n//         });\n//     }\n\n//   };\n// var allData1 = {}\n// var dir = []\n// var indir = []\n//   // Sub Category Function\n//   const subCategory = (e) => {\n//     console.log(\"categoryData\", dd)\n//     subCategeryData(e)\n//     setCustcate2(e)\n//     setError2(\"\")\n//     console.log(e)\n//     console.log(\"allData\", allData1)\n//     e.map((i) => {\n\n//       i.value > 8 ? dir.push(i.label) : indir.push(i.label)\n//     })\n//     // allData1 = e.map(v => ({\n//     //   \"direct Tax\" : dir,\n//     //   \"indirect Tax\" : indir\n//     // }))\n//     setDd({\n//       direct: dir,\n//       indirect: indir\n//     })\n//   }\n\n\n//   // Category Function\n//   const category = (v) => {\n\n//     setCategoryData(v)\n//     setNn((oldData) => {\n//       return [...oldData, mcategory]\n//     })\n//     setError(\"\")\n//     setCustcate(v)\n//     v.map((val) => {\n//       vv.push(val.value)\n//       setmcategory(val.value);\n//       setmcatname((oldData) => {\n//         return [...oldData, val.label]\n//       })\n//       setStore(val.value)\n//     })\n\n\n//     if (vv.length > 0) {\n//       if (vv.includes(\"1\") && vv.includes(\"2\")) {\n//         console.log(\"hdd\")\n//       }\n//       else if (vv.includes(\"1\")) {\n\n//         for (let i = 0; i < subData.length; i++) {\n//           if (subData[i].value < 9) {\n//             kk.push(subData[i])\n//           }\n//         }\n//         subCategeryData(kk)\n//       }\n//       else if (vv.includes(\"2\")) {\n\n//         for (let i = 0; i < subData.length; i++) {\n//           if (subData[i].value > 8) {\n//             kk.push(subData[i])\n//           }\n//         }\n//         subCategeryData(kk)\n//       }\n//     }\n\n//     else if (vv.length === 0) {\n//       subCategeryData(\"\")\n//     }\n\n//   }\n//   // Phone onChange \n//   const phoneHandler = (e) => {\n\n//     if (isNaN(e.target.value)) {\n//       setIndNumError(\"\")\n//       setNumAvail(\"\");\n//       setNumExist('Please enter number only')\n//       e.target.value = \"\"\n//       setPhone(\"\")\n//     }\n//     else {\n//       setNumAvail(\"\");\n//       setNumExist(\"\");\n//       setPhone(e.target.value)\n//     }\n//   };\n\n//   // Phone Validation function \n//   const phoneValidation = () => {\n//     console.log(phone.length)\n//     if (phone.length > 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 10 digit should be enter\")\n//     }\n//     else if (phone.length < 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Minimum 10 digit should be enter\")\n//     }\n//     else if (phone.length > 15) {\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 15 digit should be enter\")\n//     }\n\n//     else {\n//       setIndNumError(\"\")\n\n//       let formData = new FormData();\n//       formData.append(\"phone\", phone);\n//       formData.append(\"type\", 2);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res-\", response);\n//           if (response.data.code === 1) {\n\n//             console.log(response.data.result)\n//             setNumExist('')\n//             setNumAvail(response.data.result);\n\n//           }\n//           else if (response.data.code === 0) {\n//             console.log(response.data.result)\n//             setNumAvail('')\n//             setNumExist(response.data.result)\n\n//             console.log(\"mobile\" + setNumExist)\n//           }\n\n//         })\n//         .catch((error) => {\n//           // console.log(\"erroror - \", error);\n//         });\n//     }\n//   }\n\n//   //eamil onchange\n//   const emailHandler = (e) => {\n//     setEmail(e.target.value);\n//     console.log(e.target.value.length)\n//     if (e.target.value.length < 1) {\n//       setWemail(\"\")\n//     }\n//   };\n\n\n//   //email validaation with api\n//   const emailValidation = (key) => {\n\n//     var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     if (email.match(validRegex)) {\n//       setWemail(\"\");\n//       let formData = new FormData();\n//       formData.append(\"email\", email);\n//       formData.append(\"type\", 1);\n\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"resEmail-\", response);\n//           if (response.data.code === 1) {\n//             setValiemail(response.data.result)\n//             setInvalid('')\n//           } else if (response.data.code === 0) {\n//             setInvalid(response.data.result)\n//             setValiemail('')\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n//     else {\n//       setWemail(\"invalid email\")\n//     }\n\n//   }\n//  console.log(subData)\n\n//   return (\n//     <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n//       <Card>\n//         <CardHeader>\n//           <div class=\"col-md-12 d-flex\">\n//             <div>\n//               <button\n//                 class=\"btn btn-success ml-3\"\n//                 onClick={() => history.goBack()}\n//               >\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\n//                 Go Back\n//               </button>\n//             </div>\n//             <div class=\"text-center ml-5\">\n//               <h4>Add New Team Leader</h4>\n//             </div>\n//           </div>\n//         </CardHeader>\n\n//         <CardHeader>\n//           <div class=\"row mt-3\">\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n//             <div class=\"col-lg-8 col-xl-8 col-md-12\">\n//               <form onSubmit={handleSubmit(onSubmit)}>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Post Name</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"post_name\"\n//                         disabled\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.post_name,\n//                         })}\n//                         ref={register}\n//                         value={postValue.post}\n\n//                       />\n\n//                     </div>\n//                   </div>\n\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Post Email</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"post_email\"\n//                         ref={register}\n//                         value={postValue.email}\n//                         disabled\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.post_email,\n//                         })}\n//                       />\n\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Name <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_name,\n//                         })}\n//                         name=\"p_name\"\n//                         ref={register}\n//                       />\n\n//                     </div>\n//                   </div>\n\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Phone Number <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_phone || indNumError,\n//                         })}\n//                         name=\"p_phone\"\n//                         ref={register}\n//                         onChange={(e) => phoneHandler(e)}\n//                         onBlur={phoneValidation}\n//                       />\n//                       {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n//                         {\n//                           numAvail ?\n//                             <p className=\"completed\"> {numAvail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{numExist}</p>\n//                         }\n//                       </>}\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-12\">\n//                     <div class=\"form-group\">\n//                       <label>Email <span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"email\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_email || wEmail || invalid,\n//                         })}\n//                         name=\"p_email\"\n//                         ref={register}\n//                         onChange={(e) => emailHandler(e)}\n//                         onBlur={emailValidation}\n//                       />\n//                       {\n//                         wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n//                           {valiEmail ?\n//                             <p className=\"completed\">\n//                               {valiEmail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{invalid}</p>}\n//                         </>\n//                       }\n//                     </div>\n//                   </div>\n//                 </div>\n//                 <div class=\"row\">\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Category <span className=\"declined\">*</span></label>\n//                       <Select isMulti options={options}\n//                         className={error ? \"customError\" : \"\"}\n//                         onChange={category}>\n//                       </Select>\n\n\n//                     </div>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div class=\"form-group\">\n//                       <label>Sub Category <span className=\"declined\">*</span></label>\n//                       <Select isMulti options={options2}\n//                         className={error2 ? \"customError\" : \"\"}\n//                         onChange={subCategory}\n//                         styles={{\n//                           option: (styles, { data }) => {\n//                             return {\n//                               ...styles,\n//                               color: data.value > 8\n//                                 ? \"green\"\n//                                 : \"blue\"\n//                             };\n//                           },\n//                           multiValueLabel: (styles, { data }) => ({\n//                             ...styles,\n//                             color: data.value > 8\n//                                 ? \"green\"\n//                                 : \"blue\"\n//                           }),\n//                         }}\n\n//                         value={subData}>\n//                       </Select>\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <button type=\"submit\" className=\"btn btn-primary\">\n//                   Submit\n//                 </button>\n//               </form>\n//             </div>\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\">\n\n//             </div>\n\n//             <Mandatory />\n//           </div>\n//         </CardHeader>\n//       </Card>\n//     </Layout>\n//   );\n// }\n\n// export default AddNew;\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"\")\n});\n\nfunction Feedback() {\n  _s();\n\n  const {\n    handleSubmit,\n    register,\n    errors,\n    reset\n  } = useForm({\n    resolver: yupResolver(Schema)\n  });\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setLoading(false);\n        reset();\n        Alerts.SuccessNormal(\"Feedback sent successfully.\");\n        history.push({\n          pathname: `/customer/queries`,\n          index: 0\n        });\n      }\n\n      if (response.data.code === 0) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    custDashboard: \"custDashboard\",\n    custUserId: userId,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-success ml-3\",\n              onClick: () => history.goBack(),\n              children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), \"Go Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Query No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"p_query\",\n                    className: \"form-control\",\n                    ref: register,\n                    value: id,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_feedback\n                    }),\n                    placeholder: \"Feedback text here\",\n                    rows: \"5\",\n                    ref: register,\n                    name: \"p_feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this), errors.p_feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.p_feedback.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feedback, \"PXmDNCSrx9ZT00MO/cEGa/3nzeA=\", false, function () {\n  return [useForm, useHistory, useParams];\n});\n\n_c = Feedback;\nexport default Feedback;\n{\n  /* <select\n                       class=\"form-control\"\n                       name=\"p_assignment\"\n                       ref={register}\n                     >\n                       <option value=\"\">--select--</option>\n                        {assignment.map((p, i) => (\n                         <option key={i} value={p.assign_no}>\n                           {p.assign_no}\n                         </option>\n                       ))}\n                     </select> */\n} // useEffect(() => {\n//   const getAssingment = () => {\n//     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setAssingment(res.data.result);\n//       }\n//     });\n//   };\n//   getAssingment();\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js"],"names":["React","useState","useEffect","useForm","yupResolver","yup","Layout","axios","baseUrl","useHistory","useParams","Card","CardHeader","CardBody","Row","Col","ArrowBackIcon","classNames","Alerts","Mandatory","Loader","Schema","object","shape","p_feedback","string","required","Feedback","handleSubmit","register","errors","reset","resolver","history","id","userId","window","localStorage","getItem","loading","setLoading","onSubmit","value","console","log","formData","FormData","append","JSON","parse","method","url","data","then","response","code","SuccessNormal","push","pathname","index","catch","error","goBack","display","justifyContent","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"\"),\n});\n\n\n\nfunction Feedback() {\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const history = useHistory();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value)\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\n          history.push({\n            pathname: `/customer/queries`,\n            index: 0,\n          });\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <ArrowBackIcon />\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Feedback</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={id}\n                          disabled\n                        />\n                      </div>\n\n\n                      <div class=\"form-group\">\n                        <label>Feedback</label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_feedback,\n                          })}\n                          placeholder=\"Feedback text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_feedback\"\n                        ></textarea>\n                        {errors.p_feedback && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_feedback.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        submit\n                      </button>\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n\n\n{/* <select\n                      class=\"form-control\"\n                      name=\"p_assignment\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {assignment.map((p, i) => (\n                        <option key={i} value={p.assign_no}>\n                          {p.assign_no}\n                        </option>\n                      ))}\n                    </select> */}\n // useEffect(() => {\n  //   const getAssingment = () => {\n  //     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setAssingment(res.data.result);\n  //       }\n  //     });\n  //   };\n\n  //   getAssingment();\n  // }, []);\n"]},"metadata":{},"sourceType":"module"}
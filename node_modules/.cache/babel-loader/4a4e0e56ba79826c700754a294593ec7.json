{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Table, Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport History from \"./History\";\nimport Swal from \"sweetalert2\";\nimport Records from \"../../components/Records/Records\";\n\nfunction PendingAllocation({\n  CountPendingForAllocation\n}) {\n  _s();\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const toggle = key => {\n    console.log(\"key\", key);\n    setModal(!modal);\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\"\n      })\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n      setHistory(response.result);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then(res => {\n      console.log(res);\n\n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  const columns = [{\n    text: \"S.No\",\n    dataField: \"\",\n    formatter: (cellContent, row, rowIndex) => {\n      return rowIndex + 1;\n    },\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\",\n        width: \"50px\"\n      };\n    }\n  }, {\n    text: \"Date\",\n    dataField: \"created\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    },\n    formatter: function dateFormat(cell, row) {\n      console.log(\"dt\", row.created);\n      var oldDate = row.created;\n\n      if (oldDate == null) {\n        return null;\n      }\n\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  }, {\n    text: \"Query No\",\n    dataField: \"assign_no\",\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    },\n    formatter: function nameFormatter(cell, row) {\n      console.log(row);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/admin/queries/${row.id}`,\n            index: 1,\n            routes: \"queriestab\"\n          },\n          children: row.assign_no\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    text: \"Category\",\n    dataField: \"parent_id\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    }\n  }, {\n    text: \"Sub Category\",\n    dataField: \"cat_name\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    }\n  }, {\n    text: \"Customer Name\",\n    dataField: \"name\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    }\n  }, {\n    text: \"Status\",\n    dataField: \"status\",\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    },\n    formatter: function nameFormatter(cell, row) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [row.status, \" /\", row.status == \"Inprogress Query\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inprogress\",\n            children: row.statusdescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    text: \"Action\",\n    dataField: \"\",\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    },\n    formatter: function (cell, row) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: row.is_assigned === \"1\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\",\n            fontSize: \"10px\"\n          },\n          children: [\"Allocated to \", row.tname, \" on\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: row.allocation_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            title: \"Assign to\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/admin/queryassing/${row.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            title: \"Decline Query\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/admin/query_rejection/${row.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            title: \"Send Message\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/admin/chatting/${row.id}`,\n                obj: {\n                  message_type: \"4\",\n                  query_No: row.assign_no,\n                  query_id: row.id,\n                  routes: `/admin/queriestab`\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-comments-o\",\n                style: {\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                  color: \"blue\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    text: \"History\",\n    dataField: \"\",\n    headerStyle: () => {\n      return {\n        fontSize: \"12px\"\n      };\n    },\n    formatter: function (cell, row) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-info btn-sm\",\n          onClick: () => toggle(row.id),\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(AdminFilter, {\n          setData: setPendingData,\n          getData: getPendingForAllocation,\n          pendingAlloation: \"pendingAlloation\",\n          setRecords: setRecords,\n          records: records\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Records, {\n          records: records\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          bootstrap4: true,\n          keyField: \"id\",\n          data: pendingData,\n          columns: columns,\n          rowIndex: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(History, {\n          history: history,\n          toggle: toggle,\n          modal: modal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PendingAllocation, \"el3B6tNo69WzMwNDxqoiU2yQxRQ=\");\n\n_c = PendingAllocation;\nexport default PendingAllocation; // axios\n//   .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n//   .then(function (response) {\n//     console.log(\"delete-\", response);\n// if (response.data.code === 1) {\n//   Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n//   getTeamLeader();\n// } else {\n//   Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n// }\n//   })\n//   .catch((error) => {\n//     console.log(\"erroror - \", error);\n//   });\n\n/* <td style={{ textAlign: \"center\" }}>\n                      {p.is_assigned === \"1\" && (\n                        <p style={{ color: \"green\" }}>\n                          <i class=\"fa fa-circle\"\n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\n                            </i>\n                            {p.allocation_time}\n                          </p>\n                      )}\n\n                      {p.reject === \"3\" && (\n                        <p style={{ color: \"red\" }}>\n                          Query Rejected By {p.tname}\n                        </p>\n                      )}\n                    </td> */\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\n//   <ModalBody>\n// <table class=\"table table-bordered\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">Titles</th>\n//       <th scope=\"col\">Data</th>\n//     </tr>\n//   </thead>\n//   {history.length > 0\n//     ? history.map((p, i) => (\n//         <tbody>\n//           <tr>\n//             <th scope=\"row\">Name</th>\n//             <td>{p.name}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Date of Allocation</th>\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Query No</th>\n//             <td>{p.assign_no}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Status</th>\n//             <td>{p.status}</td>\n//           </tr>\n//         </tbody>\n//       ))\n//     : null}\n// </table>\n//   </ModalBody>\n// </Modal>\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingAllocation\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js"],"names":["React","useState","useEffect","axios","baseUrl","Card","CardHeader","CardBody","CardTitle","Row","Col","Table","Modal","ModalHeader","ModalBody","ModalFooter","Button","Link","useForm","Select","AdminFilter","BootstrapTable","History","Swal","Records","PendingAllocation","CountPendingForAllocation","pendingData","setPendingData","selectedData","setSelectedData","history","setHistory","records","setRecords","modal","setModal","toggle","key","console","log","fetch","method","headers","Headers","Accept","then","res","json","response","result","catch","error","getPendingForAllocation","get","data","code","length","columns","text","dataField","formatter","cellContent","row","rowIndex","headerStyle","fontSize","width","sort","dateFormat","cell","created","oldDate","toString","split","reverse","join","nameFormatter","pathname","id","index","routes","assign_no","status","statusdescription","is_assigned","color","tname","allocation_time","display","justifyContent","obj","message_type","query_No","query_id","cursor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport History from \"./History\";\nimport Swal from \"sweetalert2\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.is_assigned === \"1\" ? (\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                Allocated to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <div title=\"Assign to\">\n                  <Link\n                    to={`/admin/queryassing/${row.id}`}\n                  >\n                    <i class=\"fa fa-share\"></i>\n                  </Link>\n\n                </div>\n                <div title=\"Decline Query\">\n                  <Link\n                    to={`/admin/query_rejection/${row.id}`}\n                  >\n                    <i\n                      className=\"fa fa-trash\"\n                    ></i>\n                  </Link>\n                </div>\n\n                <div title=\"Send Message\">\n                  <Link\n                    to={{\n                      pathname: `/admin/chatting/${row.id}`,\n                      obj: {\n                        message_type: \"4\",\n                        query_No: row.assign_no,\n                        query_id: row.id,\n                        routes: `/admin/queriestab`\n                      }\n                    }}\n                  >\n                    <i\n                      class=\"fa fa-comments-o\"\n                      style={{\n                        fontSize: 16,\n                        cursor: \"pointer\",\n                        marginLeft: \"8px\",\n                        color: \"blue\"\n                      }}\n                    ></i>\n                  </Link>\n                </div>\n\n              </div>\n\n\n\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n          <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingAllocation;\n  // axios\n    //   .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n    //   .then(function (response) {\n    //     console.log(\"delete-\", response);\n    // if (response.data.code === 1) {\n    //   Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n    //   getTeamLeader();\n    // } else {\n    //   Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n    // }\n\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n\n\n/* <td style={{ textAlign: \"center\" }}>\n                      {p.is_assigned === \"1\" && (\n                        <p style={{ color: \"green\" }}>\n                          <i class=\"fa fa-circle\"\n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\n                            </i>\n                            {p.allocation_time}\n                          </p>\n                      )}\n\n                      {p.reject === \"3\" && (\n                        <p style={{ color: \"red\" }}>\n                          Query Rejected By {p.tname}\n                        </p>\n                      )}\n                    </td> */\n\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\n//   <ModalBody>\n// <table class=\"table table-bordered\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">Titles</th>\n//       <th scope=\"col\">Data</th>\n//     </tr>\n//   </thead>\n\n//   {history.length > 0\n//     ? history.map((p, i) => (\n//         <tbody>\n//           <tr>\n//             <th scope=\"row\">Name</th>\n//             <td>{p.name}</td>\n//           </tr>\n\n//           <tr>\n//             <th scope=\"row\">Date of Allocation</th>\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Query No</th>\n//             <td>{p.assign_no}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Status</th>\n//             <td>{p.status}</td>\n//           </tr>\n//         </tbody>\n//       ))\n//     : null}\n// </table>\n//   </ModalBody>\n// </Modal>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Select from \"react-select\";\nimport './style.css';\nimport { Spinner } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nimport { purpose } from \"./data\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport Loader from \"../../components/Loader/Loader\";\n\nfunction AddFreshAssingment(props) {\n  _s();\n\n  const alert = useAlert();\n  const history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    reset,\n    control\n  } = useForm({\n    defaultValues: {\n      users: [{\n        query: \"\"\n      }]\n    }\n  });\n  const {\n    append,\n    remove,\n    fields\n  } = useFieldArray({\n    control,\n    name: \"users\"\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const userNameId = window.localStorage.getItem(\"name\");\n  const [custcheckError, setCheckerror] = useState(null);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [custError, setcustError] = useState([]);\n  const [assessmentYear, setAssessmentYear] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [selectError, setSelectError] = useState();\n\n  const remError = () => {\n    setCheckerror(\"\");\n  };\n\n  const valiFun = e => {\n    setcustError(\"\");\n  };\n\n  const purPoseQuery = e => {\n    setSelectError(\"\");\n    setPurposeOption(e);\n  };\n\n  useEffect(() => {\n    getAssementYear();\n  }, []);\n\n  const getAssementYear = () => {\n    axios.get(`${baseUrl}/customers/getAssesmentYear`).then(res => {\n      console.log(res);\n\n      if (res.data.code === 1) {\n        setAssessmentYear(res.data.result);\n      }\n    });\n  };\n\n  const onSubmit = value => {\n    console.log(value);\n    const a = value.p_fact;\n    const b = value.users;\n\n    if (a == '') {\n      setcustError(\"\");\n      console.log(b);\n    } else if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\");\n    } else if (value.p_format_word === false && value.p_format_digital === false && value.p_format_physically === false) {\n      console.log(\"catch\");\n      setCheckerror(\"Please select at least one.\");\n    } else {\n      setLoad(true);\n      let formData = new FormData();\n      var uploadImg = value.upload;\n\n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          console.log(\"pics\", value.upload[i].pics[0]);\n          let a = value.upload[i].pics[0];\n          formData.append(\"upload_1[]\", a);\n        }\n      }\n\n      formData.append(\"fact\", value.p_fact);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_format_word));\n      formData.append(\"softcopy_digitally_assigned\", Number(value.p_format_digital));\n      formData.append(\"printout_physically_assigned\", Number(value.p_format_physically));\n      formData.append(\"case_name\", value.p_case_name);\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n      axios.post(`${baseUrl}/customers/PostQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          reset();\n          var message = response.data.message;\n          var query_no = response.data.query_no;\n\n          if (message == \"\") {\n            Swal.fire({\n              title: 'Success !',\n              html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p>`,\n              icon: 'success'\n            });\n          } else if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`\n            });\n          } else if (message.faill) {\n            Swal.fire({\n              title: 'Success !',\n              html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p> \n                <br/><p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success'\n            });\n          }\n\n          props.history.push(\"/customer/queries\");\n        } else {\n          setLoad(false);\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      custDashboard: \"custDashboard\",\n      custUserId: userId,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-success\",\n                onClick: () => history.goBack(),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-arrow-left mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), \"Go Back\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"20px\"\n                },\n                children: \"Add Fresh Query\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), load ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-xl-8 col-lg-8 col-md-12 py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Facts of the case \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 73\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_fact\n                      }),\n                      id: \"textarea\",\n                      rows: \"6\",\n                      name: \"p_fact\",\n                      onChange: valiFun,\n                      ref: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question_query mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Specific Questions for advisory \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"btn btn-primary\",\n                      onClick: () => append({\n                        query: \"\"\n                      }),\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this), fields.length > 0 && fields.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question_query_field mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.users\n                      }),\n                      ref: register({\n                        required: true\n                      }),\n                      name: `users[${index}].query`,\n                      placeholder: \"Specify your query\",\n                      defaultValue: `${item.query}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"btn btn-primary ml-2\",\n                      onClick: () => remove(index),\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Case name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"p_case_name\",\n                      ref: register,\n                      className: \"form-control\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Assessment year\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      closeMenuOnSelect: false,\n                      onChange: setSelectedOption,\n                      isMulti: true,\n                      options: assessmentYear\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(ImageUploads, {\n                    register: register,\n                    control: control\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Format in which Opinion is required \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"a1\",\n                        className: classNames(\"form-check-input\", {\n                          \"is-invalid\": errors.p_format_word\n                        }),\n                        ref: register,\n                        type: \"checkbox\",\n                        name: \"p_format_word\",\n                        onChange: remError,\n                        defaultChecked: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: \"a1\",\n                        children: \"Softcopy - Word/ Pdf\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"a2\",\n                        className: \"form-check-input\",\n                        type: \"checkbox\",\n                        name: \"p_format_digital\",\n                        ref: register,\n                        onChange: remError\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: \"a2\",\n                        children: \"SoftCopy- Digitally Signed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"a3\",\n                        className: \"form-check-input\",\n                        type: \"checkbox\",\n                        name: \"p_format_physically\",\n                        ref: register,\n                        onChange: remError\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: \"a3\",\n                        children: \"Printout- Physically Signed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: custcheckError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Timelines within which Opinion is Required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: \"p_timelines\",\n                        ref: register,\n                        value: \"Urgent, (4-5 Working Days)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Urgent, (4-5 Working Days)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: \"p_timelines\",\n                        ref: register,\n                        value: \"Regular (10-12 Working Days)\",\n                        defaultChecked: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Regular (10-12 Working Days)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Purpose for which Opinion is sought \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      closeMenuOnSelect: false,\n                      className: selectError ? \"customError\" : \"\",\n                      onChange: purPoseQuery,\n                      isMulti: true,\n                      options: purpose\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddFreshAssingment, \"rmDwxkg203ov6a68GtxOeG76yio=\", false, function () {\n  return [useAlert, useHistory, useForm, useFieldArray];\n});\n\n_c = AddFreshAssingment;\nexport default AddFreshAssingment;\n\nconst ImageUploads = ({\n  register,\n  control\n}) => {\n  _s2();\n\n  const {\n    append,\n    fields,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"upload\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question_query mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Upload Your Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary\",\n        onClick: () => append({\n          pics: \"\"\n        }),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), fields.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question_query_field mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: `upload[${index}].pics`,\n        ref: register(),\n        className: \"form-control-file manage_file\",\n        defaultValue: item.pics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary ml-2\",\n        onClick: () => remove(index),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}; // import { useForm, useFieldArray } from \"react-hook-form\";\n// import React, { useState, useEffect } from \"react\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// import axios from \"axios\";\n// import { baseUrl } from \"../../config/config\";\n// import { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n// import { useAlert } from \"react-alert\";\n// import Select from \"react-select\";\n// import { Spinner } from \"reactstrap\";\n// import Alerts from \"../../common/Alerts\";\n// import Swal from \"sweetalert2\";\n// import { purpose, assessment_year } from \"./data\";\n// import Layout from \"../../components/Layout/Layout\";\n// import {\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   CardTitle,\n//   Row,\n//   Col,\n//   Table,\n// } from \"reactstrap\";\n// import { useHistory } from \"react-router-dom\";\n// import Mandatory from \"../../components/Common/Mandatory\";\n// import classNames from \"classnames\";\n// function AddFreshAssingment(props) {\n//   const alert = useAlert();\n//   const history = useHistory();\n//   const { handleSubmit, register, errors, reset, control } = useForm({\n//     defaultValues: {\n//       users: [{ query: \"\" }],\n//     },\n//   });\n//   const { append, remove, fields } = useFieldArray({\n//     control,\n//     name: \"users\",\n//   });\n//   const userId = window.localStorage.getItem(\"userid\");\n//   const category = window.localStorage.getItem(\"category\");\n//   const userNameId = window.localStorage.getItem(\"name\");\n//   const [selectedOption, setSelectedOption] = useState([]);\n//   const [purposeOption, setPurposeOption] = useState([]);\n//   const [custError, setcustError] = useState([])\n//   const [load, setLoad] = useState(false);\n//   const [selectError, setSelectError] = useState()\n//   const valiFun = (e) => {\n//     setcustError(\"\")\n//   }\n//   const purPoseQuery = (e) => {\n//     setSelectError(\"\")\n//     setPurposeOption(e)\n//   }\n//   const onSubmit = (value) => {\n//     console.log(\"value :\", value);\n//     // if (setPurposeOption == '') {\n//     //   setSelectError(\"man\")\n//     // }\n//     // if (selectedOption == '') {\n//     //   setSelectError(\"man\")\n//     // }\n//     // else {\n//     //   setSelectError(\"man\")\n//     // }\n//     setLoad(true);\n//     let formData = new FormData();\n//     var uploadImg = value.upload;\n//     if (uploadImg) {\n//       for (var i = 0; i < uploadImg.length; i++) {\n//         console.log(\"pics\", value.upload[i].pics[0]);\n//         let a = value.upload[i].pics[0];\n//         formData.append(\"upload_1[]\", a);\n//       }\n//     }\n//     formData.append(\"fact\", value.p_fact);\n//     formData.append(\"specific\", JSON.stringify(value.users));\n//     formData.append(\"timelines\", value.p_timelines);\n//     formData.append(\"user\", JSON.parse(userId));\n//     formData.append(\"cid\", JSON.parse(category));\n//     formData.append(\"softcopy_word\", Number(value.p_format_word));\n//     formData.append(\n//       \"softcopy_digitally_assigned\",\n//       Number(value.p_format_digital)\n//     );\n//     formData.append(\n//       \"printout_physically_assigned\",\n//       Number(value.p_format_physically)\n//     );\n//     formData.append(\"case_name\", value.p_case_name);\n//     formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n//     formData.append(\"purpose\", JSON.stringify(purposeOption));\n//     axios\n//       .post(`${baseUrl}/customers/PostQuestion`, formData, {\n//         headers: {\n//           \"content-type\": \"multipart/form-data\",\n//         },\n//       })\n//       .then(function (response) {\n//         console.log(\"res-\", response);\n//         if (response.data.code === 1) {\n//           reset();\n//           var message = response.data.message\n//           var query_no = response.data.query_no\n//           if (message == \"\") {\n//             Swal.fire(\n//               \"Success\",\n//               `Query successfully added.`,\n//               \"success\"\n//             )\n//           } else if (message.invalid) {\n//             Swal.fire({\n//               title: 'Error !',\n//               html: `<p class=\"text-danger\">${message.invalid}</p>`,\n//             })\n//           } else if (message.faill && message.success) {\n//             Swal.fire({\n//               title: 'Success',\n//               html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n//               icon: 'success',\n//             })\n//           } else if (message.success) {\n//             Swal.fire({\n//               title: 'Success',\n//               html: `<p>Query no.- ${query_no} has been submitted successfully. Mazars team will contact you shortly.\n//               </p> <br/>\n//                <p>${message.success}</p>`,\n//               icon: 'success',\n//             })\n//           }\n//           else if (message.faill) {\n//             Swal.fire({\n//               title: 'Error !',\n//               html: `<p class=\"text-danger\">${message.faill}</p>`,\n//               icon: 'error',\n//             })\n//           }\n//           props.history.push(\"/customer/dashboard\");\n//         } else {\n//           setLoad(false);\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"erroror - \", error);\n//       });\n//   };\n//   return (\n//     <>\n//       <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n//         <Card>\n//           <CardHeader>\n//             <Row>\n//               <Col md=\"4\">\n//                 <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n//                   <i class=\"fas fa-arrow-left mr-2\"></i>\n//                   Go Back\n//                 </button>\n//               </Col>\n//               <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n//                 <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n//               </Col>\n//             </Row>\n//           </CardHeader>\n//           <div className=\"container\">\n//             <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n//               {load ? (\n//                 <Spinner size=\"sm\" color=\"primary\" />\n//               ) : (\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                   <div className=\"row\">\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Facts of the case <span className=\"declined\">*</span></label>\n//                         <textarea\n//                           className={classNames(\"form-control\", {\n//                             \"is-invalid\": errors.p_fact,\n//                           })}\n//                           id=\"textarea\"\n//                           rows=\"6\"\n//                           name=\"p_fact\"\n//                           onChange={valiFun}\n//                           ref={register({ required: true })}\n//                         ></textarea>\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"question_query mb-2\">\n//                         <label className=\"form-label\">\n//                           Specific Questions for advisory <span className=\"declined\">*</span>\n//                         </label>\n//                         <div\n//                           className=\"btn btn-primary\"\n//                           onClick={() => append({ query: \"\" })}\n//                         >\n//                           +\n//                         </div>\n//                       </div>\n//                       {fields.length > 0 &&\n//                         fields.map((item, index) => (\n//                           <div>\n//                             {fields.length < 5 ? (\n//                               <div\n//                                 className=\"question_query_field mb-2\"\n//                                 key={index}\n//                               >\n//                                 <input\n//                                   type=\"text\"\n//                                   className={classNames(\"form-control\", {\n//                                     \"is-invalid\": errors.users,\n//                                   })}\n//                                   ref={register({ required: true })}\n//                                   name={`users[${index}].query`}\n//                                   placeholder=\"Specify your query\"\n//                                   defaultValue={`${item.query}`}\n//                                 />\n//                                 <div\n//                                   className=\"btn btn-primary ml-2\"\n//                                   onClick={() => remove(index)}\n//                                 >\n//                                   -\n//                                 </div>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Case name</label>\n//                         <input\n//                           type=\"text\"\n//                           name=\"p_case_name\"\n//                           ref={register}\n//                           className=\"form-control\"\n//                         />\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Assessment year</label>\n//                         <Select\n//                           closeMenuOnSelect={false}\n//                           onChange={setSelectedOption}\n//                           isMulti\n//                           options={assessment_year}\n//                         />\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <ImageUploads register={register} control={control} />\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Format in which Opinion is required <span className=\"declined\">*</span>\n//                         </label>\n//                         <br />\n//                         <div className=\"form-check\">\n//                           <input\n//                             className={classNames(\"form-check-input\", {\n//                               \"is-invalid\": errors.p_format_word,\n//                             })}\n//                             type=\"checkbox\"\n//                             name=\"p_format_word\"\n//                             ref={register({ required: true })}\n//                             defaultChecked\n//                           />\n//                           <label className=\"form-check-label\">\n//                             Softcopy - Word/ Pdf\n//                           </label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"checkbox\"\n//                             name=\"p_format_digital\"\n//                             ref={register}\n//                           />\n//                           <label className=\"form-check-label\">\n//                             SoftCopy- Digitally Signed\n//                           </label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"checkbox\"\n//                             name=\"p_format_physically\"\n//                             ref={register}\n//                           />\n//                           <label className=\"form-check-label\">\n//                             Printout- Physically Signed\n//                           </label>\n//                         </div>\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Timelines within which Opinion is Required\n//                         </label>\n//                         <br />\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"radio\"\n//                             name=\"p_timelines\"\n//                             ref={register}\n//                             value=\"Urgent, (4-5 Working Days)\"\n//                           />\n//                           <label>Urgent, (4-5 Working Days)</label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"radio\"\n//                             name=\"p_timelines\"\n//                             ref={register}\n//                             value=\"Regular (10-12 Working Days)\"\n//                             defaultChecked\n//                           />\n//                           <label>Regular (10-12 Working Days)</label>\n//                         </div>\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Purpose for which Opinion is sought <span className=\"declined\">*</span>\n//                         </label>\n//                         <Select\n//                           closeMenuOnSelect={false}\n//                           onChange={purPoseQuery}\n//                           isMulti\n//                           options={purpose}\n//                           className={classNames(\"form-check-input\", {\n//                             \"is-invalid\": selectError,\n//                           })}\n//                         />\n//                         <p style={{ \"color\": \"red\" }}>{selectError}</p>\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <button type=\"submit\" className=\"btn btn-primary\">\n//                     Submit\n//                   </button>\n//                 </form>\n//               )}\n//             </div>\n//             <Mandatory />\n//           </div>\n//         </Card>\n//       </Layout>\n//     </>\n//   );\n// }\n// export default AddFreshAssingment;\n// const ImageUploads = ({ register, control }) => {\n//   const { append, fields, remove } = useFieldArray({\n//     control,\n//     name: \"upload\",\n//   });\n//   return (\n//     <>\n//       <div className=\"question_query mb-2\">\n//         <label className=\"form-label\">Upload Your Document</label>\n//         <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n//           +\n//         </div>\n//       </div>\n//       {fields.map((item, index) => (\n//         <div className=\"question_query_field mb-2\" key={index}>\n//           <input\n//             type=\"file\"\n//             name={`upload[${index}].pics`}\n//             ref={register()}\n//             className=\"form-control-file manage_file\"\n//             defaultValue={item.pics}\n//           />\n//           <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n//             -\n//           </div>\n//         </div>\n//       ))}\n//     </>\n//   );\n// };\n\n\n_s2(ImageUploads, \"vVow1fjqIiEi9MP+VsMvf4UBsng=\", false, function () {\n  return [useFieldArray];\n});\n\n_c2 = ImageUploads;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddFreshAssingment\");\n$RefreshReg$(_c2, \"ImageUploads\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js"],"names":["useForm","useFieldArray","React","useState","useEffect","axios","baseUrl","useAlert","Select","Spinner","Swal","purpose","Layout","Card","CardHeader","Row","Col","useHistory","Mandatory","classNames","Loader","AddFreshAssingment","props","alert","history","handleSubmit","register","errors","reset","control","defaultValues","users","query","append","remove","fields","name","userId","window","localStorage","getItem","category","userNameId","custcheckError","setCheckerror","selectedOption","setSelectedOption","purposeOption","setPurposeOption","custError","setcustError","assessmentYear","setAssessmentYear","load","setLoad","selectError","setSelectError","remError","valiFun","e","purPoseQuery","getAssementYear","get","then","res","console","log","data","code","result","onSubmit","value","a","p_fact","b","p_format_word","p_format_digital","p_format_physically","formData","FormData","uploadImg","upload","i","length","pics","JSON","stringify","p_timelines","parse","Number","p_case_name","post","headers","response","message","query_no","fire","title","html","icon","invalid","faill","push","catch","error","goBack","display","justifyContent","fontSize","required","map","item","index","ImageUploads"],"mappings":"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","sourcesContent":["import { useForm, useFieldArray } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Select from \"react-select\";\nimport './style.css'\nimport { Spinner } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nimport { purpose } from \"./data\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\n\nfunction AddFreshAssingment(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset, control } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const userNameId = window.localStorage.getItem(\"name\");\n  const [custcheckError, setCheckerror] = useState(null);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [custError, setcustError] = useState([])\n  const [assessmentYear, setAssessmentYear] = useState([]);\n\n\n  const [load, setLoad] = useState(false);\n  const [selectError, setSelectError] = useState()\n\n\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n  const valiFun = (e) => {\n    setcustError(\"\")\n  }\n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n  }\n\n  useEffect(() => {\n    getAssementYear();\n  }, []);\n\n\n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n\n\n  const onSubmit = (value) => {\n    console.log(value)\n\n    const a = value.p_fact;\n    const b = value.users;\n    if (a == '') {\n      setcustError(\"\");\n      console.log(b)\n    }\n    else if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_format_word === false && value.p_format_digital === false && value.p_format_physically === false) {\n      console.log(\"catch\")\n      setCheckerror(\"Please select at least one.\")\n    }\n\n    else {\n      setLoad(true);\n      let formData = new FormData();\n\n      var uploadImg = value.upload;\n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          console.log(\"pics\", value.upload[i].pics[0]);\n          let a = value.upload[i].pics[0];\n          formData.append(\"upload_1[]\", a);\n        }\n      }\n\n      formData.append(\"fact\", value.p_fact);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_format_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_format_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_format_physically)\n      );\n      formData.append(\"case_name\", value.p_case_name);\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n      axios\n        .post(`${baseUrl}/customers/PostQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n            reset();\n            var message = response.data.message\n            var query_no = response.data.query_no\n            if (message == \"\") {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p>`,\n                icon: 'success',\n              })\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p> \n                <br/><p class=\"text-danger\">${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            setLoad(false);\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n  };\n\n\n  return (\n    <>\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Col>\n              <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n              </Col>\n            </Row>\n\n          </CardHeader>\n          {load ? (\n            <Loader />\n          ) : (\n            <div className=\"container\">\n              <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Facts of the case <span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_fact,\n                          })}\n                          id=\"textarea\"\n                          rows=\"6\"\n                          name=\"p_fact\"\n                          onChange={valiFun}\n                          ref={register({ required: true })}\n                        ></textarea>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn btn-primary\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.length > 0 &&\n                        fields.map((item, index) => (\n                          <div\n                            className=\"question_query_field mb-2\"\n                            key={index}\n                          >\n                            <input\n                              type=\"text\"\n                              className={classNames(\"form-control\", {\n                                \"is-invalid\": errors.users,\n                              })}\n                              ref={register({ required: true })}\n                              name={`users[${index}].query`}\n                              placeholder=\"Specify your query\"\n                              defaultValue={`${item.query}`}\n                            />\n                            <div\n                              className=\"btn btn-primary ml-2\"\n                              onClick={() => remove(index)}\n                            >\n                              -\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_case_name\"\n                          ref={register}\n\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <ImageUploads register={register} control={control} />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required <span className=\"declined\">*</span>\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className={classNames(\"form-check-input\", {\n                              \"is-invalid\": errors.p_format_word,\n                            })}\n                            ref={register}\n                            type=\"checkbox\"\n                            name=\"p_format_word\"\n                            onChange={remError}\n                            defaultChecked\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_digital\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_physically\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is Required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent, (4-5 Working Days)\"\n\n                          />\n                          <label>Urgent, (4-5 Working Days)</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular (10-12 Working Days)\"\n                            defaultChecked\n                          />\n                          <label>Regular (10-12 Working Days)</label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Purpose for which Opinion is sought <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          isMulti\n                          options={purpose}\n                        />\n\n                      </div>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n\n              </div>\n              <Mandatory />\n            </div>\n          )}\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default AddFreshAssingment;\n\n\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file manage_file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\n\n// import { useForm, useFieldArray } from \"react-hook-form\";\n// import React, { useState, useEffect } from \"react\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// import axios from \"axios\";\n// import { baseUrl } from \"../../config/config\";\n// import { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n// import { useAlert } from \"react-alert\";\n// import Select from \"react-select\";\n// import { Spinner } from \"reactstrap\";\n// import Alerts from \"../../common/Alerts\";\n// import Swal from \"sweetalert2\";\n// import { purpose, assessment_year } from \"./data\";\n// import Layout from \"../../components/Layout/Layout\";\n// import {\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   CardTitle,\n//   Row,\n//   Col,\n//   Table,\n// } from \"reactstrap\";\n// import { useHistory } from \"react-router-dom\";\n// import Mandatory from \"../../components/Common/Mandatory\";\n// import classNames from \"classnames\";\n\n\n\n// function AddFreshAssingment(props) {\n//   const alert = useAlert();\n//   const history = useHistory();\n//   const { handleSubmit, register, errors, reset, control } = useForm({\n//     defaultValues: {\n//       users: [{ query: \"\" }],\n//     },\n//   });\n\n//   const { append, remove, fields } = useFieldArray({\n//     control,\n//     name: \"users\",\n//   });\n//   const userId = window.localStorage.getItem(\"userid\");\n//   const category = window.localStorage.getItem(\"category\");\n//   const userNameId = window.localStorage.getItem(\"name\");\n\n//   const [selectedOption, setSelectedOption] = useState([]);\n//   const [purposeOption, setPurposeOption] = useState([]);\n//   const [custError, setcustError] = useState([])\n\n//   const [load, setLoad] = useState(false);\n//   const [selectError, setSelectError] = useState()\n\n\n//   const valiFun = (e) => {\n//     setcustError(\"\")\n//   }\n\n//   const purPoseQuery = (e) => {\n//     setSelectError(\"\")\n//     setPurposeOption(e)\n//   }\n\n\n//   const onSubmit = (value) => {\n//     console.log(\"value :\", value);\n\n//     // if (setPurposeOption == '') {\n//     //   setSelectError(\"man\")\n//     // }\n//     // if (selectedOption == '') {\n//     //   setSelectError(\"man\")\n//     // }\n//     // else {\n//     //   setSelectError(\"man\")\n//     // }\n\n\n//     setLoad(true);\n//     let formData = new FormData();\n\n//     var uploadImg = value.upload;\n//     if (uploadImg) {\n//       for (var i = 0; i < uploadImg.length; i++) {\n//         console.log(\"pics\", value.upload[i].pics[0]);\n//         let a = value.upload[i].pics[0];\n//         formData.append(\"upload_1[]\", a);\n//       }\n//     }\n\n//     formData.append(\"fact\", value.p_fact);\n//     formData.append(\"specific\", JSON.stringify(value.users));\n//     formData.append(\"timelines\", value.p_timelines);\n//     formData.append(\"user\", JSON.parse(userId));\n//     formData.append(\"cid\", JSON.parse(category));\n//     formData.append(\"softcopy_word\", Number(value.p_format_word));\n//     formData.append(\n//       \"softcopy_digitally_assigned\",\n//       Number(value.p_format_digital)\n//     );\n//     formData.append(\n//       \"printout_physically_assigned\",\n//       Number(value.p_format_physically)\n//     );\n//     formData.append(\"case_name\", value.p_case_name);\n//     formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n//     formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n\n//     axios\n//       .post(`${baseUrl}/customers/PostQuestion`, formData, {\n//         headers: {\n//           \"content-type\": \"multipart/form-data\",\n//         },\n//       })\n//       .then(function (response) {\n//         console.log(\"res-\", response);\n//         if (response.data.code === 1) {\n//           reset();\n//           var message = response.data.message\n//           var query_no = response.data.query_no\n//           if (message == \"\") {\n//             Swal.fire(\n//               \"Success\",\n//               `Query successfully added.`,\n//               \"success\"\n//             )\n//           } else if (message.invalid) {\n//             Swal.fire({\n//               title: 'Error !',\n//               html: `<p class=\"text-danger\">${message.invalid}</p>`,\n//             })\n//           } else if (message.faill && message.success) {\n//             Swal.fire({\n//               title: 'Success',\n//               html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n//               icon: 'success',\n//             })\n//           } else if (message.success) {\n//             Swal.fire({\n//               title: 'Success',\n//               html: `<p>Query no.- ${query_no} has been submitted successfully. Mazars team will contact you shortly.\n//               </p> <br/>\n//                <p>${message.success}</p>`,\n//               icon: 'success',\n//             })\n//           }\n//           else if (message.faill) {\n//             Swal.fire({\n//               title: 'Error !',\n//               html: `<p class=\"text-danger\">${message.faill}</p>`,\n//               icon: 'error',\n//             })\n//           }\n\n//           props.history.push(\"/customer/dashboard\");\n//         } else {\n//           setLoad(false);\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"erroror - \", error);\n//       });\n\n//   };\n\n\n//   return (\n//     <>\n//       <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n//         <Card>\n//           <CardHeader>\n//             <Row>\n//               <Col md=\"4\">\n//                 <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n//                   <i class=\"fas fa-arrow-left mr-2\"></i>\n//                   Go Back\n//                 </button>\n//               </Col>\n//               <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n//                 <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n//               </Col>\n//             </Row>\n//           </CardHeader>\n//           <div className=\"container\">\n\n//             <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n//               {load ? (\n//                 <Spinner size=\"sm\" color=\"primary\" />\n//               ) : (\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                   <div className=\"row\">\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Facts of the case <span className=\"declined\">*</span></label>\n//                         <textarea\n//                           className={classNames(\"form-control\", {\n//                             \"is-invalid\": errors.p_fact,\n//                           })}\n//                           id=\"textarea\"\n//                           rows=\"6\"\n//                           name=\"p_fact\"\n//                           onChange={valiFun}\n//                           ref={register({ required: true })}\n//                         ></textarea>\n\n//                       </div>\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <div className=\"question_query mb-2\">\n//                         <label className=\"form-label\">\n//                           Specific Questions for advisory <span className=\"declined\">*</span>\n//                         </label>\n//                         <div\n//                           className=\"btn btn-primary\"\n//                           onClick={() => append({ query: \"\" })}\n//                         >\n//                           +\n//                         </div>\n//                       </div>\n\n//                       {fields.length > 0 &&\n//                         fields.map((item, index) => (\n//                           <div>\n//                             {fields.length < 5 ? (\n//                               <div\n//                                 className=\"question_query_field mb-2\"\n//                                 key={index}\n//                               >\n//                                 <input\n//                                   type=\"text\"\n//                                   className={classNames(\"form-control\", {\n//                                     \"is-invalid\": errors.users,\n//                                   })}\n//                                   ref={register({ required: true })}\n//                                   name={`users[${index}].query`}\n//                                   placeholder=\"Specify your query\"\n//                                   defaultValue={`${item.query}`}\n//                                 />\n//                                 <div\n//                                   className=\"btn btn-primary ml-2\"\n//                                   onClick={() => remove(index)}\n//                                 >\n//                                   -\n//                                 </div>\n//                               </div>\n//                             ) : null}\n//                           </div>\n//                         ))}\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Case name</label>\n//                         <input\n//                           type=\"text\"\n//                           name=\"p_case_name\"\n//                           ref={register}\n\n//                           className=\"form-control\"\n//                         />\n\n//                       </div>\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">Assessment year</label>\n//                         <Select\n//                           closeMenuOnSelect={false}\n//                           onChange={setSelectedOption}\n//                           isMulti\n//                           options={assessment_year}\n//                         />\n\n//                       </div>\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <ImageUploads register={register} control={control} />\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Format in which Opinion is required <span className=\"declined\">*</span>\n//                         </label>\n//                         <br />\n//                         <div className=\"form-check\">\n//                           <input\n//                             className={classNames(\"form-check-input\", {\n//                               \"is-invalid\": errors.p_format_word,\n//                             })}\n//                             type=\"checkbox\"\n//                             name=\"p_format_word\"\n//                             ref={register({ required: true })}\n//                             defaultChecked\n//                           />\n//                           <label className=\"form-check-label\">\n//                             Softcopy - Word/ Pdf\n//                           </label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"checkbox\"\n//                             name=\"p_format_digital\"\n//                             ref={register}\n\n//                           />\n//                           <label className=\"form-check-label\">\n//                             SoftCopy- Digitally Signed\n//                           </label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"checkbox\"\n//                             name=\"p_format_physically\"\n//                             ref={register}\n\n//                           />\n//                           <label className=\"form-check-label\">\n//                             Printout- Physically Signed\n//                           </label>\n//                         </div>\n//                       </div>\n//                     </div>\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Timelines within which Opinion is Required\n//                         </label>\n//                         <br />\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"radio\"\n//                             name=\"p_timelines\"\n//                             ref={register}\n//                             value=\"Urgent, (4-5 Working Days)\"\n\n//                           />\n//                           <label>Urgent, (4-5 Working Days)</label>\n//                         </div>\n//                         <div className=\"form-check\">\n//                           <input\n//                             className=\"form-check-input\"\n//                             type=\"radio\"\n//                             name=\"p_timelines\"\n//                             ref={register}\n//                             value=\"Regular (10-12 Working Days)\"\n//                             defaultChecked\n//                           />\n//                           <label>Regular (10-12 Working Days)</label>\n//                         </div>\n//                       </div>\n//                     </div>\n\n//                     <div className=\"col-md-6\">\n//                       <div className=\"mb-3\">\n//                         <label className=\"form-label\">\n//                           Purpose for which Opinion is sought <span className=\"declined\">*</span>\n//                         </label>\n//                         <Select\n//                           closeMenuOnSelect={false}\n//                           onChange={purPoseQuery}\n//                           isMulti\n//                           options={purpose}\n//                           className={classNames(\"form-check-input\", {\n//                             \"is-invalid\": selectError,\n//                           })}\n//                         />\n//                         <p style={{ \"color\": \"red\" }}>{selectError}</p>\n//                       </div>\n//                     </div>\n//                   </div>\n\n//                   <button type=\"submit\" className=\"btn btn-primary\">\n//                     Submit\n//                   </button>\n//                 </form>\n//               )}\n//             </div>\n//             <Mandatory />\n\n//           </div>\n\n//         </Card>\n//       </Layout>\n//     </>\n//   );\n// }\n\n// export default AddFreshAssingment;\n\n\n\n// const ImageUploads = ({ register, control }) => {\n//   const { append, fields, remove } = useFieldArray({\n//     control,\n//     name: \"upload\",\n//   });\n//   return (\n//     <>\n//       <div className=\"question_query mb-2\">\n//         <label className=\"form-label\">Upload Your Document</label>\n//         <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n//           +\n//         </div>\n//       </div>\n\n//       {fields.map((item, index) => (\n//         <div className=\"question_query_field mb-2\" key={index}>\n//           <input\n//             type=\"file\"\n//             name={`upload[${index}].pics`}\n//             ref={register()}\n//             className=\"form-control-file manage_file\"\n//             defaultValue={item.pics}\n//           />\n//           <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n//             -\n//           </div>\n//         </div>\n//       ))}\n//     </>\n//   );\n// };\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
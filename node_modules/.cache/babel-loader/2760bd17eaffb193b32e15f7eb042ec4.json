{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\nexport default class Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: [],\n      dates: []\n    };\n  }\n\n  handleChange1(i, e) {\n    if (isNaN(e.target.value)) {\n      this.setState({\n        error: \"Please insert only digit\"\n      });\n    } else {\n      this.setState({\n        error: \"\"\n      });\n    }\n\n    this.setState({\n      values: { ...this.state.values,\n        [i]: e.target.value\n      }\n    }, () => {\n      this.props.paymentAmount(this.state.values);\n    });\n  }\n\n  handleChange2(i, e) {\n    this.setState({\n      dates: { ...this.state.dates,\n        [i]: e.target.value\n      }\n    }, () => {\n      this.props.paymentDate(this.state.dates);\n    });\n  }\n\n  render() {\n    var fieldsArray = [];\n\n    for (var i = 1; i <= this.props.installment; i++) {\n      fieldsArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-6 my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: this.state.values[i],\n            onChange: this.handleChange1.bind(this, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              \"display\": \"block\",\n              \"color\": \"red\"\n            },\n            children: this.state.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-6 my-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            name: this.state.dates[i],\n            onChange: this.handleChange2.bind(this, i),\n            min: this.props.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Due Dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), fieldsArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n} // import React from \"react\";\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n//     }\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n//     }\n//     render() {\n//         var fieldsArray = [];\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js"],"names":["React","Spinner","Payment","Component","constructor","props","state","values","dates","handleChange1","i","e","isNaN","target","value","setState","error","paymentAmount","handleChange2","paymentDate","render","fieldsArray","installment","push","bind","item","display","width","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <div className=\"inputs\">\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr>\n          {fieldsArray}\n      </div>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}
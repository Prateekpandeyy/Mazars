{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  _s();\n\n  const {\n    Option\n  } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n  const handleChange = value => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then(res => {\n        console.log(res);\n        setValue(res.data.result[0]);\n      });\n    };\n\n    getTeamLeader();\n  }, []);\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store2}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = values => {\n    console.log(values); // let formData = new FormData();\n    // formData.append(\"email\", value.p_email);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"phone\", value.p_phone);\n    // formData.append(\"pcat_id\", value.p_tax);\n    // formData.append(\"cat_id\", value.p_tax2);\n    // formData.append(\"id\", id);\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/updateTeamLeader`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"TL updated  !\");\n    //       history.goBack();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 60\n  }, this);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        initialValues: {\n          username: `${data1}`,\n          email: `${data2}`,\n          phone: `${data3}`,\n          category: `${data4}`,\n          sub_category: `${data5}`\n        },\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"email \",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"category\",\n          label: \"Category\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"1\",\n              children: \"Direct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"2\",\n              children: \"InDirect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"sub_category\",\n          label: \"Sub-category\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"\",\n              children: \"--Select Sub-Category--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), tax2.map((p, index) => /*#__PURE__*/_jsxDEV(Option, {\n              value: p.id,\n              children: p.details\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"phone\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Reset, \"TIDtxCD8mrCcrSFrCMpoC+KZvhc=\");\n\n_c = Reset;\nexport default Reset; // <Option value=\"3\">Assessment</Option>\n// <Option value=\"4\">others</Option>\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import { Checkbox, Input } from \"@material-ui/core\";\n// import { Input as AntdInput } from \"antd\";\n// import \"./styles.css\";\n// const App = () => {\n//   const { control, handleSubmit } = useForm();\n//   const onSubmit = data => {\n//     alert(JSON.stringify(data));\n//   };\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <label>Ice Cream Preference</label>\n//       <Controller\n//         name=\"iceCreamType\"\n//         as={Select}\n//         options={[\n//           { value: \"chocolate\", label: \"Chocolate\" },\n//           { value: \"strawberry\", label: \"Strawberry\" },\n//           { value: \"vanilla\", label: \"Vanilla\" }\n//         ]}\n//         control={control}\n//         defaultValue={[{ value: \"vanilla\", label: \"Vanilla\" }]}\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   rootElement\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js"],"names":["React","useState","useEffect","Select","Form","Input","Button","axios","useParams","useHistory","baseUrl","Reset","Option","tax2","setTax2","store2","setStore2","value","setValue","handleChange","console","log","getTeamLeader","get","then","res","data","result","name","data1","data2","email","data3","phone","data4","parent_id","data5","cat_name","getSubCategory","code","onFinish","values","username","category","sub_category","map","p","index","id","details"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n        console.log(res);\n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n    console.log(values);\n\n    // let formData = new FormData();\n    // formData.append(\"email\", value.p_email);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"phone\", value.p_phone);\n    // formData.append(\"pcat_id\", value.p_tax);\n    // formData.append(\"cat_id\", value.p_tax2);\n    // formData.append(\"id\", id);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/updateTeamLeader`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"TL updated  !\");\n    //       history.goBack();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n          {/* <Form name=\"nest-messages\" onFinish={onFinish}>\n            <Form.Item name={[\"query\", \"name\"]} label=\" name\">\n              <Input />\n            </Form.Item>\n            <Form.Item name={[\"query\", \"email\"]} label=\"email \">\n              <Input defaultValue={data2} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"phone\"]} label=\"phone\">\n              <Input defaultValue={data3} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"pcat_1\"]} label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"cat_1\"]} label=\"Sub-category\">\n              <Select defaultValue={data5}>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form> */}\n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n// <Option value=\"3\">Assessment</Option>\n// <Option value=\"4\">others</Option>\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import { Checkbox, Input } from \"@material-ui/core\";\n// import { Input as AntdInput } from \"antd\";\n\n// import \"./styles.css\";\n\n// const App = () => {\n//   const { control, handleSubmit } = useForm();\n\n//   const onSubmit = data => {\n//     alert(JSON.stringify(data));\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n\n//       <label>Ice Cream Preference</label>\n//       <Controller\n//         name=\"iceCreamType\"\n//         as={Select}\n//         options={[\n//           { value: \"chocolate\", label: \"Chocolate\" },\n//           { value: \"strawberry\", label: \"Strawberry\" },\n//           { value: \"vanilla\", label: \"Vanilla\" }\n//         ]}\n//         control={control}\n//         defaultValue={[{ value: \"vanilla\", label: \"Vanilla\" }]}\n//       />\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// const rootElement = document.getElementById(\"root\");\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   rootElement\n// );\n"]},"metadata":{},"sourceType":"module"}
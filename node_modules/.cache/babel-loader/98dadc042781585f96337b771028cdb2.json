{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\n\nfunction ChangePassword(props) {\n  _s();\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    reset\n  } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [time, setTime] = useState('');\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    getTime();\n  }, [load]);\n\n  const getTime = () => {\n    // console.log(\"get time\")\n    if (load) {\n      var timerOn = true;\n\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(s);\n        remaining -= 1;\n\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n\n        setDisabled(true);\n      }\n\n      timer(60);\n    }\n  };\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow);\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2);\n  };\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    setEmail(value.p_email);\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n\n    if (display) {\n      let formData = new FormData();\n      formData.append(\"email\", value.p_email);\n      formData.append(\"uid\", JSON.parse(userId));\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/regenrateotp`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          setLoading(false);\n          setLoad(true);\n          setShow(true);\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\");\n        } else if (response.data.code === 0) {\n          setLoading(false);\n          Alerts.ErrorNormal(\"Please enter correct details\");\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n      return false;\n    }\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setLoading(false);\n        var variable = \"Password changed successfully.\";\n        Alerts.SuccessNormal(variable);\n        props.history.push(\"/customer/dashboard\");\n      } else if (response.data.code === 0) {\n        setLoading(false);\n        console.log(response.data.result);\n        Alerts.ErrorNormal(\"Incorrect OTP, please try again.\");\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  }; //setotp\n\n\n  const setOtp = () => {\n    setDisplay(false);\n  }; //get OTP\n\n\n  const getOtp = () => {\n    setDisplay(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    custDashboard: \"custDashboard\",\n    custUserId: userId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"declined\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email\n                  }),\n                  name: \"p_email\",\n                  placeholder: \"Enter email id\",\n                  ref: register({\n                    required: true,\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\"\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), errors.p_email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: [errors.p_email.message, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"declined\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: isPasswordShow ? \"text\" : \"password\",\n                  id: \"password\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_password\n                  }),\n                  onPaste: e => {\n                    e.preventDefault();\n                    return false;\n                  },\n                  placeholder: \"Enter Your Password\",\n                  name: \"p_password\",\n                  ref: register({\n                    required: true,\n                    pattern: {\n                      value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                      message: \"UPassword should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\"\n                    }\n                  }),\n                  autocomplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`,\n                  onClick: togglePasssword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), errors.p_password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.p_password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"declined\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onPaste: e => {\n                    e.preventDefault();\n                    return false;\n                  },\n                  type: isPasswordShow2 ? \"text\" : \"password\",\n                  id: \"password\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_confirm_password\n                  }),\n                  placeholder: \"Confirm Password\",\n                  name: \"p_confirm_password\",\n                  ref: register({\n                    required: true,\n                    validate: value => value === getValues(\"p_password\") || \"Password doesn't match.\"\n                  }),\n                  autocomplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`,\n                  onClick: togglePasssword2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), errors.p_confirm_password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.p_confirm_password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: [\"OTP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"declined\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_otp\n                  }),\n                  name: \"p_otp\",\n                  ref: register({\n                    required: true\n                  }),\n                  placeholder: \"Enter your OTP\",\n                  autocomplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), disabled ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n                  class: \"text-center\",\n                  children: [\"Note: OTP is valid for \", time, \" seconds.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(Spinner, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-6\",\n              children: show ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: disabled ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    onClick: () => setOtp(),\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  class: \"btn btn-success\",\n                  onClick: () => getOtp(\"otp\"),\n                  children: \"Get OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), disabled ? /*#__PURE__*/_jsxDEV(ResendOtp, {\n          setDisabled: setDisabled,\n          getTime: getTime,\n          email: email,\n          setLoad: setLoad,\n          setLoading: setLoading,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"Pzklbj7f9S1OBhDxoRAJzPGOR9I=\", false, function () {\n  return [useForm];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nconst Cancel = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/customer/dashboard\",\n      style: {\n        \"margin\": \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Cancel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangePassword\");\n$RefreshReg$(_c2, \"Cancel\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js"],"names":["useForm","React","useState","useEffect","axios","Link","Button","baseUrl","Layout","classNames","Alerts","Mandatory","ResendOtp","Spinner","ChangePassword","props","userId","window","localStorage","getItem","register","handleSubmit","errors","getValues","reset","loading","setLoading","isPasswordShow","setPasswordShow","isPasswordShow2","setPasswordShow2","disabled","setDisabled","show","setShow","display","setDisplay","time","setTime","load","setLoad","email","setEmail","getTime","timerOn","timer","remaining","s","setTimeout","togglePasssword","togglePasssword2","onSubmit","value","console","log","p_email","formData","FormData","append","JSON","parse","p_password","p_confirm_password","p_otp","method","url","data","then","response","code","SuccessNormal","ErrorNormal","catch","error","variable","history","push","result","setOtp","getOtp","required","pattern","message","e","preventDefault","validate","Cancel"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\n\n\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [time, setTime] = useState('')\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n    // console.log(\"get time\")\n\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(s)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      timer(60);\n    }\n  }\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoading(true)\n\n    setEmail(value.p_email)\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n\n\n    if (display) {\n      let formData = new FormData();\n      formData.append(\"email\", value.p_email);\n      formData.append(\"uid\", JSON.parse(userId));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/regenrateotp`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Please enter correct details\")\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n      return false\n    }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          console.log(response.data.result);\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  //setotp\n  const setOtp = () => {\n    setDisplay(false)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    setDisplay(true)\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter email id\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}{\" \"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"UPassword should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    autocomplete=\"off\"\n                  />\n\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    autocomplete=\"off\"\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              {\n                show ?\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_otp,\n                        })}\n                        name=\"p_otp\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter your OTP\"\n                        autocomplete=\"off\"\n                      />\n                      {\n                        disabled ? null\n                          :\n                          <small class=\"text-center\">\n                            Note: OTP is valid for {time} seconds.\n                          </small>\n                      }\n                    </div>\n                  </div>\n                  : null\n              }\n\n              {\n                loading ?\n                  <div class=\"col-md-12\">\n                    <Spinner color=\"primary\" />\n                  </div>\n                  :\n                  <div class=\"col-md-6\">\n                    {\n                      show ?\n                        <div>\n                          {\n                            disabled ? null\n                              :\n                              <>\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n                                <Cancel />\n                              </>\n                          }\n                        </div>\n                        :\n                        <>\n                          <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\n                          <Cancel />\n                        </>\n                    }\n                  </div>\n              }\n            </div>\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\n              :\n              null\n          }\n\n          <Mandatory />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n\n\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Cancel\n        </Button>\n      </Link>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}
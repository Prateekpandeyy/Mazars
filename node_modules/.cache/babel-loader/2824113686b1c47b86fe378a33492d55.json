{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\nimport AllQuery from \"./AllQuery\";\n\nfunction QueriesTab(props) {\n  _s();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\"\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\"\n  };\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n  useEffect(() => {\n    const AllQuery = () => {\n      axios.get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setAllQuery(res.data.result.length);\n        }\n      });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios.get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setPendingForAcceptence(res.data.result.length);\n        }\n      });\n    };\n\n    const getIncomplete = () => {\n      axios.get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setIncomplete(res.data.result.length);\n        }\n      });\n    };\n\n    const getComplete = () => {\n      axios.get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setcomplete(res.data.result.length);\n        }\n      });\n    };\n\n    const Declined = () => {\n      axios.get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`).then(res => {\n        console.log(res);\n\n        if (res.data.code === 1) {\n          setDeclined(res.data.result.length);\n        }\n      });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined();\n  }, []);\n\n  const updateTab = key => {\n    setTabIndex(key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    TLDashboard: \"TLDashboard\",\n    TLuserId: userid,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        selectedIndex: tabIndex,\n        onSelect: index => setTabIndex(index),\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          style: {\n            listStyleType: \"none\",\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            style: tabIndex == 0 ? myStyle2 : myStyle1,\n            children: [\"All Query (\", allQuery, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            style: tabIndex == 1 ? myStyle2 : myStyle1,\n            children: [\"Inprogress; Queries (\", incomplete, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            style: tabIndex == 2 ? myStyle2 : myStyle1,\n            children: [\"Pending For Acceptence (\", pendindForAccepttence, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            style: tabIndex == 3 ? myStyle2 : myStyle1,\n            children: [\"Pending for assignment (\", complete, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(AllQuery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(InCompleteData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(PendingForAcceptence, {\n            updateTab: updateTab\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(CompleteData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(DeclinedQuery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QueriesTab, \"bbv/emu627l8apcQZ8mpWKSFQX0=\");\n\n_c = QueriesTab;\nexport default QueriesTab; // const CountPendingForAcceptence = (data) => {\n//   setPendingForAcceptence(data);\n// };\n// const CountIncomplete = (data) => {\n//   setIncomplete(data);\n// };\n// const CountComplete = (data) => {\n//   setComplete(data);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"QueriesTab\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js"],"names":["React","useState","useEffect","useLayoutEffect","Tab","Tabs","TabList","TabPanel","Layout","axios","baseUrl","PendingForAcceptence","InCompleteData","CompleteData","DeclinedQuery","AllQuery","QueriesTab","props","userid","window","localStorage","getItem","tabIndex","setTabIndex","pendindForAccepttence","setPendingForAcceptence","incomplete","setIncomplete","complete","setcomplete","allQuery","setAllQuery","declined","setDeclined","myStyle1","backgroundColor","padding","borderRadius","width","textAlign","color","cursor","myStyle2","location","index","get","JSON","parse","then","res","console","log","data","code","result","length","getPendindForAccepttence","getIncomplete","getComplete","Declined","updateTab","key","listStyleType","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\nimport AllQuery from \"./AllQuery\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const AllQuery = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setAllQuery(res.data.result.length);\n          }\n        });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setPendingForAcceptence(res.data.result.length);\n          }\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const Declined = () => {\n      axios\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setDeclined(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined()\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Query ({allQuery})\n            </Tab>\n           \n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries ({incomplete})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Pending For Acceptence ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n            Pending for assignment ({complete})\n            </Tab>\n            {/* <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab> */}\n          </TabList>\n\n\n          <TabPanel>\n            <AllQuery\n            />\n          </TabPanel>\n         \n          <TabPanel>\n            <InCompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <PendingForAcceptence\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <DeclinedQuery\n            />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingForAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };"]},"metadata":{},"sourceType":"module"}
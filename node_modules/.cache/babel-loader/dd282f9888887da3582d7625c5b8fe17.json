{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\";\nimport { professionName, country, states } from './data';\nimport { cities } from './city';\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport GetOTP from \"./GetOTP\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\nfunction SignUp(props) {\n  _s();\n\n  const phone2 = useRef(null);\n  const alert = useAlert();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    getValues\n  } = useForm();\n  const [display, setDisplay] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [store, setStore] = useState(0);\n  const [password, setPassword] = useState(false);\n  const [passError, setpassError] = useState();\n  const [repassword, setRepassword] = useState(false);\n  const [show, setShow] = useState(false);\n  const [changeNum, setChangeNum] = useState(false);\n  const [State, setState] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState('');\n  const [showPlus, setShowPlus] = useState(false);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [valiEmail, setValiemail] = useState(null);\n  const [invalid, setInvalid] = useState(null);\n  const [numExist, setNumExist] = useState(null);\n  const [numAvail, setNumAvail] = useState(null);\n  const [countryName, setCountryName] = useState(null);\n  const [stateName, setStateName] = useState(null);\n  const [countryId, setCountryId] = useState(null);\n  const [indNumError, setIndNumError] = useState(null);\n  const [zipCode, setZipCode] = useState('');\n  const [zipError, setZipError] = useState(null);\n  const [wEmail, setWemail] = useState();\n  const [time, setTime] = useState('');\n  const [disabled, setDisabled] = useState(false);\n  const [valiOtp, setvaliOtp] = useState();\n  const [emailError, setEmailError] = useState(null);\n  const [phoneError, setPhoneError] = useState(null);\n  const [zipError1, setZipError1] = useState(null);\n  const [subm, setSub] = useState(false);\n  const [loading, setLoading] = useState(false); //Css\n\n  const CountryNumStyle = {\n    \"display\": \"flex\",\n    \"width\": \"76px\",\n    \"textAlign\": \"center\"\n  }; // cusSub\n\n  const cusSub = {\n    \"display\": \"flex\",\n    \"alignItems\": \"center\"\n  }; // Toggle Password\n\n  const togglePasssword = () => {\n    setPassword(!password);\n  };\n\n  const togglePasssword2 = () => {\n    setRepassword(!repassword);\n  };\n\n  useEffect(() => {\n    getTime();\n  }, [load]);\n\n  const getTime = () => {\n    console.log(\"get time\");\n\n    if (load) {\n      var timerOn = true;\n\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(s);\n        remaining -= 1;\n\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n\n        setDisabled(true); // setDisplay(false)\n      }\n\n      timer(60);\n    }\n  }; //get country\n\n\n  const getcountry = key => {\n    setCountryName(key);\n    setShowPlus(true);\n    setPhone(\"\");\n    setIndNumError(\"\");\n    setNumAvail(\"\"); // setInvalid(\"\")\n\n    if (key == 101) {\n      setCountryId(key);\n    } else {\n      setCountryId(\"\");\n    }\n\n    var arrayState = [];\n    states.filter(data => {\n      if (data.country_id == key) {\n        arrayState.push(data);\n      }\n    });\n    setState(arrayState);\n    country.filter(data => {\n      if (key == data.id) {\n        setCountryCode(data.phoneCode);\n        setCountryName(data.name);\n      }\n    });\n  }; //get city\n\n\n  const getCity = key => {\n    states.filter(p => {\n      if (p.id == key) {\n        setStateName(p.name);\n      }\n    });\n    var arrayCity = [];\n    cities.filter(data => {\n      if (data.state_id === key) {\n        arrayCity.push(data);\n      }\n    });\n    setCity(arrayCity);\n  }; //eamil onchange\n\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length);\n\n    if (e.target.value.length < 1) {\n      setWemail(\"\");\n    }\n  }; //email validaation with api\n\n\n  const emailValidation = key => {\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      setEmailError(false);\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"resEmail-\", response);\n\n        if (response.data.code === 1) {\n          setValiemail(response.data.result);\n          setInvalid('');\n          setEmailError(false);\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result);\n          setValiemail('');\n          setEmailError(true);\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    } else {\n      setEmailError(true);\n      setWemail(\"invalid email\");\n    }\n  }; //phone onchange\n\n\n  const phoneHandler = e => {\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\");\n      setNumAvail(\"\");\n      setNumExist('Please enter number only');\n      e.target.value = \"\";\n      setPhone(\"\");\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value);\n    }\n  }; //phone validaation with api\n\n\n  const phoneValidation = () => {\n    setPhoneError(false);\n    console.log(phone.length);\n\n    if (countryId && phone.length > 10) {\n      console.log(phone.length);\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setIndNumError(\"Maximum 10 value should be enter\");\n      setPhoneError(true);\n    } else if (countryId && phone.length < 10) {\n      console.log(phone.length);\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setIndNumError(\"Minimum 10 value should be enter\");\n      setPhoneError(true);\n    } else if (!countryId && phone.length > 15) {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhoneError(true);\n      setIndNumError(\"Maximum 15 value should be enter\");\n    } else {\n      setPhoneError(false);\n      setIndNumError(\"\");\n      console.log(countryId);\n      let formData = new FormData();\n      formData.append(\"phone\", phone);\n      formData.append(\"type\", 2);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          // setValiphone(response.data.result)\n          console.log(response.data.result);\n          setPhoneError(false);\n          setNumExist('');\n          setNumAvail(response.data.result);\n        } else if (response.data.code === 0) {\n          setPhoneError(true);\n          console.log(response.data.result);\n          setNumAvail('');\n          setNumExist(response.data.result);\n          console.log(\"mobile\" + setNumExist);\n        }\n      }).catch(error => {// console.log(\"erroror - \", error);\n      });\n    }\n  }; //zip oncahnge\n\n\n  const zipValue = e => {\n    console.log(\"zipValue\", e.target.value.length);\n\n    if (isNaN(e.target.value)) {\n      setZipError(\"Please enter number only\");\n      setZipError1(true);\n      e.target.value = \"\";\n    } else if (e.target.value.length == 0) {\n      setZipError1(true);\n    } else {\n      setZipCode(e.target.value);\n      setZipError(\"\");\n      setZipError1(false);\n    }\n  }; // onblur\n\n\n  const zipVali2 = e => {\n    if (countryId && zipCode && zipCode.length < 6) {\n      setZipError1(true);\n      setZipError(\"Minumum 6 digit should be there\");\n      console.log(zipCode.length);\n    } else if (countryId && zipCode && zipCode.length > 6) {\n      setZipError1(true);\n      setZipError(\"Maximum 6 digit allowed\");\n      console.log(zipCode.length);\n    } else {\n      setZipError1(false);\n    }\n  };\n\n  const otpVali = e => {\n    if (isNaN(e.target.value)) {\n      setvaliOtp(\"Please enter number only\");\n      e.target.value = \"\";\n    } else {\n      setvaliOtp(\"\");\n    }\n  };\n\n  const onSubmit = value => {\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"city\", value.p_city);\n    formData.append(\"pincode\", value.p_zipCode);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n    formData.append(\"country\", countryName);\n    formData.append(\"state\", stateName);\n    formData.append(\"stdcode\", countryCode);\n\n    if (display === true && subm === false) {\n      setLoading(true);\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"phone\", phone);\n      formData.append(\"p\", \"registration\");\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/forgototp`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          setLoading(false);\n          setLoad(true);\n          setShow(true);\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\");\n        } else if (response.data.code === 0) {\n          setLoading(false);\n          Alerts.ErrorNormal(\"Error\");\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    } else if (emailError === false && phoneError === false && zipError1 === false && subm === true) {\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/signup`,\n        data: formData\n      }).then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          setLoading(false);\n          var variable = \"Signup successfully.\";\n          Alerts.SuccessNormal(variable);\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n          localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\n          props.history.push(\"/customer/select-category\");\n        } else if (response.data.code === 0) {\n          setLoading(false);\n          console.log(\"res -\", response.data.result);\n          setLoad(false);\n          Alerts.ErrorNormal(\"Incorrect OTP , please try again.\");\n        }\n      }).catch(error => {\n        console.log(\"erroror - \", error);\n      });\n    }\n  }; //setotp\n\n\n  const setOtp = () => {\n    setSub(true);\n  }; //get OTP\n\n\n  const getOtp = () => {\n    if (emailError === true || phoneError === true || zipError1 === true) {\n      setDisplay(false);\n    } else {\n      setDisplay(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cust_sign: \"cust_sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Customer Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              autocomplete: \"off\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"p_name\",\n                      ref: register({\n                        required: true\n                      }),\n                      placeholder: \"Enter Name\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_name\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 473,\n                        columnNumber: 58\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"p_email\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email || emailError === true || wEmail || invalid\n                      }),\n                      onChange: e => emailHandler(e),\n                      onBlur: emailValidation,\n                      placeholder: \"Enter Your Password\",\n                      ref: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 23\n                    }, this), wEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: wEmail\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 34\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: valiEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"completed\",\n                        children: valiEmail\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"declined\",\n                        children: invalid\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Occupation/ Profession\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 75\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_profession\n                      }),\n                      name: \"p_profession\",\n                      \"aria-label\": \"Default select example\",\n                      ref: register({\n                        required: true\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 510,\n                        columnNumber: 25\n                      }, this), professionName.map((p, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: p.city,\n                        children: p.city\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Country\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 60\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"state\",\n                      name: \"p_country\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_country\n                      }),\n                      ref: register({\n                        required: true\n                      }),\n                      onChange: e => getcountry(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 25\n                      }, this), country.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: p.id,\n                        children: p.name\n                      }, p.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"State\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 546,\n                        columnNumber: 58\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"state\",\n                      name: \"p_state\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_state\n                      }),\n                      ref: register({\n                        required: true\n                      }),\n                      onChange: e => getCity(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 25\n                      }, this), State.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: p.id,\n                        children: p.name\n                      }, p.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"City\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 569,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_city\n                      }),\n                      name: \"p_city\",\n                      ref: register({\n                        required: true\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 25\n                      }, this), city.map((p, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: p.city,\n                        children: p.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Mobile number\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 66\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mobNumber\",\n                      style: {\n                        \"display\": \"flex\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                        name: \"p_code\",\n                        disabled: true,\n                        ref: register({\n                          required: true\n                        }),\n                        children: /*#__PURE__*/_jsxDEV(\"option\", {\n                          children: showPlus ? \"+\" + countryCode : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 596,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 591,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone || phoneError === true || indNumError\n                        }),\n                        name: \"p_phone\",\n                        value: phone,\n                        ref: register({\n                          required: true\n                        }),\n                        placeholder: \"Mobile number\",\n                        onChange: e => phoneHandler(e),\n                        onBlur: phoneValidation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 23\n                    }, this), indNumError ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: indNumError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 38\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: numAvail ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"completed\",\n                        children: [\" \", numAvail]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"declined\",\n                        children: numExist\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Zipcode\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 60\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_zipCode || zipError1 === true || zipError\n                      }),\n                      name: \"p_zipCode\",\n                      ref: register({\n                        required: true\n                      }),\n                      placeholder: \"Enter Zipcode\",\n                      onChange: e => zipValue(e),\n                      onBlur: zipVali2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"declined\",\n                    children: zipError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: password ? \"text\" : \"password\",\n                      onCopy: e => {\n                        e.preventDefault();\n                        return false;\n                      },\n                      onPaste: e => {\n                        e.preventDefault();\n                        return false;\n                      },\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_password || passError\n                      }),\n                      name: \"p_password\",\n                      placeholder: \"Enter Your Password\",\n                      ref: register({\n                        required: true,\n                        pattern: {\n                          value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                          message: \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\"\n                        }\n                      }),\n                      autocomplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`,\n                      onClick: togglePasssword\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 674,\n                      columnNumber: 23\n                    }, this), errors.p_password && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.p_password.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 688,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: repassword ? \"text\" : \"password\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_confirm_password\n                      }),\n                      onCopy: e => {\n                        e.preventDefault();\n                        return false;\n                      },\n                      onPaste: e => {\n                        e.preventDefault();\n                        return false;\n                      },\n                      placeholder: \"Confirm Password\",\n                      name: \"p_confirm_password\",\n                      ref: register({\n                        required: true,\n                        validate: value => value === getValues(\"p_password\") || \"password doesn 't match\"\n                      }),\n                      autocomplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`,\n                      onClick: togglePasssword2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 23\n                    }, this), errors.p_confirm_password && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: errors.p_confirm_password.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 19\n                }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: [\"OTP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"declined\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 728,\n                        columnNumber: 60\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_otp\n                      }),\n                      name: \"p_otp\",\n                      ref: register({\n                        required: true\n                      }),\n                      onChange: otpVali,\n                      placeholder: \"Enter your OTP\",\n                      autocomplete: \"off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"declined\",\n                      children: [\" \", valiOtp ? valiOtp : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 27\n                    }, this), disabled ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n                      class: \"text-center\",\n                      children: [\"Note: OTP is valid for \", time, \" seconds.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-12\",\n                  style: cusSub,\n                  children: /*#__PURE__*/_jsxDEV(Spinner, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-6\",\n                  style: cusSub,\n                  children: show ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: disabled ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      onClick: () => setOtp(),\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    class: \"btn btn-success\",\n                    onClick: () => getOtp(\"otp\"),\n                    children: \"SEND OTP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), disabled ? /*#__PURE__*/_jsxDEV(ResendOtp, {\n              setDisabled: setDisabled,\n              getTime: getTime,\n              email: email,\n              phone: phone,\n              setLoad: setLoad,\n              invalid: invalid,\n              indNumError: indNumError,\n              wEmail: wEmail,\n              zipError: zipError,\n              passError: passError,\n              setLoading: setLoading,\n              loading: loading,\n              display: display,\n              emailError: emailError,\n              phoneError: phoneError,\n              zipError1: zipError1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUp, \"6+/IgFauUdVpyp/MqJnmnEW16hQ=\", false, function () {\n  return [useAlert, useForm];\n});\n\n_c = SignUp;\nexport default SignUp; // import React, { useState, useEffect, useRef } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import Header from \"../../components/Header/Header\";\n// import Footer from \"../../components/Footer/Footer\";\n// import axios from \"axios\";\n// import { baseUrl } from \"../../config/config\";\n// import { useAlert } from \"react-alert\";\n// import classNames from \"classnames\";\n// import { Spinner } from \"reactstrap\";\n// import { professionName, country, states } from './data';\n// import { cities } from './city';\n// import Alerts from \"../../common/Alerts\";\n// import ResendOtp from \"./ResendOtp\";\n// import Mandatory from \"../../components/Common/Mandatory\";\n// import { ContactsOutlined } from \"@material-ui/icons\";\n// function SignUp(props) {\n//   const phone2 = useRef(null)\n//   const alert = useAlert();\n//   const { handleSubmit, register, errors, getValues } = useForm();\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [display, setDisplay] = useState(false);\n//   const [otpMsg, setOtpMsg] = useState();\n//   const [load, setLoad] = useState(false);\n//   const [store, setStore] = useState(0);\n//   const [password, setPassword] = useState(false);\n//   const [passError, setpassError] = useState()\n//   const [repassword, setRepassword] = useState(false);\n//   const [show, setShow] = useState(false);\n//   const [changeNum, setChangeNum] = useState(false)\n//   const [State, setState] = useState([]);\n//   const [city, setCity] = useState([]);\n//   const [countryCode, setCountryCode] = useState('')\n//   const [showPlus, setShowPlus] = useState(false)\n//   const [email, setEmail] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [valiEmail, setValiemail] = useState(null)\n//   const [numExist, setNumExist] = useState(null)\n//   const [numAvail, setNumAvail] = useState(null)\n//   const [countryName, setCountryName] = useState(null)\n//   const [stateName, setStateName] = useState(null)\n//   const [countryId, setCountryId] = useState(null)\n//   const [indNumError, setIndNumError] = useState(null)\n//   const [zipCode, setZipCode] = useState('')\n//   const [zipError, setZipError] = useState(null)\n//   const [passData1, setPassData1] = useState([])\n//   const [wEmail, setWemail] = useState();\n//   const [time, setTime] = useState('')\n//   const [disabled, setDisabled] = useState(false)\n//   const [valiOtp, setvaliOtp] = useState()\n//   const [loading, setLoading] = useState(false);\n//   const [invalid, setInvalid] = useState(null)\n//   const [emailRegistred, setEmailRegisterd] = useState(null)\n//   //Css\n//   const CountryNumStyle = {\n//     \"display\": \"flex\",\n//     \"width\": \"76px\",\n//     \"textAlign\": \"center\"\n//   }\n//   // cusSub\n//   const cusSub = {\n//     \"display\": \"flex\",\n//     \"alignItems\": \"center\"\n//   }\n//   // Toggle Password\n//   const togglePasssword = () => {\n//     setPassword(!password)\n//   };\n//   const togglePasssword2 = () => {\n//     setRepassword(!repassword)\n//   };\n//   useEffect(() => {\n//     getTime()\n//   }, [load]);\n//   const getTime = () => {\n//     console.log(\"get time\")\n//     if (load) {\n//       var timerOn = true;\n//       function timer(remaining) {\n//         var s = remaining % 60;\n//         s = s < 10 ? '0' + s : s;\n//         setTime(s)\n//         remaining -= 1;\n//         if (remaining >= 0 && timerOn) {\n//           setTimeout(function () {\n//             timer(remaining);\n//           }, 1000);\n//           return;\n//         }\n//         setDisabled(true)\n//       }\n//       timer(60);\n//     }\n//   }\n//   //get country\n//   const getcountry = (key) => {\n//     setCountryName(key)\n//     setShowPlus(true)\n//     setPhone(\"\")\n//     setIndNumError(\"\")\n//     setNumAvail(\"\")\n//     setInvalid(\"\")\n//     if (key == 101) {\n//       setCountryId(key)\n//     }\n//     else {\n//       setCountryId(\"\")\n//     }\n//     var arrayState = []\n//     states.filter((data) => {\n//       if (data.country_id == key) {\n//         arrayState.push(data)\n//       }\n//     });\n//     setState(arrayState)\n//     country.filter((data) => {\n//       if (key == data.id) {\n//         setCountryCode(data.phoneCode)\n//         setCountryName(data.name)\n//       }\n//     })\n//   };\n//   //get city\n//   const getCity = (key) => {\n//     states.filter((p) => {\n//       if (p.id == key) {\n//         setStateName(p.name)\n//       }\n//     });\n//     var arrayCity = []\n//     cities.filter((data) => {\n//       if (data.state_id === key) {\n//         arrayCity.push(data)\n//       }\n//     });\n//     setCity(arrayCity)\n//   }\n//   //eamil onchange\n//   const emailHandler = (e) => {\n//     setEmail(e.target.value);\n//     console.log(e.target.value.length)\n//     if (e.target.value.length < 1) {\n//       setWemail(\"\")\n//     }\n//   };\n//   //email validaation with api\n//   const emailValidation = (key) => {\n//     var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     if (email.match(validRegex)) {\n//       setWemail(\"\");\n//       let formData = new FormData();\n//       formData.append(\"email\", email);\n//       formData.append(\"type\", 1);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"resEmail-\", response);\n//           if (response.data.code === 1) {\n//             setValiemail(response.data.result)\n//             setInvalid('')\n//           } else if (response.data.code === 0) {\n//             console.log(\"response.data.result\")\n//             setInvalid(response.data.result)\n//             setValiemail('')\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n//     else {\n//       setWemail(\"Invalid email\")\n//     }\n//   }\n//   //phone onchange\n//   const phoneHandler = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setIndNumError(\"\")\n//       setNumAvail(\"\");\n//       setNumExist('Please enter number only.')\n//       e.target.value = \"\"\n//       setPhone(\"\")\n//     }\n//     else {\n//       setNumAvail(\"\");\n//       setNumExist(\"\");\n//       setPhone(e.target.value)\n//     }\n//   };\n//   //phone validaation with api\n//   const phoneValidation = () => {\n//     console.log(phone.length)\n//     if (countryId && phone.length > 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Enter 10 digit mobile number.\")\n//     }\n//     else if (countryId && phone.length < 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Enter 10 digit mobile number.\")\n//     }\n//     else if (!countryId && phone.length > 15) {\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 15 value should be enter\")\n//     }\n//     else {\n//       setIndNumError(\"\")\n//       console.log(countryId)\n//       let formData = new FormData();\n//       formData.append(\"phone\", phone);\n//       formData.append(\"type\", 2);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res-\", response);\n//           if (response.data.code === 1) {\n//             // setValiphone(response.data.result)\n//             console.log(response.data.result)\n//             setNumExist('')\n//             setNumAvail(response.data.result);\n//           }\n//           else if (response.data.code === 0) {\n//             console.log(response.data.result)\n//             setNumAvail('')\n//             setNumExist(response.data.result)\n//             console.log(\"mobile\" + setNumExist)\n//           }\n//         })\n//         .catch((error) => {\n//           // console.log(\"erroror - \", error);\n//         });\n//     }\n//   }\n//   //zip oncahnge\n//   const zipValue = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setZipError(\"Please enter number only.\")\n//       e.target.value = \"\"\n//     }\n//     else {\n//       setZipCode(e.target.value)\n//       setZipError(\"\")\n//     }\n//   }\n//   // onblur\n//   const zipVali2 = (e) => {\n//     if (countryId && zipCode && zipCode.length < 6) {\n//       setZipError(\"Enter 6 digit zip code\")\n//       console.log(zipCode.length)\n//     }\n//     else if (countryId && zipCode && zipCode.length > 6) {\n//       setZipError(\"Enter 6 digit zip code\")\n//       console.log(zipCode.length)\n//     }\n//   }\n//   const otpVali = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setvaliOtp(\"Please enter number only.\")\n//       e.target.value = \"\"\n//     }\n//     else {\n//       setvaliOtp(\"\")\n//     }\n//   }\n//   //submit form\n//   const onSubmit = (value) => {\n//     console.log(\"value :\", value);\n//     // setLoading(true)\n//     let formData = new FormData();\n//     formData.append(\"name\", value.p_name);\n//     formData.append(\"email\", value.p_email);\n//     formData.append(\"phone\", value.p_phone);\n//     formData.append(\"occupation\", value.p_profession);\n//     formData.append(\"city\", value.p_city)\n//     formData.append(\"pincode\", value.p_zipCode);\n//     formData.append(\"password\", value.p_password);\n//     formData.append(\"rpassword\", value.p_confirm_password);\n//     formData.append(\"otp\", value.p_otp);\n//     formData.append(\"country\", countryName);\n//     formData.append(\"state\", stateName);\n//     formData.append(\"stdcode\", countryCode);\n//     if (display) {\n//       console.log(\"display\")\n//       if (invalid || wEmail || indNumError || zipError || passError) {\n//         console.log(\"call invalid\")\n//       }\n//       else {\n//         console.log(\"call else\")\n//         let formData = new FormData();\n//         formData.append(\"email\", email);\n//         formData.append(\"phone\", phone);\n//         formData.append(\"p\", \"registration\");\n//         axios({\n//           method: \"POST\",\n//           url: `${baseUrl}/customers/forgototp`,\n//           data: formData,\n//         })\n//           .then(function (response) {\n//             console.log(\"res-\", response);\n//             if (response.data.code === 1) {\n//               setLoading(false)\n//               setLoad(true)\n//               setShow(true)\n//               Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n//             } else if (response.data.code === 0) {\n//               setLoading(false)\n//               var err = response.data.message[0]\n//               Alerts.ErrorNormal(err)\n//             }\n//           })\n//           .catch((error) => {\n//             console.log(\"erroror - \", error);\n//           });\n//         return false\n//       }\n//     }\n//     if (invalid || wEmail || indNumError || zipError || passError) {\n//       console.log(\"call invalid\")\n//     }\n//     axios({\n//       method: \"POST\",\n//       url: `${baseUrl}/customers/signup`,\n//       data: formData,\n//     })\n//       .then(function (response) {\n//         console.log(\"res-\", response);\n//         if (response.data.code === 1) {\n//           setLoading(false)\n//           var variable = \"Signed up successfully.\"\n//           Alerts.SuccessNormal(variable)\n//           localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n//           localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\n//           props.history.push(\"/customer/select-category\");\n//         } else if (response.data.code === 0) {\n//           setLoading(false)\n//           console.log(\"res -\", response.data.result);\n//           Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"erroror - \", error);\n//       });\n//   };\n//   //setotp\n//   const setOtp = () => {\n//     setDisplay(false)\n//   }\n//   //get OTP\n//   const getOtp = () => {\n//     setDisplay(true)\n//   }\n//   return (\n//     <>\n//       <Header cust_sign=\"cust_sign\" />\n//       <div className=\"container\">\n//         <div className=\"form\">\n//           <div className=\"heading\">\n//             <h2>Customer Register</h2>\n//           </div>\n//           <>\n//             <div>\n//               <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n//                 <div className=\"row\">\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"p_name\"\n//                         ref={register({ required: true })}\n//                         placeholder=\"Enter Name\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_name,\n//                         })}\n//                       />\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"p_email\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_email || wEmail || invalid,\n//                         })}\n//                         onChange={(e) => emailHandler(e)}\n//                         onBlur={emailValidation}\n//                         placeholder=\"Enter Your Password\"\n//                         ref={register({ required: true })}\n//                       />\n//                       {\n//                         wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n//                           {valiEmail ?\n//                             <p className=\"completed\">\n//                               {valiEmail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{invalid}</p>}\n//                         </>\n//                       }\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\n//                       <br />\n//                       <select\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_profession,\n//                         })}\n//                         name=\"p_profession\"\n//                         aria-label=\"Default select example\"\n//                         ref={register({ required: true })}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {professionName.map((p, index) => (\n//                           <option key={index} value={p.city}>\n//                             {p.city}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\n//                       <select\n//                         id=\"state\"\n//                         name=\"p_country\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_country,\n//                         })}\n//                         ref={register({ required: true })}\n//                         onChange={(e) => getcountry(e.target.value)}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {country.map((p) => (\n//                           <option key={p.id} value={p.id}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">State<span className=\"declined\">*</span></label>\n//                       <select\n//                         id=\"state\"\n//                         name=\"p_state\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_state,\n//                         })}\n//                         ref={register({ required: true })}\n//                         onChange={(e) => getCity(e.target.value)}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {State.map((p) => (\n//                           <option key={p.id} value={p.id}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">City<span className=\"declined\">*</span></label>\n//                       <select\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_city,\n//                         })}\n//                         name=\"p_city\"\n//                         ref={register({ required: true })}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {city.map((p, index) => (\n//                           <option key={index} value={p.city}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\n//                       <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\n//                         <select\n//                           name=\"p_code\"\n//                           disabled={true}\n//                           ref={register({ required: true })}\n//                         >\n//                           <option>\n//                             {showPlus ? \"+\" + countryCode : null}\n//                           </option>\n//                         </select>\n//                         <input\n//                           type=\"text\"\n//                           className={classNames(\"form-control\", {\n//                             \"is-invalid\": errors.p_phone || indNumError,\n//                           })}\n//                           name=\"p_phone\"\n//                           value={phone}\n//                           ref={register({ required: true })}\n//                           placeholder=\"Mobile number\"\n//                           onChange={(e) => phoneHandler(e)}\n//                           onBlur={phoneValidation}\n//                         />\n//                       </div>\n//                       {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n//                         {\n//                           numAvail ?\n//                             <p className=\"completed\"> {numAvail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{numExist}</p>\n//                         }\n//                       </>}\n//                     </div>\n//                   </div>\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_zipCode || zipError,\n//                         })}\n//                         name=\"p_zipCode\"\n//                         ref={register({ required: true })}\n//                         placeholder=\"Enter Zipcode\"\n//                         onChange={(e) => zipValue(e)}\n//                         onBlur={zipVali2}\n//                       />\n//                     </div>\n//                     <p className=\"declined\">{zipError}</p>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n//                       <input\n//                         type={password ? \"text\" : \"password\"}\n//                         onCopy={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         onPaste={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_password || passError,\n//                         })}\n//                         name=\"p_password\"\n//                         placeholder=\"Enter Your Password\"\n//                         ref={register({\n//                           required: true,\n//                           pattern: {\n//                             value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n//                             message:\n//                               \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n//                           },\n//                         })}\n//                       />\n//                       <i\n//                         className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n//                         onClick={togglePasssword}\n//                       />\n//                       {errors.p_password && (\n//                         <div className=\"invalid-feedback\">\n//                           {errors.p_password.message}\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n//                   <div class=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n//                       <input\n//                         type={repassword ? \"text\" : \"password\"}\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_confirm_password,\n//                         })}\n//                         onCopy={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         onPaste={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         placeholder=\"Confirm Password\"\n//                         name=\"p_confirm_password\"\n//                         ref={register({\n//                           required: true,\n//                           validate: (value) =>\n//                             value === getValues(\"p_password\") ||\n//                             \"Password doesn't match.\",\n//                         })}\n//                       />\n//                       <i\n//                         className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n//                         onClick={togglePasssword2}\n//                       />\n//                       {errors.p_confirm_password && (\n//                         <div className=\"invalid-feedback\">\n//                           {errors.p_confirm_password.message}\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n//                   {\n//                     show ?\n//                       <div class=\"col-md-6\">\n//                         <div className=\"mb-3\">\n//                           <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n//                           <input\n//                             type=\"text\"\n//                             className={classNames(\"form-control\", {\n//                               \"is-invalid\": errors.p_otp,\n//                             })}\n//                             name=\"p_otp\"\n//                             ref={register({ required: true })}\n//                             onChange={otpVali}\n//                             placeholder=\"Enter your OTP\"\n//                             autocomplete=\"off\"\n//                           />\n//                           <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\n//                           {\n//                             disabled ? null\n//                               :\n//                               <small class=\"text-center\">\n//                                 Note: OTP is valid for {time} seconds.\n//                               </small>\n//                           }\n//                         </div>\n//                       </div>\n//                       : null\n//                   }\n// {\n//   loading ?\n//     <div class=\"col-md-12\" style={cusSub}>\n//       <Spinner color=\"primary\" />\n//     </div>\n//     :\n//                       <div class=\"col-md-12\">\n//                         {\n//                           show ?\n//                             <div>\n//                               {\n//                                 disabled ? null\n//                                   :\n//                                   <div>\n//                                     <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n//                                   </div>\n//                               }\n//                             </div>\n//                             :\n//                             <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\n//                         }\n//                       </div>\n//                   }\n//                 </div>\n//               </form>\n//               {\n//                 disabled ?\n//                   <ResendOtp setDisabled={setDisabled} getTime={getTime}\n//                     email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\n//                     wEmail={wEmail} zipError={zipError} passError={passError}\n//                     setLoading={setLoading} loading={loading} />\n//                   :\n//                   null\n//               }\n//               <Mandatory />\n//             </div>\n//           </>\n//         </div>\n//       </div>\n//       <Footer />\n//     </>\n//   );\n// }\n// export default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js"],"names":["React","useState","useEffect","useRef","useForm","Header","Footer","axios","baseUrl","useAlert","classNames","Spinner","professionName","country","states","cities","Alerts","ResendOtp","GetOTP","Mandatory","SignUp","props","phone2","alert","handleSubmit","register","errors","getValues","display","setDisplay","load","setLoad","store","setStore","password","setPassword","passError","setpassError","repassword","setRepassword","show","setShow","changeNum","setChangeNum","State","setState","city","setCity","countryCode","setCountryCode","showPlus","setShowPlus","email","setEmail","phone","setPhone","valiEmail","setValiemail","invalid","setInvalid","numExist","setNumExist","numAvail","setNumAvail","countryName","setCountryName","stateName","setStateName","countryId","setCountryId","indNumError","setIndNumError","zipCode","setZipCode","zipError","setZipError","wEmail","setWemail","time","setTime","disabled","setDisabled","valiOtp","setvaliOtp","emailError","setEmailError","phoneError","setPhoneError","zipError1","setZipError1","subm","setSub","loading","setLoading","CountryNumStyle","cusSub","togglePasssword","togglePasssword2","getTime","console","log","timerOn","timer","remaining","s","setTimeout","getcountry","key","arrayState","filter","data","country_id","push","id","phoneCode","name","getCity","p","arrayCity","state_id","emailHandler","e","target","value","length","emailValidation","validRegex","match","formData","FormData","append","method","url","then","response","code","result","catch","error","phoneHandler","isNaN","phoneValidation","zipValue","zipVali2","otpVali","onSubmit","p_name","p_email","p_phone","p_profession","p_city","p_zipCode","p_password","p_confirm_password","p_otp","SuccessNormal","ErrorNormal","variable","localStorage","setItem","JSON","stringify","user_id","history","setOtp","getOtp","required","map","index","p_country","p_state","preventDefault","pattern","message","validate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\";\nimport { professionName, country, states } from './data';\nimport { cities } from './city';\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport GetOTP from \"./GetOTP\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\n\n\n\nfunction SignUp(props) {\n  const phone2 = useRef(null)\n  const alert = useAlert();\n  const { handleSubmit, register, errors, getValues } = useForm();\n\n\n  const [display, setDisplay] = useState(false);\n\n  const [load, setLoad] = useState(false);\n  const [store, setStore] = useState(0);\n  const [password, setPassword] = useState(false);\n  const [passError, setpassError] = useState()\n  const [repassword, setRepassword] = useState(false);\n  const [show, setShow] = useState(false);\n  const [changeNum, setChangeNum] = useState(false)\n  const [State, setState] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState('')\n  const [showPlus, setShowPlus] = useState(false)\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [numExist, setNumExist] = useState(null)\n  const [numAvail, setNumAvail] = useState(null)\n  const [countryName, setCountryName] = useState(null)\n  const [stateName, setStateName] = useState(null)\n\n  const [countryId, setCountryId] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [zipCode, setZipCode] = useState('')\n  const [zipError, setZipError] = useState(null)\n\n  const [wEmail, setWemail] = useState();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [valiOtp, setvaliOtp] = useState()\n  const [emailError, setEmailError] = useState(null)\n  const [phoneError, setPhoneError] = useState(null)\n  const [zipError1, setZipError1] = useState(null);\n  const [subm, setSub] = useState(false)\n\n  const [loading, setLoading] = useState(false);\n\n  //Css\n  const CountryNumStyle = {\n    \"display\": \"flex\",\n    \"width\": \"76px\",\n    \"textAlign\": \"center\"\n  }\n  // cusSub\n  const cusSub = {\n    \"display\": \"flex\",\n    \"alignItems\": \"center\"\n  }\n  // Toggle Password\n  const togglePasssword = () => {\n    setPassword(!password)\n  };\n\n  const togglePasssword2 = () => {\n    setRepassword(!repassword)\n  };\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n    console.log(\"get time\")\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(s)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n        // setDisplay(false)\n      }\n      timer(60);\n    }\n  }\n\n  //get country\n  const getcountry = (key) => {\n    setCountryName(key)\n    setShowPlus(true)\n    setPhone(\"\")\n    setIndNumError(\"\")\n    setNumAvail(\"\")\n    // setInvalid(\"\")\n    if (key == 101) {\n      setCountryId(key)\n    }\n    else {\n      setCountryId(\"\")\n    }\n\n    var arrayState = []\n    states.filter((data) => {\n      if (data.country_id == key) {\n        arrayState.push(data)\n      }\n    });\n    setState(arrayState)\n\n    country.filter((data) => {\n      if (key == data.id) {\n        setCountryCode(data.phoneCode)\n        setCountryName(data.name)\n      }\n    })\n  };\n\n\n  //get city\n  const getCity = (key) => {\n    states.filter((p) => {\n      if (p.id == key) {\n        setStateName(p.name)\n      }\n    });\n\n    var arrayCity = []\n    cities.filter((data) => {\n      if (data.state_id === key) {\n        arrayCity.push(data)\n      }\n    });\n    setCity(arrayCity)\n  }\n\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    console.log(e.target.value.length)\n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      setEmailError(false)\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"resEmail-\", response);\n          if (response.data.code === 1) {\n            setValiemail(response.data.result)\n            setInvalid('')\n            setEmailError(false)\n          } else if (response.data.code === 0) {\n            setInvalid(response.data.result)\n            setValiemail('')\n            setEmailError(true)\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    else {\n      setEmailError(true)\n      setWemail(\"invalid email\")\n    }\n\n  }\n\n\n  //phone onchange\n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n      setPhoneError(true)\n    }\n    else {\n      setPhoneError(false)\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  //phone validaation with api\n  const phoneValidation = () => {\n    setPhoneError(false)\n    console.log(phone.length)\n    if (countryId && phone.length > 10) {\n      console.log(phone.length)\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 value should be enter\")\n      setPhoneError(true)\n    }\n    else if (countryId && phone.length < 10) {\n      console.log(phone.length)\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 value should be enter\")\n      setPhoneError(true)\n    }\n    else if (!countryId && phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setPhoneError(true)\n      setIndNumError(\"Maximum 15 value should be enter\")\n    }\n\n    else {\n      setPhoneError(false)\n      setIndNumError(\"\")\n      console.log(countryId)\n      let formData = new FormData();\n      formData.append(\"phone\", phone);\n      formData.append(\"type\", 2);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n            // setValiphone(response.data.result)\n            console.log(response.data.result)\n            setPhoneError(false)\n            setNumExist('')\n            setNumAvail(response.data.result);\n\n          }\n          else if (response.data.code === 0) {\n            setPhoneError(true)\n            console.log(response.data.result)\n            setNumAvail('')\n            setNumExist(response.data.result)\n\n            console.log(\"mobile\" + setNumExist)\n          }\n\n        })\n        .catch((error) => {\n          // console.log(\"erroror - \", error);\n        });\n    }\n  }\n\n\n\n  //zip oncahnge\n  const zipValue = (e) => {\n    console.log(\"zipValue\", e.target.value.length)\n    if (isNaN(e.target.value)) {\n\n      setZipError(\"Please enter number only\")\n      setZipError1(true)\n      e.target.value = \"\"\n    }\n    else if (e.target.value.length == 0) {\n      setZipError1(true)\n    }\n    else {\n      setZipCode(e.target.value)\n      setZipError(\"\")\n      setZipError1(false)\n    }\n  }\n\n\n  // onblur\n  const zipVali2 = (e) => {\n\n    if (countryId && zipCode && zipCode.length < 6) {\n      setZipError1(true)\n      setZipError(\"Minumum 6 digit should be there\")\n      console.log(zipCode.length)\n    }\n\n    else if (countryId && zipCode && zipCode.length > 6) {\n      setZipError1(true)\n      setZipError(\"Maximum 6 digit allowed\")\n      console.log(zipCode.length)\n    }\n    else {\n      setZipError1(false)\n    }\n  }\n\n\n\n  const otpVali = (e) => {\n    if (isNaN(e.target.value)) {\n      setvaliOtp(\"Please enter number only\")\n      e.target.value = \"\"\n    }\n    else {\n      setvaliOtp(\"\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n\n\n\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"city\", value.p_city)\n    formData.append(\"pincode\", value.p_zipCode);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n    formData.append(\"country\", countryName);\n    formData.append(\"state\", stateName);\n    formData.append(\"stdcode\", countryCode);\n\n    if (display === true && subm === false) {\n      setLoading(true)\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"phone\", phone);\n      formData.append(\"p\", \"registration\");\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/forgototp`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Error\")\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n\n    }\n    else if (emailError === false && phoneError === false && zipError1 === false && subm === true) {\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/signup`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response);\n          if (response.data.code === 1) {\n            setLoading(false)\n            var variable = \"Signup successfully.\"\n            Alerts.SuccessNormal(variable)\n            localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n            localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\n            props.history.push(\"/customer/select-category\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            console.log(\"res -\", response.data.result);\n            setLoad(false);\n            Alerts.ErrorNormal(\"Incorrect OTP , please try again.\")\n          }\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n  };\n\n\n  //setotp\n  const setOtp = () => {\n\n    setSub(true)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    if (emailError === true || phoneError === true || zipError1 === true) {\n      setDisplay(false)\n    }\n    else {\n      setDisplay(true)\n    }\n  }\n\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          <>\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_name\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Name\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email || emailError === true || wEmail || invalid,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={emailValidation}\n                        placeholder=\"Enter Your Password\"\n                        ref={register({ required: true })}\n                      />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      }\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\n                      <br />\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_profession,\n                        })}\n                        name=\"p_profession\"\n                        aria-label=\"Default select example\"\n                        ref={register({ required: true })}\n                      >\n                        <option value=\"\">--select--</option>\n                        {professionName.map((p, index) => (\n                          <option key={index} value={p.city}>\n                            {p.city}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\n                      <select\n                        id=\"state\"\n                        name=\"p_country\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_country,\n                        })}\n                        ref={register({ required: true })}\n                        onChange={(e) => getcountry(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        {country.map((p) => (\n                          <option key={p.id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">State<span className=\"declined\">*</span></label>\n                      <select\n                        id=\"state\"\n                        name=\"p_state\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_state,\n                        })}\n                        ref={register({ required: true })}\n                        onChange={(e) => getCity(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        {State.map((p) => (\n                          <option key={p.id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">City<span className=\"declined\">*</span></label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_city,\n                        })}\n                        name=\"p_city\"\n                        ref={register({ required: true })}\n                      >\n                        <option value=\"\">--select--</option>\n                        {city.map((p, index) => (\n                          <option key={index} value={p.city}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\n                      <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\n                        <select\n                          name=\"p_code\"\n                          disabled={true}\n                          ref={register({ required: true })}\n                        >\n                          <option>\n                            {showPlus ? \"+\" + countryCode : null}\n                          </option>\n                        </select>\n                        <input\n                          type=\"text\"\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_phone || phoneError === true || indNumError,\n                          })}\n                          name=\"p_phone\"\n                          value={phone}\n\n                          ref={register({ required: true })}\n                          placeholder=\"Mobile number\"\n                          onChange={(e) => phoneHandler(e)}\n                          onBlur={phoneValidation}\n                        />\n\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_zipCode || zipError1 === true || zipError,\n                        })}\n                        name=\"p_zipCode\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Zipcode\"\n                        onChange={(e) => zipValue(e)}\n                        onBlur={zipVali2}\n                      />\n                    </div>\n                    <p className=\"declined\">{zipError}</p>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={password ? \"text\" : \"password\"}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_password || passError,\n                        })}\n                        name=\"p_password\"\n                        placeholder=\"Enter Your Password\"\n                        ref={register({\n                          required: true,\n                          pattern: {\n                            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                            message:\n                              \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                          },\n                        })}\n\n                        autocomplete=\"off\"\n                      />\n                      <i\n                        className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.p_password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={repassword ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_confirm_password,\n                        })}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        placeholder=\"Confirm Password\"\n                        name=\"p_confirm_password\"\n                        ref={register({\n                          required: true,\n                          validate: (value) =>\n                            value === getValues(\"p_password\") ||\n                            \"password doesn 't match\",\n                        })}\n                        autocomplete=\"off\"\n                      />\n                      <i\n                        className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword2}\n                      />\n                      {errors.p_confirm_password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_confirm_password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {\n                    show ?\n                      <div class=\"col-md-6\">\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_otp,\n                            })}\n                            name=\"p_otp\"\n                            ref={register({ required: true })}\n                            onChange={otpVali}\n                            placeholder=\"Enter your OTP\"\n                            autocomplete=\"off\"\n                          />\n                          <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\n                          {\n                            disabled ? null\n                              :\n                              <small class=\"text-center\">\n                                Note: OTP is valid for {time} seconds.\n                              </small>\n                          }\n                        </div>\n                      </div>\n                      : null\n                  }\n                  {\n                    loading ?\n                      <div class=\"col-md-12\" style={cusSub}>\n                        <Spinner color=\"primary\" />\n                      </div>\n                      :\n                      <div class=\"col-md-6\" style={cusSub}>\n                        {\n                          show ?\n                            <div>\n                              {\n                                disabled ? null\n                                  :\n                                  <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n                              }\n                            </div>\n                            :\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\n                        }\n                      </div>\n                  }\n                </div>\n              </form>\n\n              {\n                disabled ?\n                  <ResendOtp setDisabled={setDisabled} getTime={getTime}\n                    email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\n                    wEmail={wEmail} zipError={zipError} passError={passError}\n                    setLoading={setLoading} loading={loading}\n                    display={display}\n                    emailError={emailError}\n                    phoneError={phoneError} zipError1={zipError1} />\n                  :\n                  null\n              }\n              <Mandatory />\n            </div>\n          </>\n\n        </div>\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignUp;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import Header from \"../../components/Header/Header\";\n// import Footer from \"../../components/Footer/Footer\";\n// import axios from \"axios\";\n// import { baseUrl } from \"../../config/config\";\n// import { useAlert } from \"react-alert\";\n// import classNames from \"classnames\";\n// import { Spinner } from \"reactstrap\";\n// import { professionName, country, states } from './data';\n// import { cities } from './city';\n// import Alerts from \"../../common/Alerts\";\n// import ResendOtp from \"./ResendOtp\";\n// import Mandatory from \"../../components/Common/Mandatory\";\n// import { ContactsOutlined } from \"@material-ui/icons\";\n\n\n\n\n// function SignUp(props) {\n//   const phone2 = useRef(null)\n//   const alert = useAlert();\n//   const { handleSubmit, register, errors, getValues } = useForm();\n//   const [inputValue, setInputValue] = useState(\"\");\n\n//   const [display, setDisplay] = useState(false);\n//   const [otpMsg, setOtpMsg] = useState();\n//   const [load, setLoad] = useState(false);\n//   const [store, setStore] = useState(0);\n//   const [password, setPassword] = useState(false);\n//   const [passError, setpassError] = useState()\n//   const [repassword, setRepassword] = useState(false);\n//   const [show, setShow] = useState(false);\n//   const [changeNum, setChangeNum] = useState(false)\n//   const [State, setState] = useState([]);\n//   const [city, setCity] = useState([]);\n//   const [countryCode, setCountryCode] = useState('')\n//   const [showPlus, setShowPlus] = useState(false)\n//   const [email, setEmail] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [valiEmail, setValiemail] = useState(null)\n\n//   const [numExist, setNumExist] = useState(null)\n//   const [numAvail, setNumAvail] = useState(null)\n//   const [countryName, setCountryName] = useState(null)\n//   const [stateName, setStateName] = useState(null)\n\n//   const [countryId, setCountryId] = useState(null)\n//   const [indNumError, setIndNumError] = useState(null)\n//   const [zipCode, setZipCode] = useState('')\n//   const [zipError, setZipError] = useState(null)\n//   const [passData1, setPassData1] = useState([])\n//   const [wEmail, setWemail] = useState();\n//   const [time, setTime] = useState('')\n//   const [disabled, setDisabled] = useState(false)\n//   const [valiOtp, setvaliOtp] = useState()\n//   const [loading, setLoading] = useState(false);\n\n//   const [invalid, setInvalid] = useState(null)\n//   const [emailRegistred, setEmailRegisterd] = useState(null)\n\n\n//   //Css\n//   const CountryNumStyle = {\n//     \"display\": \"flex\",\n//     \"width\": \"76px\",\n//     \"textAlign\": \"center\"\n//   }\n//   // cusSub\n//   const cusSub = {\n//     \"display\": \"flex\",\n//     \"alignItems\": \"center\"\n//   }\n//   // Toggle Password\n//   const togglePasssword = () => {\n//     setPassword(!password)\n//   };\n\n//   const togglePasssword2 = () => {\n//     setRepassword(!repassword)\n//   };\n\n//   useEffect(() => {\n//     getTime()\n//   }, [load]);\n\n\n//   const getTime = () => {\n//     console.log(\"get time\")\n//     if (load) {\n//       var timerOn = true;\n//       function timer(remaining) {\n//         var s = remaining % 60;\n//         s = s < 10 ? '0' + s : s;\n//         setTime(s)\n//         remaining -= 1;\n//         if (remaining >= 0 && timerOn) {\n//           setTimeout(function () {\n//             timer(remaining);\n//           }, 1000);\n//           return;\n//         }\n//         setDisabled(true)\n//       }\n//       timer(60);\n//     }\n//   }\n\n\n//   //get country\n//   const getcountry = (key) => {\n//     setCountryName(key)\n//     setShowPlus(true)\n//     setPhone(\"\")\n//     setIndNumError(\"\")\n//     setNumAvail(\"\")\n//     setInvalid(\"\")\n//     if (key == 101) {\n//       setCountryId(key)\n//     }\n//     else {\n//       setCountryId(\"\")\n//     }\n\n//     var arrayState = []\n//     states.filter((data) => {\n//       if (data.country_id == key) {\n//         arrayState.push(data)\n//       }\n//     });\n//     setState(arrayState)\n\n//     country.filter((data) => {\n//       if (key == data.id) {\n//         setCountryCode(data.phoneCode)\n//         setCountryName(data.name)\n//       }\n//     })\n//   };\n\n\n//   //get city\n//   const getCity = (key) => {\n//     states.filter((p) => {\n//       if (p.id == key) {\n//         setStateName(p.name)\n//       }\n//     });\n\n//     var arrayCity = []\n//     cities.filter((data) => {\n//       if (data.state_id === key) {\n//         arrayCity.push(data)\n//       }\n//     });\n//     setCity(arrayCity)\n//   }\n\n\n//   //eamil onchange\n//   const emailHandler = (e) => {\n//     setEmail(e.target.value);\n//     console.log(e.target.value.length)\n//     if (e.target.value.length < 1) {\n//       setWemail(\"\")\n//     }\n//   };\n\n\n//   //email validaation with api\n//   const emailValidation = (key) => {\n\n//     var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     if (email.match(validRegex)) {\n//       setWemail(\"\");\n//       let formData = new FormData();\n//       formData.append(\"email\", email);\n//       formData.append(\"type\", 1);\n\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"resEmail-\", response);\n//           if (response.data.code === 1) {\n//             setValiemail(response.data.result)\n//             setInvalid('')\n//           } else if (response.data.code === 0) {\n//             console.log(\"response.data.result\")\n//             setInvalid(response.data.result)\n//             setValiemail('')\n//           }\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n//     else {\n//       setWemail(\"Invalid email\")\n//     }\n//   }\n\n\n//   //phone onchange\n//   const phoneHandler = (e) => {\n\n//     if (isNaN(e.target.value)) {\n//       setIndNumError(\"\")\n//       setNumAvail(\"\");\n//       setNumExist('Please enter number only.')\n//       e.target.value = \"\"\n//       setPhone(\"\")\n//     }\n//     else {\n//       setNumAvail(\"\");\n//       setNumExist(\"\");\n//       setPhone(e.target.value)\n//     }\n//   };\n\n\n//   //phone validaation with api\n//   const phoneValidation = () => {\n//     console.log(phone.length)\n//     if (countryId && phone.length > 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Enter 10 digit mobile number.\")\n//     }\n//     else if (countryId && phone.length < 10) {\n//       console.log(phone.length)\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Enter 10 digit mobile number.\")\n//     }\n//     else if (!countryId && phone.length > 15) {\n//       setNumAvail(\"\")\n//       setNumExist(\"\")\n//       setIndNumError(\"Maximum 15 value should be enter\")\n//     }\n//     else {\n//       setIndNumError(\"\")\n//       console.log(countryId)\n//       let formData = new FormData();\n//       formData.append(\"phone\", phone);\n//       formData.append(\"type\", 2);\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/validateregistration`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res-\", response);\n//           if (response.data.code === 1) {\n//             // setValiphone(response.data.result)\n//             console.log(response.data.result)\n//             setNumExist('')\n//             setNumAvail(response.data.result);\n//           }\n//           else if (response.data.code === 0) {\n//             console.log(response.data.result)\n//             setNumAvail('')\n//             setNumExist(response.data.result)\n//             console.log(\"mobile\" + setNumExist)\n//           }\n\n//         })\n//         .catch((error) => {\n//           // console.log(\"erroror - \", error);\n//         });\n//     }\n//   }\n\n\n\n//   //zip oncahnge\n//   const zipValue = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setZipError(\"Please enter number only.\")\n//       e.target.value = \"\"\n//     }\n//     else {\n//       setZipCode(e.target.value)\n//       setZipError(\"\")\n//     }\n//   }\n\n\n//   // onblur\n//   const zipVali2 = (e) => {\n\n//     if (countryId && zipCode && zipCode.length < 6) {\n//       setZipError(\"Enter 6 digit zip code\")\n//       console.log(zipCode.length)\n//     }\n\n//     else if (countryId && zipCode && zipCode.length > 6) {\n//       setZipError(\"Enter 6 digit zip code\")\n//       console.log(zipCode.length)\n//     }\n//   }\n\n\n\n//   const otpVali = (e) => {\n//     if (isNaN(e.target.value)) {\n//       setvaliOtp(\"Please enter number only.\")\n//       e.target.value = \"\"\n//     }\n//     else {\n//       setvaliOtp(\"\")\n//     }\n//   }\n\n\n\n//   //submit form\n//   const onSubmit = (value) => {\n//     console.log(\"value :\", value);\n\n//     // setLoading(true)\n\n//     let formData = new FormData();\n//     formData.append(\"name\", value.p_name);\n//     formData.append(\"email\", value.p_email);\n//     formData.append(\"phone\", value.p_phone);\n//     formData.append(\"occupation\", value.p_profession);\n//     formData.append(\"city\", value.p_city)\n//     formData.append(\"pincode\", value.p_zipCode);\n//     formData.append(\"password\", value.p_password);\n//     formData.append(\"rpassword\", value.p_confirm_password);\n//     formData.append(\"otp\", value.p_otp);\n//     formData.append(\"country\", countryName);\n//     formData.append(\"state\", stateName);\n//     formData.append(\"stdcode\", countryCode);\n\n//     if (display) {\n//       console.log(\"display\")\n//       if (invalid || wEmail || indNumError || zipError || passError) {\n//         console.log(\"call invalid\")\n//       }\n//       else {\n//         console.log(\"call else\")\n//         let formData = new FormData();\n//         formData.append(\"email\", email);\n//         formData.append(\"phone\", phone);\n//         formData.append(\"p\", \"registration\");\n//         axios({\n//           method: \"POST\",\n//           url: `${baseUrl}/customers/forgototp`,\n//           data: formData,\n//         })\n//           .then(function (response) {\n//             console.log(\"res-\", response);\n//             if (response.data.code === 1) {\n//               setLoading(false)\n//               setLoad(true)\n//               setShow(true)\n//               Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n//             } else if (response.data.code === 0) {\n//               setLoading(false)\n//               var err = response.data.message[0]\n//               Alerts.ErrorNormal(err)\n//             }\n//           })\n//           .catch((error) => {\n//             console.log(\"erroror - \", error);\n//           });\n//         return false\n//       }\n//     }\n//     if (invalid || wEmail || indNumError || zipError || passError) {\n//       console.log(\"call invalid\")\n//     }\n//     axios({\n//       method: \"POST\",\n//       url: `${baseUrl}/customers/signup`,\n//       data: formData,\n//     })\n//       .then(function (response) {\n//         console.log(\"res-\", response);\n//         if (response.data.code === 1) {\n//           setLoading(false)\n//           var variable = \"Signed up successfully.\"\n//           Alerts.SuccessNormal(variable)\n//           localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n//           localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\n//           props.history.push(\"/customer/select-category\");\n//         } else if (response.data.code === 0) {\n//           setLoading(false)\n//           console.log(\"res -\", response.data.result);\n//           Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"erroror - \", error);\n//       });\n//   };\n\n\n//   //setotp\n//   const setOtp = () => {\n//     setDisplay(false)\n//   }\n\n\n//   //get OTP\n//   const getOtp = () => {\n//     setDisplay(true)\n//   }\n\n\n//   return (\n//     <>\n//       <Header cust_sign=\"cust_sign\" />\n//       <div className=\"container\">\n\n//         <div className=\"form\">\n//           <div className=\"heading\">\n//             <h2>Customer Register</h2>\n//           </div>\n//           <>\n//             <div>\n//               <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n//                 <div className=\"row\">\n//                   <div className=\"col-md-6\">\n\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"p_name\"\n//                         ref={register({ required: true })}\n//                         placeholder=\"Enter Name\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_name,\n//                         })}\n//                       />\n//                     </div>\n//                   </div>\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"p_email\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_email || wEmail || invalid,\n//                         })}\n//                         onChange={(e) => emailHandler(e)}\n//                         onBlur={emailValidation}\n//                         placeholder=\"Enter Your Password\"\n//                         ref={register({ required: true })}\n//                       />\n//                       {\n//                         wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n//                           {valiEmail ?\n//                             <p className=\"completed\">\n//                               {valiEmail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{invalid}</p>}\n//                         </>\n//                       }\n//                     </div>\n//                   </div>\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\n//                       <br />\n//                       <select\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_profession,\n//                         })}\n//                         name=\"p_profession\"\n//                         aria-label=\"Default select example\"\n//                         ref={register({ required: true })}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {professionName.map((p, index) => (\n//                           <option key={index} value={p.city}>\n//                             {p.city}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\n//                       <select\n//                         id=\"state\"\n//                         name=\"p_country\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_country,\n//                         })}\n//                         ref={register({ required: true })}\n//                         onChange={(e) => getcountry(e.target.value)}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {country.map((p) => (\n//                           <option key={p.id} value={p.id}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">State<span className=\"declined\">*</span></label>\n//                       <select\n//                         id=\"state\"\n//                         name=\"p_state\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_state,\n//                         })}\n//                         ref={register({ required: true })}\n//                         onChange={(e) => getCity(e.target.value)}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {State.map((p) => (\n//                           <option key={p.id} value={p.id}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">City<span className=\"declined\">*</span></label>\n//                       <select\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_city,\n//                         })}\n//                         name=\"p_city\"\n//                         ref={register({ required: true })}\n//                       >\n//                         <option value=\"\">--select--</option>\n//                         {city.map((p, index) => (\n//                           <option key={index} value={p.city}>\n//                             {p.name}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                   </div>\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\n//                       <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\n//                         <select\n//                           name=\"p_code\"\n//                           disabled={true}\n//                           ref={register({ required: true })}\n//                         >\n//                           <option>\n//                             {showPlus ? \"+\" + countryCode : null}\n//                           </option>\n//                         </select>\n//                         <input\n//                           type=\"text\"\n//                           className={classNames(\"form-control\", {\n//                             \"is-invalid\": errors.p_phone || indNumError,\n//                           })}\n//                           name=\"p_phone\"\n//                           value={phone}\n\n//                           ref={register({ required: true })}\n//                           placeholder=\"Mobile number\"\n//                           onChange={(e) => phoneHandler(e)}\n//                           onBlur={phoneValidation}\n//                         />\n\n//                       </div>\n//                       {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n//                         {\n//                           numAvail ?\n//                             <p className=\"completed\"> {numAvail}\n//                             </p>\n//                             :\n//                             <p className=\"declined\">{numExist}</p>\n//                         }\n//                       </>}\n//                     </div>\n//                   </div>\n\n//                   <div className=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\n//                       <input\n//                         type=\"text\"\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_zipCode || zipError,\n//                         })}\n//                         name=\"p_zipCode\"\n//                         ref={register({ required: true })}\n//                         placeholder=\"Enter Zipcode\"\n//                         onChange={(e) => zipValue(e)}\n//                         onBlur={zipVali2}\n//                       />\n//                     </div>\n//                     <p className=\"declined\">{zipError}</p>\n//                   </div>\n\n//                   <div class=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n//                       <input\n//                         type={password ? \"text\" : \"password\"}\n//                         onCopy={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         onPaste={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_password || passError,\n//                         })}\n//                         name=\"p_password\"\n//                         placeholder=\"Enter Your Password\"\n//                         ref={register({\n//                           required: true,\n//                           pattern: {\n//                             value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n//                             message:\n//                               \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n//                           },\n//                         })}\n//                       />\n//                       <i\n//                         className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n//                         onClick={togglePasssword}\n//                       />\n//                       {errors.p_password && (\n//                         <div className=\"invalid-feedback\">\n//                           {errors.p_password.message}\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   <div class=\"col-md-6\">\n//                     <div className=\"mb-3\">\n//                       <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n//                       <input\n//                         type={repassword ? \"text\" : \"password\"}\n//                         className={classNames(\"form-control\", {\n//                           \"is-invalid\": errors.p_confirm_password,\n//                         })}\n//                         onCopy={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         onPaste={(e) => {\n//                           e.preventDefault();\n//                           return false\n//                         }}\n//                         placeholder=\"Confirm Password\"\n//                         name=\"p_confirm_password\"\n//                         ref={register({\n//                           required: true,\n//                           validate: (value) =>\n//                             value === getValues(\"p_password\") ||\n//                             \"Password doesn't match.\",\n//                         })}\n//                       />\n//                       <i\n//                         className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n//                         onClick={togglePasssword2}\n//                       />\n//                       {errors.p_confirm_password && (\n//                         <div className=\"invalid-feedback\">\n//                           {errors.p_confirm_password.message}\n//                         </div>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   {\n//                     show ?\n//                       <div class=\"col-md-6\">\n//                         <div className=\"mb-3\">\n//                           <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n//                           <input\n//                             type=\"text\"\n//                             className={classNames(\"form-control\", {\n//                               \"is-invalid\": errors.p_otp,\n//                             })}\n//                             name=\"p_otp\"\n//                             ref={register({ required: true })}\n//                             onChange={otpVali}\n//                             placeholder=\"Enter your OTP\"\n//                             autocomplete=\"off\"\n//                           />\n//                           <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\n//                           {\n//                             disabled ? null\n//                               :\n//                               <small class=\"text-center\">\n//                                 Note: OTP is valid for {time} seconds.\n//                               </small>\n//                           }\n//                         </div>\n//                       </div>\n//                       : null\n//                   }\n\n                  // {\n                  //   loading ?\n                  //     <div class=\"col-md-12\" style={cusSub}>\n                  //       <Spinner color=\"primary\" />\n                  //     </div>\n                  //     :\n//                       <div class=\"col-md-12\">\n//                         {\n//                           show ?\n//                             <div>\n//                               {\n//                                 disabled ? null\n//                                   :\n//                                   <div>\n//                                     <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n//                                   </div>\n//                               }\n//                             </div>\n//                             :\n//                             <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\n//                         }\n//                       </div>\n//                   }\n//                 </div>\n//               </form>\n\n//               {\n//                 disabled ?\n//                   <ResendOtp setDisabled={setDisabled} getTime={getTime}\n//                     email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\n//                     wEmail={wEmail} zipError={zipError} passError={passError}\n//                     setLoading={setLoading} loading={loading} />\n//                   :\n//                   null\n//               }\n//               <Mandatory />\n//             </div>\n//           </>\n\n//         </div>\n\n//       </div>\n//       <Footer />\n//     </>\n//   );\n// }\n\n// export default SignUp;\n"]},"metadata":{},"sourceType":"module"}
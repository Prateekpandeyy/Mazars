{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\nimport Loader from \"../../components/Loader/Loader\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getPaymentStatus\n}) {\n  _s();\n\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const {\n    assign_id,\n    amount,\n    accepted_amount,\n    paid_amount,\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n    amount_type,\n    amount_fixed,\n    amount_hourly\n  } = pay;\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"id\", assign_id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setLoading(false);\n        var variable = \"Payment made successfully.\";\n        Alerts.SuccessNormal(variable);\n        getPaymentStatus();\n        paymentHandler();\n      } else if (response.data.code === 0) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  };\n\n  const installAmount = data => {\n    var item = data.split(',');\n    console.log(\"item\", item);\n    const dataItem = item.map((p, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: CommonServices.removeTime(p)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false));\n    return dataItem;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: addPaymentModal,\n      toggle: paymentHandler,\n      size: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: paymentHandler,\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Accepted Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: accepted_amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Paid Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: paid_amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: \"Payment Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), payment_terms == \"lumpsum\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Due Dates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: CommonServices.removeTime(due_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this) : payment_terms == \"installment\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Installment Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Due Dates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: installAmount(installment_amount)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: installAmount(due_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 27\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: +accepted_amount == +paid_amount ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"p_amount\",\n                  ref: register,\n                  className: \"form-control\",\n                  defaultValue: accepted_amount - paid_amount,\n                  placeholder: \"enter amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"modal-footer\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentModal, \"C4rg0Nu0PwSDm4wRb9TgHEuXRAU=\", false, function () {\n  return [useForm, useAlert, useHistory];\n});\n\n_c = PaymentModal;\nexport default PaymentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentModal\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js"],"names":["React","useState","useEffect","Modal","ModalHeader","ModalBody","ModalFooter","useForm","axios","baseUrl","useAlert","useHistory","Alerts","CommonServices","Loader","PaymentModal","addPaymentModal","paymentHandler","pay","getPaymentStatus","handleSubmit","register","alert","history","assign_id","amount","accepted_amount","paid_amount","payment_terms","no_of_installment","installment_amount","due_date","amount_type","amount_fixed","amount_hourly","loading","setLoading","onSubmit","value","console","log","formData","FormData","append","p_amount","method","url","data","then","response","code","variable","SuccessNormal","catch","error","installAmount","item","split","dataItem","map","p","i","removeTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getPaymentStatus,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { assign_id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"id\", assign_id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Payment made successfully.\"\n          Alerts.SuccessNormal(variable)\n          getPaymentStatus();\n          paymentHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n    console.log(\"item\", item);\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Accepted Amount</th>\n                    <td>{accepted_amount}</td>\n                  </tr>\n                  <tr>\n                    <th>Paid Amount</th>\n                    <td>{paid_amount}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Payment Terms</th>\n                    {\n                      payment_terms == \"lumpsum\" ?\n                        <td>\n                          <tr>\n\n                            <th>Due Dates</th>\n                          </tr>\n                          <tr>\n                            <td>\n                              {CommonServices.removeTime(due_date)}\n                            </td>\n                          </tr>\n                        </td>\n                        :\n                        payment_terms == \"installment\" ?\n                          <td>\n                            <tr>\n                              <th>Installment Amount</th>\n                              <th>Due Dates</th>\n                            </tr>\n                            <tr>\n                              <td>{installAmount(installment_amount)}</td>\n                              <td>{installAmount(due_date)}</td>\n                            </tr>\n                          </td>\n                          :\n                          \"\"\n                    }\n                  </tr>\n\n                </table>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  {+accepted_amount == +paid_amount ? null : (\n                    <div>\n                      <div className=\"mb-3\">\n                        <input\n                          type=\"text\"\n                          name=\"p_amount\"\n                          ref={register}\n                          className=\"form-control\"\n                          defaultValue={accepted_amount - paid_amount}\n                          placeholder=\"enter amount\"\n                        />\n                      </div>\n                      <div class=\"modal-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                          Pay\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </form>\n              </ModalBody>\n            </>\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Spinner } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\")\n});\n\nfunction ForgetPassword(props) {\n  _s();\n\n  console.log(\"props : \", props.location.email);\n  const alert = useAlert();\n  const {\n    handleSubmit,\n    register,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(Schema)\n  });\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = value => {\n    console.log(\"value :\", value);\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"p\", \"forgot\");\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData\n    }).then(function (response) {\n      console.log(\"res-\", response);\n\n      if (response.data.code === 1) {\n        setLoading(false);\n        Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\");\n        props.history.push(`/customer/new-password/${value.p_email}`);\n      } else if (response.data.code === 0) {\n        setLoading(false);\n        console.log(response.data.result);\n        Alerts.ErrorNormal(\"Invalid email.\");\n      }\n    }).catch(error => {\n      console.log(\"erroror - \", error);\n    });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email;\n\n    if (item == \"undefined\") {\n      console.log(\"item : \", item);\n    } else {\n      return item;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cust_sign: \"cust_sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"declined\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: classNames(\"form-control\", {\n                \"is-invalid\": errors.p_email\n              }),\n              name: \"p_email\",\n              ref: register,\n              placeholder: \"Enter Email\",\n              defaultValue: valueHandler()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), errors.p_email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: errors.p_email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Get OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              \"margin\": \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Mandatory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForgetPassword, \"bR8/nkD0zLXIrvuESmDdpJy+nBg=\", false, function () {\n  return [useAlert, useForm];\n});\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n{\n  /* <Link\n            to={{\n              pathname: `/customer/new-password`,\n              email:`${value.p_email}`\n            }}\n          ></Link>; */\n} // const sendEmail = (email) => {\n//   return (\n//     <Link\n//       to={{\n//         pathname: `/customer/new-password`,\n//         email: `${email}`,\n//       }}\n//     ></Link>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js"],"names":["useForm","React","useState","useEffect","Header","Footer","axios","baseUrl","useAlert","yupResolver","yup","Spinner","classNames","Link","Alerts","Mandatory","Schema","object","shape","p_email","string","email","required","ForgetPassword","props","console","log","location","alert","handleSubmit","register","reset","errors","resolver","loading","setLoading","onSubmit","value","formData","FormData","append","method","url","data","then","response","code","SuccessNormal","history","push","result","ErrorNormal","catch","error","valueHandler","item","message"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Spinner } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\n\nfunction ForgetPassword(props) {\n  console.log(\"props : \", props.location.email);\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"p\", \"forgot\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n          props.history.push(`/customer/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          console.log(response.data.result);\n          Alerts.ErrorNormal(\"Invalid email.\")\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"undefined\") {\n      console.log(\"item : \", item)\n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Get OTP\n                </button>\n                <Link to=\"/\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </Link>\n              </form>\n          }\n          <Mandatory />\n        </div>\n\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n\n\n\n\n\n{\n  /* <Link\n            to={{\n              pathname: `/customer/new-password`,\n              email:`${value.p_email}`\n            }}\n          ></Link>; */\n}\n\n  // const sendEmail = (email) => {\n  //   return (\n  //     <Link\n  //       to={{\n  //         pathname: `/customer/new-password`,\n  //         email: `${email}`,\n  //       }}\n  //     ></Link>\n  //   );\n  // };\n"]},"metadata":{},"sourceType":"module"}
[{"/home/pooja/MazarsRepo/src/index.js":"1","/home/pooja/MazarsRepo/src/App.js":"2","/home/pooja/MazarsRepo/src/reportWebVitals.js":"3","/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js":"4","/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js":"5","/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js":"6","/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js":"7","/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js":"8","/home/pooja/MazarsRepo/src/views/Login/Login.js":"9","/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js":"10","/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js":"11","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js":"12","/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js":"13","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js":"14","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js":"15","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js":"16","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js":"17","/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js":"18","/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js":"19","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js":"20","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js":"21","/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js":"22","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js":"23","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js":"24","/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js":"25","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js":"26","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js":"27","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js":"28","/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js":"29","/home/pooja/MazarsRepo/src/views/Message/Message.js":"30","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js":"31","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js":"32","/home/pooja/MazarsRepo/src/views/Contact/Contact.js":"33","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js":"34","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js":"35","/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js":"36","/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js":"37","/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js":"38","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js":"39","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"40","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js":"41","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"42","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js":"43","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js":"44","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"45","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js":"46","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js":"47","/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js":"48","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"49","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"50","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js":"51","/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js":"52","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js":"53","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js":"54","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js":"55","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js":"56","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js":"57","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js":"58","/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js":"59","/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js":"60","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js":"61","/home/pooja/MazarsRepo/src/pages/Admin/Report/ReportList.js":"62","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js":"63","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js":"64","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js":"65","/home/pooja/MazarsRepo/src/pages/Admin/Report/Consalation.js":"66","/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js":"67","/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js":"68","/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js":"69","/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js":"70","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js":"71","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js":"72","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"73","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"74","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js":"75","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js":"76","/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js":"77","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js":"78","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js":"79","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js":"80","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js":"81","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js":"82","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"83","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js":"84","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js":"85","/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js":"86","/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js":"87","/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js":"88","/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js":"89","/home/pooja/MazarsRepo/src/components/Layout/Layout.js":"90","/home/pooja/MazarsRepo/src/config/config.js":"91","/home/pooja/MazarsRepo/src/common/common.js":"92","/home/pooja/MazarsRepo/src/common/Alerts.js":"93","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js":"94","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js":"95","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js":"96","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js":"97","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js":"98","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js":"99","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js":"100","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js":"101","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js":"102","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js":"103","/home/pooja/MazarsRepo/src/components/Common/Mandatory.js":"104","/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js":"105","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js":"106","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"107","/home/pooja/MazarsRepo/src/components/Loader/Loader.js":"108","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js":"109","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js":"110","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js":"111","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js":"112","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js":"113","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js":"114","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js":"115","/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js":"116","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js":"117","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js":"118","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js":"119","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js":"120","/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js":"121","/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js":"122","/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js":"123","/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js":"124","/home/pooja/MazarsRepo/src/components/Records/Records.js":"125","/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js":"126","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js":"127","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js":"128","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js":"129","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js":"130","/home/pooja/MazarsRepo/src/pages/Admin/Report/ConsaltSearch.js":"131","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js":"132","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js":"133","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js":"134","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js":"135","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js":"136","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js":"137","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js":"138","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js":"139","/home/pooja/MazarsRepo/src/components/Footer/Footer.js":"140","/home/pooja/MazarsRepo/src/components/Header/Header.js":"141","/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js":"142","/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js":"143","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js":"144","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js":"145","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js":"146","/home/pooja/MazarsRepo/src/pages/Admin/Recording/RecordingEdit.js":"147","/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js":"148","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js":"149","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js":"150","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js":"151","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js":"152","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js":"153","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js":"154","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js":"155","/home/pooja/MazarsRepo/src/components/commonShowProposal/CommonShowProposal.js":"156","/home/pooja/MazarsRepo/src/config/http/http-common.js":"157","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js":"158","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js":"159","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js":"160","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js":"161","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js":"162","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js":"163","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js":"164","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js":"165","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js":"166","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js":"167","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js":"168","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js":"169","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js":"170","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js":"171","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js":"172","/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx":"173","/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js":"174","/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js":"175","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js":"176","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"177","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"178","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js":"179","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"180","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js":"181","/home/pooja/MazarsRepo/src/views/Schedule/demo.js":"182","/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js":"183","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js":"184","/home/pooja/MazarsRepo/src/components/InputRoom/index.js":"185","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js":"186","/home/pooja/MazarsRepo/src/components/meeting/index.jsx":"187","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js":"188","/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js":"189","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/ShowProposal.js":"190","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/RetviewModal.js":"191","/home/pooja/MazarsRepo/src/agora.config.js":"192","/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx":"193","/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js":"194","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx":"195","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js":"196","/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js":"197","/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js":"198","/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js":"199","/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js":"200","/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js":"201","/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js":"202","/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js":"203","/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js":"204","/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js":"205","/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js":"206","/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js":"207","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js":"208","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js":"209","/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js":"210","/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js":"211","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js":"212","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js":"213","/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js":"214","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js":"215","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js":"216","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js":"217","/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js":"218","/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js":"219","/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js":"220","/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js":"221","/home/pooja/MazarsRepo/src/views/SignUpForm/city.js":"222","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js":"223","/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js":"224","/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js":"225","/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js":"226","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js":"227","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js":"228","/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js":"229","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js":"230","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js":"231","/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js":"232","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js":"233","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js":"234","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js":"235","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js":"236","/home/pooja/MazarsRepo/src/pages/TP/Recording/RecordingEdit.js":"237","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js":"238","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js":"239","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js":"240","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js":"241","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js":"242","/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx":"243","/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js":"244","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js":"245","/home/pooja/MazarsRepo/src/views/ModalManual/ModalManual.js":"246","/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js":"247","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js":"248","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js":"249","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js":"250","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js":"251","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js":"252","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js":"253","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js":"254","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js":"255","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js":"256","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js":"257","/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"258","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js":"259","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js":"260","/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js":"261","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js":"262","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js":"263","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js":"264","/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js":"265","/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js":"266","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js":"267","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js":"268","/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js":"269","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js":"270","/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js":"271","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js":"272","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js":"273","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js":"274","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js":"275","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js":"276","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js":"277","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js":"278","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js":"279","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js":"280","/home/pooja/MazarsRepo/src/views/ModalManual/RegistrationInfo.js":"281","/home/pooja/MazarsRepo/src/views/ModalManual/RegError.js":"282","/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js":"283","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js":"284","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js":"285","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js":"286","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js":"287","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx":"288","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js":"289","/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js":"290","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js":"291","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js":"292","/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js":"293","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js":"294","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js":"295","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js":"296","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js":"297","/home/pooja/MazarsRepo/src/pages/TL/Recording/RecordingEdit.js":"298","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js":"299","/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js":"300","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js":"301","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js":"302","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js":"303","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js":"304","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js":"305","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js":"306","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx":"307","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js":"308","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js":"309","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js":"310","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js":"311","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js":"312","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx":"313","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js":"314","/home/pooja/MazarsRepo/src/views/ModalManual/Query.js":"315","/home/pooja/MazarsRepo/src/views/ModalManual/QueryProcessing.js":"316","/home/pooja/MazarsRepo/src/views/ModalManual/Proposal.js":"317","/home/pooja/MazarsRepo/src/views/ModalManual/Assignment.js":"318","/home/pooja/MazarsRepo/src/views/ModalManual/Payment.js":"319","/home/pooja/MazarsRepo/src/views/ModalManual/Scheduler.js":"320","/home/pooja/MazarsRepo/src/views/ModalManual/Feedback.js":"321","/home/pooja/MazarsRepo/src/views/ModalManual/Content.js":"322","/home/pooja/MazarsRepo/src/views/ModalManual/Login.js":"323","/home/pooja/MazarsRepo/src/views/About/About.js":"324","/home/pooja/MazarsRepo/src/views/About/AboutOuter.js":"325","/home/pooja/MazarsRepo/src/views/Contact/ContactOuter.js":"326","/home/pooja/MazarsRepo/src/views/ModalManual/AllComponentManual.js":"327"},{"size":548,"mtime":1643095558423,"results":"328","hashOfConfig":"329"},{"size":20444,"mtime":1643667783554,"results":"330","hashOfConfig":"329"},{"size":362,"mtime":1643095558495,"results":"331","hashOfConfig":"329"},{"size":803,"mtime":1643100561653,"results":"332","hashOfConfig":"329"},{"size":787,"mtime":1643100561653,"results":"333","hashOfConfig":"329"},{"size":782,"mtime":1643095558383,"results":"334","hashOfConfig":"329"},{"size":209,"mtime":1643095558411,"results":"335","hashOfConfig":"329"},{"size":2226,"mtime":1643100561657,"results":"336","hashOfConfig":"329"},{"size":7237,"mtime":1643118377196,"results":"337","hashOfConfig":"329"},{"size":25957,"mtime":1643687818423,"results":"338","hashOfConfig":"329"},{"size":8615,"mtime":1643124823748,"results":"339","hashOfConfig":"329"},{"size":10893,"mtime":1643100561733,"results":"340","hashOfConfig":"329"},{"size":1149,"mtime":1643095558583,"results":"341","hashOfConfig":"329"},{"size":3857,"mtime":1643100561749,"results":"342","hashOfConfig":"329"},{"size":3912,"mtime":1643100561745,"results":"343","hashOfConfig":"329"},{"size":4024,"mtime":1643100561729,"results":"344","hashOfConfig":"329"},{"size":18922,"mtime":1643605621221,"results":"345","hashOfConfig":"329"},{"size":3774,"mtime":1643100561733,"results":"346","hashOfConfig":"329"},{"size":13730,"mtime":1643128641731,"results":"347","hashOfConfig":"329"},{"size":9481,"mtime":1643100561741,"results":"348","hashOfConfig":"329"},{"size":355,"mtime":1643100561753,"results":"349","hashOfConfig":"329"},{"size":332,"mtime":1643100561741,"results":"350","hashOfConfig":"329"},{"size":10905,"mtime":1643100561733,"results":"351","hashOfConfig":"329"},{"size":669,"mtime":1643100561749,"results":"352","hashOfConfig":"329"},{"size":2512,"mtime":1643100561753,"results":"353","hashOfConfig":"329"},{"size":6309,"mtime":1643126500123,"results":"354","hashOfConfig":"329"},{"size":4578,"mtime":1643126280492,"results":"355","hashOfConfig":"329"},{"size":21682,"mtime":1643605660349,"results":"356","hashOfConfig":"329"},{"size":2900,"mtime":1643100561733,"results":"357","hashOfConfig":"329"},{"size":6713,"mtime":1643131187585,"results":"358","hashOfConfig":"329"},{"size":2830,"mtime":1643100561745,"results":"359","hashOfConfig":"329"},{"size":9444,"mtime":1643128736388,"results":"360","hashOfConfig":"329"},{"size":856,"mtime":1643164993422,"results":"361","hashOfConfig":"329"},{"size":15049,"mtime":1643100561741,"results":"362","hashOfConfig":"329"},{"size":610,"mtime":1643100561753,"results":"363","hashOfConfig":"329"},{"size":441,"mtime":1643095558447,"results":"364","hashOfConfig":"329"},{"size":6712,"mtime":1643100561673,"results":"365","hashOfConfig":"329"},{"size":4297,"mtime":1643100561677,"results":"366","hashOfConfig":"329"},{"size":12836,"mtime":1643100561669,"results":"367","hashOfConfig":"329"},{"size":18577,"mtime":1643100561665,"results":"368","hashOfConfig":"329"},{"size":11558,"mtime":1643100561681,"results":"369","hashOfConfig":"329"},{"size":8527,"mtime":1643634514012,"results":"370","hashOfConfig":"329"},{"size":3928,"mtime":1643634863189,"results":"371","hashOfConfig":"329"},{"size":24176,"mtime":1643100561669,"results":"372","hashOfConfig":"329"},{"size":2890,"mtime":1643100561677,"results":"373","hashOfConfig":"329"},{"size":3644,"mtime":1643100561669,"results":"374","hashOfConfig":"329"},{"size":7769,"mtime":1643634415155,"results":"375","hashOfConfig":"329"},{"size":22680,"mtime":1643100561673,"results":"376","hashOfConfig":"329"},{"size":7811,"mtime":1643100561681,"results":"377","hashOfConfig":"329"},{"size":8171,"mtime":1643100561681,"results":"378","hashOfConfig":"329"},{"size":4304,"mtime":1643100561673,"results":"379","hashOfConfig":"329"},{"size":7975,"mtime":1643100561677,"results":"380","hashOfConfig":"329"},{"size":644,"mtime":1643100561681,"results":"381","hashOfConfig":"329"},{"size":3455,"mtime":1643100561673,"results":"382","hashOfConfig":"329"},{"size":446,"mtime":1643100561673,"results":"383","hashOfConfig":"329"},{"size":5696,"mtime":1643100561681,"results":"384","hashOfConfig":"329"},{"size":2592,"mtime":1643100561681,"results":"385","hashOfConfig":"329"},{"size":6291,"mtime":1643682325642,"results":"386","hashOfConfig":"329"},{"size":8397,"mtime":1643100561681,"results":"387","hashOfConfig":"329"},{"size":7291,"mtime":1643635232659,"results":"388","hashOfConfig":"329"},{"size":5531,"mtime":1643100561685,"results":"389","hashOfConfig":"329"},{"size":4544,"mtime":1643100561681,"results":"390","hashOfConfig":"329"},{"size":8927,"mtime":1643100561673,"results":"391","hashOfConfig":"329"},{"size":2010,"mtime":1643100561673,"results":"392","hashOfConfig":"329"},{"size":441,"mtime":1643095558479,"results":"393","hashOfConfig":"329"},{"size":7695,"mtime":1643100561681,"results":"394","hashOfConfig":"329"},{"size":6387,"mtime":1643100561701,"results":"395","hashOfConfig":"329"},{"size":12520,"mtime":1643100561697,"results":"396","hashOfConfig":"329"},{"size":25891,"mtime":1643807867871,"results":"397","hashOfConfig":"329"},{"size":3454,"mtime":1643100561685,"results":"398","hashOfConfig":"329"},{"size":4817,"mtime":1643100561685,"results":"399","hashOfConfig":"329"},{"size":4795,"mtime":1643100561709,"results":"400","hashOfConfig":"329"},{"size":22475,"mtime":1643176386860,"results":"401","hashOfConfig":"329"},{"size":8855,"mtime":1643131437246,"results":"402","hashOfConfig":"329"},{"size":3645,"mtime":1643100561701,"results":"403","hashOfConfig":"329"},{"size":3956,"mtime":1643100561701,"results":"404","hashOfConfig":"329"},{"size":11437,"mtime":1643100561713,"results":"405","hashOfConfig":"329"},{"size":2822,"mtime":1643100561705,"results":"406","hashOfConfig":"329"},{"size":498,"mtime":1643095558475,"results":"407","hashOfConfig":"329"},{"size":3290,"mtime":1643100561697,"results":"408","hashOfConfig":"329"},{"size":4609,"mtime":1643100561713,"results":"409","hashOfConfig":"329"},{"size":17281,"mtime":1643687352372,"results":"410","hashOfConfig":"329"},{"size":18446,"mtime":1643100561665,"results":"411","hashOfConfig":"329"},{"size":9725,"mtime":1643100561705,"results":"412","hashOfConfig":"329"},{"size":4198,"mtime":1643100561745,"results":"413","hashOfConfig":"329"},{"size":15849,"mtime":1643706182898,"results":"414","hashOfConfig":"329"},{"size":15124,"mtime":1643706228175,"results":"415","hashOfConfig":"329"},{"size":17283,"mtime":1643706204122,"results":"416","hashOfConfig":"329"},{"size":2127,"mtime":1643100561741,"results":"417","hashOfConfig":"329"},{"size":1054,"mtime":1643100561657,"results":"418","hashOfConfig":"329"},{"size":809,"mtime":1643716580776,"results":"419","hashOfConfig":"329"},{"size":880,"mtime":1643095558399,"results":"420","hashOfConfig":"329"},{"size":2483,"mtime":1643100561653,"results":"421","hashOfConfig":"329"},{"size":4242,"mtime":1643100561701,"results":"422","hashOfConfig":"329"},{"size":9762,"mtime":1643165191159,"results":"423","hashOfConfig":"329"},{"size":21988,"mtime":1643168167834,"results":"424","hashOfConfig":"329"},{"size":21778,"mtime":1643168179646,"results":"425","hashOfConfig":"329"},{"size":16387,"mtime":1643687481118,"results":"426","hashOfConfig":"329"},{"size":23564,"mtime":1643168269967,"results":"427","hashOfConfig":"329"},{"size":18102,"mtime":1643165974596,"results":"428","hashOfConfig":"329"},{"size":17906,"mtime":1643165933356,"results":"429","hashOfConfig":"329"},{"size":15681,"mtime":1643165958264,"results":"430","hashOfConfig":"329"},{"size":3071,"mtime":1643100561653,"results":"431","hashOfConfig":"329"},{"size":296,"mtime":1643095558407,"results":"432","hashOfConfig":"329"},{"size":9392,"mtime":1643165266834,"results":"433","hashOfConfig":"329"},{"size":7616,"mtime":1643165207405,"results":"434","hashOfConfig":"329"},{"size":6955,"mtime":1643165228738,"results":"435","hashOfConfig":"329"},{"size":415,"mtime":1643095558411,"results":"436","hashOfConfig":"329"},{"size":4872,"mtime":1643100561661,"results":"437","hashOfConfig":"329"},{"size":2482,"mtime":1643100561729,"results":"438","hashOfConfig":"329"},{"size":3073,"mtime":1643100561745,"results":"439","hashOfConfig":"329"},{"size":2581,"mtime":1643100561697,"results":"440","hashOfConfig":"329"},{"size":2638,"mtime":1643100561705,"results":"441","hashOfConfig":"329"},{"size":7601,"mtime":1643100561697,"results":"442","hashOfConfig":"329"},{"size":2726,"mtime":1643100561705,"results":"443","hashOfConfig":"329"},{"size":15649,"mtime":1643701479129,"results":"444","hashOfConfig":"329"},{"size":3326,"mtime":1643100561697,"results":"445","hashOfConfig":"329"},{"size":3179,"mtime":1643100561697,"results":"446","hashOfConfig":"329"},{"size":4754,"mtime":1643095558475,"results":"447","hashOfConfig":"329"},{"size":20567,"mtime":1643701285517,"results":"448","hashOfConfig":"329"},{"size":1694,"mtime":1643100561657,"results":"449","hashOfConfig":"329"},{"size":2073,"mtime":1643100561653,"results":"450","hashOfConfig":"329"},{"size":446,"mtime":1643100561653,"results":"451","hashOfConfig":"329"},{"size":21397,"mtime":1643693817425,"results":"452","hashOfConfig":"329"},{"size":446,"mtime":1643100561661,"results":"453","hashOfConfig":"329"},{"size":14254,"mtime":1643165859238,"results":"454","hashOfConfig":"329"},{"size":14264,"mtime":1643165801037,"results":"455","hashOfConfig":"329"},{"size":14663,"mtime":1643165756387,"results":"456","hashOfConfig":"329"},{"size":16570,"mtime":1643165740483,"results":"457","hashOfConfig":"329"},{"size":4785,"mtime":1643100561701,"results":"458","hashOfConfig":"329"},{"size":5832,"mtime":1643100561681,"results":"459","hashOfConfig":"329"},{"size":6597,"mtime":1643100561673,"results":"460","hashOfConfig":"329"},{"size":10887,"mtime":1643100561673,"results":"461","hashOfConfig":"329"},{"size":1435,"mtime":1643100561661,"results":"462","hashOfConfig":"329"},{"size":5957,"mtime":1643100561661,"results":"463","hashOfConfig":"329"},{"size":2608,"mtime":1643100561661,"results":"464","hashOfConfig":"329"},{"size":2318,"mtime":1643100561657,"results":"465","hashOfConfig":"329"},{"size":1500,"mtime":1643100561657,"results":"466","hashOfConfig":"329"},{"size":5703,"mtime":1643164005716,"results":"467","hashOfConfig":"329"},{"size":1057,"mtime":1643692183836,"results":"468","hashOfConfig":"329"},{"size":3181,"mtime":1643100561657,"results":"469","hashOfConfig":"329"},{"size":12743,"mtime":1643700541210,"results":"470","hashOfConfig":"329"},{"size":4742,"mtime":1643100561661,"results":"471","hashOfConfig":"329"},{"size":1549,"mtime":1643100561673,"results":"472","hashOfConfig":"329"},{"size":1930,"mtime":1643100561685,"results":"473","hashOfConfig":"329"},{"size":4840,"mtime":1643100561661,"results":"474","hashOfConfig":"329"},{"size":3619,"mtime":1643100561681,"results":"475","hashOfConfig":"329"},{"size":727,"mtime":1643100561657,"results":"476","hashOfConfig":"329"},{"size":490,"mtime":1643095558419,"results":"477","hashOfConfig":"329"},{"size":2651,"mtime":1643100561661,"results":"478","hashOfConfig":"329"},{"size":3018,"mtime":1643100561697,"results":"479","hashOfConfig":"329"},{"size":4717,"mtime":1643100561653,"results":"480","hashOfConfig":"329"},{"size":22213,"mtime":1643174111349,"results":"481","hashOfConfig":"329"},{"size":1648,"mtime":1643095558471,"results":"482","hashOfConfig":"329"},{"size":6578,"mtime":1643100561661,"results":"483","hashOfConfig":"329"},{"size":867,"mtime":1643100561661,"results":"484","hashOfConfig":"329"},{"size":357,"mtime":1643709140999,"results":"485","hashOfConfig":"329"},{"size":17852,"mtime":1643100561673,"results":"486","hashOfConfig":"329"},{"size":2633,"mtime":1643100561665,"results":"487","hashOfConfig":"329"},{"size":1701,"mtime":1643100561653,"results":"488","hashOfConfig":"329"},{"size":1670,"mtime":1643100561681,"results":"489","hashOfConfig":"329"},{"size":1671,"mtime":1643100561681,"results":"490","hashOfConfig":"329"},{"size":14407,"mtime":1643100561681,"results":"491","hashOfConfig":"329"},{"size":15817,"mtime":1643683378192,"results":"492","hashOfConfig":"329"},{"size":15775,"mtime":1643683290457,"results":"493","hashOfConfig":"329"},{"size":18983,"mtime":1643683500919,"results":"494","hashOfConfig":"329"},{"size":14506,"mtime":1643636082099,"results":"495","hashOfConfig":"329"},{"size":14485,"mtime":1643636059551,"results":"496","hashOfConfig":"329"},{"size":14819,"mtime":1643636097031,"results":"497","hashOfConfig":"329"},{"size":2877,"mtime":1643100561669,"results":"498","hashOfConfig":"329"},{"size":6469,"mtime":1643623525151,"results":"499","hashOfConfig":"329"},{"size":4821,"mtime":1643100561673,"results":"500","hashOfConfig":"329"},{"size":2359,"mtime":1643100561685,"results":"501","hashOfConfig":"329"},{"size":6870,"mtime":1643635275751,"results":"502","hashOfConfig":"329"},{"size":5796,"mtime":1643634802873,"results":"503","hashOfConfig":"329"},{"size":6421,"mtime":1643624037189,"results":"504","hashOfConfig":"329"},{"size":10439,"mtime":1643635659033,"results":"505","hashOfConfig":"329"},{"size":9445,"mtime":1643635718577,"results":"506","hashOfConfig":"329"},{"size":10596,"mtime":1643635700649,"results":"507","hashOfConfig":"329"},{"size":11154,"mtime":1643635503412,"results":"508","hashOfConfig":"329"},{"size":1723,"mtime":1643100561733,"results":"509","hashOfConfig":"329"},{"size":7829,"mtime":1643100561749,"results":"510","hashOfConfig":"329"},{"size":1680,"mtime":1643100561733,"results":"511","hashOfConfig":"329"},{"size":1610,"mtime":1643100561741,"results":"512","hashOfConfig":"329"},{"size":1020,"mtime":1643100561657,"results":"513","hashOfConfig":"329"},{"size":2783,"mtime":1643100561749,"results":"514","hashOfConfig":"329"},{"size":2222,"mtime":1643100561665,"results":"515","hashOfConfig":"329"},{"size":6394,"mtime":1643100561669,"results":"516","hashOfConfig":"329"},{"size":14080,"mtime":1643701462861,"results":"517","hashOfConfig":"329"},{"size":870,"mtime":1643100561665,"results":"518","hashOfConfig":"329"},{"size":2869,"mtime":1643100561665,"results":"519","hashOfConfig":"329"},{"size":202,"mtime":1643100561653,"results":"520","hashOfConfig":"329"},{"size":22341,"mtime":1643100561653,"results":"521","hashOfConfig":"329"},{"size":2363,"mtime":1643100561685,"results":"522","hashOfConfig":"329"},{"size":31877,"mtime":1643100561665,"results":"523","hashOfConfig":"329"},{"size":6229,"mtime":1643100561665,"results":"524","hashOfConfig":"329"},{"size":794,"mtime":1643095558579,"results":"525","hashOfConfig":"329"},{"size":473,"mtime":1643100561729,"results":"526","hashOfConfig":"329"},{"size":13866,"mtime":1643706027285,"results":"527","hashOfConfig":"329"},{"size":13746,"mtime":1643706010628,"results":"528","hashOfConfig":"329"},{"size":11745,"mtime":1643705956792,"results":"529","hashOfConfig":"329"},{"size":11400,"mtime":1643705989196,"results":"530","hashOfConfig":"329"},{"size":13181,"mtime":1643706057453,"results":"531","hashOfConfig":"329"},{"size":12111,"mtime":1643706102153,"results":"532","hashOfConfig":"329"},{"size":19598,"mtime":1643706126954,"results":"533","hashOfConfig":"329"},{"size":19380,"mtime":1643706080281,"results":"534","hashOfConfig":"329"},{"size":11067,"mtime":1643705882223,"results":"535","hashOfConfig":"329"},{"size":9883,"mtime":1643705864167,"results":"536","hashOfConfig":"329"},{"size":16492,"mtime":1643705800950,"results":"537","hashOfConfig":"329"},{"size":21102,"mtime":1643790998080,"results":"538","hashOfConfig":"329"},{"size":5713,"mtime":1643100561653,"results":"539","hashOfConfig":"329"},{"size":2589,"mtime":1643100561749,"results":"540","hashOfConfig":"329"},{"size":321499,"mtime":1643100561753,"results":"541","hashOfConfig":"329"},{"size":5080,"mtime":1643100561737,"results":"542","hashOfConfig":"329"},{"size":1921,"mtime":1643100561721,"results":"543","hashOfConfig":"329"},{"size":3367,"mtime":1643100561657,"results":"544","hashOfConfig":"329"},{"size":779,"mtime":1643095558383,"results":"545","hashOfConfig":"329"},{"size":479,"mtime":1643095558383,"results":"546","hashOfConfig":"329"},{"size":474,"mtime":1643095558383,"results":"547","hashOfConfig":"329"},{"size":478,"mtime":1643095558383,"results":"548","hashOfConfig":"329"},{"size":532,"mtime":1643100561649,"results":"549","hashOfConfig":"329"},{"size":4599846,"mtime":1643095558651,"results":"550","hashOfConfig":"329"},{"size":7864,"mtime":1643171244358,"results":"551","hashOfConfig":"329"},{"size":11648,"mtime":1643100561729,"results":"552","hashOfConfig":"329"},{"size":8890,"mtime":1643100561725,"results":"553","hashOfConfig":"329"},{"size":2689,"mtime":1643095558495,"results":"554","hashOfConfig":"329"},{"size":346,"mtime":1643100561721,"results":"555","hashOfConfig":"329"},{"size":3966,"mtime":1643100561721,"results":"556","hashOfConfig":"329"},{"size":2362,"mtime":1643100561745,"results":"557","hashOfConfig":"329"},{"size":22458,"mtime":1643176436958,"results":"558","hashOfConfig":"329"},{"size":1045,"mtime":1643095558495,"results":"559","hashOfConfig":"329"},{"size":6168,"mtime":1643172080279,"results":"560","hashOfConfig":"329"},{"size":5906,"mtime":1643173219735,"results":"561","hashOfConfig":"329"},{"size":3291,"mtime":1643100561717,"results":"562","hashOfConfig":"329"},{"size":10567,"mtime":1643103279249,"results":"563","hashOfConfig":"329"},{"size":7096,"mtime":1643103302357,"results":"564","hashOfConfig":"329"},{"size":3297,"mtime":1643100561729,"results":"565","hashOfConfig":"329"},{"size":20808,"mtime":1643173119428,"results":"566","hashOfConfig":"329"},{"size":24853,"mtime":1643173107251,"results":"567","hashOfConfig":"329"},{"size":21530,"mtime":1643173128993,"results":"568","hashOfConfig":"329"},{"size":2125,"mtime":1643100561721,"results":"569","hashOfConfig":"329"},{"size":13343,"mtime":1643100561729,"results":"570","hashOfConfig":"329"},{"size":2246,"mtime":1643100561729,"results":"571","hashOfConfig":"329"},{"size":2780,"mtime":1643100561749,"results":"572","hashOfConfig":"329"},{"size":3427,"mtime":1643100561749,"results":"573","hashOfConfig":"329"},{"size":976,"mtime":1643780767521,"results":"574","hashOfConfig":"329"},{"size":7762,"mtime":1643100561733,"results":"575","hashOfConfig":"329"},{"size":2989,"mtime":1643100561733,"results":"576","hashOfConfig":"329"},{"size":22442,"mtime":1643174644022,"results":"577","hashOfConfig":"329"},{"size":2830,"mtime":1643100561725,"results":"578","hashOfConfig":"329"},{"size":2804,"mtime":1643100561721,"results":"579","hashOfConfig":"329"},{"size":9190,"mtime":1643100561721,"results":"580","hashOfConfig":"329"},{"size":12188,"mtime":1643100561717,"results":"581","hashOfConfig":"329"},{"size":5061,"mtime":1643100561717,"results":"582","hashOfConfig":"329"},{"size":32140,"mtime":1643687627864,"results":"583","hashOfConfig":"329"},{"size":527,"mtime":1643095558495,"results":"584","hashOfConfig":"329"},{"size":4807,"mtime":1643100561725,"results":"585","hashOfConfig":"329"},{"size":7985,"mtime":1643169147935,"results":"586","hashOfConfig":"329"},{"size":467,"mtime":1643095558495,"results":"587","hashOfConfig":"329"},{"size":4634,"mtime":1643100561725,"results":"588","hashOfConfig":"329"},{"size":6740,"mtime":1643100561721,"results":"589","hashOfConfig":"329"},{"size":8069,"mtime":1643100561709,"results":"590","hashOfConfig":"329"},{"size":1980,"mtime":1643100561709,"results":"591","hashOfConfig":"329"},{"size":7878,"mtime":1643164270650,"results":"592","hashOfConfig":"329"},{"size":8916,"mtime":1643100561713,"results":"593","hashOfConfig":"329"},{"size":424,"mtime":1643100561701,"results":"594","hashOfConfig":"329"},{"size":1047,"mtime":1643095558475,"results":"595","hashOfConfig":"329"},{"size":5949,"mtime":1643134359963,"results":"596","hashOfConfig":"329"},{"size":8034,"mtime":1643132121771,"results":"597","hashOfConfig":"329"},{"size":2749,"mtime":1643100561713,"results":"598","hashOfConfig":"329"},{"size":23844,"mtime":1643100561713,"results":"599","hashOfConfig":"329"},{"size":9062,"mtime":1643100561701,"results":"600","hashOfConfig":"329"},{"size":3406,"mtime":1643100561701,"results":"601","hashOfConfig":"329"},{"size":2851,"mtime":1643100561713,"results":"602","hashOfConfig":"329"},{"size":13490,"mtime":1643100561685,"results":"603","hashOfConfig":"329"},{"size":3299,"mtime":1643100561717,"results":"604","hashOfConfig":"329"},{"size":3182,"mtime":1643100561717,"results":"605","hashOfConfig":"329"},{"size":7568,"mtime":1643100561717,"results":"606","hashOfConfig":"329"},{"size":14655,"mtime":1643701499509,"results":"607","hashOfConfig":"329"},{"size":2624,"mtime":1643100561717,"results":"608","hashOfConfig":"329"},{"size":1938,"mtime":1643793197029,"results":"609","hashOfConfig":"329"},{"size":6896,"mtime":1643799386834,"results":"610","hashOfConfig":"329"},{"size":3445,"mtime":1643100561729,"results":"611","hashOfConfig":"329"},{"size":17263,"mtime":1643171449514,"results":"612","hashOfConfig":"329"},{"size":18251,"mtime":1643171496219,"results":"613","hashOfConfig":"329"},{"size":16166,"mtime":1643171437843,"results":"614","hashOfConfig":"329"},{"size":1576,"mtime":1643100561721,"results":"615","hashOfConfig":"329"},{"size":33932,"mtime":1643100561717,"results":"616","hashOfConfig":"329"},{"size":4242,"mtime":1643100561721,"results":"617","hashOfConfig":"329"},{"size":14467,"mtime":1643170964974,"results":"618","hashOfConfig":"329"},{"size":15110,"mtime":1643170155069,"results":"619","hashOfConfig":"329"},{"size":20689,"mtime":1643687598704,"results":"620","hashOfConfig":"329"},{"size":12415,"mtime":1643171013483,"results":"621","hashOfConfig":"329"},{"size":13585,"mtime":1643170991359,"results":"622","hashOfConfig":"329"},{"size":4788,"mtime":1643100561721,"results":"623","hashOfConfig":"329"},{"size":9360,"mtime":1643171843619,"results":"624","hashOfConfig":"329"},{"size":11770,"mtime":1643157802324,"results":"625","hashOfConfig":"329"},{"size":3619,"mtime":1643100561713,"results":"626","hashOfConfig":"329"},{"size":14170,"mtime":1643100561713,"results":"627","hashOfConfig":"329"},{"size":2122,"mtime":1643100561701,"results":"628","hashOfConfig":"329"},{"size":7206,"mtime":1643168726615,"results":"629","hashOfConfig":"329"},{"size":7143,"mtime":1643171919160,"results":"630","hashOfConfig":"329"},{"size":4293,"mtime":1643100561717,"results":"631","hashOfConfig":"329"},{"size":3991,"mtime":1643100561717,"results":"632","hashOfConfig":"329"},{"size":1492,"mtime":1643100561701,"results":"633","hashOfConfig":"329"},{"size":3041,"mtime":1643100561717,"results":"634","hashOfConfig":"329"},{"size":2355,"mtime":1643100561713,"results":"635","hashOfConfig":"329"},{"size":2631,"mtime":1643100561725,"results":"636","hashOfConfig":"329"},{"size":6213,"mtime":1643100561717,"results":"637","hashOfConfig":"329"},{"size":1644,"mtime":1643100561725,"results":"638","hashOfConfig":"329"},{"size":4755,"mtime":1643095558495,"results":"639","hashOfConfig":"329"},{"size":2728,"mtime":1643100561725,"results":"640","hashOfConfig":"329"},{"size":33490,"mtime":1643100561685,"results":"641","hashOfConfig":"329"},{"size":6117,"mtime":1643100561685,"results":"642","hashOfConfig":"329"},{"size":31083,"mtime":1643802510062,"results":"643","hashOfConfig":"329"},{"size":8712,"mtime":1643803148542,"results":"644","hashOfConfig":"329"},{"size":19572,"mtime":1643805844304,"results":"645","hashOfConfig":"329"},{"size":11738,"mtime":1643807443536,"results":"646","hashOfConfig":"329"},{"size":15570,"mtime":1643777428743,"results":"647","hashOfConfig":"329"},{"size":5307,"mtime":1643617375669,"results":"648","hashOfConfig":"329"},{"size":1921,"mtime":1643617402250,"results":"649","hashOfConfig":"329"},{"size":7292,"mtime":1643783898039,"results":"650","hashOfConfig":"329"},{"size":8508,"mtime":1643799565072,"results":"651","hashOfConfig":"329"},{"size":1504,"mtime":1643622164943,"results":"652","hashOfConfig":"329"},{"size":1866,"mtime":1643717112316,"results":"653","hashOfConfig":"329"},{"size":1263,"mtime":1643692754578,"results":"654","hashOfConfig":"329"},{"size":998,"mtime":1643791009376,"results":"655","hashOfConfig":"329"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},"6ojwz3",{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"658"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"658"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"658"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"658"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"658"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"658"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"658"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"658"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"658"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"658"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"658"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"658"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"658"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"658"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"658"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"658"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"658"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"658"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"731","usedDeprecatedRules":"658"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"658"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"658"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"658"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"743","usedDeprecatedRules":"658"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"746","usedDeprecatedRules":"658"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"658"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"658"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"658"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"658"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"658"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"658"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"658"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"658"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"658"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"658"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"785","usedDeprecatedRules":"658"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"658"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"658"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"658"},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"658"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"658"},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"658"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"658"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"658"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"658"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"658"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"658"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823","usedDeprecatedRules":"658"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"826","usedDeprecatedRules":"658"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"829","usedDeprecatedRules":"658"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"658"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"658"},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"840","usedDeprecatedRules":"658"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"658"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"658"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"658"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"658"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"658"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"658"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"658"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"658"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"658"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"658"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"658"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"658"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"658"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"658"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"658"},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"658"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"658"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"658"},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"658"},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"658"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"658"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"658"},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"658"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"658"},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"658"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"658"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"935","usedDeprecatedRules":"658"},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"938","usedDeprecatedRules":"658"},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"658"},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"658"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"658"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"658"},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"658"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"658"},{"filePath":"961","messages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"658"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"658"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"658"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"658"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"975","usedDeprecatedRules":"658"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"658"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"658"},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"658"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"658"},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"658"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"997","usedDeprecatedRules":"658"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"658"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"658"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"658"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"658"},{"filePath":"1016","messages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"658"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021","usedDeprecatedRules":"658"},{"filePath":"1022","messages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"658"},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1027","usedDeprecatedRules":"658"},{"filePath":"1028","messages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"658"},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1033","usedDeprecatedRules":"658"},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1036","usedDeprecatedRules":"658"},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"658"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1042","usedDeprecatedRules":"658"},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1045","usedDeprecatedRules":"658"},{"filePath":"1046","messages":"1047","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1048","messages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"658"},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1055","usedDeprecatedRules":"658"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"658"},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"658"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"658"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"658"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"658"},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"658"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"658"},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079","usedDeprecatedRules":"658"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1082","usedDeprecatedRules":"658"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"658"},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"658"},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"658"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"658"},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"658"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"658"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"658"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"658"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"658"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"658"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"658"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1126","usedDeprecatedRules":"658"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1129","usedDeprecatedRules":"658"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132","usedDeprecatedRules":"658"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135","usedDeprecatedRules":"658"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1138","usedDeprecatedRules":"658"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143","usedDeprecatedRules":"658"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"658"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"658"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"658"},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"658"},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"658"},{"filePath":"1159","messages":"1160","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161","usedDeprecatedRules":"658"},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1164","usedDeprecatedRules":"658"},{"filePath":"1165","messages":"1166","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"658"},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"658"},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"658"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"658"},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"658"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1184","usedDeprecatedRules":"658"},{"filePath":"1185","messages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1189","usedDeprecatedRules":"658"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"658"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1197","usedDeprecatedRules":"658"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"658"},{"filePath":"1201","messages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1203","usedDeprecatedRules":"658"},{"filePath":"1204","messages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1206","usedDeprecatedRules":"658"},{"filePath":"1207","messages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209","usedDeprecatedRules":"658"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"658"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"658"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1244","messages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"658"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"658"},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"658"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1267","usedDeprecatedRules":"658"},{"filePath":"1268","messages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"658"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"658"},{"filePath":"1274","messages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"658"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279","usedDeprecatedRules":"658"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"658"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285","usedDeprecatedRules":"658"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"658"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291","usedDeprecatedRules":"658"},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"658"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"658"},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1300","usedDeprecatedRules":"658"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1303","usedDeprecatedRules":"658"},{"filePath":"1304","messages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"658"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"658"},{"filePath":"1310","messages":"1311","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"658"},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"658"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"658"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"658"},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1324","usedDeprecatedRules":"658"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329","usedDeprecatedRules":"658"},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"658"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1337","usedDeprecatedRules":"658"},{"filePath":"1338","messages":"1339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"658"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"658"},{"filePath":"1346","messages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348","usedDeprecatedRules":"658"},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"658"},{"filePath":"1352","messages":"1353","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"658"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"658"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"658"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"658"},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"658"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1371","messages":"1372","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373","usedDeprecatedRules":"658"},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376","usedDeprecatedRules":"658"},{"filePath":"1377","messages":"1378","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379","usedDeprecatedRules":"658"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"658"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1385","usedDeprecatedRules":"658"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388","usedDeprecatedRules":"658"},{"filePath":"1389","messages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"658"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394","usedDeprecatedRules":"658"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"658"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400","usedDeprecatedRules":"658"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1403","usedDeprecatedRules":"658"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"658"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"658"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"658"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1415","usedDeprecatedRules":"658"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1418","usedDeprecatedRules":"658"},{"filePath":"1419","messages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"658"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"658"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1427","usedDeprecatedRules":"658"},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1432","usedDeprecatedRules":"658"},{"filePath":"1433","messages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1439","messages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1441","usedDeprecatedRules":"658"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1444","usedDeprecatedRules":"658"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1447","usedDeprecatedRules":"658"},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"658"},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1453","usedDeprecatedRules":"658"},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"658"},{"filePath":"1456","messages":"1457","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"658"},{"filePath":"1459","messages":"1460","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"658"},{"filePath":"1462","messages":"1463","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1466","usedDeprecatedRules":"658"},{"filePath":"1467","messages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"658"},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"658"},{"filePath":"1473","messages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1475","usedDeprecatedRules":"658"},{"filePath":"1476","messages":"1477","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1478","usedDeprecatedRules":"658"},{"filePath":"1479","messages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1481","usedDeprecatedRules":"658"},{"filePath":"1482","messages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1484","usedDeprecatedRules":"658"},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1487","usedDeprecatedRules":"658"},{"filePath":"1488","messages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1490","usedDeprecatedRules":"658"},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"658"},{"filePath":"1494","messages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1496","usedDeprecatedRules":"658"},{"filePath":"1497","messages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1499","usedDeprecatedRules":"658"},{"filePath":"1500","messages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1502","usedDeprecatedRules":"658"},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505","usedDeprecatedRules":"658"},{"filePath":"1506","messages":"1507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"658"},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"658"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1513","usedDeprecatedRules":"658"},{"filePath":"1514","messages":"1515","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516","usedDeprecatedRules":"658"},{"filePath":"1517","messages":"1518","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1519","usedDeprecatedRules":"658"},{"filePath":"1520","messages":"1521","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1522","usedDeprecatedRules":"658"},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1525","usedDeprecatedRules":"658"},{"filePath":"1526","messages":"1527","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1528","usedDeprecatedRules":"658"},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1533","messages":"1534","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1535","messages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1537","messages":"1538","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1539","messages":"1540","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1541","usedDeprecatedRules":"658"},{"filePath":"1542","messages":"1543","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1544","usedDeprecatedRules":"658"},{"filePath":"1545","messages":"1546","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1547","messages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1549","messages":"1550","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551","usedDeprecatedRules":"658"},{"filePath":"1552","messages":"1553","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1554","messages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pooja/MazarsRepo/src/index.js",[],["1558","1559"],"/home/pooja/MazarsRepo/src/App.js",["1560"],"import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport PageNotFound from './components/PageNotFound/PageNotFound'\n\n\n\n//user routes\nimport ModalMaual from './views/ModalManual/ModalManual';\nimport Login from './views/Login/Login'\nimport SignUp from './views/SignUpForm/SignUp'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalView/ProposalView'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\nimport EditQuery from './views/EditQuery/EditQuery'\nimport VideoCall from './views/VideoCall/VideoCall'\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\nimport schedule from './views/Schedule/schedule'\nimport ViewNotification from './views/ViewNotification/ViewNotification'\nimport Chatting from './views/Chatting/Chatting'\nimport Message from './views/Message/Message'\nimport ProposalView from './views/ProposalView/ProposalView'\nimport Feedback from './views/Feedback/Feedback'\nimport FeedbackData from './views/FeedbackData/FeedbackData'\nimport PaymentStatus from './views/PaymentStatus/PaymentStatus'\nimport PaymentGateway from \"./views/PaymentGateway.js/PaymentGateway\";\nimport ThankYou from \"./views/ThankYou/Thankyou\";\nimport payDetails from \"./views/PaymentStatus/PayDetails\";\nimport Contact from \"./views/Contact/Contact\";\nimport About from './views/About/About';\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/index'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\nimport AdminForgetPassword from './pages/Admin/ForgetPassword/ForgetPassword'\nimport AdminNewPassword from './pages/Admin/NewPassword/NewPassword'\nimport AdminQueryRejection from './pages/Admin/QueryRejection/QueryRejection'\nimport AdminSchedule from './pages/Admin/Schedule/Schedule'\nimport AdminMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport AdminChatting from './pages/Admin/Chatting/Chatting'\nimport AdminMessage from './pages/Admin/Message/Message'\nimport AdminViewNotification from './pages/Admin/ViewNotification/ViewNotification'\nimport AdminRecording from './pages/Admin/Recording/Recording'\nimport adMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport Customer from \"./pages/Admin/customer/Customer\";\nimport adminReport from \"./pages/Admin/Report/Report\";\nimport AdminInvoice from \"./pages/Admin/Invoice/Invoice\";\nimport AdpayDetails from \"./pages/Admin/PaymentStatusTab/Paydetails\";\nimport ReportList from \"./pages/Admin/Report/ReportList\"\nimport Consalation from './pages/Admin/Report/Consalation';\nimport LoginFun from \"./components/LoginForm/LoginFun\";\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposalTab from './pages/TL/Proposal/ProposalTab'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\nimport TlForgetPassword from './pages/TL/ForgetPassword/ForgetPassword'\nimport TlNewPassword from './pages/TL/NewPassword/NewPassword'\nimport TlViewNotification from './pages/TL/ViewNotification/ViewNotification'\nimport TlChatting from './pages/TL/Chatting/Chatting'\nimport TlMessage from './pages/TL/Message/Message'\nimport TlSchedule from './pages/TL/Schedule/Schedule'\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\nimport TlRecording from './pages/TL/Recording/Recording'\nimport TlReport from \"./pages/TL/Report/Report\";\nimport TlInvoice from \"./pages/TL/Proposal/Invoice\"\nimport TlInvoiceTab from \"./pages/TL/Proposal/InvoiceTab\";\nimport TlpayDetails from \"./pages/TL/PaymentStatus/Paydetails\";\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\nimport TpProposalTab from './pages/TP/Proposal/ProposalTab'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\nimport TpForgetPassword from './pages/TP/ForgetPassword/ForgetPassword'\nimport TpNewPassword from './pages/TP/NewPassword/NewPassword'\nimport TpPaymentStatus from './pages/TP/PaymentStatus/PaymentStatus'\nimport TpAssignmentTab from './pages/TP/AssignmentTab/AssignmentTab'\nimport TpSchedule from './pages/TP/Schedule/Schedule'\nimport TpMessage from './pages/TP/Message/Message'\nimport TpChatting from './pages/TP/Chatting/Chatting'\nimport TpAddAssingmentStages from './pages/TP/AddAssingmentStages/AddAssingmentStages'\nimport TpFeedbackTab from './pages/TP/FeedbackTab/FeedbackTab'\nimport TpMeetingComponent from './pages/TP/MeetingComponent/MeetingComponent'\nimport TpViewNotification from './pages/TP/ViewNotification/ViewNotification'\nimport TpRecording from './pages/TP/Recording/Recording'\nimport TpReport from \"./pages/TP/Report/Report\";\nimport TpInvoice from \"./pages/TP/Invoice/Invoice.js\";\nimport TppayDetails from \"./pages/TP/PaymentStatus/Paydetails\";\n//private routes\nimport PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\nimport PublicRouteUser from './Service/PublicRouteUser'\nimport PublicRouteAdmin from './Service/PublicRouteAdmin'\nimport PublicRouteTL from './Service/PublicRouteTL'\nimport PublicRouteTP from './Service/PublicRouteTP'\nimport AboutOuter from \"./views/About/AboutOuter\";\nimport ContactOuter from \"./views/Contact/ContactOuter\";\n// import PayDetails from \"./views/PaymentStatus/PayDetails\";\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\nfunction App() {\n \n\n  return (\n    <div>\n      <Provider template={AlertTemplate} {...options}>\n        <Router>\n          <Switch>\n\n            <PublicRouteUser exact path=\"/\" component={Login} />\n            <PublicRouteUser exact path=\"/customer/signup\" component={SignUp} />\n            <PublicRouteUser exact path=\"/customer/forget-password\" component={ForgetPassword} />\n            <PublicRouteUser exact path=\"/customer/new-password/:id\" component={NewPassword} />\n             <PublicRouteUser exact path = \"/customer/aboutbasic\" component={AboutOuter} />\n        <PublicRouteUser exact path = \"/customer/contactbasic\" component = {ContactOuter} />\n            <PrivateRouteUser exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n            <PrivateRouteUser exact path=\"/customer/dashboard\" component={Dashboard} />\n            <PrivateRouteUser exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n            <PrivateRouteUser exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n            <PrivateRouteUser exact path=\"/customer/queries\" component={QueriesTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal\" component={ProposalTab} />\n            <PrivateRouteUser exact path=\"/customer/assignment\" component={AssignmentTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n            <PrivateRouteUser exact path=\"/customer/change-password\" component={ChangePassword} />\n            <PrivateRouteUser exact path=\"/customer/edit-query/:id\" component={EditQuery} />\n            <PrivateRouteUser exact path=\"/customer/video-call\" component={VideoCall} />\n            <PrivateRouteUser exact path=\"/customer/meeting/:id\" component={MeetingComponent} />\n            <PrivateRouteUser exact path=\"/customer/schedule\" component={schedule} />\n            <PrivateRouteUser exact path=\"/customer/view-notification/:id\" component={ViewNotification} />\n            <PrivateRouteUser exact path=\"/customer/proposal_view/:id\" component={ProposalView} />\n            <PrivateRouteUser exact path=\"/customer/message\" component={Message} />\n            <PrivateRouteUser exact path=\"/customer/chatting/:id\" component={Chatting} />\n            <PrivateRouteUser exact path=\"/customer/feedback/:id\" component={Feedback} />\n            <PrivateRouteUser exact path=\"/customer/feedback-data\" component={FeedbackData} />\n            <PrivateRouteUser exact path=\"/customer/paymentstatus\" component={PaymentStatus} />\n            <PrivateRouteUser exact path=\"/customer/payment\" component={PaymentGateway} />\n            <PrivateRouteUser exact path=\"/customer/thankyou\" component={ThankYou} />  \n            <PrivateRouteUser exact path=\"/customer/paydetails/:id\" component={payDetails} />\n             <PrivateRouteUser exact path = \"/customer/modalmanual\" component = {ModalMaual} />\n             <PrivateRouteUser exact path = \"/customer/contact\" component = {Contact} />\n            <PrivateRouteUser exact path = \"/customer/about\" component = {About} />\n       \n            <PublicRouteAdmin exact path=\"/admin/start\" component={AdminStart} />\n            <PublicRouteAdmin exact path=\"/admin/login\" component={AdminLogin} />\n            <PublicRouteAdmin exact path=\"/admin/forget-password\" component={AdminForgetPassword} />\n            <PublicRouteAdmin exact path=\"/admin/new-password/:id\" component={AdminNewPassword} />\n\n            <PrivateRouteAdmin exact path=\"/admin/dashboard\" component={AdminDashboard} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n            <PrivateRouteAdmin exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n            <PrivateRouteAdmin exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n            <PrivateRouteAdmin exact path=\"/admin/proposal\" component={AdminProposal} />\n            <PrivateRouteAdmin exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n            <PrivateRouteAdmin exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n            <PrivateRouteAdmin exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n            <PrivateRouteAdmin exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n            <PrivateRouteAdmin exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n            <PrivateRouteAdmin exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n            <PrivateRouteAdmin exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n            <PrivateRouteAdmin exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n            <PrivateRouteAdmin exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n            <PrivateRouteAdmin exact path=\"/admin/query_rejection/:id\" component={AdminQueryRejection} />\n            <PrivateRouteAdmin exact path=\"/admin/schedule\" component={AdminSchedule} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting\" component={AdminMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/chatting/:id\" component={AdminChatting} />\n            <PrivateRouteAdmin exact path=\"/admin/message\" component={AdminMessage} />\n            <PrivateRouteAdmin exact path=\"/admin/view-notification/:id\" component={AdminViewNotification} />\n            <PrivateRouteAdmin exact path=\"/admin/recording\" component={AdminRecording} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting/:id\" component={adMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/customers\" component={Customer} />\n            <PrivateRouteAdmin exact path=\"/admin/reports\" component={adminReport} />\n            <PrivateRouteAdmin exact path= \"/admin/adinvoice\" component={AdminInvoice}/>\n            <PrivateRouteAdmin exact path=\"/admin/paydetails/:id\" component={AdpayDetails} />\n            <PrivateRouteAdmin exact path = \"/admin/reportlist\" component = {ReportList} />\n            <PrivateRouteAdmin exact path = \"/admin/consalation\" component = {Consalation} />\n            <PublicRouteTL exact path=\"/teamleader/start\" component={TlStart} />\n            <PublicRouteTL exact path=\"/teamleader/login\" component={TlLogin} />\n            <PublicRouteTL exact path=\"/teamleader/forget-password\" component={TlForgetPassword} />\n            <PublicRouteTL exact path=\"/teamleader/new-password/:id\" component={TlNewPassword} />\n          \n                  \n            <PrivateRouteTL exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n            <PrivateRouteTL exact path=\"/teamleader/addnew\" component={TlAddNew} />\n            <PrivateRouteTL exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n            <PrivateRouteTL exact path=\"/teamleader/proposal\" component={TlProposalTab} />\n            <PrivateRouteTL exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n            <PrivateRouteTL exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n            <PrivateRouteTL exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n            <PrivateRouteTL exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n            <PrivateRouteTL exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n            <PrivateRouteTL exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n            <PrivateRouteTL exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n            <PrivateRouteTL exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\n            <PrivateRouteTL exact path=\"/teamleader/meeting/:id\" component={TlMeetingComponent} />\n            <PrivateRouteTL exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\n            <PrivateRouteTL exact path=\"/teamleader/schedule\" component={TlSchedule} />\n            <PrivateRouteTL exact path=\"/teamleader/view-notification/:id\" component={TlViewNotification} />\n            <PrivateRouteTL exact path=\"/teamleader/chatting/:id\" component={TlChatting} />\n            <PrivateRouteTL exact path=\"/teamleader/message\" component={TlMessage} />\n            <PrivateRouteTL exact path=\"/teamleader/recording\" component={TlRecording} />\n            <PrivateRouteTL exact path=\"/teamleader/reports\" component={TlReport}/>\n            <PrivateRouteTL exact path=\"/teamleader/invoice\" component={TlInvoice}/>\n            <PrivateRouteTL exact path=\"/teamleader/tlinvoice\" component={TlInvoiceTab}/>\n            <PrivateRouteTL exact path=\"/teamleader/paydetails/:id\" component={TlpayDetails} />\n\n            <PublicRouteTP exact path=\"/taxprofessional/start\" component={TpStart} />\n            <PublicRouteTP exact path=\"/taxprofessional/login\" component={TpLogin} />\n            <PublicRouteTP exact path=\"/taxprofessional/new-password/:id\" component={TpNewPassword} />\n            <PublicRouteTP exact path=\"/taxprofessional/forget-password\" component={TpForgetPassword} />\n            \n            <PrivateRouteTP exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n            <PrivateRouteTP exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/proposal\" component={TpProposalTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\n            <PrivateRouteTP exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n            <PrivateRouteTP exact path =\"/taxprofessional/chatting/:id\" component = {TpChatting} />\n            <PrivateRouteTP exact path=\"/taxprofessional/addassingment/:id\" component={TpAddAssingmentStages} />\n            <PrivateRouteTP exact path=\"/taxprofessional/paymentstatus\" component={TpPaymentStatus} />\n            <PrivateRouteTP exact path=\"/taxprofessional/assignment\" component={TpAssignmentTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/schedule\" component={TpSchedule} />\n            <PrivateRouteTP exact path=\"/taxprofessional/message\" component={TpMessage} />\n            <PrivateRouteTP exact path=\"/taxprofessional/feedback\" component={TpFeedbackTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/meeting/:id\" component={TpMeetingComponent} />\n            <PrivateRouteTP exact path=\"/taxprofessional/view-notification/:id\" component={TpViewNotification} />\n            <PrivateRouteTP exact path=\"/taxprofessional/recording\" component={TpRecording} />\n            <PrivateRouteTP exact path=\"/taxprofessional/reports\" component={TpReport}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/tpinvoice\" component={TpInvoice}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/paydetails/:id\" component={TppayDetails} />\n            <Route exact path=\"/*\" component={PageNotFound} />\n\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n// 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\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/reportWebVitals.js",[],"/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js",["1561"],"import React from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\n\n\nconst PublicRoutesTP = ({ component: Component, ...rest }) => {\n\n\n    \n    return (\n        <Route\n            {...rest}\n            component={(props) => {\n                const token = window.localStorage.getItem(\"tpkey\");\n\n                if (token) {\n                    return (\n                        <>\n                            <Redirect to={\"/taxprofessional/dashboard\"} />\n                        </>\n                    )\n                } else {\n                    return (\n                        <>\n                            <Component {...props} />\n                        </>\n                    )\n                }\n            }}\n        />\n    );\n};\n\n\nexport default PublicRoutesTP;\n\n\n","/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js",[],"/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js",[],"/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js",[],"/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js",["1562","1563"],"import React from 'react';\nimport { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { baseUrl } from '../../config/config';\nimport { useHistory } from 'react-router';\nimport { useAlert } from \"react-alert\";\nimport Login from '../../pages/Admin/Login/Login';\nimport Alerts from '../../common/Alerts';\nimport LoginForm from './LoginForm';\nconst LoginData = createContext();\nconst LoginFun = () => {\n  const alert = useAlert();\n  let history = useHistory();\n    const [email, setEmail] = useState(null);\n    const [show, setShow] = useState(false);\n    const [uid, setUid] = useState('')\n    const [isPasswordShow, setPasswordShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n  \n    const togglePasssword = () => {\n      setPasswordShow(!isPasswordShow)\n    };\n  \n    const onSubmit = (value) => {\n    \n      setLoading(true)\n  \n      let formData = new FormData();\n      formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n        .then(function (response) {\n  \n          if (response.data.code === 1) {\n            setLoading(false)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n            setUid(response.data[\"user id\"])\n            logout();\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Invalid email or password.\")\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 600000)\n  }\n    const handleChange = (e) => {\n  \n      setEmail(e.target.value);\n    };\n   \n  const valData = { handleChange, onSubmit, togglePasssword, isPasswordShow, email, show, uid, loading, setLoading}\n  return(\n      <>\n      <LoginData.Provider value={valData}>\n          <Login />\n          \n      </LoginData.Provider>\n      </>\n  )\n}\nexport default LoginFun;\nexport {LoginData}","/home/pooja/MazarsRepo/src/views/Login/Login.js",["1564","1565","1566","1567","1568"],"import { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport { Button, Typography } from \"@material-ui/core\";\nimport './style.css';\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport VerifyOTP from \"./VerifyOTP\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport LoadingTime from \"../../components/LoadingTime/LoadingTime\";\nimport MyPDF from '../dFile/LoginManual.pdf';\nimport Cookies from \"js-cookie\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  p_password: yup.string().required(\"\"),\n});\n\n\nfunction LoginForm() {\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState();\n  const [uid, setUid] = useState('')\n  const [time, setTime] = useState('');\n  const [load, setLoad] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n\n    if (load) {\n      LoadingTime.timer2(setTime, setDisabled)\n    }\n\n  }\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  \n  \n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setShow(true)\n          console.log(response.data.display_name)\n          setLoad(true)\n          Cookies.set(\"custName\", response.data.display_name)\n          setUid(response.data.user_id)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(response.data.result)\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  const handleChange = (e) => {\n   \n    setEmail(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Header noSign=\"noSign\" />\n      <h1 style={{ \"textAlign\": \"center\", \"margin\": \"55px 0 30px 0\" }}>\n        Would you like to post a query\n      </h1>\n      \n      <div className=\"StartPage\">\n        <div className=\"mainContent\">\n\n          <div className=\"signIn\">\n            <div className=\"signBtn\">\n              <div className=\"boxOverlay\">\n                <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#fff\" }}>\n                  For new client\n                </Typography>\n                <button className=\"btn btn-success\">\n                  <Link className=\"SignUpLink\"\n                    to={{\n                      pathname: \"/customer/signup\",\n                    }}\n                  >\n                    Sign Up\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"signUp\">\n            <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#2b345f\" }}>\n              For existing client\n            </Typography>\n            {\n              show ? <div className=\"customForm\">\n\n                <VerifyOTP email={email} uid={uid} time={time} setLoad={setLoad}\n                  setDisabled={setDisabled} disabled={disabled} setLoading={setLoading}\n                  loading={loading} />\n              </div>\n                :\n                <div className=\"customForm\">\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"signInForm\"  autocomplete=\"off\">\n                    <div className=\"form-group\">\n                      <label className=\"form-label\">Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        autocomplete=\"off\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                    </div>\n\n                    <div className=\"form-group passForm \">\n                      <label className=\"form-label\">Password <span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_password,\n                        })}\n                        name=\"p_password\"\n                        autocomplete=\"off\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      \n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon-login`}\n                        onClick={togglePasssword}\n                      />\n                    </div>\n\n                    <div style={{ display: \"flex\", margin: \"0 0 30px 0\", justifyContent: \"flex-end\" }}>\n                      <Link\n                        to={{\n                          pathname: \"/customer/forget-password\",\n                          email: `${email}`,\n                        }}\n                      >\n                        Forgot Password\n                      </Link>\n                    </div>\n\n                    {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"btn btn-success\" type=\"submit\">\n                          Send OTP\n                        </button>\n                    }\n\n                  </form>\n                </div>\n            }\n            <Mandatory />\n          </div>\n\n        </div>\n      </div>\n\n\n      <Footer />\n    </>\n  );\n}\n\nexport default LoginForm;\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js",["1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585"],"/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js",["1586","1587","1588","1589","1590","1591","1592","1593","1594"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport QueryDetails from \"../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nfunction MyAssingment(props) {\n  const { id } = useParams();\n  \n  const history = useHistory();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [accept, setAccept] = useState();\n  const [finalDate, setFinalDate] = useState()\n  const [tlName2, setTlname] = useState();\n  const [qstatus, setqStatus] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n    const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          setTpstatus(res.data.result[0].tp_status);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n          if(res.data.result[0].status ==\"Declined Query\"){\n        \n            let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n              setDeclined2(a)\n             setDeclinedStatus(true)\n            }\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n    \n         \n       \n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              accept : res.data.result[0].accept,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            \n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n\n  const getQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n  \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n       \n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Query Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n           \n\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                customerQuery=\"customerQuery\"\n                queryDocs={queryDocs}\n                purpose={purpose}\n                year={year}\n                paymentDetails={paymentDetails}\n                feedback={feedback}\n                reports={reports}\n                submitData = {submitData}\n                accept = {accept}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                tpStatus={tpStatus}\n                qstatus={qstatus}\n                finalDate={finalDate}\n                declined2={declined2}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default MyAssingment;\n","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js",["1595","1596","1597","1598","1599","1600","1601","1602","1603"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router\";\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"userid\");\nconst sessionId =  window.sessionStorage.getItem(\"userIdsession\")\nlet history= useHistory()\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n\n    allassignment: '',\n    inprogress: '',\n    complete: '',\n    customer_declined_Pay: '',\n\n\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress,\n    allassignment, inprogress, complete,\n    customer_declined_Pay,\n    paid, unpaid, totalpayment,\n  } = allQueries;\n\nconst logout = () => {\n  localStorage.removeItem(\"userid\")\n  localStorage.removeItem(\"custEmail\")\n  history.push(\"/\")\n}\nconsole.log(\"sessionStorage\", window.sessionStorage)\n  useEffect(() => {\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/customers/totalComplete?uid=${JSON.parse(userId)}`)\n        .then((response) => {\n\n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n\n\n              allassignment: response.data.result.assignment.allassignment,\n              inprogress: response.data.result.assignment.inprogress,\n              complete: response.data.result.assignment.complete,\n              customer_declined_Pay: response.data.result.assignment.customer_declined_payment,\n\n\n\n              totalpayment: response.data.result.payments.totalpayment,\n              paid: response.data.result.payments.paid,\n              unpaid: response.data.result.payments.unpaid,\n\n\n            })\n          }\n        })\n        .catch((error) => {\n      \n        });\n    };\n\n\n    getAllQueries();\n  }, []);\n\n\n  return (\n  <>\n  {sessionId ? \n  <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n  <div className=\"row\">\n    <div className=\"col-md-3 content_header\">\n      <table className=\"table table-striped first main_table\">\n        <thead className=\"query_thead\">\n          <tr>\n            <th className=\"left_side\"> All Queries</th>\n            <th>{total}</th>\n          </tr>\n        </thead>\n      </table>\n      <table className=\"table table-striped second main_table\">\n        <thead className=\"query_thead\">\n          <tr>\n            <th className=\"left_side\">Inprogress; Queries</th>\n            <th>{inprogress_queries}</th>\n          </tr>\n        </thead>\n\n        <tbody className=\"table_body\">\n          <tr>\n            <td className=\"left_side\">Inprogress; Allocation</td>\n            <td>{inprogress_allocation}</td>\n          </tr>\n          <tr>\n            <td className=\"left_side\">Inprogress; Proposals</td>\n            <td>{inprogress_proposal}</td>\n          </tr>\n          <tr>\n            <td className=\"left_side\">Inprogress; Assignments</td>\n            <td>{inprogress_assignment}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      {inprogress_queries != 0 || declined_queries != 0 ? <>\n        <table className=\"table table-striped third main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Completed; Queries</th>\n              <th>{complete_query}</th>\n            </tr>\n          </thead>\n          <tbody className=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Completed; Assignments</td>\n              <td>{complete_query}</td>\n            </tr>\n          </tbody>\n        </table>\n        {complete_query != 0  || declined_queries != 0 ? <>\n\n          <table className=\"table table-striped forth main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Declined; Queries</th>\n                <th>{declined_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Admin Declined; Queries</td>\n                <td>{admin_declined_query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Client Declined; Queries</td>\n                <td>{customer_declined_Query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Client Declined; Proposals</td>\n                <td>{customer_declined_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Client Declined; Payment</td>\n                <td>{Customer_declined_payment}</td>\n              </tr>\n            </tbody>\n          </table>\n        </> : \"\"}   </> : \"\"}   </div>\n    {allproposal != 0 ? <>\n      <div className=\"col-md-3 content_header\">\n\n        <table className=\"table table-striped fifth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">All Proposals</th>\n              <th>{allproposal}</th>\n\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped sixth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Inprogress; Proposals</th>\n              <th>{InProgress}</th>\n            </tr>\n          </thead>\n          <tbody classNameName=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Inprogress; Preparation</td>\n              <td>{inprogress_preparation}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Acceptance</td>\n              <td>{inprogress_acceptance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped seventh main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Accepted; Proposals </th>\n              <th>{accepted_proposals}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped eight main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Client Declined; Proposals</th>\n              <th>{declined}</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n      {allassignment != 0 ? <>\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped ninth main_table\">\n            <thead className=\"assignment_thead\">\n              <tr>\n                <th className=\"left_side\">All Assignments</th>\n                <th>{allassignment}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Inprogress; Assignments</th>\n                <th>{inprogress}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Completed; Assignments</th>\n                <th>{complete}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Client Declined; Payment</th>\n                <th>{customer_declined_Pay}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n        {totalpayment != 0 ? <>\n\n          <div className=\"col-md-3 content_header\">\n\n            <table className=\"table table-striped twelvth main_table\">\n              <thead className=\"payment_thead\">\n                <tr>\n                  <th className=\"left_side\">All Payments</th>\n                  <th>{totalpayment}</th>\n                </tr>\n              </thead>\n            </table>\n            <table className=\"table table-striped thirteen main_table\">\n              <thead className=\"payment_thead2\">\n                <tr>\n                  <th className=\"left_side\">Paid</th>\n                  <th>{paid}</th>\n                </tr>\n              </thead>\n            </table>\n\n            <table className=\"table table-striped thirteen main_table\">\n              <thead className=\"payment_thead2\">\n                <tr>\n                  <th className=\"left_side\">Unpaid</th>\n                  <th>{unpaid}</th>\n                </tr>\n              </thead>\n            </table>\n          </div>\n        </> : \"\"} </> : \"\"}  </> : \"\"}  </div>\n\n</Layout> : \n<>\n{logout()}\n</>}\n  </>\n  );\n}\n\nexport default Dashboard;","/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js",["1604","1605","1606"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\n\nfunction SelectCategoryPage() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default SelectCategoryPage;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js",["1607","1608","1609","1610","1611","1612"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllQueriesData from \"./AllQueriesData\";\nimport InprogressAllocation from \"./InprogressAllocation\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport DeclinedQueries from \"./DeclinedQueries\";\n\n\n\n\nfunction QueriesTab(props) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAllQueriesCount(res.data.result.length);\n        }\n      });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Completed; Queries ({inprogressProposal})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js",["1613","1614","1615","1616","1617"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction Proposal(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllProposal();\n    getInprogressProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n  }, []);\n\n\n  const getAllProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n\n        setAllProposalCount(res.data.result.length);\n      });\n  };\n\n  const getInprogressProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\n      .then((response) => {\n      \n        if (response.data.code === 1) {\n          setInprogressProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getAcceptedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAcceptedProposalCount(res.data.result.length);\n        }\n      });\n  };\n\n  const getDeclinedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\n      .then((response) => {\n        \n        if (response.data.code === 1) {\n          setDeclinedProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({inprogressProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedProposal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js",["1618"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport InprogressAssignment from \"./InprogressAssignment\";\nimport CompletedAssignment from \"./CompletedAssignment\";\nimport CustomerDeclinedPayment from \"./CustomerDeclinedPayment\";\n\n\n\nfunction AssignmentTab(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allassignment, setAllAssignment] = useState(\"\");\n  const [inprogressAssignmentCount, setInprogressAssignmentCount] = useState(\"\");\n  const [completeAssignment, setCompleteAssignment] = useState(\"\");\n  const [declinedAssignment, setDeclinedAssignment] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllAssignment();\n    getInprogressAssignment();\n    getCompletedAssignment();\n    getCustomerDeclinedPayment();\n  }, []);\n\n\n  const getAllAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        setAllAssignment(res.data.result.length);\n      });\n  };\n\n  const getInprogressAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`)\n      .then((response) => {\n       \n        if (response.data.code === 1) {\n          setInprogressAssignmentCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getCompletedAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setCompleteAssignment(res.data.result.length);\n        }\n      });\n  };\n\n  const getCustomerDeclinedPayment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`)\n      .then((response) => {\n     \n        if (response.data.code === 1) {\n          setDeclinedAssignment(response.data.result.length);\n        }\n      })\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex === 0 ? myStyle2 : myStyle1}>\n              All Assignment ({allassignment})\n            </Tab>\n            <Tab style={tabIndex === 1 ? myStyle2 : myStyle1}>\n              Inprogress; Assignments ({inprogressAssignmentCount})\n            </Tab>\n\n            <Tab style={tabIndex === 2 ? myStyle2 : myStyle1}>\n              Completed; Assignments ({completeAssignment})\n            </Tab>\n\n            <Tab style={tabIndex === 3 ? myStyle2 : myStyle1}>\n              Client Declined; Payment ({declinedAssignment})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CompletedAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CustomerDeclinedPayment />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js",[],"/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js",["1619","1620","1621","1622"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Spinner } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\n\nfunction ForgetPassword(props) {\n\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"p\", \"forgot\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n          props.history.push(`/customer/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n       \n          Alerts.ErrorNormal(\"Invalid email.\")\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"undefined\") {\n      \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n         \n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n                {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                        Get OTP\n                      </button>\n                       <Link to=\"/\" style={{ \"margin\": \"10px\" }}>\n                       <button type=\"submit\" className=\"btn btn-secondary\">\n                         Cancel\n                       </button>\n                     </Link>\n                     </>\n                    }\n                \n               \n              </form>\n          \n          <Mandatory />\n        </div>\n\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js",["1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport TermsConditions from \"./TermsConditions\";\nimport CommonServices from \"../../common/common\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../../components/Loader/Loader\";\nimport RejectedModal22 from \"./RejectedModal22\";\nimport {Markup} from \"interweave\";\n\nfunction ProposalView(props) {\n  const { handleSubmit, register } = useForm();\n  const [loading, setLoading] = useState(false);\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queryStatus, setQueryStatus] = useState(null);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [valueCheckBox, setValueCheckBox] = useState(false);\n  const [rejectedBox, showRejectedBox] = useState(false)\n  const [assignNo2, setAssignNo2] = useState()\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    proposal_date: \"\",\n    name: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const { amount, proposal_date,\n    name, description,\n    amount_type, amount_fixed, amount_hourly,\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n  } = diaplayProposal\n\n\n  useEffect(() => {\n    getProposalDetails();\n  }, []);\n\n  const getProposalDetails = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getQueryDetails?id=${id}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n        \n\n          if (res.data.result[0].query_status) {\n            setQueryStatus(res.data.result[0].query_status);\n          }\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              proposal_date: res.data.proposal_queries[0].created,\n              name: res.data.proposal_queries[0].tlname,\n              description: res.data.proposal_queries[0].description,\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n        }\n      });\n  };\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  var nfObject = new Intl.NumberFormat('hi-IN')\n  const readTerms = () => {\n \n    setPaymentModal(!addPaymentModal);\n  };\n\n\n  const updateCheckbox = ({ checked }) => {\n    setValueCheckBox(checked)\n    setPaymentModal(checked);\n    setCheckerror(\"\")\n  }\n\n\n  const onSubmit = (value) => {\n  \n\n    if (valueCheckBox === false) {\n     \n      setCheckerror(\"Please , You have to select\")\n    }\n    else {\n      setLoading(true)\n      let formData = new FormData();\n      formData.append(\"id\", id);\n      formData.append(\"status\", 5);\n      formData.append(\"terms_condition\", Number(value.p_terms_condition));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/ProposalAccept`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            var variable = \"\"\n            Alerts.SuccessNormal(variable)\n            history.push({\n              pathname: `/customer/proposal`,\n              index: 0,\n            });\n          } if (response.data.code === 0) {\n            setLoading(false)\n          }\n\n        })\n        .catch((error) => {\n       \n        });\n    }\n\n  };\n\nconst amountStyle  = {\n  display : \"block\",\n  textAlign : \"right\",\n \n}\n  const installAmount = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  const installAmount2 = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p style={amountStyle}>{nfObject.format(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  // curent date\n  var date = new Date();\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n\n\n  //rejected\n  const rejected = (id) => {\n   \n    if (valueCheckBox === false) {\n   \n      setCheckerror(\"Please , You have to select\")\n    } else {\n      Swal.fire({\n        title: \"Are you sure\",\n         text: \"to reject proposal ?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, reject it\",\n       \n      }).then((result) => {\n        if (result.value) {\n          deleteCliente(id);\n        }\n      });\n    }\n  };\n\n\n  // delete data\n  const deleteCliente = (key) => {\n    setAssignNo2(id)\n    showRejectedBox(!rejectedBox)\n    \n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n         <div className=\"queryBox\">\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(proposal_date)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{nfObject.format(amount)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Scope of Work</th>\n                <td><Markup content={description} /></td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Amount</th>\n                <td>\n                  <tr style={{display : \"flex\", width : \"100%\"}}>\n                    <th style={{display : \"flex\", width : \"50%\"}}>Amount Type</th>\n                    <th style={{display : \"flex\", width : \"50%\"}}>Price</th>\n                  </tr>\n                  <tr style={{display : \"flex\", width : \"100%\"}}>\n                    <td style={{display : \"flex\", width : \"50%\"}}>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                    <td style={{display : \"flex\", width : \"50%\"}}>\n                      {\n                        amount_type == \"fixed\" ?\n                          nfObject.format(amount)\n                          :\n                          amount_type == \"hourly\" ?\n                            nfObject.format(amount_hourly)\n                            :\n                            amount_type == \"mixed\" ?\n                              <div>\n                                <p>Fixed : {nfObject.format(amount)}</p>\n                                <p>Hourly : {nfObject.format(amount_hourly)}</p>\n                              </div>\n                              :\n                              \"\"\n                      }\n                    </td>\n                  </tr>\n                </td>\n              </tr>\n\n              <tr>\n                <th scope=\"row\">Payment Terms</th>\n                {\n                  payment_terms == \"lumpsum\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                        <td>\n                          {CommonServices.removeTime(due_date)}\n                        </td>\n                      </tr>\n                    </td>\n                    :\n                    payment_terms == \"installment\" ?\n                      <td>\n                        <tr style={{display : \"flex\", width : \"100%\"}}>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Payment Type</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>No of Installments</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Installment Amount</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Due Dates</th>\n                        </tr>\n                        <tr style={{display : \"flex\", width : \"100%\"}}>\n                          <td style={{display : \"flex\", width : \"25%\"}}>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                          <td style={{display : \"flex\", width : \"25%\", justifyContent : \"center\"}}>{no_of_installment}</td>\n                          <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\", textAlign : \"right\"}}>{installAmount2(installment_amount)}</td>\n                        <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\"}}>{installAmount(due_date)}</td>\n                        </tr>\n                      </td>\n                      :\n                      \"\"\n                }\n\n\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposal Status</th>\n                <td>\n                  {queryStatus == \"4\" && \"Inprogress\"}\n                  {queryStatus == \"6\" && \"Declined\"}\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n\n         </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <div className=\"form-check\">\n                  <input\n                    id=\"terms_condition\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"p_terms_condition\"\n                    ref={register}\n                    onChange={(e) => updateCheckbox(e.target)}\n                  />\n                  <label\n                    htmlFor=\"terms_condition\"\n                    className=\"form-check-label\"\n                    title=\"Read\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    Engagement Letter\n                  </label>\n                  <p className=\"declined\">{custcheckError}</p>\n                </div>\n                <br />\n\n                {\n                  loading ?\n                    <Loader />\n                    :\n                    <>\n                      <div className=\"form-check\">\n                        {\n                          valueCheckBox ?\n                            <div>\n                              <button type=\"submit\" className=\"btn btn-primary\">\n                                Accept\n                              </button>\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => rejected(id)}>\n                                Reject\n                              </button>\n                            </div>\n                            :\n                            <div>\n                              <button type=\"submit\" className=\"btn btn-primary\" disabled>\n                                Accept\n                              </button>\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" disabled>\n                                Reject\n                              </button>\n                            </div>\n                        }\n                      </div>\n                    </>\n                }\n              </div>\n            </div>\n\n          </form>\n\n\n        </CardBody>\n\n        <TermsConditions\n          readTerms={readTerms}\n          addPaymentModal={addPaymentModal}\n          id={id}\n        />\n         <RejectedModal22\n                    showRejectedBox = {showRejectedBox} \n                    rejectedBox = {rejectedBox}\n                    // getQueriesData = {getQueriesData}\n                    assignNo={assignNo2}\n                    deleteCliente = {deleteCliente}/>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalView;\n","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js",["1639","1640","1641","1642","1643","1644"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      setLoad(false)\n      timer(180);\n    }\n\n  }\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n   \n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password reset successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                    })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime}\n                setLoad={setLoad} setLoading={setLoading} />\n              :\n              null\n          }\n\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js",[],"/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js",["1645","1646"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Meeting from \"../../components/meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    \n      <Meeting id={props.match.params.id}/>\n   \n  );\n}\n\nexport default MeetingComponent;\n","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js",["1647","1648","1649"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [time, setTime] = useState('')\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n\n\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      timer(180);\n    }\n  }\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    setEmail(value.p_email)\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n\n\n    if (display) {\n      let formData = new FormData();\n      formData.append(\"email\", value.p_email);\n      formData.append(\"uid\", JSON.parse(userId));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/regenrateotp`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Please enter correct details\")\n          }\n        })\n        .catch((error) => {\n        ShowError.LoadingError(setLoading)\n        });\n      return false\n    }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n\n  //setotp\n  const setOtp = () => {\n    setDisplay(false)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    setDisplay(true)\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter email id\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}{\" \"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    autocomplete=\"off\"\n                  />\n\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    autocomplete=\"off\"\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              {\n                show ?\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_otp,\n                        })}\n                        name=\"p_otp\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter your OTP\"\n                        autocomplete=\"off\"\n                      />\n                      {\n                        disabled ? null\n                          :\n                          <small class=\"text-center\">\n                            Note: OTP is valid for {time} seconds.\n                          </small>\n                      }\n                    </div>\n                  </div>\n                  : null\n              }\n\n              {\n                loading ?\n                  <div class=\"col-md-12\">\n                    <Spinner color=\"primary\" />\n                  </div>\n                  :\n                  <div class=\"col-md-6\">\n                    {\n                      show ?\n                        <div>\n                          {\n                            disabled ? null\n                              :\n                              <>\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n                                <Cancel />\n                              </>\n                          }\n                        </div>\n                        :\n                        <>\n                          <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\n                          <Cancel />\n                        </>\n                    }\n                  </div>\n              }\n            </div>\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\n              :\n              null\n          }\n\n          <Mandatory />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n\n\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Cancel\n        </Button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js",[],"/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js",["1650"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\nfunction ViewNotification() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  \n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js",["1651","1652","1653","1654","1655","1656"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\nfunction Chatting(props) {\n\n\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(false);\n  const { message_type, query_id, query_No, routes } = data\n\n  useEffect(() => {\n    \n    const dataItem = props.location.obj\n \n    if (dataItem) {\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataCust\");\n    var data2 = JSON.parse(myData)\n   \n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\nconsole.log(\"data\", data)\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          var variable = \"Message sent successfully. \"\n          Alerts.SuccessNormal(variable)\n\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n         \n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.message_type,\n                            })}\n                            name=\"message_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n\n                        {errors.message_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.message_type.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n\n                      \n                  {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                         Send\n                        </button>\n                    }\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n         \n        </CardBody>\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js",["1657","1658","1659"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"\"),\n});\n\n\n\nfunction Feedback(props) {\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const history = useHistory();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\n          history.push({\n            pathname: `/customer/queries`,\n            index: 0,\n          });\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Feedback</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n         \n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={id}\n                          disabled\n                        />\n                      </div>\n\n\n                      <div class=\"form-group\">\n                        <label>Feedback</label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_feedback,\n                          })}\n                          placeholder=\"Feedback text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_feedback\"\n                        ></textarea>\n                        {errors.p_feedback && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_feedback.message}\n                          </div>\n                        )}\n                      </div>\n                       \n                  {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                         Submit\n                        </button>\n                    }\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          \n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js",["1660","1661","1662","1663","1664","1665","1666","1667"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ImageUrl } from \"../../config/config\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DeleteQuery from \"./DeleteQuery\";\nimport Swal from \"sweetalert2\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction EditQuery(props) {\n\n  const history = useHistory();\n  const { id } = useParams();\n  \n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const [loading, setLoading] = useState(false);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [queryDocs, setQueryDocs] = useState([]);\n const [qno, setQno] = useState()\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [selectError, setSelectError] = useState()\n  const [assessmentYear, setAssessmentYear] = useState([]);\n    const [value2 , setValue2] = useState();\n    const [val3, setVal3] = useState()\n    const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n\n  }\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n \n  useEffect(() => {\n    getAssementYear();\n    getQuery();\n   \n  }, []);\n\n \n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n  const getQuery = () => {\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n\n      if (res) {\n        var specific = res.data.result[0].specific_query;\n        if (specific == \"undefined\") {\n        } else var sepData = JSON.parse(specific);\n        reset({\n          users: sepData,\n        });\n         setQno(res.data.result[0].assign_no)\n        var value = res.data.result[0].assessment_year;\n        var purposeItem = res.data.result[0].purpose_opinion;\n\n\n        try {\n         \n          var myPurpose = JSON.parse(purposeItem);\n\n         \n          setPurposeOption(myPurpose);\n        } catch (e) {\n          \n        }\n        try {\n          var myObj = JSON.parse(value);\n         \n\n          setSelectedOption(myObj);\n        \n        } catch (e) {\n          \n        }\n       \n        setValue2(res.data.result[0].fact_case);\n     \n      //  setValue(\"fact_case\", res.data.result[0].fact_case);\n        setValue(\"case_name\", res.data.result[0].case_name);\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\n        setValue(\n          \"p_Softcopy_digital\",\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\n        );\n        setValue(\n          \"p_Softcopy_physical\",\n          Boolean(+res.data.result[0].printout_physically_assigned)\n        );\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\n        setQueryDocs(res.data.queries_document);\n      }\n    });\n  };\n\n  const onSubmit = (value) => {\n  \n    \n    if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_Softcopy_word === false && value.p_Softcopy_digital === false && value.p_Softcopy_physical === false) {\n    \n      setCheckerror(\"Please select at least one.\")\n    }\n    else {\n      const timer = setInterval(() => {\n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10));\n      }, 800);\n      setLoading(true)\n     \n\n      var uploadImg = value.uploadImg;\n      if(uploadImg === undefined){\n        uploadImg = 0;\n      }\n      let formData = new FormData();\n     \n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          let file = uploadImg[i];\n          formData.append(\"upload_1[]\", file);\n        }\n      }\n   \n      formData.append(\"fact\", value2);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"id\", id);\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_Softcopy_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_Softcopy_physical)\n      );\n      formData.append(\"case_name\", value.case_name);\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n      axios\n        .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setUploadOrDownloadCount(100)\n            var message = response.data.message\n            if (message == \"\") {\n              Swal.fire(\n                \"Success\",\n                `Query updated successfully.`,\n                \"success\"\n              )\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query Updated Successfully.</p>\n                <br/><p class=\"text-danger\"> ${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            setLoading(true)\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n        });\n    }\n  };\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Update Query - {qno}</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <DeleteQuery id={id} setLoading={setLoading}/>\n            </Col>\n          </Row>\n         \n        </CardHeader>\n\n        <CardHeader>\n         \n            <div className=\"container-fluid\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Brief facts of the case<span className=\"declined\">*</span></label>\n                     \n                        <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                    name=\"p_fact\"\n                   data={value2}\n                    onChange={ ( event, editor ) => {\n                      setValue2(editor.getData());\n                      // setcustError(\"\")\n                    \n                  } }\n                    //ref={register({ required: true })}\n                >\n                  \n                  </CKEditor>\n                      </div>\n                    </div>\n</div>\n<div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn btn-primary\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.map((item, index) => (\n                        <div className=\"question_query_field mb-2\" key={item.id}>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.users,\n                            })}\n                            ref={register}\n                            name={`users[${index}].query`}\n                            defaultValue={`${item.query}`}\n                            placeholder=\"Specify your query\"\n                            ref={register({ required: true })}\n                          />\n                          <div\n                            className=\"btn btn-primary ml-2\"\n                            onClick={() => remove(index)}\n                          >\n                            -\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Purpose for which Opinion is sought <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          value={purposeOption}\n                          isMulti\n                          options={purpose}\n                        />\n                      </div>\n                     \n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          value={selectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <ImageUploads register={register} control={control} />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_word\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            onChange={remError}\n                            type=\"checkbox\"\n                            name=\"p_Softcopy_digital\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_physical\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>  </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent, (4-5 Working Days)\"\n                          // disabled\n                          />\n                          <label>Urgent</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular (10-12 Working Days)\"\n                          // disabled\n                          />\n                          <label>Regular </label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Display Documents</label>\n                        <br />\n\n                        <>\n                          <div>\n                            {queryDocs.map((p, i) => (\n                              <ul style={{listStyle : \"none\"}}>\n                                <li>\n                                  <a\n                                    href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                                    target=\"_blank\"\n                                  >\n                                  <em>\n                                    {++i}\n                                    </em>  <i\n                                      class=\"fa fa-photo\"\n                                      style={{ width: \"50\", height: \"20\" }}\n                                    ></i>\n                                    <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\n                                  </a>\n                                </li>\n                              </ul>\n                            ))}\n\n                          </div>\n                        </>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"case_name\"\n                          ref={register}\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {\n                      loading ?\n                      <Box position=\"relative\" display=\"inline-flex\">\n                      <CircularProgress variant=\"determinate\" \n                                        value={uploadOrDownloadCount} />\n                      <Box\n                        bottom={0}\n                        right={0}\n                        top={0}\n                        justifyContent=\"center\"\n                        left={0}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        position=\"absolute\"\n                      >\n                        {`${Math.round(uploadOrDownloadCount)}%`}\n                      </Box>\n                    </Box>\n                            \n                        :\n                        <button className=\"btn btn-success\" type=\"submit\">\n                          Update\n                        </button>\n                    }\n                </form>\n\n              </div>\n\n              <Mandatory />\n            </div>\n       \n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditQuery;\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\n        <PublishIcon color=\"secondary\" />\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <>\n        {index === 0 ? \n        <div className=\"question_query_field mb-2\" key={index}>\n        <input\n          type=\"file\"\n          name= \"uploadImg\"\n          multiple={true}\n          ref={register()}\n          className=\"form-control-file manage_file\"\n          defaultValue={item.pics}\n        />\n        <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n          -\n        </div>\n      </div> : \"\"}\n        </>\n      ))}\n    </>\n  );\n};\n\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\n","/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js",["1668","1669","1670","1671","1672"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction FeedbackData(props) {\n\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\" };\n            },\n          \n        },\n\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Feedback\",\n            dataField: \"feedback\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"150px\" };\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default FeedbackData;\n       ","/home/pooja/MazarsRepo/src/views/Message/Message.js",["1673","1674","1675","1676","1677","1678","1679","1680"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../common/common\";\nimport { useHistory } from \"react-router\";\n\nfunction Message(props) {\n    \n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    let history = useHistory();\n    const paymentHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n    };\n\n  \n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}\n                &type_list=all`\n            )\n            .then((res) => {\n\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                   \n                }\n            });\n    };\n\n\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n          \n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        \n {\n    text: \"Date\",\n    dataField: \"setdate\",\n    sort: true,\n    headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n    },\n\n},\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",      \n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link to={`/customer/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display : \"flex\",\n                                            justifyContent : \"space-between\",\n                                            wordBreak : \"break-word\"\n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n\n                                    :\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display :\"flex\",\n                                            justifyContent : \"space-between\",\n                                            wordBreak : \"break-word\"\n                                        }}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n\n                            }\n                        </Link>\n\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n\n\n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n               \n            })\n            .catch((error) => {\n                \n            });\n    };\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                \n                {/* <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Message</CardTitle>\n                        </Col>\n                        <Col md=\"3\">\n                        <button\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n                        </Col>\n                    </Row>\n                </CardHeader> */}\n                        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <button\n                class=\"btn btn-success\" \n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Message</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <PaymentModal\n                        paymentHandler={paymentHandler}\n                        addPaymentModal={addPaymentModal}\n                    // data={data}\n                    // getProposalData={getAssignmentData}\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js",["1681","1682","1683","1684"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\nimport AllPayment from \"./AllPayment\";\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n      \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n      \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js",["1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PayModal from \"./PayModal\";\nimport { Typography } from \"antd\";\nimport './index.css';\nconst PayDetails = (props) => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"userid\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n        //console.log(res.data.payment_detail.length)\n       // setShowTable(res.data.payment_detail[0].invoice_generated)\n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n                textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p style={{fontSize : \"11px\"}}>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\",\n                textAlign : \"right\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                  <>\n                  {row.is_paid == \"1\" ?\n                   <p>{nfObject.format(x)}</p> : \"\"}\n                  </>\n                 )\n               }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount;\n                 console.log(nfObject.format(x))\n                 return(\n                  <>\n                  {row.is_paid == \"1\" ?\n                   <p>{nfObject.format(x)}</p> : \"\"}\n                  </>\n                 )\n               }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice / Pay\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                  <div style={{display : \"flex\", alignItems: \"center\", justifyContent : \"space-between\"}}>\n                  {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                          \n                          {row.is_paid == \"0\" ? \n            <div title=\"Pay\">\n                    <i\n                class=\"fa fa-mail-forward\"\n                style={{\n                    fontSize: \"14px\",\n                    cursor: \"pointer\",\n                    color: \"blue\"\n                }}\n                onClick={() => openModal(row)}\n            ></i> \n                </div>: \"\"}\n                  </div>\n                   </>\n                )\n            },\n           \n        },\n        \n       \n       \n        {\n            dataField: \"\",\n            text: \"Payment Receipt\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                \n             \n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"_blank\">Payment receipt</a> \n            : \"\"}\n           {row.is_paid == \"2\" ? \n           <p style={{ fontSize: \"11px\", padding: \"5px\", color : \"red\"}}>Declined</p>  : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n             <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Payment Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n          <CardBody>\n   {showTable == true ? \n     <div className=\"tableFixHead\">\n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/>  \n</div> : \n<Container>\n    <p>Invoice not generated</p>\n    </Container>}\n<PayModal \nshowModal = {modal}\nmodalToggle = {openModal}\nmodalData = {modalData}/>\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/views/Contact/Contact.js",["1706","1707"],"import React from 'react';\nimport Layout from \"../../components/Layout/Layout\";\nimport { Card , CardBody, CardTitle, CardHeader, Row, Col} from 'reactstrap';\nconst Contact = () => {\n    const userId = window.localStorage.getItem(\"userid\")\nreturn (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n<Card>\n\n<CardHeader>\n<h3 style={{textAlign: \"center\"}}>Contact Us</h3>    \n        </CardHeader>\n<CardBody style={{textAlign: \"center\"}}>\n<Row>\n          <Col md=\"12\">\n            \n          <h4>Mazars House</h4>\n    <h4>421, Udyog vihar Phase IV</h4>\n\n    <h4>Gurugram,Haryana 122016,\nIndia</h4>\n<a href=\"https://www.mazars.co.in\" target= \"_blank\">www.mazars.co.in</a>\n<div>\nTel:<a href=\"tel:+496170961709\"> 91 124 481 4444</a>\n</div>\n            </Col>\n           \n          </Row>\n</CardBody>\n</Card>\n   </Layout>\n)\n}\nexport default Contact;","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js",["1708","1709","1710"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../config/config\";\nfunction PaymentGateway(){\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const info = {\n      \"state\" : \"Haryana\",\n      \"email\" : \"singhnishantrana@gmail.com\", \n      \"gender\" : \"\", \n      \"dob\" : \"01-11-1990\",\n      \"city\" : \"Gurugoan\",\n      \"pincode\" : \"122017\", \n      \"status\" : \"1\",\n      \"first_name\" : \"Nishant Rana\",\n      \"last_name\" : \"\",\n      \"address_line_1\" : \"A-22, A Block\",\n      \"address_line_2\" : \"Sector 109\",\n      \"plan_name\" : \"TPIN_100Mbps_Combo\"\n    }\n    const billdes = {\n      // \"HSN_SAC_code\": \"11040\",\n        \"Desc\": \"Bill for Mazars\",\n        \"Qty\": \"1\",\n        \"UoM\": \"NA\",\n        \"Rate\": \"11620.0\",\n        \"Total\": \"1.0\",\n        \"Discount\": \"0\",\n        \"Delivery_Charges\": \"0\",\n        \"Net_Tax_Val\": \"0\",\n        \"CGST_Rate\": \"0\",\n        \"CGST_Amount\": \"0\",\n        \"SGST_Rate\": \"0\",\n        \"SGST_Amount\": \"0\",\n        \"IGST_Rate\": \"0\",\n        \"IGST_Amount\": \"0\",\n        \"Total_Amount\": \"1.0\"\n    }\n    const onSubmit = (value) => {\n\n \n    let formData = new FormData()\n    formData.append(\"token\", \"09f3b52d937b320e929ad45153ef745d\");\n    formData.append(\"timestamp\", \"09-09-2021 13:52:02\");\n    formData.append(\"mobile\", \"9818685050\");\n    formData.append(\"type\", \"F\");\n    formData.append(\"userInfo\" , JSON.stringify(info));\n    formData.append(\"billDescription\", JSON.stringify(billdes));\n    formData.append(\"ekycStatus\", 0);\n    formData.append(\"public_key\", \"791E14FF-6243-4A73-A6E1\");\n    formData.append(\"Bill_no\", \"11189974221\");\n    formData.append(\"Balance\", \"100\");\n    formData.append(\"Bill_due_date\",  \"24-09-2021\");\n    formData.append(\"user_id\", \"9818685050\");\n    formData.append(\"merchant_id\", \"T10012\");\n    formData.append(\"agent_id\", \"8595923172\");\n    formData.append(\"caf_number\", \"\");\n\n  \n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n  \"token\": \"09f3b52d937b320e929ad45153ef745d\",\n  \"timestamp\": \"09-09-2021 13:52:02\",\n  \"mobile\": \"7703954008\",\n  \"type\": \"F\",\n  \"userInfo\": {\n    \"state\": \"Haryana\",\n    \"email\": \"na@gmail.com\",\n    \"gender\": \"\",\n    \"dob\": \"\",\n    \"city\": \"Gurgaon\",\n    \"pincode\": \"122002\",\n    \"status\": \"1\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"Test\",\n    \"address_line_1\": \"Test, Tower - A, Ground Floor\",\n    \"address_line_2\": \"DLF Phase I\",\n    \"plan_name\": \"20 Mbps free\"\n  },\n  \"billDescription\": {\n    \"HSN_SAC_code\": \"15684\",\n    \"Desc\": \"20 Mbps free\",\n    \"Qty\": \"1\",\n    \"UoM\": \"NA\",\n    \"Rate\": \"10.0\",\n    \"Total\": \"10.0\",\n    \"Discount\": \"0\",\n    \"Delivery_Charges\": \"0\",\n    \"Net_Tax_Val\": \"0\",\n    \"CGST_Rate\": \"0\",\n    \"CGST_Amount\": \"0\",\n    \"SGST_Rate\": \"0\",\n    \"SGST_Amount\": \"0\",\n    \"IGST_Rate\": \"0\",\n    \"IGST_Amount\": \"0\",\n    \"Total_Amount\": \"10.0\"\n  },\n  \"ekycStatus\": \"1\",\n  \"public_key\": \"791E14FF-6243-4A73-A6E1\",\n  \"Bill_no\": \"15293997\",\n  \"Balance\": \"10.0\",\n  \"Bill_due_date\": \"20-09-2021\",\n  \"user_id\": \"7703954008\",\n  \"merchant_id\": \"T10001\",\n  \"agent_id\": \"8689003344\",\n  \"caf_number\": \"TP-EC-44882\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://pay.mobilpay.in/index.php/getUserBillData\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    }\n      return(\n        <div className=\"container\">\n\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Client Register</h2>\n          </div>\n          <>\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Mobile<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_mobile\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Mobile Number\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_mobile,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_type\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_type,\n                        })}\n                        \n                        placeholder=\"Enter type\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n               <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Information<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_userInfo\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter User Information\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_userInfo,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Description<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_billDescription\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_billDescription,\n                        })}\n                        \n                        placeholder=\"Enter Your Description\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Ekyc Status<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_ekycStatus ,\n                        })}\n                        name=\"p_zipCode\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Public Key<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_publicKey ,\n                        })}\n                        name=\"p_publicKey\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_no,\n                        })}\n                        \n                        placeholder=\"Bill Number\"\n                        name=\"bill_no\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                    </div>\n                  </div>\n    \n                      <div class=\"col-md-6\">\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Balance<span className=\"declined\">*</span></label>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.balance,\n                            })}\n                            name=\"balance\"\n                            ref={register({ required: true })}\n                           \n                            placeholder=\"Enter Amount\"\n                            autocomplete=\"off\"\n                          />\n                         \n                        </div>\n                      </div>\n              </div>\n              <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Due Date<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_dueDate ,\n                        })}\n                        name=\"bill_dueDate\"\n                        ref={register({ required: true })}\n                        placeholder=\"Due Date\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.user_id ,\n                        })}\n                        name=\"user_id\"\n                        placeholder=\"Enter your user id\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Agent Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.agent_id ,\n                        })}\n                        name=\"agent_id\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Merchant Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.merchant_id ,\n                        })}\n                        name=\"merchant_id\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">CAF Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.caf_number ,\n                        })}\n                        name=\"caf_number\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.email ,\n                        })}\n                        name=\"email\"\n                        placeholder=\"Enter Email\"\n                        ref = {register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n             <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">DOB<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.dob ,\n                        })}\n                        name=\"dob\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Date of Birth\"/>\n                    </div> \n                  </div>\n                  <div className=\"col-md-6\">\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary justify\">Submit</button>\n                  </div>\n             </div>\n              </form>\n    \n              </div>\n          </>\n    \n        </div>\n    \n      </div>\n      )\n   \n}\nexport default PaymentGateway;","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js",["1711","1712","1713"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport {useHistory} from 'react-router-dom';\nimport Cookies from \"js-cookie\"\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  let history = useHistory()\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          setShow(true)\n          Cookies.set(\"adminName\", response.data.display_name)\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\n            \"icon\" : \"success\"\n          })\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data[\"user id\"])\n          logout()\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 36000000)\n  }\n  const handleChange = (e) => {\n  \n    setEmail(e.target.value);\n  };\n \n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  \n  return (\n    <>\n      <Header admin=\"admin\" noAdminSign = \"adminSign\"/>\n      <div class=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid}\n              loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div class=\"form\">\n              <div class=\"heading\">\n                <h2>ADMIN LOGIN</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        autocomplete=\"off\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/admin/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n\n      </div>\n      <Footer />\n    </>\n  );\n}\nexport default Login;","/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js",["1714","1715","1716","1717"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n\nfunction Proposal(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n\n\n  useEffect(() => {\n    const getAllProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAllProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getAcceptedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAcceptedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getDeclinedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setDeclinedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getPendingForAcceptence = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setPendingProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    getAllProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n    getPendingForAcceptence();\n  }, []);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Client Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposalComponent />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAcceptence />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedPropoal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [emailPost, setEmailPost] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [valiEmailPost, setValiemailPost] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [invalidPost, setInvalidPost] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [wEmailPost, setWemailPost] = useState();\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [display, setDisplay] = useState(false);\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n\n\n\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        if (res.data.code === 1) {\n          \n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n\n  const onSubmit = (value) => {\n   \n   \n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n  \n    subData.map((i) => {\n   \n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n    }\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\n    \n    }\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\n     \n    }\n    else {\n      setDisplay(true)\n      setLoading(true)\n    \n      let formData = new FormData();\n\n      formData.append(\"personal_email\", value.p_email);\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"type\", \"tl\");\n      formData.append(\"cat_id\", categeryList)\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"email\", email)\n      formData.append(\"pcat_id\", kk)\n      formData.append(\"allpcat_id\", parentCategoryName)\n      formData.append(\"allcat_id\", JSON.stringify(dd))\n\n\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/AddTeamLead`,\n        data: formData,\n      })\n\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Teamleader created successfully.\",\n              \"icon\": \"success\"\n            })\n\n            history.goBack();\n          }\n          if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n\n        })\n        .catch((error) => {\n\n        });\n    }\n\n  };\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  // Sub Category Function\n  const subCategory = (e) => {\n  \n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  \n    e.map((i) => {\n\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\n    })\n   \n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n    let pk = []\n    if(indir.length === 0 && dir.length === 0){\n      setCategoryData(\"\")\n    }\n   else if(dir.length === 0){\n      let bb = {\n        value : \"2\",\n        label : \"Indirect tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n    else if(indir.length === 0){\n      let bb = {\n        value : \"1\",\n        label : \"Direct tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n  \n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    v.map((val) => {\n      vv.push(val.value)\n      setmcategory(val.value);\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        let dkkk = []\n        let pkk = []\n                for (let i = 0; i < subData.length; i++) {\n                                     kk.push(subData[i])\n                    dkkk.push(subData[i].label)\n                  \n                }\n                console.log(subData)\n                setDd({\n                  \"direct\" : dkkk,\n                  \"indirect\" : pkk\n                })\n                subCategeryData(kk)\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  \n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setValiemail(response.data.result)\n            setInvalid('')\n          } else if (response.data.code === 0) {\n            setInvalid(response.data.result)\n            setValiemail('')\n          }\n        })\n        .catch((error) => {\n\n        });\n    }\n    else {\n      setWemail(\"invalid email\")\n    }\n\n  }\n \n  const checktlPost = (e) => {\n  setPostName(e.target.value)\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div className=\"col-md-12 d-flex\">\n            <div>\n              <button\n                className=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div className=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label>Teamleader Post Name <span className=\"declined\">*</span></label>\n                      \n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name || posError.exits,\n                        })}\n                        onBlur={(e) => checktlPost(e)}\n                        name=\"post_name\"\n                        ref={register}\n                      />\n                    {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label>Teamleader Post Email <span className=\"declined\">*</span></label>\n                    \n                   \n                    <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail} \n                        name=\"teamleader\"/>\n                        \n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                     \n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone ,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                         onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                </div>\n              \n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options}\n                        value = {categoryData}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category}>\n                      </Select>\n\n\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        value = {subData}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"form-group\">\n                      <label>Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                       \n                      />\n                     \n                    </div>\n                  </div>\n                </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\n\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js",["1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758","1759","1760"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment(props) {\n  let history22 = useHistory()\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [teamID, setTeamID] = useState(null);\n  const [teamName, setTeamName] = useState(\"\");\n  const [query, setQuery] = useState(true);\n\n  const [expectedDate, setExpectedDate] = useState(\"\");\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n        // expectedDeliveryDate(res.data.result[0].Timelines);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setQuery(false);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n   \n    setTeamID(e.target.value);\n    var value = taxLeaderDisplay.filter(function (item) {\n      return item.id == e.target.value;\n    });\n    \n    setTeamName(value[0].name);\n  };\n\n  const onSubmit = (value) => {\n    setLoading(true)\n  \n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", teamID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n        //  getQuery();\n          // props.history.push({\n          //   pathname: `/admin/queriestab`,\n          //   index: 2,\n          // });\n          history22.push(\"/admin/queriestab\")\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const expectedDeliveryDate = (key) => {\n  \n\n    const d = new Date();\n\n    if (key == \"Urgent, (4-5 Working Days)\") {\n      const d2 = new Date(d.getTime() + 432000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\n\n     \n      setExpectedDate(new_date);\n    } else if (key == \"Regular (10-12 Working Days)\") {\n      const d2 = new Date(d.getTime() + 1296000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n     \n      setExpectedDate(new_date);\n    }\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/admin/queriestab`,\n                  index: 1,\n                }}\n              >\n                <button class=\"btn btn-success ml-3\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">Query No.</th>\n                            <th scope=\"col\">Team Leaders<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Expected Timeline</th>\n                            <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {query ? (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_taxprof,\n                                  })}\n                                  name=\"p_taxprof\"\n                                  ref={register}\n                                  onChange={(e) => handleChange(e)}\n                                >\n                                  <option value=\"\">-select-</option>\n                                  {taxLeaderDisplay.map((p, index) => (\n                                    <option key={index} value={p.id}>\n                                      {p.postname}\n                                    </option>\n                                  ))}\n                                </select>\n                                {errors.p_taxprof && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_taxprof.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  value={timelines}\n                                  class=\"form-control\"\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"date\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_expdeldate,\n                                  })}\n                                  min={item}\n                                />\n                                {errors.p_expdeldate && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_expdeldate.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <button type=\"submit\" class=\"btn btn-success\">\n                                  Assign\n                                </button>\n                              </td>\n                            </tr>\n                          ) : (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select class=\"form-control w-75 p-0\" disabled>\n                                  <option>{hideQuery.name}</option>\n                                </select>\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  class=\"form-control\"\n                                  value={hideQuery.timeline}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  class=\"form-control\"\n                                  value={hideQuery.expdeliverydate}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <button class=\"btn btn-success\" disabled>\n                                  Assigned\n                                </button>\n                              </td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </form>\n                    <Mandatory />\n\n                  </div>\n                </div>\n              </>\n          }\n\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["1761","1762","1763","1764","1765","1766","1767","1768","1769"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nfunction QueriesRecevied(props) {\n \n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          \n         setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n         \n         if(res.data.result[0].status ==\"Declined Query\"){\n        \n         let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n           setDeclined2(a)\n          setDeclinedStatus(true)\n         }\n        \n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n             \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n          \n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            console.log(\"payDetails\", res.data.payment_detail)\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n         \n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n         \n          \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n         \n          if (res.data.proposal_queries.length > 0) {\n           \n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n           \n          }\n\n          if (res.data.assignment.length > 0) {\n          \n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n       \n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n\n\n        }\n      });\n    };\n  //  getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Query Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                qstatus={qstatus}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                tpStatus={tpStatus}\n                declined2={declined2}\n                declinedStatus={declinedStatus}\n                finalDate={finalDate}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js",["1770","1771","1772","1773","1774"],"import React, { useState, useEffect, useLayoutEffect , createContext} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nfunction QueriesTab(props) {\n  \n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [allData, setAllData] = useState()\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState();\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setAllQueriesCount(res.data.result.length);\n        setAllData(res.data.result);\n      }\n    });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setPendingProposalCount(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    \n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Allocation ({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData allData={allData}/>\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForProposals />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js",["1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from 'sweetalert2'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  Card,\n  CardHeader\n} from \"reactstrap\";\nimport Reset from \"./Reset\";\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTL() {\n  const { Option } = Select;\n  const { id } = useParams();\n  \n  const alert = useAlert();\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(null);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [loading, setLoading] = useState(false);\n const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  \n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n  useEffect(() => {\n    getTeamLeader();\n  }, [id]);\n\n \n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n \n      if (res.data.code === 1) {\n       if(JSON.parse(res.data.result[0].allcat_id)){\n        setValue(res.data.result[0]);\n        setStore(res.data.result[0].pcat_id);\n        setShowDel(res.data.result[0].is_delete)\n       }\n       \n      }\n    });\n  };\n \n  const data1 = value.name;\n  const data2 = value.personal_email;\n  const data3 = value.phone;\n  const data4 = value.allpcat_id;\n  const data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  const data8 = value.cat_id;\n  const data9 = value.pcat_id;\n   const data10= value.cat_value;\n   const data11 = value.pcat_value;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n   defValue()\n   \n    getCategory();\n    if(data5) {\n      defSubValue();\n    }\n  }, [showDel]);\n\n  useEffect(() => {\n\n    getSubCategory();\n   \n  }, [store]);\n\n  const getSubCategory = () => {\n  if(store !== null){\n    console.log(\"store\", store)\n    axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n     \n      if (res.data.code === 1) {\n       setTax2(res.data.result);\n      }\n    });\n  }\n  };\n  \n  const onFinish = (value) => {\n   \n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n   \n\n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n      console.log(\"one\", 1)\n     \n    }\n    else if (subData.length < 1 && data5.length < 1) {\n      setError2(\"Please select at least one value\")\n      console.log(\"one\", 11)\n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n      console.log(\"one\", 111)\n    }\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\n      console.log(\"one\", 1111)\n    }\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\n      console.log(\"one\", 11111)\n    }\n    \n    else {\n   \n      setLoading(true)\n      setDisplay(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n     {email.length > 1 ? \n      formData.append(\"email\", email) :\n      formData.append(\"email\", data7)}\n      {postValue.length > 1 ?  \n        formData.append(\"post_name\", postValue) :\n        formData.append(\"post_name\", data6)}\n     {categeryList.length > 1 ?  formData.append(\"cat_id\", categeryList) : \n     formData.append(\"cat_id\", categeryList) }\n     {kk.length === 0 ?  formData.append(\"pcat_id\", data9) : \n     formData.append(\"pcat_id\", kk) }\n      { parentCategoryName.length > 0 ?\n      formData.append(\"allpcat_id\", parentCategoryName) : \n      formData.append(\"allpcat_id\", data4) } \n      \n    \n      formData.append(\"allcat_id\", JSON.stringify(dd)) \n      formData.append(\"id\", id);\nconsole.log(\"value\", categeryList)\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/updateTeamLeader`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader Updated Successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n         \n           \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n      \n    }\n  }\n\n  var dir = []\n  var indir = []\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n    console.log(\"ee\", e)\n    e.map((i) => {\n      i.value < 9 ? dir.push(i.label) : indir.push(i.label)\n    })\n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n    let pk = []\n    if(indir.length === 0 && dir.length === 0){\n      setCategoryData(\"\")\n    }\n   else if(dir.length === 0){\n      let bb = {\n        value : \"2\",\n        label : \"Indirect tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n    else if(indir.length === 0){\n      let bb = {\n        value : \"1\",\n        label : \"Direct tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n     setCategoryData(v)\n\n    setError(\"\")\n    setCustcate(v)\n\n    v.map((val) => {\n      vv.push(val.value)\n\n      setmcategory((oldData) => {\n        return [...oldData, val.value]\n      })\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      console.log(\"value\", vv)\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        console.log(\"dd\", vv)\n        let dkkk = []\n        let pkk = []\n                for (let i = 0; i < subData.length; i++) {\n                                     kk.push(subData[i])\n                    dkkk.push(subData[i].label)\n                  \n                }\n                console.log(subData)\n                setDd({\n                  \"direct\" : dkkk,\n                  \"indirect\" : pkk\n                })\n                subCategeryData(kk)\n      }\n      else if (vv.includes(\"1\")) {\n        console.log(\"dd1\", vv)\nlet dkkk = []\nlet pkk = []\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n            dkkk.push(subData[i].label)\n          }\n        }\n        console.log(subData)\n        setDd({\n          \"direct\" : dkkk,\n          \"indirect\" : pkk\n        })\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n        console.log(\"dd2\", vv)\n        let pkk = []\n        let dkkk = []\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n            dkkk.push(subData[i].label)\n          }\n        }\n        setDd({\n          \"direct\" : pkk,\n          \"indirect\" : dkkk\n        })\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n //eamil onchange\n const emailHandler = (e) => {\n   data7 = e.target.value;\n  setEmail(e.target.value);\n \n  if (e.target.value.length < 1) {\n    setWemail(\"\")\n  }\n};\n\n\n//email validaation with api\nconst emailValidation = (key) => {\n\n  var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (email.match(validRegex)) {\n    setWemail(\"\");\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"type\", 1);\n    formData.append(\"id\", id)\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/validateEditRegistration`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n  else {\n    setWemail(\"invalid email\")\n  }\n}\n\n\n\nconst defValue = () => {\n  let e = 0;\n if(data4){\n  const data55 = data4.split(\",\")\nconsole.log(\"done22\")\nlet b;\nif(value.pcat_value){\n  b = value.pcat_value.split(\",\");\n\n \n    a = data55.map((i => ({\n      \"value\" : String(b[e++]),\n      \"label\" : i\n    }) ))\n  \n}}\n\n  setCategoryData(a)\n}\nconst defSubValue = () => {\n \n   var dir1;\n   var dir2;\n   var kk = []\n   var d = 0;\n   var ind = 9;\n   let ppp;\n   let c =0;\n if(value.cat_value !== null){\n  ppp = value.cat_value.split((\",\"))\n \n let ooo = ppp.filter((i) => {\n   return i > 8\n })\n let nnn = ppp.filter((i) => {\n   return i < 9\n })\n console.log(\"nnn\", nnn);\n console.log(\"nnnn\", ooo);\n   var subcatgerydefvalue = JSON.parse(value.allcat_id);\n   indirvalue = subcatgerydefvalue.indirect;\n   dirvalue = subcatgerydefvalue.direct;\n   if(Array.isArray(dirvalue)){\n    dirvalue.map((i) => {\n     \n      allsubcatvalue.push(i)\n      kk.push(i)\n    })\n    dir1 = subcatgerydefvalue.direct.map((i => ({\n      \"value\" : String(nnn[d++]),\n      \"label\" : i\n    }) ))\n   }\n   else{\n     return false\n   }\n  if(Array.isArray(indirvalue)){\n    indirvalue.map((o) => {\n      allsubcatvalue.push(o)\n      kk.push(o)\n    })\n    dir2 = subcatgerydefvalue.indirect.map((i => ({\n      \"value\" : String(ooo[c++]),\n      \"label\" : i\n    }) ))\n  }\n  else{\n    return false\n  }\n  console.log(\"dir1\", dir1)\n  console.log(\"dir2\", dir2)\n \n   subdefval = [...dir1, ...dir2]\n  // let dircat = [dir1.label]\n  // let indircat = [dir2.label]\n  let oo = []\n  let pp = []\n  dir1.map((i) => {\n    oo.push(i.label)\n  })\n  dir2.map((i) => {\n    pp.push(i.label)\n  })\n  \n  subCategeryData(subdefval)\n  setDd({\n    \"direct\" : oo,\n    \"indirect\" : pp\n  })\n  console.log(\"dir22\", subdefval)\n  }\n}\n\n\nconst checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLEditPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n const tlName22 = (e) => {\n   \n   data6 = e.target.value\n }\n const del = (e) => {\n   Swal.fire({\n    title: \"Are you sure?\",\n    text: \"It will permanently deleted !\",\n    type: \"warning\",\n    showCancelButton : true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, delete it!\",\n   }).then((result) => {\n    if (result.value) {\n      deleteCliente(id);\n    }\n  });\n }\n const deleteCliente = (id) => {\n  axios\n    .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n    .then(function (response) {\n      \n      if (response.data.code === 1) {\n        Swal.fire(\"Teamleader has been deleted successfully\");\n        history.goBack();\n        getTeamLeader();\n      } else {\n        Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        history.goBack();\n      }\n\n    })\n    .catch((error) => {\n      \n    });\n};\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                autoComplete=\"off\"\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Teamleader Post Name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          defaultValue={data6}\n                         disabled = {showDel == \"1\" ? true : \"\"}\n                          onChange = {(e) => tlName22(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name || posError.exits,\n                          })}\n                        />\n                          {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Teamleader Post Email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          onBlur={(e) => emailValidation(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data7}\n                          onChange={(e) => emailHandler(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                                              {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <Input\n                       required\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_name,\n                          })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_phone || indNumError || numExist,\n                          })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation}\n                             />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n\n                    </div>\n                  </div>\n\n                \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                        <Select isMulti options={options}\n                        value = {categoryData}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                        \n                        onChange={category}>\n                      </Select>\n\n                         \n\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n                        <Select isMulti options={options2}\n                      onChange={subCategory}\n                            value = {subData}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value > 8\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              multiValueLabel: (styles, { data }) => ({\n                                ...styles,\n                                color: data.value < 9\n                                    ? \"blue\"\n                                    : \"green\"\n                              }),\n                            }}\n                          >\n                          </Select>\n                       \n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.email,\n                          })}\n                      \n                          />\n                        </Form.Item>\n                       \n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",["1818","1819","1820"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllPayment from \"./AllPayment\";\nimport Paid from \"./Paid\";\nimport Unpaid from \"./Unpaid\";\n\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAllPayment(res.data.result.length);\n        }\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?status=1`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setPaid(res.data.result.length);\n        }\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?status=2`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setUnpaid(res.data.result.length);\n        }\n      });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js",["1821","1822","1823"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\nimport AssignmentComponent from \"./AllAssignment\";\nimport DraftReport from \"./DraftReport\";\nimport FinalReport from \"./FinalReport\";\n\nfunction AssignmentTab(props) {\n \n\n    const userid = window.localStorage.getItem(\"adminkey\");\n\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n    const [draft, setDraft] = useState(\"\");\n    const [final, setFinal] = useState();\n\n\n    useEffect(() => {\n        CountAllAssignment();\n        CountDraftReport();\n        CountFinalReport();\n    }, []);\n\n\n    const CountAllAssignment = (data) => {\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n         \n            if (res.data.code === 1) {\n                setAllAssignmentCount(res.data.result.length);\n            }\n        });\n    };\n\n    const CountDraftReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setDraft(res.data.result.length);\n            }\n        });\n    };\n\n    const CountFinalReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setFinal(res.data.result.length);\n            }\n        });\n    };\n\n    const [tabIndex, setTabIndex] = useState(0);\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"auto\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"auto\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Assignments ({allAssignmentCount})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Draft Reports  ({draft})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                        Inprogress; Delivery of Final Reports ({final})\n                        </Tab>\n\n                    </TabList>\n\n                    <TabPanel>\n                        <AssignmentComponent />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <DraftReport />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <FinalReport />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default AssignmentTab;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js",["1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = (props) => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState(false)\n    const [showTable, setShowTable] = useState(null);\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\n   \n    const paydetails2 = () => {\n          console.log(\"done22\")\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\n\n.then((res) => {\n    if(res.data.code === 1){\n      \n        setPaymentDetail(res.data.payment_detail)\n       \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p style={{fontSize : \"11px\"}}>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\", textAlign : \"right\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n        {\n            dataField: \"\",\n            text: \"Payment Receipt\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n               \"\":   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"blank\">Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n      \n      \n      \n  \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n      <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n            </Col>\n            <Col md=\"8\">\n              <h4>Payment Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n          <CardBody>\n  \n  \n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/> \n\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js",["1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904"],"import React, { useState, useEffect , useRef} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\n\nimport { Spinner } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTP() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [show, setShow] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [loading, setLoading] = useState(false);\n  const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const selectInputRef = useRef();\n  const selectInputRef2 = useRef();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  var vv = []\n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n \n\n  \n  var data1 = value.name;\n  var data2 = value.personal_email;\n  var data3 = value.phone;\n  var data4 = {\n    \"value\" : value.allpcat_id,\n    \"label\" : value.allpcat_id\n  }\n  var data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  var data8 = value.cat_id;\n  var data9 = value.pcat_id\n  var data10 = value.tl_id\n  var data11 = value.tl_name\n  var postEmmail = value.tl_post_email;\n \n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n  useEffect(() => {\n    getTutorial(id);\n  }, [id]);\n\n  const getTutorial = (id) => {\n   axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setValue(res.data.result[0]);\n          setStore(res.data.result[0].pcat_id);\n          setShowDel(res.data.result[0].is_delete)\n          categoryData(res.data.result[0].allcat_id)\n        }\n      })\n      .catch((e) => {\n     \n      });\n  };\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n          console.log(\"tax2\", res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onFinish = (value) => {\n\n\n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1 && data5.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n      setDisplay(true)\n     setLoading(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n    \n      formData.append(\"tp_id\", data10);\n      {email.length > 1 ? \n        formData.append(\"email\", email) :\n        formData.append(\"email\", data7)}\n        {postValue.length > 1 ?  \n          formData.append(\"post_name\", postValue) :\n          formData.append(\"post_name\", data6)}\n      // {\n      //   categeryList.length > 1 ? formData.append(\"pcat_id\", store) :\n      //   formData.append(\"pcat_id\", data8)\n      // }\n      {\n        categeryList.length === 0 ? formData.append(\"pcat_id\", data9)\n        : formData.append(\"pcat_id\", store)\n      }\n     \n\n\n      {\n        categoryData.length === 0 ? formData.append(\"cat_id\", data8) :\n        formData.append(\"cat_id\", categeryList)\n      }\n\n\n      {\n        categoryData.length === 0 ?\n        formData.append(\"allpcat_id\", data4.label) :\n        formData.append(\"allpcat_id\", categoryData.label)\n      }\n\n      {\n        categeryName.length > 0 ? formData.append(\"allcat_id\",categeryName) :\n        formData.append(\"allcat_id\", data5)\n      }\n      formData.append(\"id\", id);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tp/updateTP`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n           setLoading(false)\n          \n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Tax Professional details updated successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n     \n    }\n  }\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n    console.log(\"vvv\", v)\n    selectInputRef.current.select.clearValue();\n   \n    setCategoryData(v)\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n    subdefval = {}\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        \n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    data7 = e.target.value\n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      formData.append(\"id\", id)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateEditRegistration`,\n        data: formData,\n      })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n\n      });\n    }\n    else {\n      setWemail(\"Invalid email\")\n    }\n  }\n\n  \n const defSubValue = () => {\n var k;\n \n   var subcatgerydefvalue = value.allcat_id.split(\",\");\n   value.allpcat_id.includes(\"Indirect\") === true  ? k = 8 : k = 2\n \n  subdefval = subcatgerydefvalue.map((i => ({\n   \"value\" : String(++k),\n   \"label\" : i\n }) ))\n \n  }\n \n if(data5 != undefined){\n   defSubValue();\n }\n\n const checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLEditPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  const del = (e) => {\n    Swal.fire({\n     title: \"Are you sure?\",\n     text: \"It will permanently deleted !\",\n     type: \"warning\",\n     showCancelButton : true,\n     confirmButtonColor: \"#3085d6\",\n     cancelButtonColor: \"#d33\",\n     confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n     if (result.value) {\n       deleteCliente(id);\n     }\n   });\n  }\n  const deleteCliente = (id) => {\n   axios\n     .get(`${baseUrl}/tp/deleteTP?id=${id}`)\n     .then(function (response) {\n       \n       if (response.data.code === 1) {\n         Swal.fire(\"Taxprofessional has been deleted successfully\");\n         history.goBack();\n       } else {\n         Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n         history.goBack();\n       }\n \n     })\n     .catch((error) => {\n       \n     });\n };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  autoComplete=\"off\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                   <div class=\"row\">\n                  <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                  <label>Teamleader post name <span className=\"declined\">*</span></label>\n                  <input type=\"text\" className = \"form-control\" \n                  defaultValue = {data11} \n              disabled />   \n                    </div>\n                  </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          defaultValue = {postEmmail}\n                         disabled\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      \n                      <label>TP post name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data6}\n                          onChange={(e) => data6= e.target.value}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name,\n                          })}\n                        />\n                         {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    \n                  \n                    <label> TP post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"p_email\"\n                        ref={register}\n                        disabled = {showDel == \"1\" ? true : \"\"}\n                      defaultValue={data7}\n                     \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={emailValidation}\n                      />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                    </div>\n                  </div>\n                   \n                    \n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <input\n                            required\n                           \n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_name,\n                            })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_phone || indNumError || numExist,\n                            })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation} />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> :\"\"}\n\n                    </div>\n                  </div>\n\n               \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                          <Select  options={options}\n                            defaultValue={data4} onChange={category}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value == 2\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              singleValue: (styles, { data }) => ({\n                                ...styles,\n                                color: data.label  == \"Indirect tax\"\n                                    ? \"green\"\n                                    : \"blue\"\n                              }),\n                            }}\n                            ref={selectInputRef2}\n                            // onFocus = {(e) => {\n                            //   selectInputRef2.current.select.clearValue();\n                            // }}\n                          >\n                          </Select>                  \n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n\n                        <Select isMulti options={options2}\n                          onChange={subCategory}\n                          defaultValue = { subdefval}\n                          ref={selectInputRef}\n\n                          // value = {subData}\n                          styles={{\n                            option: (styles, { data }) => {\n                              return {\n                                ...styles,\n                                color: data.value > 8\n                                  ? \"green\"\n                                  : \"blue\"\n                              };\n                            },\n                            multiValueLabel: (styles, { data }) => ({\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            }),\n                          }}\n                         >\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          type=\"email\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.email || wEmail ,\n                            })}/>\n                        </Form.Item>\n                        {\n                          wEmail ? <p className=\"declined\">{wEmail}</p> : \"\"\n                           \n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",["1905","1906","1907","1908","1909","1910"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport History from './History.js';\nfunction TaxProfessionalsTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [myPurpose, setPurpose] = useState([])\n  var digit2 = [];\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\n    ;\n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTpCount(res.data.result.length);\n      }\n    });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n    if(typeof(key) == \"object\") {\n     \n    }\n    else{\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n         \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    }\n    \n   \n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\"};\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"tl_post_email\",\n      text: \"TL post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"post_name\",\n      text: \"TP post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TP post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TP\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      // dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n      formatter : function nameFormatter(cell, row) {\n       \n        digit2 = row.allpcat_id.split(\",\")\n       \n        return(\n          <>\n          \n          {\n             digit2.map((e) => {\n             return(\n               <>\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>  \n               </>\n             ) \n           })\n          }\n           </>\n        )\n      }\n    },\n   \n   \n    {\n      \n     \n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n      formatter : function nameFormatter(cell, row) {\n        var digit = [];\n         \n        digit = row.allcat_id.split(\",\")\n      let kk;\n      if(digit.length > 1){\n        kk = \",\"\n      }\n      else{\n        kk = \"\"\n      }\n      \n        return(\n          <>\n          \n         {\n            digit.map((e) => {\n            return(\n              <>\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + kk}</p>  \n              </>\n            ) \n          })\n         }\n          </>\n        )\n      }\n    },\n   \n   \n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittp/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n            {/* <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i> */}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  //check\n  const del = (id) => {\n  \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n  \n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTaxProf();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n            classes=\"table-responsive\"\n          />\n          </div>\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default TaxProfessionalsTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",["1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nimport History from './History.js';\nfunction TeamLeaderTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tlCount, setTlCount] = useState(\"\");\n  const [subCat, setsubCat] = useState([])\n  const [history, setHistory] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n  var kk = []\n  var pp = []\n  \n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n   if(typeof(key) == \"object\") {\n    \n   }\n   else{\n    {\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n         \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    };\n   }\n   \n   \n  }\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"post_name\",\n      text: \"TL post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TL post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style : {\n         wordBreak : \"break-word\"\n         },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TL\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style : {\n         whiteSpace : \"nowrap\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n    \n     \n      formatter: function nameFormatter(cell, row) {\n        var digit2 = [];\n        var digit3 = []\n        digit2 = row.allpcat_id.split(\",\")\n        if(row.allpcat_id.split(\",\")[0] === \"Indirect tax\"){\n        \n          digit3 = row.allpcat_id.split(\",\")\n        }\n        else{\n          digit3 =  row.allpcat_id.split(\",\").reverse()\n        }\n      \n        return (\n          <>\n            {\n              digit3.map((e) => {\n                return (\n                  <>\n                 \n                 <div style={{display : \"flex\", height : \"80px\"}}>\n                 <p className={e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>\n                 </div>\n                  </>\n                )\n              })\n            }\n          </>\n        )\n      }\n    },\n    {\n      dataField: \"allcat_id\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n      formatter: function nameFormatter(cell, row) {\n        var digit = [];\n\n         digit = JSON.parse(row.allcat_id);\n         console.log(\"digit\",digit)\nlet k, pp;\n\nif(digit.direct && digit.direct.length -1 == \"1\"){\n  k = \", \";\n}\nelse{\n  k = \"\";\n}\nif(digit.indirect && digit.indirect.length -1 == \"1\"){\n  pp = \", \";\n}\nelse{\n  pp = \"\";\n}\n        return (\n          <>\n           {digit.direct.length > 0 && digit.indirect.length > 0 ?\n           <>\n            <div style={{display : \"block\", height : \"80px\"}}>\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>\n            </div>\n            <div style={{display : \"block\", height : \"70px\"}}>\n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> \n            </div>\n           </> : <>\n           {digit.direct.length > 0 ?\n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> :\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>\n           }\n           </>\n           }\n          \n           {/* {digit.direct === null ? null :\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>}\n         {digit.indirect === null ? null : \n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> } */}\n          </>\n\n        )\n      }\n    },\n\n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittl/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          \n          </>\n        );\n\n      },\n\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTeamLeader();\n\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n        pp.push(res.data.result)\n        setData((res.data.result));\n        setTlCount(res.data.result.length);\n      }\n    });\n  };\n\n\n  //check\n  const del = (id) => {\n   \n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTeamLeader();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n\n\n  return (\n\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     \n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtl\"} className=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            classes=\"table-responsive\"\n            columns={columns}\n            rowIndex\n          />\n          </div>\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default TeamLeaderTab","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js",["1922","1923","1924","1925","1926"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import FeedbackService from \"../../../config/services/QueryDetails\";\nimport CommonServices from \"../../../common/common\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\n\nfunction FeedbackTab() {\n  const alert = useAlert();\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n  const [feedbackNumber, setfeedbackNumber] = useState();\n  useEffect(() => {\n    getFeedback();\n  }, [userid]);\n\n  const getFeedback = () => {\n    axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setFeedBackData(res.data.result);\n       if(res.data.result != undefined){\n         setfeedbackNumber(res.data.result.length)\n       }\n      }\n    });\n  };\n\n \n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n     \n    },\n\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        \n        return <>{row.assign_no}</>;\n      },\n    },\n    {\n      text: \"Feedback\",\n      dataField: \"feedback\",\n   \n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        \n        return (\n          <>\n            <div>\n              {\n                row.admin_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\", wordBreak : \"break-word\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                   \n                    title=\"unread\"\n                  >\n                    <p  onClick={() => readNotification(row.id)}>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\",  display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n  \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"admin\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n       \n          getFeedback();\n          history.push(\"/admin/feedback\")\n        }\n    \n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <>\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid} feedbackNumber = {feedbackNumber}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js",["1927","1928","1929","1930","1931","1932","1933"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl2 } from '../../../config/config';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        \n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    // getQuery();\n  }, [assingNo]);\n\n \n\n  // const getQuery = () => {\n  //  if(assingNo === undefined){\n  //    return false\n  //  }\n  //  else{\n  //   axios\n  //   .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n  //   .then((res) => {\n      \n  //     if (res.data.code === 1) {\n  //       setDisplayQuery(res.data.result);\n  //     }\n  //   });\n  //  }\n  // };\n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n     \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n    \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js",["1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n  \n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js",["1947","1948","1949","1950","1951"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/admin/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n\n    \n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Get OTP\n                </button>\n                <Link to=\"/admin/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </Link>\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js",["1952","1953","1954","1955"],"\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const adminEmail = window.localStorage.getItem(\"adminkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id}\n      adminEmail = {adminEmail} />\n   \n   \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js",["1956","1957","1958","1959","1960","1961","1962","1963"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\nconst Schema = yup.object().shape({\n    p_notes: yup.string().required(\"\"),\n});\n\n\nfunction QueryRejection(props) {\n    const { id } = useParams();\n\n    const { handleSubmit, register, errors, reset } = useForm({\n        resolver: yupResolver(Schema),\n    });\n\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [loading, setLoading] = useState(false);\n\n\n    const onSubmit = (value) => {\n      \n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"id\", id);\n        formData.append(\"notes\", value.p_notes);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/setAdminreject`,\n            data: formData,\n        })\n            .then(function (response) {\n               \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"Query declined successfully.\")\n                    props.history.push({\n                        pathname: `/admin/queriestab`,\n                        index: 1,\n                    });\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n                \n            });\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"4\">\n                            <Link\n                                to={{\n                                    pathname: `/admin/queriestab`,\n                                    index: 1,\n                                }}\n                            >\n                                <button class=\"btn btn-success ml-3\">\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\n                                    Go Back\n                                </button>\n                            </Link>\n                        </Col>\n                        <Col md=\"4\">\n                            <div style={{ textAlign: \"center\" }}>\n                                <h2>Decline Query</h2>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                {\n                    loading ?\n                        <Loader />\n                        :\n                        <>\n                            <CardHeader>\n                                <div class=\"row mt-3\">\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                    <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                                        <form onSubmit={handleSubmit(onSubmit)}>\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label>Notes<span className=\"declined\">*</span></label>\n                                                        <textarea\n                                                            className={classNames(\"form-control\", {\n                                                                \"is-invalid\": errors.p_notes,\n                                                            })}\n                                                            id=\"textarea\"\n                                                            rows=\"6\"\n                                                            name=\"p_notes\"\n                                                            ref={register}\n                                                        ></textarea>\n                                                        {errors.p_notes && (\n                                                            <div className=\"invalid-feedback\">\n                                                                {errors.p_notes.message}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button type=\"submit\" className=\"btn btn-primary\">\n                                                Submit\n                                            </button>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                </div>\n                                <Mandatory />\n                            </CardHeader>\n                        </>\n                }\n            </Card>\n        </Layout>\n    );\n}\n\nexport default QueryRejection;","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js",["1964","1965","1966","1967","1968"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                 {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js",["1969","1970","1971","1972","1973","1974","1975","1976","1977"],"/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js",["1978","1979"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n   \n} from \"reactstrap\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactPlayer from \"react-player\";\nimport { useParams } from \"react-router\";\nimport {Link} from 'react-router-dom'\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\nimport RecordingEdit from './RecordingEdit';\nimport './recording.css';\n\n\n\nfunction Recording() {\n    const getId = useParams()\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [editData, setEditData] = useState({\n        participant : '',\n        editMessage : '',\n        assignid : '',\n        id : ''\n    })\n    const openModal = (videoContent) => {\n      \n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n\n    const editRecording = (participants, assign_id, message, id) => {\n   \n        setShowEditModal(!showEditModal)\n        setEditData({\n            participant : participants,\n            editMessage : message,\n            assignid : assign_id,\n            id : id\n        })\n    }\n   \n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/admin/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n\n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                console.log(row.file.split(\",\"))\n                return (\n                    <>\n                   <div>\n                    {row.record_by === JSON.parse(userid) && row.message === null ?\n                             <i\n                             className=\"fa fa-edit\"\n                             style={{\n                               fontSize: 18,\n                               cursor: \"pointer\",\n                               marginLeft: \"8px\",\n                             }}\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\n                           ></i> : \"\"}\n                    </div>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                               {record.length === 0 ? \"\" : \n                               <>\n                                 <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                              \n                               </>}\n                              \n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n     <>\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n           <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                <RecordingFilter\n                       setData={setFeedBackData}\n                    //    getData={getInCompleteAssingment}\n                       SearchQuery=\"SearchQuery\"\n                      setRecords={setRecords}\n                       records={records} \n                       userid = {userid}\n                       getRecording = {getRecording}\n                    /> \n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n\n            </Card>\n          \n           </div>\n            \n          \n          <RecordingEdit \n          isOpen = {showEditModal}\n          recordingHandler = {editRecording}\n          participants = {editData.participant}\n          message = {editData.editMessage}\n          assignid = {editData.assignid}\n          editId = {editData.id}\n          recList = {getRecording}/>\n                   {isOpen === true ?\n          \n                 \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoid}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div>\n  : \"\"}\n         </Layout>\n\n           </>\n\n    );\n}\n\nexport default Recording;","/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js",["1980","1981","1982","1983","1984","1985"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n  p_to: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n\n \n\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { query_id, query_No, routes } = data\n\n\n\n\n  useEffect(() => {\n\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataAdmin\");\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n    formData.append(\"to\", value.p_to);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully. \"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n       <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.message_type,\n                            })}\n                            name=\"message_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.message_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.message_type.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Client</option>\n                          <option value=\"tl\">Team Leader</option>\n                          <option value=\"both\">Both</option>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js",["1986","1987","1988","1989","1990","1991","1992","1993","1994","1995"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport CustomerListFilter from \"../../../components/Search-Filter/CustomerListFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport History from \"./CustHistory\";\n\nfunction Customer() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [myPurpose, setPurpose] = useState([])\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  var digit2 = [];\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  const getCustomer = () => {\n    axios.get(`${baseUrl}/admin/getAllList`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTpCount(res.data.result.length);\n      }\n    });\n  };\n\n \n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n    if(typeof(key) == \"object\") {\n    \n    }\n    else{\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    }\n    \n   \n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n        dataField: \"email\",\n        text: \"Email\",\n        sort: true,\n        headerStyle: () => {\n          return { fontSize: \"12px\", cursor: \"pointer\" };\n        },\n        \n      },\n      {\n        dataField: \"phone\",\n        text: \"Mobile No\",\n       \n        headerStyle: () => {\n          return { fontSize: \"12px\" };\n        },\n      },\n      {\n        dataField: \"occupation\",\n        text: \"Occupation\",\n        sort: true,\n        headerStyle: () => {\n          return { fontSize: \"12px\" };\n        },\n      },\n    {\n      dataField: \"country\",\n      text: \"Country\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"state\",\n      text: \"State\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"city\",\n      text: \"City\",\n      sort: true,\n      headerStyle: () => {\n       return { fontSize: \"12px\" };\n      },\n    },\n   \n    {\n      dataField: \"created\",\n      text: \"Date of Registration\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    \n  \n   \n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n           \n            <i\n              className=\"fa fa-eye\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" , color : \"green\"}}\n              onClick={() => show(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n   \n  ];\n\n  //check\n  const show = (key) => {\n \n    setModal(!modal);\n\n   if(typeof(key) == \"object\") {\n    \n   }\n   else{\n    {\n      axios.\n      get(`${baseUrl}/customers/totalComplete?uid=${key}`)\n        \n        .then((response) => {\n         \n         if(response.data.code === 1){\n        \n           setHistory(response.data.result)\n         }\n        })\n        .catch((error) => console.log(error));\n    };\n   }\n   \n  \n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n  \n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getCustomer();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"6\">\n              <CardTitle tag=\"h4\">Customer ({tpCount})</CardTitle>\n            </Col>\n           <Col md=\"6\">\n           \n           </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <CustomerListFilter\n        setData={setData}\n        searchQuery = \"SearchQuery\"\n        setRecords={setTpCount}\n         records={tpCount} \n         getCustomer = {getCustomer} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default Customer;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Report/ReportList.js",["1996","1997","1998"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography , Button} from \"@material-ui/core\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nconst ReportList = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [data, setData] = useState()\n    useEffect(() => {\n        getData()\n    }, [])\n    const getData = () => {\n       axios.get(`${baseUrl}/report/getListOfReport?uid=${JSON.parse(userid)}`)\n       .then((res) => {\n           console.log(\"myResponse\", res.data.result)\n           setData(res.data.result)\n       })\n    }\n   const del = (id) => {\n    Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          delReprot(id);\n        }\n      });\n   }\n    const delReprot = (e) => {\n        axios.get(`${baseUrl}/report/deleteRecord?id=${e}&uid=${JSON.parse(userid)}`)\n        .then((res) => {\n            if(res.data.code === 1){\n                Swal.fire({\n                    title : \"success\", \n                    html : \"Report deleted successfully\",\n                    icon : \"success\"\n                })\n            }\n            getData()\n        })\n    }\n    const columns = [\n        {\n        dataFeild : \"\",\n        text : \"S.No\",\n        formatter : (cellContent, row, rowIndex) =>{\n          return rowIndex + 1\n        },\n        headerStyle: () => {\n            return { fontSize: \"12px\", width: \"50px\" };\n          },\n    },\n    {\n        dataField: \"created_date\",\n        text: \"Created Date\",\n        sort: true,\n        headerStyle: () => {\n          return { fontSize: \"12px\", width : \"200px\" };\n        },\n        formatter : function formatter(cell, row) {\n          //  console.log(\"row\", row.split(\"\").reverse().join(\"-\"))\n          let a = row.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n          let b = row.created_date.split(\" \")[1]\n\n          return(\n              <>\n            <div style={{display : \"flex\", justifyContent : \"space-around\"}}>\n            <span >{a}</span>\n              <span>{b}</span>\n            </div>\n              </>\n          )\n        }\n      },\n      {\n          dataField : \"\",\n          text : \"Action\",\n          headerStyle : () => {\n              return { fontSize : \"12px\", width : \"200px\" }\n          },\n          formatter : function nameFormatter(cell, row) {\n             \n              return(\n               <>\n                  <div style={{display : \"flex\", justifyContent : \"space-around\"}}>\n                \n               <div title=\"Download\">\n               <a href ={`${baseUrl3}/${row.report_path}`} target=\"_blank\">\n                <CloudDownloadIcon />\n                  </a>\n               </div>\n                  <i class=\"fa-thin fa-file-excel\"></i>\n\n<div title=\"Delete\">\n<DeleteIcon color = \"danger\" onClick = {() =>del(row.id)} />\n</div>\n                  </div>\n               </>\n              )\n          }\n      }\n    \n]\n    return (\n\n        <>\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n       <div className = \"row\">\n           <div className=\"col-md-4\">\n           <Typography variant = \"h4\">\n            Report List\n        </Typography>\n       </div>\n       <div className=\"col-md-4\">\n     \n          <Link to=\"/admin/reports\" class=\"btn btn-primary\">\n                                   Generate Report\n                                </Link>\n           </div>\n           <div className=\"col-md-4\">\n     \n     <Link to=\"/admin/consalation\" class=\"btn btn-primary\">\n                              Consolidate Payment\n                           </Link>\n      </div>\n       </div>\n{data === undefined ? \"\" : \n       <div className=\"tableFixHead\">\n       <BootstrapTable\n         bootstrap4\n         keyField=\"id\"\n         data={data}\n         columns={columns}\n         rowIndex\n         classes=\"table-responsivepayment\"\n       />\n       </div>}\n        </Layout>\n      \n        </>\n    )\n}\nexport default ReportList;","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js",["1999","2000","2001","2002"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from \"../../../components/LoadingTime/LoadingTime\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/admin/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    ref={register({ required: true })}\n                    autocomplete=\"off\"\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  {disabled === false ? \n                  <small class=\"text-center\">\n                  Note: OTP is valid for {time} seconds.\n                </small> : \"\"}\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled}\n              setTime={setTime}  loading = {loading} getTime={LoadingTime.timer2} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/admin/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js",["2003","2004","2005","2006","2007","2008"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Report/Consalation.js",["2009","2010"],"import React, {useState, useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { baseUrl } from '../../../config/config';\nimport axios from 'axios';\nimport ConsaltSearch from './ConsaltSearch';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n  } from \"reactstrap\";\n  import { Link , useHistory} from 'react-router-dom';\n  import BootstrapTable from 'react-bootstrap-table-next';\n  import { Typography, Button } from '@material-ui/core';\nconst Consalation = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [data, setData] = useState();\nlet history  = useHistory()\n  const proc = {\n      color : \"green\"\n  }\n  const unproc = {\n    color : \"red\"\n}\n    const getData = () => {\n        axios.get(`${baseUrl}/report/paymentReport`)\n        .then((res) => {\n          \n            if(res.data.code === 1) {\n                setData(res.data.result);\n            }\n        })\n    }\n    useEffect(() =>{\n        getData()\n    }, [])\n    const columns = [\n        \n            {\n            dataFeild : \"\",\n            text : \"S.No\",\n            formatter : (cellContent, row, rowIndex) =>{\n              return rowIndex + 1\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n              },\n        },\n        {\n          text: \"Query No\",\n          dataField: \"assign_no\",\n          headerStyle: () => {\n            return { fontSize: \"12px\" };\n          },\n          formatter: function nameFormatter(cell, row) {\n            return (\n              <>\n                <Link\n                  to={{\n                    pathname: `/admin/queries/${row.id}`,\n                  \n                    routes: \"consalation\",\n                  }}\n                >\n                  {row.assign_no}\n                </Link>\n              </>\n            );\n          },\n        },\n        {\n            dataField: \"first_name\",\n            text: \"Client Name\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\" };\n            },\n          },\n          {\n            dataField: \"customer_id\",\n            text: \"Client Id\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\" };\n            },\n          },\n          {\n            dataField : \"mobile\",\n            text : \"Mobile Number\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n          {\n           dataField : \"Invoice_Number\",\n           text : \"Invoice No\",\n           sort : true,\n           style : {\n                fontSize : \"11px\"\n           },\n           headerStyle : () => {\n               return {fontSize : \"11px\"}\n           }\n          },\n         \n          {\n              dataField : \"txn_date\",\n              text : \"Payment Date\",\n              sort : true,\n              style : {\n                  fontSize : \"11px\"\n              },\n              headerStyle : () => {\n                  return { fontSize : \"11px\"}\n              },\n              formatter : function formatterD (cell ,row) {\n                  let a = row.txn_date.split(\"-\").reverse().join(\"-\")\n                return(\n                  <p>{a}</p>\n                )\n              }\n          },\n          {\n            dataField : \"payment_type\",\n            text : \"Payment Type\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n        \n        // {\n        //    dataField : \"bill_due_date\",\n        //     text : \"Due Date\",\n        //     sort : true,\n        //     style : {\n        //         fontSize : \"11px\"\n        //     },\n        //     headerStyle : () => {\n        //         return { fontSize : \"11px\"}\n        //     }\n        // },\n     \n        {\n            dataField : \"TL_Post_Id\",\n            text : \"Tl Post\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n        {\n            dataField : \"Invoice_Amount\",\n            text : \"Invoice Amount\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n        {\n            dataField : \"Tds_Deducted\",\n            text : \"TDS Deducted\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n        {\n            dataField: \"Amt_Collected\",\n            text: \"Amount Paid\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\" };\n            },\n          },\n        {\n            dataField : \"delay\",\n            text : \"Delay Days\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            }\n        },\n        {\n            dataField : \"\",\n            text : \"Status\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            },\n            formatter : function formatterD (cell ,row) {\n              let a ;\n              if(row.status === \"1\"){\n                  a = \"Matched\"\n              }\n              else if(row.status === \"2\"){\n                a = \"Unmatched\"\n            }\n              return(\n                <p style= {row.status === \"1\" ? proc : unproc}>{a}</p>\n              )\n            }\n        },\n        {\n            dataField : \"receipt_url\",\n            text : \"Receipt\",\n            sort : true,\n            style : {\n                fontSize : \"11px\"\n            },\n            headerStyle : () => {\n                return { fontSize : \"11px\"}\n            },\n            formatter : function formatterName (cell , row) {\n               return(\n                <a target=\"_blank\"\n                href= {row.receipt_url}\n              >\n               Payment Receipt\n              </a>\n               )\n            }\n        },\n    ]\n    return(\n  \n        <>\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n <Card>\n     <CardHeader>\n       <>\n       <div className=\"row\">\n           <div className=\"col-md-6\">\n           <Typography variant=\"h4\">Report Consolidate</Typography>\n         \n             </div>\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\n             <button  className=\"btn btn-lg btn btn-success\" onClick = {() => history.goBack()}>Go Back </button>\n               </div>\n           </div>\n<ConsaltSearch  setData = {setData} />\n</>\n     </CardHeader>\n     <CardBody>\n \n     <div className=\"tableFixHead\">\n     {data === undefined ? \"\" : \n     <BootstrapTable\n     bootstrap4\n     keyField=\"id\"\n     data={data}\n     columns={columns}\n     rowIndex\n     classes=\"table-responsivepayment\"\n   />}\n     </div>\n     </CardBody>\n </Card>\n        </Layout>\n      \n        </>\n    )\n}\nexport default Consalation;","/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js",["2011","2012","2013","2014"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport { useHistory } from \"react-router\";\nimport Cookies from \"js-cookie\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  password: yup\n    .string()\n    .required(\"\")\n});\n\nfunction Login(props) {\n  let history = useHistory()\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n         \n          logout();\n          setShow(true)\n          setLoading(false)\n          Cookies.set(\"tlName\", response.data.display_name)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data.user_id)\n         \n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const handleChange = (e) => {\n    \n    setEmail(e.target.value);\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 36000000)\n  }\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  \n  return (\n    <>\n      <Header mtl=\"mtl\" noTlSign = \"noSingIn\"/>\n      <div className=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid} loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div className=\"form\">\n              <div className=\"heading\">\n                <h2>MTL Login</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password</label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        autocomplete=\"off\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/teamleader/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js",["2015","2016","2017"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tlkey\");\nconst sessionTlId = window.sessionStorage.getItem(\"sessionTlid\")\nlet history = useHistory()\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid,\n    totalpayment } = payment;\n\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n        \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n         \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n              totalpayment: response.data.result.totalpayment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n  const logout = () => {\n    localStorage.removeItem(\"tlkey\")\n    localStorage.removeItem(\"tlEmail\")\n    history.push(\"/teamleader/login\")\n    \n  }\n\n \n\n  return (\n    <>\n    {sessionTlId ? \n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n\n    <div className=\"row\">\n\n\n      <div className=\"col-md-3 content_header\">\n        <table className=\"table table-striped first main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">All Queries</th>\n              <th>{total}</th>\n            </tr>\n          </thead>\n        </table>\n        <table className=\"table table-striped second main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Inprogress; Queries</th>\n              <th>{inprogress_queries}</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Inprogress; Allocation</td>\n              <td>{inprogress_allocation}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Proposals</td>\n              <td>{inprogress_proposal}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Assignments</td>\n              <td>{inprogress_assignment}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <table className=\"table table-striped third main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Completed; Queries</th>\n              <th>{complete_query}</th>\n            </tr>\n          </thead>\n          <tbody className=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Completed; Assignments</td>\n              <td>{complete_query}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <table className=\"table table-striped forth main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Declined; Queries</th>\n              <th>{declined_queries}</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"table_body\">\n            {/* <tr>\n              <td className=\"left_side\">Admin Declined; Queries</td>\n              <td>{admin_declined_query}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\"> Customer Declined; Queries</td>\n              <td>{customer_declined_Query}</td>\n            </tr> */}\n            <tr>\n              <td className=\"left_side\">Client Declined; Proposals</td>\n              <td>{customer_declined_proposal}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Client Declined; Payment</td>\n              <td>{Customer_declined_payment}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"col-md-3 content_header\">\n\n        <table className=\"table table-striped fifth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">All Proposals</th>\n              <th>{allproposal}</th>\n\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped sixth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Inprogress; Proposals</th>\n              <th>{InProgress}</th>\n            </tr>\n          </thead>\n          <tbody classNameName=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Inprogress; Preparation</td>\n              <td>{inprogress_preparation}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Acceptance</td>\n              <td>{inprogress_acceptance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped seventh main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Accepted; Proposals </th>\n              <th>{accepted_proposals}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped eight main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Client Declined; Proposals</th>\n              <th>{declined}</th>\n            </tr>\n          </thead>\n        </table>\n\n\n      </div>\n\n      <div className=\"col-md-3 content_header\">\n        <table className=\"table table-striped ninth main_table\">\n          <thead className=\"assignment_thead\">\n            <tr>\n              <th className=\"left_side\">All Assignments</th>\n              <th>{inprogress + complete + +(customer_declined_payment)}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Inprogress; Assignments</th>\n              <th>{inprogress}</th>\n            </tr>\n          </thead>\n\n          <tbody classNameName=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Client Discussion</td>\n              <td>{client_discussion}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Draft Reports</td>\n              <td>{draft_report}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Final Discussion</td>\n              <td>{final_discussion}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Delivery of Final Reports</td>\n              <td>{final_report}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Awaiting Completion</td>\n              <td>{complete_inprocess}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Completed; Assignments</th>\n              <th>{complete}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Client Declined; Payment</th>\n              <th>{customer_declined_payment}</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n\n\n      <div className=\"col-md-3 content_header\">\n\n        <table className=\"table table-striped twelvth main_table\">\n          <thead className=\"payment_thead\">\n            <tr>\n              <th className=\"left_side\">All Payments</th>\n              <th>{totalpayment}</th>\n            </tr>\n          </thead>\n        </table>\n        <table className=\"table table-striped thirteen main_table\">\n          <thead className=\"payment_thead2\">\n            <tr>\n              <th className=\"left_side\">Paid</th>\n              <th>{paid}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped thirteen main_table\">\n          <thead className=\"payment_thead2\">\n            <tr>\n              <th className=\"left_side\">Unpaid</th>\n              <th>{unpaid}</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n    </div>\n\n\n  </Layout> : \n  <>\n  {logout()}\n  </>}\n    </>\n  );\n}\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js",["2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049"],"/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js",["2050","2051","2052"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n           \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js",["2053","2054","2055","2056"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction AddTeamProf() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setData(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n   \n    {\n      dataField: \"post_name\",\n      text: \"TP post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TP post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TP\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      // dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n        var digit2 = [];\n        digit2 = row.allpcat_id.split(\",\")\n       \n        return(\n          <>\n          \n          {\n             digit2.map((e) => {\n             return(\n               <>\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \n               </>\n             ) \n           })\n          }\n           </>\n        )\n      }\n    },\n   \n   \n    {\n      \n     \n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n        var digit = [];\n         \n        digit = row.allcat_id.split(\",\")\n      \n      \n        return(\n          <>\n          \n         {\n            digit.map((e) => {\n            return(\n              <>\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \n              </>\n            ) \n          })\n         }\n          </>\n        )\n      }\n    },\n   \n  ]\n  // delete data\n  const del = (id) => {\n    \n\n    axios\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\n      .then(function (response) {\n                alert.success(\"successfully deleted \");\n        getTaxProf();\n      })\n      .catch((error) => {\n              });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\n            </Col>\n            <Col md=\"2\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n            classes=\"table-responsive\"\n          />\n          </div>\n\n          {/* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddTeamProf;\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js",["2057","2058","2059","2060","2061"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n\n\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"atuo\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"auto\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n                            Client Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { result } from \"lodash\";\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\n      .then((res) => {\n       \n\n        if (res.data.code === 1) {\n            setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n  \n   \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding , Do you still want to proceed to complete this query?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          data: formData,\n        })\n          .then(function (response) {\n           \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\n              getAssignmentList();\n              history.push(\"/teamleader/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n            \n          });\n      }\n      else{\n\n        history.push(\"/teamleader/assignment\");\n       return false;\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n      let formData = new FormData();\n \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n      \n       formData.append(\"stage_2_status\", value.draft_report);\n   \n      formData.append(\"stage_3_status\", value.final_discussion);\n    \n     formData.append(\"stage_4_status\", value.delivery_report);\n      \n      formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/teamleader/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n       \n        });\n    }\n  \n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of final report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                       {p.client_discussion === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"client_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> : \n                       <div class=\"col-md-4\">\n                       <div class=\"form-group\">\n                         <select\n                           class=\"form-control\"\n                           ref={register}\n                           name=\"client_discussion\"\n                         >\n                           <option value=\"inprogress\">Inprogress</option>\n                           <option value=\"completed\">Completed</option>\n                           \n                         </select>\n                       </div>\n                     </div>}\n\n                       \n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        {\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\n                          <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div> :\n                         <div class=\"col-md-4\">\n                         <div class=\"form-group\">\n                           <select\n                             class=\"form-control\"\n                             ref={register}\n                             disabled\n                             defaultValue = \"inprogress\"\n                             name=\"draft_report\"\n                           >\n                             <option value=\"inprogress\">Inprogress</option>\n                             <option value=\"completed\">Completed</option>\n                             \n                           </select>\n                         </div>\n                       </div>\n                        }\n                       \n                      \n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> : \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> }\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of final report\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"delivery_report\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> :\n                      <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"delivery_report\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                          \n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \n                        ? <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"other_stage\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                          </select>\n                        </div>\n                      </div>\n                      : <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"other_stage\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["2081","2082","2083","2084","2085","2086","2087","2088","2089","2090"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n           \n          }\n          if(res.data.result[0].status ==\"Declined Query\"){\n          let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n            setDeclined2(a)\n           setDeclinedStatus(true)\n          }\n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n            \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n\n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n\n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          \n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n   if(assingNo === undefined){\n     return false\n   }\n   else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n\n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n   }\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Query Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n           \n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js",["2091","2092"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n \n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js",["2093","2094","2095","2096","2097"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\nfunction FeedbackTab() {\n  const alert = useAlert();\nconst history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    axios\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setFeedBackData(res.data.result);\n        }\n      });\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n    \n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n    },\n    {\n      text: \"Feedback\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n    \n        return (\n          <>\n            <div>\n              {\n                row.tl_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\", wordBreak : \"break-word\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n  \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          // alert.success(\"successfully read!\");\n          getFeedback()\n          history.push(\"/teamleader/feedback\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js",["2098","2099","2100","2101","2102","2103","2104","2105","2106"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport CommonServices from \"../../../common/common\"\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [taxID, setTaxID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n    expect_dd: \"\",\n  });\n\n  const { queryNo, timelines, custId, expect_dd } = queryData;\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}&&q_id=${id}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n          expect_dd: CommonServices.changeFormateDate(res.data.result[0].Exp_Delivery_Date),\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n   \n    setTaxID(e.target.value)\n    var value = taxProfessionDisplay.filter(function (item) {\n      return item.id == e.target.value\n    })\n  \n    setTeamName(value[0].name)\n  }\n\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", taxID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tp\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n         \n          getQuery();\n          reset();\n          history.push('/teamleader/queriestab')\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/teamleader/queriestab`,\n                  index: 3,\n                }}\n              >\n                <button\n                  class=\"btn btn-success ml-3\"\n                >\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <CardHeader>\n                <div class=\"row mt-3\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12\">\n                    <div class=\"col-md-12\">\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <table class=\"table\">\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">Query No.</th>\n                              <th scope=\"col\">Tax Professional<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Expected Timeline</th>\n                              <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Action</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {query ? (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_taxprof,\n                                    })}\n                                    name=\"p_taxprof\"\n                                    ref={register}\n                                    onChange={(e) => handleChange(e)}\n                                  >\n                                    <option value=\"\">--select--</option>\n                                    {taxProfessionDisplay.map((p, index) => (\n                                      <option key={index} value={p.id}>\n                                        { p.post_name + \"-\"   + p.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                  {errors.p_taxprof && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_taxprof.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={timelines}\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_expdeldate,\n                                    })}\n                                    value={expect_dd}\n                                    min={item}\n                                  />\n                                  {errors.p_expdeldate && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_expdeldate.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <button type=\"submit\" class=\"btn btn-success\">\n                                    Assign\n                                  </button>\n                                </td>\n                              </tr>\n                            ) : (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select class=\"form-control w-75 p-0\" disabled>\n                                    <option>{hideQuery.name}</option>\n                                  </select>\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={hideQuery.timeline}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"date\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    value={hideQuery.expdeliverydate}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n\n                                <td>\n                                  <button class=\"btn btn-success\" disabled>\n                                    Assigned\n                                  </button>\n                                </td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      </form>\n                      <Mandatory />\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n            </>\n        }\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js",["2107","2108","2109","2110"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n       \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n       \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js",["2111","2112"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js",["2113","2114","2115","2116"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Delivery of Final Report({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js",["2117","2118","2119","2120","2121","2122"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport AllQuery from \"./AllQuery\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const AllQuery = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllQuery(res.data.result.length);\n          }\n        });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setPendingForAcceptence(res.data.result.length);\n          }\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const Declined = () => {\n      axios\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDeclined(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined()\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Query ({allQuery})\n            </Tab>\n           \n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries ({incomplete})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Pending For Acceptence ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n            Inprogress Assignment to Tp ({complete})\n            </Tab>\n            \n          </TabList>\n\n\n          <TabPanel>\n            <AllQuery\n            />\n          </TabPanel>\n         \n          <TabPanel>\n            <InCompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <PendingForAcceptence\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            />\n          </TabPanel>\n         \n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingForAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js",["2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151"],"/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  // p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [tpEmail, setTpEmail] = useState('')\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [email2, setEmail2] = useState([]);\n  \n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  var kk = []\n  var vv = []\n  var post_name;\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n  const teamleader1 = teamleader.map(v => (\n  {\n      \"value\": v.id,\n      \"label\": v.name\n    }))\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n  const onSubmit = (value) => {\n\n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n\n      setLoading(true)\n    \n      let formData = new FormData();\n      formData.append(\"personal_email\", value.personal_email)\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"tp_id\", tl);\n      formData.append(\"email\", email2);\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"pcat_id\", mcategory);\n      formData.append(\"cat_id\", categeryList);\n      formData.append(\"allpcat_id\", categoryData.label)\n      formData.append(\"allcat_id\", categeryName)\n      formData.append(\"type\", \"tp\");\n      formData.append(\"tlpost\", post_na)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tp/AddTaxProfessional`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n    \n           \n\n            Swal.fire({\n              \"title\": \"success\",\n              \"html\": \"Tax Professional created successfully\",\n              \"icon\": \"success\"\n            })\n \n            history.goBack();\n            \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n        })\n        .catch((error) => {\n       \n        });\n    };\n  }\n\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n    \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digits can be entered\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n \n  // Tl Function \n  const tlFun = (e) => {\n    var a;\n \n    teamleader.filter((p) => {\n\n      if (p.id == e) {\n      \n        setTpEmail(p.email)\n        setTl(p.id)\n        setPost_na(p.post_name)\n        a = p.post_name\n       \n      }\n    })\n\n    \n  }\n\n  const checktlPost = (e) => {\n    setPostName(e.target.value)\n    let a = e.target.value;\n    let formData = new FormData();\n    formData.append(\"tlpost\", a)\n  \n    axios({\n      method: \"POST\",\n      url : `${baseUrl}/tl/validateTLPost`,\n      data: formData,\n    })\n    .then(function (res) {\n      if(res.data.code === 1){\n        setposError({\n          available : \"Post available\"\n        })\n      }\n      else{\n        setposError({\n          exits : \"Post already exits\"\n        })\n      }\n    })\n    }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div className=\"col-md-12 d-flex\">\n            <div>\n              <button\n                className=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div className=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Teamleader post name <span className=\"declined\">*</span></label>\n\n                      <select\n                        name=\"p_teamleader\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_teamleader,\n                        })}\n                        onChange={(e) => tlFun(e.target.value)}\n                        ref={register}\n                      >\n                        <option value=\"\">--select--</option>\n                        {teamleader.map((p) =>\n                        (\n\n                          <option key={p.Id} value={p.id}>\n                            {p.post_name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_teamleader && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_teamleader.message}\n                        </div>\n                      )}\n\n                    </div>\n\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"post_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        disabled\n                        defaultValue={tpEmail}\n                       \n                        ref={register}\n\n                      />\n\n\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>TP post name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"post_name\"\n                        onBlur={(e) => checktlPost(e)}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_name,\n                        })}\n                        ref={register}\n                      />\n {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n\n\n                      <label> TP post email <span className=\"declined\">*</span></label>\n                      \n                       <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail2}\n                        name = \"taxprofessional\" />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                        onChange={category}>\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n\n                      </Select>\n\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                        onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                 \n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n\n                </div>\n\n                <div className=\"row\">\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n\n\n                      <label> Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"personal_email\"\n                        ref={register}\n\n\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                      />\n\n                    </div>\n                  </div>\n\n\n                                 </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\nexport default AddNew;","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js",["2175","2176","2177","2178","2179"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl , baseUrl2} from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n  const rejectHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n \n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js",["2180","2181","2182"],"\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { baseUrl } from \"../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nconst PayModal = (props) => {\n    const userid = window.localStorage.getItem(\"userid\")\n    const [payValue, setpayValue] = useState()\n    const [tdsRate, setTdsRate] = useState();\n    const [tdsAmount, setTdsAmount] = useState()\n    \n \n    useEffect(() => {\n       if(props.modalData !== undefined){\n          \n\n            setTdsRate(parseFloat(props.modalData.tds_rate))\n          \n           \n           setTdsAmount(props.modalData.tds_amount)\n           setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(props.modalData.tds_amount))\n\n   \n    }\n    }, [props.modalData])\n   \n    const payFun = (e) => {\n  \n         \n        let formData = new FormData();\n        formData.append(\"id\", props.modalData.id);\n        formData.append(\"cid\", JSON.parse(userid));\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"tds_amount\", tdsAmount)\n       \n        axios({\n            method :\"POST\", \n            url : `${baseUrl}/customers/payCall`,\n            data : formData\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n             \n                if(res.data.result.length > 1){\n                    window.open(res.data.result, \"_blank\")\n                }\n                else{\n                    Swal.fire({\n                        title : \"error\", \n                        html : \"Something went wrong\",\n                        icon : \"error\"\n                    })\n                }\n            }\n        })\n       \n    window.location.hash=\"customer/paymentstatus\"\n    }\n    const inVal = (e) => {\n       if(e.target.value.length > 7){\n           return false\n       }\n       else{\n        if(e.target.value > 100){\n            setTdsRate(100)\n            let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n                  \n                  \n            let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\n            setTdsAmount(Number((100 * tdAmount) / 100).toFixed(0))\n            let b = Number((100 * tdAmount) / 100).toFixed(0)\n            \n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n                   }\n                   else{\n                    setTdsRate(e.target.value)\n                    let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n                  \n                  \n                    let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\n            setTdsAmount(Number((e.target.value * tdAmount) / 100).toFixed(0))\n            let b = Number((e.target.value * tdAmount) / 100).toFixed(0)\n            \n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n                   }\n       }\n       \n    }\nreturn(\n    <Modal isOpen={props.showModal} toggle={props.modalToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n    <ModalHeader toggle={props.modalToggle}> Payment</ModalHeader>\n    <ModalBody style={{display :\"flex\", flexDirection :\"column\", overflow : \"wrap\"}}>\n\n{props.modalData === undefined ? \"\" :\n<table className=\"table\">\n    \n    <tbody className=\"tbody\">\n\n<tr>\n    <td>Invoice Amount</td>\n    <td></td>\n    <td>{parseInt(props.modalData.invoice_amount)}</td>\n</tr>\n<tr>\n    <td>TDS</td>\n    <td style={{display :\"flex\"}}><input type=\"number\"  step=\"0.00001\" style={{display : \"flex\", width: \"50px\"}} value={tdsRate} onChange= {(val) => inVal(val)}/> % </td>\n    <td>{tdsAmount}</td>\n</tr>\n<tr>\n    <td>Payable Amount</td>\n   <td></td>\n   <td>{payValue}</td>\n</tr>\n    </tbody>\n    </table> }\n\n<ModalFooter>\n    <button onClick={() => payFun()} className=\"btn btn-success\">Pay Now</button>\n</ModalFooter>\n    </ModalBody>\n  </Modal>\n)\n}\nexport default PayModal;","/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js",["2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193"],"/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js",["2194","2195","2196","2197","2198","2199","2200","2201","2202","2203"],"/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js",["2204","2205","2206","2207","2208","2209","2210","2211"],"/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js",["2212","2213","2214","2215"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/components/Layout/Layout.js",["2216"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\nimport Header from \"../Admin-Header/Admin-Header\";\nimport Footer from \"../Admin-Footer/Admin-Footer\";\n\n\n\nfunction Layout(props) {\n\n  const {\n    custDashboard, adminDashboard, TLDashboard,\n    TPDashboard,\n    custUserId, adminUserId, TLuserId, TPuserId, feedbackNumber } = props\n    \n  return (\n    <>\n      <Header\n        custUserId={custUserId}\n        adminUserId={adminUserId}\n        TLuserId={TLuserId}\n        TPuserId={TPuserId}\n        feedbackNumber = {feedbackNumber}\n      />\n\n      <Sidebar\n        custDashboard={custDashboard}\n        adminDashboard={adminDashboard}\n        TLDashboard={TLDashboard}\n        TPDashboard={TPDashboard}\n        feedbackNumber = {feedbackNumber}\n      />\n\n      <div className=\"app-content content\" style={{ marginTop: \"75px\" }}>\n        <div className=\"content-wrapper\">\n          <div className=\"content-body\">\n            {props.children}\n          </div>\n        </div>\n      </div>\n\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default Layout;\n","/home/pooja/MazarsRepo/src/config/config.js",[],"/home/pooja/MazarsRepo/src/common/common.js",["2217","2218"],"//change date format\n\nconst changeFormateDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//remove time with date\nconst removeTime = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//removeDATE with TIME\nconst removeDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  } else {\n    var split = oldDate.split(\" \");\n    var a = split[0];\n    var b = split[1];\n    return b;\n  }\n};\n\n\n//capitalizeFirstLetter\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nexport default {\n  changeFormateDate,\n  removeTime,\n  removeDate,\n  capitalizeFirstLetter\n};\n\n// var updatedate = oldDate.split(\" \")[0];\n// var updatedate = oldDate.slice(0, 10);\n","/home/pooja/MazarsRepo/src/common/Alerts.js",["2219"],"import Swal from \"sweetalert2\";\n\n// SuccessLogin\nconst SuccessLogin = () => {\n    return (\n        Swal.fire(\n            'Success',\n            'Login successfully',\n            'success'\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorLogin = () => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            \"Error : Incorrect Email OR Password\",\n            \"error\"\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorOTP = (variable) => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            ` ${variable} </br> `,\n            \"error\"\n        )\n    )\n}\n\n\n// Success\nconst SuccessMsg = (variable, key) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable ? variable : \"\"} </br> </br>\n             ${key.faill ? key.faill : \"\"} </br></br> \n              ${key.success ? key.success : \"\"}`,\n            'success'\n        )\n    )\n}\n\n\n// Success\nconst SuccessReport = (message) => {\n    if (message.invalid) {\n        Swal.fire(\n            \"Error\",\n            `${message.invalid}`,\n            \"error\"\n        )\n    } else if (message.faill && message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.faill} <br/><br/> \n            ${message.success}`,\n            'success'\n        )\n    } else if (message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.success}`,\n            'success'\n        )\n    }\n    else if (message.faill) {\n        Swal.fire(\n            'Error',\n            ` ${message.faill} <br/>`,\n            'error'\n        )\n    }\n}\n\n\n\n\n// ErrorLogin\nconst ErrorDelete = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n// ErrorLogin\nconst ErrorEdit = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n\n// SuccessNormal\nconst SuccessNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable} </br> `,\n            'success'\n        )\n    )\n}\n\n\n// ErrorNormal\nconst ErrorNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Error',\n            ` ${variable} </br> `,\n            'error'\n        )\n    )\n}\n\n\n\nexport default {\n    SuccessLogin,\n    ErrorLogin,\n    SuccessMsg,\n    SuccessNormal,\n    SuccessReport,\n    ErrorDelete,\n    ErrorEdit,\n    ErrorNormal,\n    ErrorOTP,\n};\n\n\n\n\n// Swal.fire(`oops : ${response.data.result}`)","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js",["2220","2221","2222","2223"],"import React from \"react\";\n\n\nexport default class YourComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n            isLoading: true\n        };\n    }\n\n\n    amount = this.props.installment_amount\n    installment_amount = this.amount.split(',');\n    temp = this.installment_amount\n    tamp2;\n    handleChange1(i, e) {\n        const { value } = e.target\n        this.temp[i] = value\n\n    \n        this.setState({\n            values: {\n              ...this.temp.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n    }\n\n\n    due_date = this.props.due_date;\n     installment_due_dates = this.due_date.split(',')\n    installmentDueDate = this.installment_due_dates;\n\n    handleChange2(i, e) {\n        const { value } = e.target\n        this.installmentDueDate[i] = value\n\n        this.setState({\n            dates: {\n              ...this.installmentDueDate.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: false });\n        \n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n\n        this.props.paymentAmount(installment_amount);\n       this.props.paymentDate(due_date)\n    }\n\n\n\n    render() {\n\n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n        var fieldsArray = [];\n\n\n        for (var i = 0; i < this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    {this.props.clearValue == true ? \n                   <div class=\"col-md-6 my-2\">\n                       \n                   <input\n                       type=\"text\"\n                       className=\"form-control\"\n                       name={this.state.values[i]}\n                       onChange={this.handleChange1.bind(this, i)}\n                      defaultValue={installment_amount[i]}\n                   />\n               </div> :   \"\"\n}\n{this.props.clearValue == false ? \n    <div class=\"col-md-6 my-2\">\n                       \n                       <input\n                           type=\"text\"\n                           className=\"form-control\"\n                           name={this.state.values[i]}\n                           onChange={this.handleChange1.bind(this, i)}\n                           defaultValue=\"\"\n                       />\n                   </div> : \"\"}\n          {this.props.clearValue == true ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue={due_date[i]}\n               min={this.props.item}\n           />\n       </div> : \"\"}  \n       {this.props.clearValue == false ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue= \"\"\n               min={this.props.item}\n           />\n       </div> : \"\"}         \n                   \n                </div>\n            );\n        }\n\n        if (this.state.isLoading) {\n            return <div>Loading...</div>\n        }\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js",["2224","2225","2226","2227","2228","2229","2230","2231","2232","2233"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllQuery() {\n\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getInCompleteAssingment();\n    }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n            .then((res) => {\n\n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\"};\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter : function(cell, row){\n                let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n              \n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width :\"120px\"};\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\", width :\"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n        },\n        {\n            text: \"Client Name\",\n            dataField: \"name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"150px\"};\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n        },\n        {\n            text: \"Delivery Due Date   / Acutal Delivery Date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"140px\"};\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                      {row.status_code == \"1\" ? null :\n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"green\",\n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                      <div title=\"Send Message\">\n                      <Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/queriestab`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                  </div>}\n\n                      <div title=\"View Discussion Message\">\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  color: \"orange\"\n                              }}\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                      </div>\n                  </div>\n}                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setInCompleteData}\n                        getData={getInCompleteAssingment}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={incompleteData}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js",["2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260","2261"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n   \n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n   \n    const [item] = useState(current_date);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [draftModal, setDraftModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    var rowStyle2 = {}\n    var clcomp= {\n      color: \"green\"\n    }\n    var clinpro = {\n      color : \"blue\"\n    }\n    let des = false;\n    const uploadDraftReport = (id) => {\n    \n        if(typeof(id) == \"object\"){\n      \n            let des = true;\n            setLoading(false)\n            setDraftModal(!draftModal);\n          }\n          else{\n            setDraftModal(!draftModal);\n            setId(id);\n          }\n    };\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n        \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n        \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n  \n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n// row Style \nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 1,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n          dataField: \"status\",\n          text: \"Status\",\n          style: {\n            fontSize: \"11px\",\n          },\n          headerStyle: () => {\n            return { fontSize: \"11px\", width: \"200px\" };\n          },\n          style : {\n            fontSize : \"11px\"\n          },\n          formatter: function (cell, row) {\n            return (\n              <>\n                <div>\n                {row.paid_status == \"2\" &&\n                    <p>\n                      <span style={{ color: \"red\" }}>Payment Declined</span>\n                    </p>\n                  }\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                   <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n    {row.client_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                    <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n    {row.draft_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                    <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n    {row.final_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                    <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n    {row.delivery_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                    <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n    {row.other_stage}\n                     </span>\n                  </p>\n                </div>\n              </>\n            );\n          },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\", textAlign : \"center\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\",  textAlign : \"center\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n        {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n              return { fontSize: \"12px\", width: \"90px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n               {\n                 row.paid_status == \"2\" ? \n                \"\" : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                     to={{\n                        pathname: `/teamleader/chatting/${row.q_id}`,\n                        index : 1,\n                        routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n              );\n            },\n          },\n    ];\n\n\n    const onSubmit = (data) => {\n      \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=\"Draft_Report\"&stages_status=1\n               &pcat_id=${selectedData}`\n            )\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowStyle={ rowStyle2 }\n                        rowIndex\n                        classes=\"table-responsivepayment\"\n                    />\n                    </div>\n  <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js",["2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport moment from \"moment\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [fianlModal, setFianlModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    var rowStyle2 = {}\n    var clcomp= {\n        color: \"green\"\n      }\n      var clinpro = {\n        color : \"blue\"\n      }\n    let des = false;\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n       \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n   \n    const uploadFinalReport = (id) => {\n        if(id && id.id === undefined){\n            \n          let des = true;\n          setLoading(false)\n          setFianlModal(!fianlModal);\n        }\n        else{\n          setFianlModal(!fianlModal);\n              setFinalId(id);\n        }\n            \n            };\n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"11px\" , padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 2,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n              fontSize: \"11px\",\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", width: \"200px\" };\n            },\n            style : {\n              fontSize : \"11px\"\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div>\n                  {row.paid_status == \"2\" &&\n                      <p>\n                        <span style={{ color: \"red\" }}>Payment Declined</span>\n                      </p>\n                    }\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                     <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n      {row.client_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                      <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n      {row.draft_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                      <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n      {row.final_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                      <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n      {row.delivery_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                      <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n      {row.other_stage}\n                       </span>\n                    </p>\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"11px\" , padding: \"10px 20px\"};\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"11px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\",  textAlign : \"center\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"11px\" };\n            },\n            style : {\n                fontSize : \"11px\", textAlign : \"center\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n              return { fontSize: \"11px\", width: \"90px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n               {\n                 row.paid_status == \"2\" ? \n               \"\" : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      <div title=\"upload Pdf\">\n       <p\n         style={{ cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n             <div>\n               <i\n                 class=\"fa fa-upload\"\n                 style={{ fontSize: \"16px\" }}\n               ></i>\n               final\n             </div>\n          \n       </p>\n      </div> : null\n      }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                    to={{\n                        pathname: `/teamleader/chatting/${row.q_id}`,\n                        index : 2,\n                        routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n              );\n            },\n          },\n    ];\n\n\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n       \n    \n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n        else if(row.paid_status != \"2\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n    \n    const onSubmit = (data) => {\n      \n        axios\n        .get(\n            `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Delivery_of_report&stages_status=1&pcat_id=${selectedData}`)\n      \n          \n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowStyle={ rowStyle2 }\n                        rowIndex\n                        classes=\"table-responsivepayment\"\n                    />\n                    </div>\n <ViewAllReportModal\n\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                     <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js",["2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317"],"/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js",["2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n  const [fianlModal, setFianlModal] = useState(false);\n  const [draftModal, setDraftModal] = useState(false);\n  const [dataItem, setDataItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false);\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n  const [item] = useState(current_date);\n  let des = false;\n  var rowStyle2 = {}\n  const ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  \n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData != undefined){\n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    setError(false)\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    setError(false)\n    setStore2(value);\n  };\n\n  //reset category\n   const resetCategory = () => {\n  setSelectedData([]);\n  setStore2([]);\n  getAssignmentList()\n  setError(false)\n  setTax2([])\n   };\n\n\n//reset date\nconst resetData = () => {\n\n  reset();\n   setTax2([])\n  setError(false)\n  setHide(\"\")\n  setStatus([]);\n  setSelectedData([]);\n  setStore2([]);\n  getAssignmentList();\n};\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    setError(false)\n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n{row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n{row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n{row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n{row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n{row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\", padding: \"10px 20px\"};\n    },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\", padding: \"10px 20px\"};\n    },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      style : {\n        fontSize : \"11px\", textAlign : \"center\"\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign : \"center\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      }, style : {\n        fontSize : \"11px\"\n      },\n\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n             {row.paid_status == \"2\" ? null : \n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\n              <i class=\"fa fa-tasks\"></i>\n            </Link> }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"90px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n         {\n           row.paid_status == \"2\" ? \n           <div style={{display : \"flex\"}}>\n           <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\">\n             <Link\n            to={{\n              pathname: `/teamleader/chatting/${row.q_id}`,\n              index : 0,\n              routes: \"assignment\",\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/teamleader/assignment`\n                 }\n               }}\n             >\n               <i\n                 class=\"fa fa-comments-o\"\n                 style={{\n                   fontSize: 16,\n                   cursor: \"pointer\",\n                   marginLeft: \"8px\",\n                   color: \"blue\"\n                 }}\n               ></i>\n             </Link>\n           </div>\n           </div>: \n           <div\n           style={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n           }}\n         >\n           \n           \n              {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n<div title=\"upload Pdf\">\n <p\n   style={{ cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n       <div>\n         <i\n           class=\"fa fa-upload\"\n           style={{ fontSize: \"16px\" }}\n         ></i>\n         final\n       </div>\n    \n </p>\n</div> : null\n}\n          \n\n           <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\">\n             <Link\n            to={{\n              pathname: `/teamleader/chatting/${row.q_id}`,\n              index : 0,\n              routes: \"assignment\",\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/teamleader/assignment`\n                 }\n               }}\n             >\n               <i\n                 class=\"fa fa-comments-o\"\n                 style={{\n                   fontSize: 16,\n                   cursor: \"pointer\",\n                   marginLeft: \"8px\",\n                   color: \"blue\"\n                 }}\n               ></i>\n             </Link>\n           </div>\n\n         </div>\n         }\n          </>\n        );\n      },\n    },\n  ];\nvar clcomp= {\n  color: \"green\"\n}\nvar clinpro = {\n  color : \"blue\"\n}\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n \n  const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n\n  // final modal\n  \n    const uploadFinalReport = (id) => {\nif(id && id.id === undefined){\n    \n  let des = true;\n  setLoading(false)\n  setFianlModal(!fianlModal);\n}\nelse{\n  setFianlModal(!fianlModal);\n      setFinalId(id);\n}\n    \n    };\n  \n    \n\n  const onSubmit = (data) => {\n  if(hide == 1 || hide == 2){\n    if(status.length > 0){\n      axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n\n    }\n    else{\n      setError(true)\n      return false;\n    }\n  }\n  else{\n    axios\n    .get(\n      `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n        userid\n      )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n      }&assignment_status=${status}&stages_status=${data.p_status\n      }&pcat_id=${selectedData}`\n    )\n    .then((res) => {\n    \n      if (res.data.code === 1) {\n        if (res.data.result) {\n          setAssignment(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      }\n    });\n\n  }\n     };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setStatus([])\n    setError(false)\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"1\" || hide == \"2\" ?\n                 \n                  <div className=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                      className={error ? \"customError\" : \"\"}\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div> : \"\"\n\n              }\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n            classes=\"table-responsivepayment\"\n          />\n</div>\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentList}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js",["2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport moment from 'moment';\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false);\n\n    // UseState end \n    // Global veriable \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=1`).then((res) => {\n            \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n       \n        setModal(!modal);\n\n        if(typeof(key) == \"object\"){\n\n        }\n        else{\n            fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n        }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\n              {row.assign_no}\n            </Link> */}\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       {row.paid_status === \"2\" ? \n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                    \n                      \n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                          <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 1,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                              \n                            ></i>\n                            </Link>\n                       </div>\n                   </div>\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                            <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 1,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                              \n                            ></i>\n                            </Link>\n                       </div>\n                       <div title=\"Send Message\">\n                       <Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 1,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                       </div>\n                       <div>\n                           {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\"\n                                       onClick={() => rejectHandler(row)}\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                   >\n                                       <PaymentIcon />\n                                   </div>\n                                   : null\n                           }\n                       </div>\n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>}                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        rowStyle = {rowStyle2}\n                        rowIndex\n                        classes=\"table-responsivepayment\"\n                    />\n                    </div>\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js",["2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false); \n\n\n    // Use State end\n    //Global veriable\n    var rowStyle2 = {}\n\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\n        \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n   \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n                whiteSpace : \"nowrap\", \n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                       {row.paid_status === \"2\" ? \n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                      \n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                         \n              <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 0,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                              \n                            ></i>\n                            </Link>\n                       </div>\n                   </div>\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                           <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 0,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                              \n                            ></i>\n                            </Link>\n                       </div>\n                       <div title=\"Send Message\">\n                       <Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                       </div>\n                       <div>\n                           {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\"\n                                       onClick={() => rejectHandler(row)}\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                   >\n                                       <PaymentIcon />\n                                   </div>\n                                   : null\n                           }\n                       </div>\n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={payment}\n            columns={columns}\n            \n            classes=\"table-responsivepayment\"\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n          </div>\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js",["2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=2`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n  \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n            \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\", whiteSpace : \"nowrap\", width: \"120px\" , padding : \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 2, \n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text: \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                            <div title=\"Payment History\"\n                           \n                                style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                            >\n                              <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 2,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                              \n                            ></i>\n                            </Link>\n                            </div>\n                            <div title=\"Send Message\">\n                            <Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 2,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                            </div>\n                            <div>\n                                {\n                                    row.paid_status == \"0\" ?\n                                        <div title=\"Payment decline\"\n                                            onClick={() => rejectHandler(row)}\n                                            style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                        >\n                                            <PaymentIcon />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n\n                        </div>\n                    </>\n                );\n            },\n        },\n      \n    ];\n\n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                    />\n</div>\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js",["2397","2398","2399","2400"],"import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\"\nconst EmailValidation = (props) => {\n    const { handleSubmit, register, errors, getValues } = useForm();\nconst [email, setEmail] = useState([])\n   \n    const emailHandler = (e) => {\n      setEmail(e.target.value);\n      props.setEmail2(e.target.value)\n        if (e.target.value.length < 1) {\n          props.setWemail(\"\")\n        }\n      };\n\n      const emailValidation = (key) => {\n\n        var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (email.length > 0 && email.match(validRegex)) {\n          props.setWemail(\"\");\n          props.setEmailError(false)\n          let formData = new FormData();\n          formData.append(\"email\", email);\n          formData.append(\"type\", 1);\n    if(props.name === \"teamleader\" || props.name ==\"taxprofessional\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n    else{\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n        \n          \n        }\n        else {\n          props.setEmailError(true)\n          props.setWemail(\"invalid email\")\n        }\n    \n      }\n    \nreturn(\n    \n    <>\n    <input\n                        type=\"text\"\n                        name=\"p_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email || props.emailError === true || props.wEmail || props.invalid,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={(e) => emailValidation(e)}\n                        placeholder=\"Enter Your Password\"\n                        ref={register({ required: true })}\n                      />\n                      \n    </>\n)\n}\nexport default EmailValidation;","/home/pooja/MazarsRepo/src/components/Common/Mandatory.js",[],"/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js",["2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport History from \"../../../components/PendingForAllocation/History\";\nimport Swal from \"sweetalert2\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction CompletedQuery() {\n  const userid = window.localStorage.getItem(\"tlkey\");\nconst hist = useHistory();\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n \n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const ViewDiscussionToggel = (key) => {\n      setViewDiscussion(!ViewDiscussion);\n      setAssignNo(key)\n  }\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n  const toggle = (key) => {\n  \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n     \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"120px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n     \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" ,  width : \"120px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Delivery Due Date \",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"140px\"};\n    },\n    style: {\n      fontSize: \"11px\",\n  },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n          return (\n              <>\n                  <div>\n                      {row.status}/\n                      {\n                          row.status == \"Inprogress Query\" ?\n                              <p className=\"inprogress\">\n\n                                  {row.statusdescription}\n                              </p>\n                              :\n                              row.status == \"Declined Query\" ?\n                                  <p className=\"declined\">\n\n                                      {row.statusdescription}\n                                  </p> :\n                                  row.status == \"Completed Query\" ?\n                                      <p className=\"completed\">\n\n                                          {row.statusdescription}\n                                      </p> : \n                                      null\n                                  \n                                    \n                      }\n                  </div>\n              </>\n          );\n      },\n  },\n  \n  {\n    text: \"Action\",\n    dataField: \"\",\n    headerStyle: () => {\n      return { fontSize: \"12px\" };\n    },\n    style: {\n      fontSize: \"11px\",\n  },\n    formatter: function (cell, row) {\n      return (\n        <>\n          {row.statuscode === \"0\" || row.statuscode === \"3\"? (\n           \n           <i onClick ={() => assignConfirm(row.id, row.assign_no)} class=\"fa fa-share\" style={{color : \"blue\", cursor : \"pointer\"}}></i>\n          ) : (\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              {/* <div title=\"Assign to\">\n               \n\n              </div>\n              <div title=\"Decline Query\">\n                <Link\n                  to={`/teamleader/query_rejection/${row.id}`}\n                >\n                  <i\n                    className=\"fa fa-trash\"\n                  ></i>\n                </Link>\n              </div> */}\n  <p style={{ color: \"green\", fontSize: \"10px\" }}>\n\n Allocated to {row.tname} on\n<p>{row.allocation_time}</p>\n</p>\n              {/* <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/teamleader/queriestab`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div> */}\n\n            </div>\n\n\n\n          )}\n        </>\n      );\n    },\n  },\n  {\n    text: \"History\",\n    dataField: \"\",\n    headerStyle: () => {\n      return { fontSize: \"12px\" };\n    },\n    formatter: function (cell, row) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            class=\"btn btn-info btn-sm\"\n            onClick={() => toggle(row.id)}\n          >\n            History\n          </button>\n        </>\n      );\n    },\n  },\n  ];\n\n\n\n  const  assignConfirm = (id, assign_number) => {\n \n   \nSwal.fire({\n  title: \"Are you sure?\",\n   text: `do you want to assign ${assign_number} to taxprofessional`,\n        type: 'warning',\n        showCloseButton:true,\n        showCancelButton: true,\n        confirmButtonColor: '\"#3085d6\"',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, assign it!',\n        cancelButtonText: 'No'\n    }).then(function(result){\n      console.log(\"resutl\", result)\n        if(result.value){\n          hist.push(`/teamleader/queryassing/${id}`)\n        }else if(result.dismiss == 'cancel'){\n          \n           axios.get(`${baseUrl}/tl/workby?uid=${JSON.parse(userid)}&qid=${id}`).then((res) => {\n                   if(res.data.code === 1){\n                     hist.push(`/teamleader/proposal`)\n                   \n                   }\n                 })\n        }\n\n    });\n\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n            classes=\"table-responsive\"\n          />\n          </div>\n            <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js",["2413","2414","2415","2416","2417","2418","2419","2420","2421","2422"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"150px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n      \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"100px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"100px\"};\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Delivery Due Date   / Acutal Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"140px\"};\n    },\n    style: {\n      fontSize: \"11px\",\n  },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" , width : \"100px\"};\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        \n          return (\n              <>\n                {row.status_code == \"1\" ? null :\n                \n                <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    color: \"green\",\n                }}\n            >\n               \n\n                {row.status == \"Declined Query\" ? null :\n                <div title=\"Send Message\">\n                <Link\n                    to={{\n                      pathname: `/teamleader/chatting/${row.id}`,\n                      index: 1,\n                      routes: \"queriestab\",\n                        obj: {\n                            message_type: \"4\",\n                            query_No: row.assign_no,\n                            query_id: row.id,\n                            routes: `/teamleader/queriestab`\n                        }\n                    }}\n                >\n                    <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                            fontSize: 16,\n                            cursor: \"pointer\",\n                            marginLeft: \"8px\",\n                            color: \"blue\"\n                        }}\n                    ></i>\n                </Link>\n            </div>}\n\n                <div title=\"View Discussion Message\">\n                    <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                            fontSize: 16,\n                            cursor: \"pointer\",\n                            color: \"orange\"\n                        }}\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\n                    ></i>\n                </div>\n            </div>\n}                    </>\n          );\n      },\n  },\n];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n            classes=\"table-responsive\"\n          />\n</div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["2423"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n         \n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"query_created\",\n      sort: true,\n      \n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"150px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width  : \"100px\"};\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Delivery Due Date \",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                // onClick={() => rejectHandler(row)}\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          getPendingforAcceptance();\n          updateTab(3);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <div className=\"tableFixHead\">\n              <BootstrapTable\n                bootstrap4\n                keyField=\"id\"\n                data={pendingData}\n                columns={columns}\n                rowIndex\n                classes=\"table-responsive\"\n              />\n              </div>\n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/components/Loader/Loader.js",[],"/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js",["2424","2425","2426","2427","2428","2429","2430"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BasicQuery from \"./BasicQuery\";\nimport ProposalDetails from \"./ProposalDetails\";\nimport AssignmentDetails from \"./AssignmentDetails\";\nimport AdditionalQuery from \"./AdditionalQuery\";\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\nimport DraftReports from \"./DraftReports\";\nimport CommonServices from \"../../common/common\";\nimport QueryRecording from \"./QueryRecording\";\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Row, Col\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport Feedback from './Feedback'\n\n\nfunction QueryDetails({\n  p,\n  diaplaySpecific,\n  diaplayProposal,\n  diaplayHistory,\n  diaplayAssignment,\n  displayQuery,\n  assingNo,\n  getQuery,\n  customerQuery,\n  queryDocs,\n  purpose,\n  paymentDetails,\n  year,\n  feedback,\n  reports, \n  submitData,\n  accept,\n  tlName2,\n  tp22,\n  tpStatus,\n  declined2,\n  declinedStatus, \n  finalDate, \n  qstatus\n}) {\n \n\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <>\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { toggle('1'); }}\n            >\n              Basic Query Information\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { toggle('2'); }}\n            >\n              Proposal\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '3' })}\n              onClick={() => { toggle('3'); }}\n            >\n              Assignment\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '4' })}\n              onClick={() => { toggle('4'); }}\n            >\n              Feedback\n            </NavLink>\n          </NavItem>\n          {customerQuery === \"customerQuery\" ? null :\n          <NavItem>\n            <NavLink\n            className = {classnames({ active : activeTab === '5'})}\n            onClick = {() => { toggle('5');}} >\n              Recording\n            </NavLink>\n          </NavItem> }\n         \n\n        </Nav>\n\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <BasicQuery\n                    p={p}\n                    diaplaySpecific={diaplaySpecific}\n                    purpose={purpose}\n                    queryDocs={queryDocs}\n                    year={year}\n                    declined2={declined2}\n                    declinedStatus={declinedStatus}\n                    qstatus={qstatus}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <ProposalDetails\n                    diaplayProposal={diaplayProposal}\n                    diaplayHistory={diaplayHistory}\n                    paymentDetails={paymentDetails}\n                    p={p}\n                    accept={accept}\n                    tlName2={tlName2}\n                    tp22 = {tp22}\n                    tpStatus={tpStatus}\n                    \n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <AssignmentDetails\n                    diaplayAssignment={diaplayAssignment}\n                    p={p}\n                    diaplayProposal={diaplayProposal}\n                    reports={reports}\n                    assingNo={assingNo}\n                    submitData = {submitData}\n                    customerQuery = {customerQuery}\n                    finalDate={finalDate}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n\n          <TabPane tabId=\"4\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <Feedback\n                    feedback={feedback}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n       <TabPane tabId=\"5\">\n         <Row>\n           <Col sm=\"12\">\n             <Card body>\n               <QueryRecording\n  assingNo={p.assign_no}/>\n             </Card>\n           </Col>\n           </Row>\n       </TabPane>\n          \n\n        </TabContent>\n      </div>\n\n    </>\n  );\n}\n\nexport default QueryDetails;\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js",["2431"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n\n  const getHistory = () => {\n   if(report !== undefined && report.length > 0){\n    axios.get(`${baseUrl}/customers/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n   }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type === \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type === \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n\n        </ModalBody>\n\n        <ModalFooter>\n          <div>\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js",["2432","2433","2434","2435","2436","2437","2438","2439","2440","2441","2442","2443","2444","2445","2446","2447"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getPaymentStatus,\n  pay3\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { assign_id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"id\", assign_id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n  \n    axios.get(`${baseUrl}/admin/getPaymentDetail?id=${assign_id}`)\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n         \n          window.location.href= (`${response.data.payment_detail[0].paymenturl}`)\n         \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\nif(addPaymentModal === true){\n  var kk = pay.installment_amount.split(\",\")\n}\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal}  toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Paid Amount</th>\n                    <th>Due Date</th>\n                    <th>Pay</th>\n                  </tr>\n                  {kk?.map((i, e) => (\n                    <tr>\n                    <td>{i == \"0\" ? pay.amount : i }</td>\n                    <td> {CommonServices.removeTime(due_date)}</td>\n                    <td><form onSubmit={handleSubmit(onSubmit)}>\n                  {+accepted_amount == +paid_amount ? <p>paid</p> : (\n                   <button type=\"submit\" className=\"btn btn-primary\">\n                      Pay\n                   </button>\n                    \n                \n                  )}\n                </form></td>\n                  </tr>\n                 ))}\n                 \n                \n                </table>\n                \n              </ModalBody>\n            </>\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js",["2448","2449","2450","2451","2452","2453"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  \n  const getHistory = () => {\n   \n  if(report != undefined && report.length > 0){\n   \n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n  }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js",["2454","2455","2456","2457"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js",["2458","2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469","2470"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\nimport {Typography} from \"@material-ui/core\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n\n\n  const [nestedModal, setNestedModal] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n\n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discard it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n         \n          Alerts.SuccessNormal(\"Discarded Successfully\")\n          ViewReport()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br>\n                 </br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                 <td>\n                  {p.stages_type === \"2\" ?\n                  <>\n                   {p.status === \"3\" ? \n                   <p style={{ color: \"red\" }}> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p style={{ color: \"red\" }}>Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                      onClick = {() => toggleNested(p)}\n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                       onClick={() => toggleDiscard(p)}\n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>\n                                </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js",["2471","2472","2473"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js",["2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489","2490","2491","2492","2493"],"/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js",["2494","2495","2496","2497","2498"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n\n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n   \n        if (response.data.code === 1  && des === false) {\n          \n          setLoading(false)\n          des = true\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js",["2499","2500","2501","2502","2503"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n \n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\ndes = false;\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1 && des === false) {\n        des = true\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js",["2504","2505"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js",["2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527","2528","2529","2530"],"/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js",["2531","2532","2533","2534","2535","2536","2537","2538"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Query No</th>\n                <th scope=\"row\">Status</th>\n                <th scope=\"row\">Date of Allocation</th>\n                <th scope=\"row\">Notes</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.name}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.status}</td>\n                      <td>{p.date_of_allocation}</td>\n                      <td>{p.notes}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js",["2539","2540"],"import React from \"react\";\nimport \"../../assets/css/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NavWrapper from \"./NavWrapper\";\n\n\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId , feedbackNumber}) {\n  let history = useHistory();\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"custEmail\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/\");\n  };\n\n  const adminLogout = () => {\n    localStorage.removeItem(\"adminkey\");\n    localStorage.removeItem(\"adminEmail\");\n    history.push(\"/admin/login\");\n  };\n\n  const tlLogout = () => {\n    localStorage.removeItem(\"tlkey\");\n    localStorage.removeItem(\"tlEmail\");\n    history.push(\"/teamleader/login\");\n  };\n\n  const tpLogout = () => {\n    localStorage.removeItem(\"tpkey\");\n    history.push(\"/taxprofessional/login\");\n  };\n\n  const nm = window.localStorage.getItem(\"name\");\n \n  var name = JSON.parse(nm);\n  \n\n\n  const CustEmail = window.localStorage.getItem(\"custEmail\");\n  const adminEmail = window.localStorage.getItem(\"adminEmail\");\n  const tlEmail = window.localStorage.getItem(\"tlEmail\");\n  const tpEmail = window.localStorage.getItem(\"tpEmail\")\n \n  \n  return (\n    <div>\n      <nav\n        className=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\n        sty\n      >\n        {custUserId && (\n          <NavWrapper \n         \n          color=\"#5E96AE\" logout={custLogout}\n            name=\"customer\" email={CustEmail}\n          />\n        )}\n\n        {adminUserId && (\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\n            name=\"admin\" email={adminEmail}\n            feedbackNumber= {feedbackNumber}\n          />\n        )}\n\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout}\n          name=\"teamleader\" email={tlEmail}\n        />}\n\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout}\n          name=\"taxprofessional\" email={tpEmail}\n        />}\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminHeader;\n","/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js",[],"/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js",["2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556"],"/home/pooja/MazarsRepo/src/components/Records/Records.js",[],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js",["2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n\n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n         \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 3,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Client Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    index : 3,\n                                                    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField={\"assign_no\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js",["2570","2571","2572","2573","2574","2575","2576","2577","2578","2579","2580","2581","2582"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n    \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 2,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n                                              to={{\n                                                pathname: `/teamleader/chatting/${row.id}`,\n                                                index : 2,\n                                                routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"acceptedProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                     <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js",["2583","2584","2585","2586","2587","2588","2589","2590","2591","2592","2593","2594","2595"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n       setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\n            .then((res) => {\n          \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/teamleader/chatting/${row.id}`,\n    index : 1,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n <Link \n to={{\n     pathname: `/teamleader/edit-proposal/${row.id}`,\n     index : 1,\n     routes: \"proposal\" }}>\n     <i\n         className=\"fa fa-edit\"\n         style={{\n             fontSize: \"16px\",\n             cursor: \"pointer\",\n             color: \"green\",\n         }}\n     ></i>\n </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/sendproposal/${row.id}`,\n                                        index : 1,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js",["2596","2597","2598","2599","2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState(null);\n    const [id2, setId2] = useState(null)\n    const [tds, setTds] = useState(false)\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n         setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n   const addTdsToggle = (key) => {\n     \n       setTdsForm(!tdsForm)\n   }\n   const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n      \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Client Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n               fontSize :\"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/teamleader/chatting/${row.id}`,\n    index : 0,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/edit-proposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/sendproposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n</div>\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    />\n                     <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n\n{/* <div>\n                                {row.revised_text && (\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\n                                        <i\n                                            class=\"fa fa-comments-o\"\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\n                                            onClick={() => chatHandler(row)}\n                                        ></i>\n                                    </div>\n                                )}\n                            </div> */}","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js",["2615"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n\n\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, [num]);\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n\n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"tlkey\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"tlEmail\", JSON.stringify(response.data.name));\n          sessionStorage.setItem(\"sessionTlid\", JSON.stringify(response.data.user_id))\n          history.push(\"/teamleader/dashboard\");\n        } else {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"uid\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n     \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/pages/Admin/Report/ConsaltSearch.js",["2616","2617","2618","2619","2620"],"import React , {useState, useEffect} from 'react';\nimport { useForm } from 'react-hook-form';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nconst ConsaltSearch = ({setData, getData}) => {\n    const [data2, setData2] = useState([]);\n    const [teamleader44, setTeamleader44] = useState(\"\")\n   \n    const today = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    const prevDay = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + (new Date().getDate() - 1 )).slice(-2)\n    const [fDate, setFdate] = useState(prevDay)\n    const [tDate, settdate] = useState(today)\n    const [clientId, setClientId] = useState();\n    const [invoiceNum, setInvoiceNum] = useState()\n    const userid = window.localStorage.getItem(\"adminkey\")\n    var pp = []\n   \n    const { handleSubmit, register, errors, reset } = useForm()\n \n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n          console.log(\"res\", res.data.result)\n        pp.push(res.data.result)\n        setData2((res.data.result));\n       \n      }\n    });\n  };\n  useEffect(() => {\n      getTeamLeader()\n  }, [])\n    const options3 = data2.map(d => (\n        {\n          \"value\": d.post_name,\n          \"label\": d.postname\n        }))\n        const teamLeader = (a) => {\n            let tk = []\n               a.map((i) => {\n               \n              \n                tk.push(i.value)\n               })\n               setTeamleader44(tk)\n             \n             }\n    const onSubmit = (value) => {\n        let formData = new FormData();\n       formData.append(\"to_date\", value.to_date);\n       formData.append(\"form_date\", value.form_date);\n       formData.append(\"client_id\", value.client_id);\n       formData.append(\"invoice_number\", value.invoice_number);\n       formData.append(\"tl_post\", teamleader44)\n       formData.append(\"uid\", JSON.parse(userid));\n       axios({\n           method : \"POST\",\n           url : `${baseUrl}/report/paymentReport`,\n           data : formData\n       })\n       .then((res) => {\n           console.log(\"res\", res)\n           if(res.data.code === 1){\n               setData(res.data.result)\n           }\n       })\n    }\n    const downloadReport = () => {\n        let formData = new FormData();\n        formData.append(\"to_date\", tDate);\n        formData.append(\"form_date\", fDate);\n        formData.append(\"tl_post\", teamleader44 )\n        formData.append(\"client_id\", clientId);\n        formData.append(\"invoice_number\", invoiceNum);\n        formData.append(\"uid\", JSON.parse(userid));\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/report/downloadpaymentReport`,\n            data : formData\n        })\n        .then(function (response) {\n           if(response.data.code === 1){\n            window.open(`${baseUrl3}/${response.data.result}`)\n           }\n          // window.location.assign(`${baseUrl}/report/generateReport`)\n          })\n    }\n    const fromDate = (e) => {\n        setFdate(e.target.value)\n      \n    }\n    const toDate = (e) => {\n    \n      \n      settdate(e.target.value)\n    }\n    const refrehData = () => {\n     \n     axios.get(`${baseUrl}/tl/mobilpayTodayCall`)\n     .then((res) => {\n         if(res.data.code === 1) {\n            // getData()\n         }\n     })   \n    }\n    const clientFun = (e) => {\n  setClientId(e.target.value)    \n    }\n    const invoiceFun = (e) => {\n      setInvoiceNum(e.target.value)\n    }\n    return (\n      <form onSubmit = {handleSubmit(onSubmit)}>\n         <div className=\"row\">\n             <div className=\"col-md-3\">\n                 <label>From Date </label>\n                 <input\n          type=\"date\"\n          ref = {register}\n          onChange= {(e) => fromDate(e)}\n          defaultValue={prevDay}\n          max= {today}\n          name=\"form_date\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-3\">\n                     <label>To Date </label>\n             <input\n          type=\"date\"\n          ref = {register}\n          onChange= {(e) => toDate(e)}\n          defaultValue={today}\n          max= {today}\n          name=\"to_date\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-2\">\n                 <label>Client Id </label>\n                 <input\n          type=\"text\"\n          ref = {register}\n          onChange = {(e) => clientFun(e)}\n          name=\"client_id\"\n          className=\"form-control\" />\n                 </div> <div className=\"col-md-2\">\n                 <label>Invoice Number </label>\n                 <input\n          type=\"text\"\n          onChange = {(e) => invoiceFun(e)}\n          ref = {register}\n          name=\"invoice_number\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-2\" style={{zIndex : \"1000\"}}>\n<label className=\"form-label\">Teamleader</label>\n<Select  isMulti={true}\noptions={options3}\n\nonChange= {(e) =>teamLeader(e)}/>\n</div>\n               \n         </div>\n         <div className=\"row\">\n           <div className=\"col-md-6\">\n           <button className=\"btn btn-primary\">Search</button>\n           \n             </div>\n             <div className=\"col-md-6 my-2\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\n             <button type=\"button\" onClick={() => downloadReport()} className=\"btn btn-success mx-2\">Download</button>\n             <button type=\"button\" onClick={() => refrehData()} className=\"btn btn-secondary mx-2\">Pull payment data</button>\n             </div>\n         </div>\n      </form>\n    )\n}\nexport default ConsaltSearch;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js",["2621","2622","2623","2624","2625"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport Records from \"../../../components/Records/Records\";\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [proposal, setProposal] = useState([]);\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const [records, setRecords] = useState([]);\n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"200px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width: \"200px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n               textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width: \"200px\"};\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"200px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"200px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"admincreate\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n             \n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=  {\"id\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js",["2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641","2642","2643","2644","2645","2646","2647","2648"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Records from \"../../../components/Records/Records\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const [showCopyUrl, setShowCopyUrl] = useState(\"click\")\n let copyTitle = \"\"\n let copied = true\n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"80px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n             textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return {fontSize: \"11px\" ,  width : \"150px\"};\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"150px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                var x = row.tds_amount;\n                \n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p style={{color : \"red\"}}>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n      \n          \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                copyTitle = row.paymenturl\n                return (\n                    <>\n                       {showCopyUrl === \"click\" ? \n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                            \n                          \n                              {row.is_paid == \"0\" \n                ?   \n               \n                  \n                    <span title={row.paymenturl}>\n                    <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}}  style={noPointer} />\n                                   </span> \n                  \n                \n                   \n              \n                    : \"\" }\n                        </div> : \"\"}\n                       \n                    </>\n                );\n            },\n        },\n    ];\n    \n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n    setShowCopyUrl(\"clicked\")\n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n        if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n         else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n      \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"admingenerated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n              \n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"id\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                   \n                  \n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js",["2649"],"import React, { useState } from \"react\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction Feedback({ feedback }) {\n  \n\n    return (\n        <div>\n            <p\n                style={{\n                    textAlign: \"center\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                }}\n            >\n                Feedback\n            </p>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th style={{ width: \"80px\" }}>S.No</th>\n                        <th style={{ width: \"200px\" }}>Date</th>\n                        <th>Feedback</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        feedback.map((p, i) => (\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td style={{ display: \"flex\" , border : \"0px\"}}>\n                                    <p>{CommonServices.removeTime(p.created)}</p>\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\n                                </td>\n                                <td>{p.feedback}</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Feedback;","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js",["2650","2651","2652","2653","2654","2655","2656","2657"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport ModalVideo from \"react-modal-video\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactHlsPlayer from 'react-hls-player'\nimport ReactPlayer from 'react-player';\nimport CloseIcon from '@material-ui/icons/Close';\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction QueryRecording(assingNo) {\n    // const userid = window.localStorage.getItem(\"tlkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n\n        getRecording();\n    }, []);\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\",\n    color : \"red\"\n}\n\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?assign_id=${assingNo.assingNo}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                }\n            });\n    };\n   \n   \n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_id\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n        },\n        \n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n  \n   \n    return (\n     \n           <div className=\"queryBox\">\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n            </Card>\n            {isOpen === true ?\n          \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoid}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div>  : \"\"}\n           \n           </div>\n\n    );\n}\n\nexport default QueryRecording;","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js",["2658","2659"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\nfunction DraftReports({ id }) {\n\n    \n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\n            )\n            .then((res) => {\n                if (res) {\n                  \n                    setAssignmentDisplay(res.data.result);\n                }\n            });\n    };\n\n    return (\n        <>\n            <div>\n                <p\n                    style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                        fontSize: \"18px\",\n                    }}\n                >\n                    Draft Reports\n                </p>\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n                            <th scope=\"col\">Data</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Draft Reports</th>\n                            <td>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Name</th>\n                                </tr>\n                                {assignmentDisplay.map((p, i) => (\n                                    <tr>\n                                        <td>{CommonServices.removeTime(p.date)}</td>\n                                        <td>\n                                            <a\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\n                                                target=\"_blank\"\n                                            >\n                                                {p.name}\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}\n\nexport default DraftReports;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js",["2660","2661"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n\n \n\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"File uploaded successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          getQuery();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>\n          UPLOAD DOCUMENTS\n        </ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    onClick={addHandler}\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js",["2662","2663"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AdditionalQuery({ displayQuery }) {\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          ADDITIONAL QUERIES\n        </p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n             \n              <th scope=\"col\">Date Submission</th>\n              <th scope=\"col\">Documents</th>\n            </tr>\n          </thead>\n          {displayQuery.map((p, i) => (\n            <tbody>\n              <tr key={i}>\n                {/* <td>{p.additional_queries}</td> */}\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\n                <td>\n                  {p.upload_doc == \"\" ? (\n                    \"\"\n                  ) : (\n                    <p style={{ display: \"flex\" }}>\n                      <a\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\n                        target=\"_blank\"\n                      >\n                        <i className=\"fa fa-photo\"></i>\n                      </a>\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\n                    </p>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js",["2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ReportUrl } from \"../../config/config\";\n\nfunction AssignmentDetails({ p, finalDate, submitData, customerQuery , diaplayAssignment, diaplayProposal, reports, assingNo }) {\n\n  const {\n    assignment_number,\n    assignment_date,\n    date_of_delivery,\n  } = diaplayAssignment;\n\n  const { cust_accept_date } = diaplayProposal;\n\n  const timeTaken = (a, b) => {\n    var date2 = CommonServices.removeTime(a);\n    var date1 = CommonServices.removeTime(b);\n\n  \n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n   \n   \n  };\n\n  return (\n    <>\n      <div className=\"queryBox\">\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Assignment Details\n        </p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Assignment Number</th>\n              <td>{assignment_number}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assignment Date</th>\n              <td>{CommonServices.removeTime(assignment_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Date of Completion</th>\n              <td>\n                {p.query_status >= 9 ? (\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\n                ) : null}\n              </td>\n            </tr>\n            {/* {p.query_status >= 9 ? ( */}\n            <tr>\n              <th scope=\"row\">Assignment Status</th>\n              <td>\n                <tr style={{display : \"flex\"}}>\n                  <th  style={{display : \"flex\", width : \"200px\"}}>Assignment Stage</th>\n                  <th  style={{display : \"flex\", width : \"200px\"}}>Status</th>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Client Discussion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Draft Reports</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Final Discussion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Delivery of Final Reports</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Awaiting Completion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td>\n                </tr>\n              </td>\n            </tr>\n            {/* ) : null} */}\n            <tr>\n              <th scope=\"row\">Time taken to complete the assignment</th>\n              <td>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\"\n               \n                  ? finalDate + \" Days\"\n                  : null}\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Reports</th>\n              <td>\n                {\n                  reports.map((p, i) => (\n                    \n                    <>\n                      {customerQuery == \"customerQuery\" && submitData[0].paid_status == \"2\" ? null :\n                      <tr style={{display : \"flex\", width : \"500px\"}}>\n                        <td style={{display : \"flex\", width : \"50px\"}}>{i + 1}</td>\n                        <td style={{display : \"flex\", width : \"200px\"}}>\n                          <a\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i className=\"fa fa-photo\"></i> {p.document}\n                          </a>\n                        </td>\n                        <td style={{display : \"flex\", width: \"150px\", color: \"green\" }}>\n                          {p.stages_type == 2 && p.revise_report == null && \"Draft Report\" || p.stages_type == 3 && p.revise_report == null && \"Final Report\" || p.revise_report != null && \"Draft Report\"}\n                        </td>\n                        {p.status == \"3\"\n                            ?\n                        <td style={{display : \"flex\", width : \"100px\"}}>\n                         \n                            <p className=\"declined\">Discarded</p>\n                            \n                        </td> : <td style={{display : \"flex\", width : \"200px\"}}></td>}\n                      </tr> }\n                    </>\n                  ))\n                }\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AssignmentDetails;\n","/home/pooja/MazarsRepo/src/components/Footer/Footer.js",["2684","2685"],"/home/pooja/MazarsRepo/src/components/Header/Header.js",["2686"],"import { Link, useHistory } from \"react-router-dom\";\nimport \"../../assets/css/style.css\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\n\nfunction Header({ id, cust_sign, noAdminSign, noTlSign, noTpSign, admin, mtl, mtp, noSign, loginOTP }) {\n  let history = useHistory();\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  }\n\n \n\n  return (\n    <>\n      <div className=\"header\">\n        {id && (\n          <div>\n            <Link to=\"/customer/questionnaire-page\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {cust_sign && (\n          <div>\n            <Link to=\"/\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {noSign && (\n          <div>\n            <Link to=\"/\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\n            </Link>\n          </div>\n        )}\n\n\n        {loginOTP && (\n          <div>\n            <img src={mazars} className=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\n          </div>\n        )}\n\n        {admin && (\n          <div>\n            <Link to=\"/admin/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtl && (\n          <div>\n            <Link to=\"/teamleader/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtp && (\n          <div>\n            <Link to=\"/taxprofessional/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        <div>\n          {id && (\n            <ul className=\"menu\">\n              <li style={{ color: \"#fff\" }}>{id}</li>\n              <li onClick={custLogout} style={{ color: \"#fff\" }}>\n                <i className=\"fa fa-sign-out\">logout</i>\n              </li>\n            </ul>\n          )}\n\n          {cust_sign && (\n            <div>\n              <ul className=\"menu\">\n                <li>\n                  <Link to=\"/\">Signin</Link>\n                </li>             \n              </ul>\n            </div>\n          )}\n         \n          {admin && !noAdminSign && (\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/admin/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n          {mtl && !noTlSign && (\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/teamleader/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n          {mtp && !noTpSign && (\n            <ul className=\"menu\">\n              <li>\n                <Link to=\"/taxprofessional/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n {/* <li>\n                  <Link to=\"/customer/signup\">SignUp</Link>\n                </li> */}","/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js",["2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702"],"/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js",["2703","2704","2705","2706","2707","2708","2709","2710","2711"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ImageUrl } from \"../../config/config\";\nimport { Markup } from 'interweave';\nimport './queryStyle.css';\n\nfunction BasicQuery({qstatus, p, diaplaySpecific, queryDocs, year, purpose, declined2,\n  declinedStatus }) {\n\n\n\n  return (\n    <>\n      <div className=\"queryBox\">\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Basic Query Information\n        </p>\n        <table className=\"table table-bordered p-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th> \n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Query No</th>\n              <td>{p.assign_no}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Query Date</th>\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Client ID</th>\n              <td>{p.email}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Category</th>\n              <td>{p.cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sub- Category</th>\n              <td>{p.sub_cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of the Case</th>\n              <td>{p.case_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assessment Year(s)</th>\n              <td>\n                {year.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Brief fact of the case</th>\n           <td className=\"tableStyle\"> <Markup content={p.fact_case} /></td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Uploaded Documents</th>\n              <td>\n                {queryDocs.map((p, i) => (\n                  <p style={{ display: \"flex\" }}>\n                    <a\n                      href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                      target=\"_blank\"\n                    >\n                    <span>  {i + 1 } </span><i className=\"fa fa-photo\"></i>\n                    </a>\n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\n                  </p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Specific questions</th>\n              <td>\n                {diaplaySpecific.map((p, i) => (\n                  <div>{i + 1}. {p.text}</div>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Purpose of the query</th>\n              <td colspan=\"1\">\n                {purpose.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Format in which Opinion is required</th>\n              <td colspan=\"1\">\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                <p>\n                  {p.softcopy_digitally_assigned === \"1\" &&\n                    \"SoftCopy- Digitally Signed\"}\n                </p>\n\n                <p>\n                  {p.printout_physically_assigned === \"1\" &&\n                    \"Printout- Physically Signed\"}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\n              <td colspan=\"1\">{p.Timelines}</td>\n            </tr>\n            {qstatus == \"-1\" || p.is_delete == \"1\" ? \n            <tr>\n              <th scope=\"row\">Date of Decline</th>\n              <td>{qstatus == \"-1\" || p.is_delete == \"1\" ? declined2 : \"\"}</td>\n              </tr> : \"\"}\n            {\n              p.query_status == \"-1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for Admin Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n            {\n              p.is_delete == \"1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for client Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n             \n            \n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default BasicQuery;\n","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js",["2712","2713"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setTime, setDisabled, loading, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime(setTime, setDisabled);\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n             \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n{loading === true ? \"\" :\n                <div style={{ paddingTop: \"10px\" }}>\n                <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n            </div>}\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js",["2714","2715","2716","2717","2718","2719","2720","2721","2722"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction CustHistory({ history, toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n  \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <div>\n       <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Query Details</ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n               \n             \n                \n                <th scope=\"row\">Query Stages</th>\n                <th scope=\"row\">Total</th>\n              </tr>\n            </thead>\n\n            {history != undefined \n              ? \n                  <tbody>\n                      <tr>\n                      <th scope=\"row\">Query Raised</th>\n                      <td>{history.total}</td>\n                      </tr>\n                      <tr>\n                      <th scope=\"row\">Query Completed</th>\n                      <td>{history.complete_query}</td>\n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Inprogress</th>\n                     <td>{history.inprogress_queries}</td>\n                   \n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Declined</th>\n                     <td>{history.declined_queries}</td>\n                    </tr>\n                  </tbody>\n                \n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CustHistory;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js",["2723","2724","2725","2726","2727","2728","2729"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CustomerListFilter(props) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [selectedData, setSelectedData] = useState([]);\n\n  const { setData, searchQuery, setRecords, records, getCustomer  } = props;\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  \n  const resetData = () => {\n   \n    reset();\n   getCustomer();\n  };\n\n  \n\n  \n  const onSubmit = (data) => {\n\nif(searchQuery == \"SearchQuery\")\naxios\n.get(\n  `${baseUrl}/admin/getAllList?&name=${data.name}&country=${data.country}&state=${data.state}&city=${data.city2\n  }&email=${data.email}&occupation=${data.occupation}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n)\n.then((res) => {\n\n  if (res.data.code === 1) {\n    if (res.data.result) {\n      setData(res.data.result);\n    setRecords(res.data.result.length)\n    }\n  }\n});     \n};\n\n  return (\n    <>\n    <div className=\"row\">\n      <div className=\"col-sm-12 d-flex\">\n        <div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          <div className=\"row my-3\">\n        <div className=\"col-sm-3\">\n            \n          <input \n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          ref={register}\n          />\n      </div>\n      <div className=\"col-sm-3\">\n            \n            <input \n            placeholder=\"Country\"\n            type=\"country\"\n            name=\"country\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n        <div className=\"col-sm-3\">\n            \n            <input \n            placeholder=\"City\"\n            type=\"text\"\n            name=\"city2\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n              <div className=\"col-sm-3\">\n                  \n                  <input \n                  placeholder=\"State\"\n                  type=\"text\"\n                  name=\"state\"\n                  className=\"form-control\"\n                  ref={register}/>\n              </div>\n             \n              \n          \n          </div>\n          <div className=\"row my-3\">\n          <div className=\"col-sm-3\">\n                \n                <input \n                placeholder=\"Email\"\n                type=\"text\"\n                name=\"email\"\n                className=\"form-control\"\n                ref={register}/>\n            </div>\n            <div className=\"col-sm-3\">\n              \n              <input \n              placeholder=\"Occupation\"\n              type=\"text\"\n              name=\"occupation\"\n              className=\"form-control\"\n              ref={register}/>\n          </div>\n          <div className=\"form-inline\">\n             \n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">From</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateFrom\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 max={item}\n               />\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">To</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateTo\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 defaultValue={item}\n                 max={item}\n               />\n             </div>\n</div>\n          </div>\n             \n              <div className=\"row my-3\">\n             \n             <div className=\"col-sm-6\">\n             <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n              <button\n          type=\"submit\"\n          className=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n        <div className=\"form-group d-inline-block\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n             </div>\n              \n              </div>\n \n           \n\n           \n          </form>\n        </div>\n      </div>\n    </div>\n  </>\n  );\n}\n\nexport default CustomerListFilter;\n","/home/pooja/MazarsRepo/src/pages/Admin/Recording/RecordingEdit.js",["2730","2731"],"import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\n   const userid = localStorage.getItem(\"adminkey\")\n    const { handleSubmit, register, errors } = useForm();\n    const onSubmit = (value) => {\n       let formData = new FormData();\n       formData.append(\"uid\", JSON.parse(userid))\n       formData.append(\"message\", value.p_message);\n       formData.append(\"message_type\", value.msg_type)\n        formData.append(\"assign_id\", assignid);\n        formData.append(\"participants\", value.p_participants);\n        formData.append(\"id\", editId)\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\n            data: formData,\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n                recordingHandler()\n                Swal.fire({\n                    title : \"success\",\n                    html : \"Message edited successfully\",\n                    icon : \"success\"\n                })\n                recList()\n            }\n        })\n    }\n   \nreturn (\n \n    <>\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\n        <ModalHeader toggle={recordingHandler}>\n        <h1>Recording Edit</h1>\n        </ModalHeader>\n        <ModalBody>\n       <form onSubmit = {handleSubmit(onSubmit)}>\n<div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Participants Name</label>\n        <input \n        className=\"form-control\"\n        name=\"p_participants\"\n        ref = {register}\n        defaultValue = {participants}/>\n        </div>\n        \n</div>\n<div className = \"row\">\n<div className=\"col-md-12\">\n    <label>Message Type</label>\n<select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            required\n                            \n                          >\n                            <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                          </select>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Message</label>\n        <textarea \n        className=\"form-control\"\n        style={{height : \"100px\"}}\n        name=\"p_message\"\n        ref = {register}\n        defaultValue = {message}/>\n        </div>\n</div>\n<button className=\"btn btn-primary my-2\">\n    Submit\n</button>\n       </form>\n        </ModalBody>\n    </Modal>\n    \n    </>\n)\n}\nexport default RecordingEdit;","/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js",["2732","2733"],"import Swal from \"sweetalert2\";\n const LoadingError = (setLoading) => {\nsetTimeout(() =>{\n    setLoading(false)\n    Swal.fire({\n        title : \"error\",\n        html : \"Something went wrong, Please try again\",\n        icon : \"error\"\n    })\n}, 30000)\n}\n\nvar timerOn = true;\nconst timer2 = (setTime, setDisabled) => {\n    function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n       \n      }\n      timer(180);\n}\nexport default {\n    LoadingError, timer2\n  };","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js",["2734"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tp/getTaxProfessional\");\n};\n\nconst get = (id) => {\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\n};\n\nconst create = (data) => {\n  return http.post(\"/tutorials\", data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\n};\n\nconst editTL = (id) => {\n  return http.get(`/tl/getTeamLeader?id=212`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  remove,\n  editTL\n};\n","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js",["2735","2736","2737","2738","2739","2740","2741","2742","2743","2744"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction RecordingFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getRecording,\n    SearchQuery,\n   userid,\n  \n \n  } = props;\n  // const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n \n\n  \n \n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n   getRecording();\n  };\n\n  const onSubmit = (data) => {\n \nif(SearchQuery == \"SearchQuery\") {\n  \n    axios\n        .get(\n          `${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}&assign_id=${data.queryNo}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n}\n\n   \n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-inline\">\n          \n             <input\n                    type=\"text\"\n                    name=\"queryNo\"\n                    ref={register}\n                    className=\"form-select form-control\"\n                    \n                  />\n                <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecordingFilter;\n\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js",["2745","2746","2747"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js",["2748","2749","2750","2751","2752","2753","2754","2755","2756","2757"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CustomerNotification from \"./CustomerNotification\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './index.css'\nimport CommonServices from \"../../common/common\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name, email, feedbackNumber} = props;\n\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n  const adminkey = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\")\n\n\n  return (\n    <>\n      <div className=\"navbar-wrapper\">\n        <div className=\"navbar-container\" style={{ background: color }}>\n          <div className=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul className=\"nav navbar-nav mr-auto float-left\">\n              <li className=\"nav-item d-block d-md-none\">\n                <a\n                  className=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i className=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li className=\"nav-item dropdown navbar-search\">\n                <ul className=\"dropdown-menu\">\n                  <li className=\"arrow_box\">\n                    <form>\n                      <div className=\"input-group search-box\">\n                        <div className=\"position-relative has-icon-right full-width\">\n                          <input\n                            className=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div className=\"form-control-position navbar-search-close\">\n                            <i className=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h4 className=\"brand-text text-white\">{name == \"customer\" ? CommonServices.capitalizeFirstLetter(\"client\") : CommonServices.capitalizeFirstLetter(name)}: {JSON.parse(email)} </h4>\n              </li>\n             \n            </ul>\n\n            <ul className=\"nav navbar-nav float-right\">\n\n              {name == \"customer\" && (\n                <CustomerNotification tokenKey={userId} name={name} />\n              )}\n\n              {name == \"admin\" && (\n                <CustomerNotification tokenKey={adminkey} name={name} />\n              )}\n\n              {name == \"teamleader\" && (\n                <CustomerNotification tokenKey={tlkey} name={name} />\n              )}\n               {name == \"taxprofessional\" && (\n                <CustomerNotification tokenKey={tpkey} name={name} />\n              )}\n\n\n              <li className=\"dropdown dropdown-user nav-item\">\n                <a\n                  className=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span className=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div className=\"dropdown-menu dropdown-menu-right\">\n                  <div className=\"arrow_box_right\">\n\n                    {name == \"customer\" && (\n                      <Link to=\"/customer/change-password\">\n                        <div className=\"dropdown-item\"\n                          style={{ cursor: \"pointer\" }}>\n                          <VpnKeyIcon />\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\n                        </div>\n                      </Link>\n                    )}\n\n                    <div\n                      className=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <LockOpenIcon />\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\n                    </div>\n\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js",["2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\nimport {Spinner} from \"reactstrap\";\nimport \"./porposalStyle.css\";\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [tdsR, setTdsR] = useState();\n   const [disabled, setDisabled] = useState(false)\n  const [description, setDiscription] = useState()\nconst [loading, setLoading] = useState(false);\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/tl/getServices`)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n   \n      setTdsR(10)\n      setCgetRate(18);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 18 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n  setSac(i.serviceCode)\n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n setDiscription(i.description)\nsetTdsR(parseFloat(i.tds_rate))\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseFloat(i.opt_expenses));\n setCgstTotal(parseFloat(i.cgst_amount));\n setIgstTotal(parseFloat(i.igst_amount));\n setSgstTotal(parseFloat(i.sgst_amount));\n setCgetRate(parseFloat(i.cgst_rate));\n setIgetRate(parseFloat(i.igst_rate));\n setSgetRate(parseFloat(i.sgst_rate));\nsetTds(parseFloat(i.tds_amount))\n setgrandTotal(parseFloat(i.payable_amount))\n setTotal(parseFloat(i.invoice_amount))\n setGst(parseFloat(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n \n \n let kkk = e.target.value.split(\".\")[1]\n  if(kkk)\n   if(kkk.length < 3){\n     \n    setCgetRate(e.target.value);\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\n     let cget = Math.round(a * e.target.value / 100)\n     setCgstTotal(parseInt(cget));\n     setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\n     setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n     setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n    \n   }\n   else{\n     return false;\n   }\n else{\n  setCgetRate(e.target.value);\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = Math.round(a * e.target.value / 100)\n   setCgstTotal(parseInt(cget));\n   setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n  \n }\n}\n// Sgst tax function\nconst sgstFun = (e) => {\n  let kkk = e.target.value.split(\".\")[1]\n  if(kkk){\n    if(kkk.length < 3){\n      setSgetRate(e.target.value)\n      let a = parseInt(basicAmount) + parseInt(pocketExp);\n            let cget = Math.round(a * e.target.value / 100)\n            setSgstTotal(parseInt(cget))\n            setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n            setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\n            setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n      \n    }\n    else{\n      return false;\n    }\n  }\nelse{\n  setSgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n        let cget = Math.round(a * e.target.value / 100)\n        setSgstTotal(parseInt(cget))\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n        setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n  \n}\n   \n   }\n  \n \n// Igst tax function\n const igstFun = (e) => {\n \n  let kkk = e.target.value.split(\".\")[1]\n  if(kkk){\nif(kkk.length < 3){\n  setIgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = Math.round(a * e.target.value / 100) \n         setIgstTotal(cget) \n         setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n\n \n}\nelse{\n  return false;\n}\n  }\n   else{\n    setIgetRate(e.target.value)\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\n        let cget = Math.round(a * e.target.value / 100) \n           setIgstTotal(cget) \n           setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\n           setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n           setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n  \n   \n   }\n      \n }\n // Tds function\n const tdsFun = (e) => {\n  let kkk = e.target.value.split(\".\")[1]\n if(kkk){\n   if(kkk.length < 3){\n    if(e.target.value > 100){\n      setTdsR(100);\n      let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = Math.round((a * 100 / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))\n     \n    }  \n    else{\n     setTdsR(e.target.value)\n     let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = Math.round((a * e.target.value / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))  \n    }\n   }\n   else{\n     return false\n   }\n }\n else{\n  if(e.target.value > 100){\n    setTdsR(100);\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\n    let cget = Math.round((a * 100 / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))\n   \n  }  \n  else{\n   setTdsR(e.target.value)\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\n    let cget = Math.round((a * e.target.value / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))  \n  }\n }\n }\n \n\n const pocketExpFun = (e) => {\n if(e.target.value === \"\"){\n   setPocketExp(0)\n }\n else{\n   setPocketExp(parseInt(e.target.value).toString())\n }\n//setPocketExp(e.target.value)\n  let a;\n  if(e.target.value){\n    if(basicAmount.length == \"0\"){\n       a = Math.round(e.target.value) + parseInt(0);\n    }\n    else{\n      a = Math.round(e.target.value) + parseInt(basicAmount);\n    }\n   \n  \n \n  let cget1 = parseInt(Math.round(a * cgetRate / 100))\n  let sget1 = parseInt(Math.round(a * sgetRate / 100))\n  let iget1 = parseInt(Math.round(a * igetRate / 100))\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n    setCgstTotal(Math.round(a * cgetRate / 100));\n   setSgstTotal(Math.round(a * sgetRate / 100));\n   setIgstTotal(Math.round(a * igetRate / 100));\n   \n setGst((oldData) => {\n  return(parseInt(parseInt(cget1) + parseInt(sget1) + parseInt(iget1)))\n })\n  setTotal((oldData) => {\n    return(parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a))\n  })\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\n\nconst basicFun = (e) => {\n \n  let a = Math.round(parseInt(e.target.value) + parseInt(pocketExp));\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(Math.round(a * cgetRate / 100));\n   setSgstTotal(Math.round(a * sgetRate / 100));\n   setIgstTotal(Math.round(a * igetRate / 100));\n   setGst((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\n   })\n  setTotal((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\n  })\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\n    const onSubmit= (value) => {\n      setLoading(true);\n        let formData = new FormData();\n       formData.append(\"tl_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", description);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsR);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo);\n        formData.append(\"invoice_by\", JSON.parse(userid))\n        {props.generated == \"edited\" ? formData.append(\"generate_status\", 1) :\n      formData.append(\"generate_status\" , 0)}\n        axios({\n            method : \"POST\",\n            data : formData,\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            setLoading(false);\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n             \n                history.push(\"/teamleader/tlinvoice\")\n            }\n           else{\n                 Swal.fire({\n                title : \"error\", \n                html : `${res.data.result}`,\n                icon : \"error\"\n              })\n               \n              }\n        })\n      \n    }\n  const serviceFun = (e) => {\n    setDiscription(e)\n   services.map((k) => {\n    \nif(k.service == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         maxLength=\"24\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled \n         className=\"form-control\"\n       //  onChange= {(e) => (setBillNo(e.target.value))}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Description <span className=\"declined\">*</span></label>\n          <select \n      \n       value={description}\n           ref={register({ required: true })}\n\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.description,\n          })}>\n              <option value=\"\">please select value</option>\n          {services.map((i) => (\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"number\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    disabled\n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6 headCenter\">\n               <label>Out of Pocket Expenses</label>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"number\"\n                    name=\"pocket_amount\"\n                  \n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <label>CGST</label>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"number\"\n                    ref={register}\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {cgetTotal}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <label>SGST/UTGST </label>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    ref={register}\n                    step=\"0.00001\"\n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={sgetTotal}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <label>IGST</label>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={igetTotal} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4 headCenter\">\n                  <label>Total GST</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8 headCenter\">\n                  <label>Total Invoice Amount</label>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(total)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1 headCenter\">\n              <label>TDS </label>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-6\"  style={percent}>\n                   <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    value={tdsR}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-6\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Math.round(tds2)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1 headCenter\">\n              <label>Net Payable Amount</label>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Math.round(grandTotal)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                 <>\n                  <button  type=\"submit\" className=\"btn btn-success\">submit</button>\n          \n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button>\n                 </>\n              }\n             \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js",["2770","2771"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n   if(qno != null){\n    axios\n    .get(\n      `${baseUrl}/customers/getNotification?id=${JSON.parse(\n        userId\n      )}&type=2&q_no=${qno}`\n    )\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setNotification(res.data.result);\n      }\n    });\n   }\n  };\n\n  \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js",["2772","2773","2774","2775","2776","2777","2778","2779","2780","2781","2782"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nconst InvoiceFilter = (props) => {\n\n   const { handleSubmit, register, errors, reset } = useForm();\n   var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  \n  const onSubmit = (data) => {\n  \n    let formData = new FormData();\n    formData.append(\"qno\", data.query_no);\n    formData.append(\"from\", data.p_dateFrom);\n    formData.append(\"to\", data.p_dateTo);\n    formData.append(\"installment_no\", data.installment_no)\n    formData.append(\"status\", data.opt)\n    if(props.invoice == \"generated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"create\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=0&ststus=${data.opt}`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n       props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"tpcreate\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=0`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n       props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if(props.invoice == \"tpgenerated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if(props.invoice == \"admingenerated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"admincreate\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=0`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    } \n    \n  }\n  const resetData = () => {\n    reset();\n    props.getData()\n  }\n    return(\n       <>\n      \n        <form onSubmit={handleSubmit(onSubmit)}> \n           <div className=\"row\">\n               <div className=\"col-md-3\">\n               <input   \n            type = \"text\"\n            name=\"query_no\"\n            ref={register}\n            placeholder=\"Enter Query Number\" \n            className=\"form-control\"/>\n                   </div>\n                   <div className=\"col-md-2\">\n                  <select\n                   ref={register}\n                    className=\"form-select form-control\"\n                    style={{ height: \"33px\" }}\n                    name=\"installment_no\">\n                      <option value=\"\">Please select installment</option>\n                      <option value=\"0\">Lumpsum</option>\n                     <option value=\"1\">1st installment</option>\n                     <option value=\"2\">2nd installment</option>\n                     <option value=\"3\">3rd installment</option>\n                     <option value=\"4\">4th installment</option>\n                    \n                  </select>\n                       </div>\n                  <div className=\"col-md-7\">\n                  <div className=\"form-inline\">\n             \n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">From</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateFrom\"\n                 className=\"form-select form-control\"\n                 ref={register}\n               \n               />\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">To</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateTo\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                defaultValue={item}\n               \n               />\n             </div>\n</div>\n                    </div>    \n                        \n                \n                      \n           </div>\n          <div className=\"mt-3\">\n        \n           <div className=\"form-group mx-sm-1  mb-2\">\n         <div className=\"row\">\n      {props.invoice ==\"tpcreate\" || props.invoice == \"admincreate\" || props.invoice == \"create\" ? \"\" :\n        <div className=\"col-md-2\">\n        <select name=\"opt\" className=\"form-select form-control\" ref={register}  style={{ height: \"33px\" }}>\n        <option value=\"\">Select </option>\n           <option value=\"0\">Unpaid</option>\n           <option value=\"1\">Paid</option>\n           <option value=\"2\">Declined</option>\n           </select>\n          </div> }\n           <div className=\"col-md-3\">\n         \n          <button className=\"btn btn-success\" type=\"submit\"  style={{ height: \"33px\" }}>Search</button>\n           <button className=\"btn btn-primary mx-2\" onClick={() => resetData()}  style={{ height: \"33px\" }}>Reset</button>\n            </div>\n        \n                 <div className=\"col-md-4\">\n                 <span style={{display : \"flex\"}}>\n                 <label className=\"form-select form-control\"\n                  >Total Records : {props.records}</label>\n                 </span>\n                   </div>\n           </div>\n                </div>\n          </div>\n         \n        </form>\n       </>\n    )\n\n}\nexport default InvoiceFilter;","/home/pooja/MazarsRepo/src/components/commonShowProposal/CommonShowProposal.js",["2783","2784","2785"],"import React from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button} from 'reactstrap';\nimport { baseUrl } from \"../../config/config\";\nimport { Typography } from '@mui/material';\nconst ShowProposal = ({setViewProposal, viewProposalModal, showProposalModal2 , proposalId}) => {\n  \n    return(\n       \n        <>\n       \n          <Modal isOpen={viewProposalModal} toggle={showProposalModal2} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n            <ModalHeader toggle={showProposalModal2}>\n<Typography variant=\"h6\">\nView Proposal\n</Typography>\n            </ModalHeader>\n            <ModalBody>\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${proposalId}&viewpdf=1`}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n           \n        </Modal>\n       \n       \n        </>\n    )\n}\nexport default ShowProposal;","/home/pooja/MazarsRepo/src/config/http/http-common.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js",["2786","2787","2788","2789","2790","2791","2792"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [disabled, setDisabled] = useState(false)\n  \n\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/tl/getServices`)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n      setCgetRate(18);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo +\"/\" + props.id)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 18 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n   \n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseInt(i.opt_expenses));\n setCgstTotal(parseInt(i.cgst_amount));\n setIgstTotal(parseInt(i.igst_amount));\n setSgstTotal(parseInt(i.sgst_amount));\n setCgetRate(parseInt(i.cgst_rate));\n setIgetRate(parseInt(i.igst_rate));\n setSgetRate(parseInt(i.sgst_rate));\nsetTds(parseInt(i.tds_amount))\n setgrandTotal(parseInt(i.payable_amount))\n setTotal(parseInt(i.invoice_amount))\n setGst(parseInt(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n  setCgetRate(e.target.value);\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = parseInt(a * e.target.value / 100)\n   setCgstTotal(parseInt(cget));\n   setGst(parseInt(cget + igetTotal + sgetTotal))\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n\n}\n// Sgst tax function\nconst sgstFun = (e) => {\n  setSgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n        let cget = parseInt(a * e.target.value / 100)\n        setSgstTotal(parseInt(cget))\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n        setGst(parseInt(cget + igetTotal + cgetTotal))\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n }\n// Igst tax function\n const igstFun = (e) => {\n   setIgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = parseInt(a * e.target.value / 100) \n         setIgstTotal(cget) \n         setGst(parseInt(cget + sgetTotal + cgetTotal));\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n        \n }\n // Tds function\n const tdsFun = (e) => {\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = (a * e.target.value / 100)\n      setTds(cget)\n    setgrandTotal(parseInt(total) - parseInt(cget))    \n } \n\n // Pocket Function\n const pocketExpFun = (e) => {\n  setPocketExp(e.target.value)\n  let a = parseInt(e.target.value) + parseInt(basicAmount);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n   // })\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n\nconst basicFun = (e) => {\n  let a = parseInt(e.target.value) + parseInt(pocketExp);\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n    const onSubmit= (value) => {\n      \n        let formData = new FormData();\n       formData.append(\"tl_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", services2);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo)\n        axios({\n            method : \"POST\",\n            data : formData,\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n                history.push(\"/admin/adinvoice\")\n            }\n          \n        })\n      \n    }\n  const serviceFun = (e) => {\n    \n   services.map((k) => {\n    \nif(k.id == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled = {disabled}\n         className=\"form-control\"\n         onChange= {(e) => (setBillNo(e.target.value) + \"/id\")}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Descirption <span className=\"declined\">*</span></label>\n          <select \n           ref={register({ required: true })}\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.p_name,\n          })}>\n              <option value=\"\">--select--</option>\n          {services.map((i) => (\n               <option value={i.id} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"text\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6\">\n               <h5>Out of Pocket Expenses</h5>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"text\"\n                    name=\"pocket_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <h4>CGST</h4>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    \n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {Math.round(cgetTotal)}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <h4>SGST/UTGST </h4>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={Number(sgetTotal).toFixed(0)}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <h4>IGST</h4>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={Number(igetTotal).toFixed(0)} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4\">\n                  <h4>Total GST</h4>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8\">\n                  <h4>Total Invoice Amount</h4>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Number(total).toFixed(0)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1\">\n              <h4>TDS </h4>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-6\"  style={percent}>\n                   <input \n                    type=\"text\"\n                    className=\"form-control\"\n                   \n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    defaultValue={tdsRate}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-6\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Number(tds2).toFixed(0)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1\">\n              <h4>Net Payable Amount</h4>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Number(grandTotal).toFixed(0)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\n          \n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js",["2793","2794","2795","2796","2797","2798"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  \n\n  const getHistory = () => {\n   \n      if(report != undefined && report.length > 0){\n        axios.get(`${baseUrl}/admin/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\n        \n          if (res.data.code === 1) {\n            setData(res.data.result);\n          }\n        });\n      }\n   \n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i className=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i className=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js",["2799","2800"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction CustomerNotification({ tokenKey, name }) {\n\n\n\n   \n    const [countNotification, setCountNotification] = useState(\"\");\n   \n\n    useEffect(() => {\n        getNotification();\n       \n    }, [tokenKey]);\n   \n    const getNotification = () => {\n        axios\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                   \n                   if(res.data.result[0] != undefined){\n                    setCountNotification(res.data.result[0].total);\n                   }\n                }\n            });\n    };\n\n\n\n\n    return (\n        <>\n            <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\n                <li className=\"dropdown dropdown-notification nav-item\">\n                    {countNotification ? (\n                     \n                           \n                                <Link to={`/${name}/message`} style={{color : \"white\"}} className=\"notification\">\n                                Inbox\n                                    <span className=\"badge\">{countNotification}</span>\n                                    \n                                </Link>\n                           \n                         \n                           \n                                \n                        \n                    ) : null}\n                </li>\n            </div>\n        </>\n    );\n}\n\n\nexport default CustomerNotification;\n","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js",["2801","2802","2803","2804","2805","2806","2807","2808"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history, toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">From</th>\n                <th scope=\"row\">To</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Email</th>\n                <th scope=\"row\">Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js",["2809","2810","2811","2812","2813","2814","2815","2816"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">From</th>\n                <th scope=\"row\">To</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Email</th>\n                <th scope=\"row\">Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                      <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js",["2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832","2833","2834"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport {makeStyles} from \"@material-ui/styles\"\nconst useStyle = makeStyles(() => ({\n  rchStyle : {\n    color : \"green\",\n    display : \"flex\",\n    overflow: \"hidden\"\n  },\n  OverlayBase : {\n    display : \"flex\", \n    width : \"670px\"\n  }\n}))\n\n\n\nfunction Demo() {\n  const classes = useStyle()\n  const userId = window.localStorage.getItem(\"adminkey\");\n   const userEmail = window.localStorage.getItem(\"adminEmail\")\n   // const userEmail = null\n  const em = JSON.parse(userEmail)\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [showVideoIcon, setShowVideoIcon] = useState(false)\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n    .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\n      .then((res) => {\n\n   \n         var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        \n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n    .get(`${baseUrl}/admin/getAllQuery`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n       \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n\n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      colorField: \"green\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n    \n      allowMultiple: true,\n    },\n  ];\nconst closeFun = () => {\n  alert(\"done\")\n}\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n       {showVideoIcon === false ? \n        <i\n        class=\"fa fa-video-camera\"\n        onClick={() => handleJoin(data)}\n        style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n      ></i> : \"\"}\n          <div>{children}</div>\n          \n          <div\n          \n          >\n          </div>\n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n    console.log(\"dtat22\", data)\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n//   var dt = new Date(data.startDate)\n//   var dt2 = new Date()\n//   let ck = dt.getMonth();\n \n//   let pp = dt2.getMonth();\n//   let rr = dt2.getHours();\n//   let ss = dt.getHours()\n//   let mm = dt2.getMinutes() + 20\n//   let dd = dt.getMinutes()\n//   let ee = dt.getDate();\n//   let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n  \n \n//   if(ck == pp && ss == rr && ee == eee){\n \n \n//   if(mm > dd){\n//     console.log(\"passed\")\n//     setShowVideoIcon(true)\n//     Cookies.set(\"channel_2\", data.question_id);\n//     Cookies.set(\"baseMode_2\", baseMode);\n//     Cookies.set(\"transcode_2\", transcode);\n//     Cookies.set(\"attendeeMode_2\", attendeeMode);\n//     Cookies.set(\"videoProfile_2\", videoProfile);\n//     // history.push(\"/teamleader/meeting/\");\n//     history.push(`/admin/meeting/${data.id}`);\n\n//   }\n//   else{\n//   // return false\n//   setShowVideoIcon(true)\n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/admin/meeting/${data.id}`);\n//   }\n//   }\nconsole.log(\"data\", data)\nCookies.set(\"channel_2\", data.question_id);\nCookies.set(\"baseMode_2\", baseMode);\nCookies.set(\"transcode_2\", transcode);\nCookies.set(\"attendeeMode_2\", attendeeMode);\nCookies.set(\"videoProfile_2\", videoProfile);\nCookies.set(\"adminid\", data.id)\n\n// history.push(\"/teamleader/meeting/\");\nhistory.push(`/admin/meeting/${data.id}`);\n  };\n\n  const changeFormat = (d) => {\n\n    if (typeof d === 'object') {\n   \n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n    \n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n\n    if (added) {\n      setLoading(true)\n      \n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n\n        });\n    }\n    if (changed) {\n  \n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n     \n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n     \n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n         \n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n\n        });\n    }\n\n    if (deleted !== undefined) {\n     \n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n         \n          value = data.owner\n        }\n      });\n\n   \n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n           \n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n        else{\n          setLoading(false);\n          history.push(\"/admin/schedule\")\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n\n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n          \n        <div style ={{display : \"flex\", height : \"700px\"}}>\n\n        <Paper >\n            <Scheduler data={data}>\n                <ViewState className = {classes.rchStyle}\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState  className = {classes.OverlayBase} onCommitChanges={commitChanges}   />\n                <EditRecurrenceMenu  />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24} TimeTableLayoutProps={8} />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher  />\n                \n                <AppointmentTooltip showOpenButton  />\n                {\n                  read ?\n              \n                    \n                    <AppointmentForm \n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      onClose= {() => closeFun()}\n                      readOnly\n                    />\n                    \n                    :\n                   \n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    \n                    />\n                      \n                }\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            \n            </Paper>\n        </div>\n        \n       \n          </>\n  );\n}\nexport default Demo;","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js",["2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850","2851","2852","2853","2854","2855","2856","2857","2858"],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js",["2859","2860","2861","2862","2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881","2882"],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js",["2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909"],"/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js",["2910","2911","2912","2913","2914","2915","2916"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction Paid() {\n\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=1`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    \n    const toggle = (key) => {\n     \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n         headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n         headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\", diaplay : \"flex\", justifyContent: \"space-between\", width: \"100px\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\"}}>\n\n\n                        <div style={{ cursor: \"pointer\" , diaplay :\"flex\", marginRight : \"5px\"}} title=\"Payment History\">\n                        <Link\n               to={{\n                pathname: `/admin/paydetails/${row.assign_id}`,\n                index : 1,\n                routes: \"paymentstatus\",\n              \n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                        </div>\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n\n                        <div title=\"Send Message\">\n            <Link\n             to={{\n                pathname: `/admin/chatting/${row.assign_id}`,\n                index : 1,\n                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                  color: \"blue\"\n                }}\n              ></i>\n            </Link>\n          </div>\n\n                    </div> \n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <div>\n            <Card>\n\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        unpaid=\"unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                        rowIndex\n                    />\n</div>\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Paid;\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js",["2917","2918","2919","2920","2921","2922","2923"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction Unpaid() {\n\n    const [payment, setPayment] = useState([]);\n\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    \n    const toggle = (key) => {\n       \n        setModal(!modal);\n\n      if(typeof(key) == \"object\"){\n\n      }\n      else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n      }\n    };\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n           headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 2,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\", diaplay : \"flex\", justifyContent: \"space-between\", width: \"100px\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\"}}>\n\n\n                        <div style={{ cursor: \"pointer\" , diaplay :\"flex\", marginRight : \"5px\"}} title=\"Payment History\">\n                        <Link\n              to={{\n                pathname: `/admin/paydetails/${row.assign_id}`,\n                index : 2,\n                routes: \"paymentstatus\",\n               \n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                        </div>\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n\n                        <div title=\"Send Message\">\n            <Link\n              to={{\n                pathname: `/admin/chatting/${row.assign_id}`,\n                index : 2,\n                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                  color: \"blue\"\n                }}\n              ></i>\n            </Link>\n          </div>\n\n                    </div> \n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <div>\n            <Card>\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        paid=\"paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                        rowIndex\n                    />\n</div>\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Unpaid;\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js",["2924","2925","2926"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n  \n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllPayment() {\n\n    const [payment, setPayment] = useState([]);\n\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\n            \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n            }\n        });\n    };\n\n    const [modal, setModal] = useState(false);\n    const toggle = (key) => {\n    \n        setModal(!modal);\n        if(typeof(key) == \"object\"){\n\n        }\n       else{\n        fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Amount Outstanding\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\", diaplay : \"flex\", justifyContent: \"space-between\", width: \"100px\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\"}}>\n\n\n                        <div style={{ cursor: \"pointer\" , diaplay :\"flex\", marginRight : \"5px\"}} title=\"Payment History\">\n                        <Link\n                            to={{\n                                pathname: `/admin/paydetails/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n               \n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                        </div>\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n\n                        <div title=\"Send Message\">\n                        <Link\n                            to={{\n                                pathname: `/admin/chatting/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                  color: \"blue\"\n                }}\n              ></i>\n            </Link>\n          </div>\n\n                    </div> \n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <div>\n            <Card>\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"assign_no\"}\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                        rowIndex\n                    />\n</div>\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>Payment History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js",["2927","2928"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n  \n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n      \n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n \n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n   \n\n  \n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n         \n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js",["2929"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './Allocation.css';\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  \n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport History from \"./History\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n\n  const [pendingData, setPendingData] = useState([])\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n       \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n    \n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n         \n          <>\n            {row.is_assigned === \"1\" ? (\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                Allocated to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <div title=\"Assign to\">\n                  <Link\n                    to={`/admin/queryassing/${row.id}`}\n                  >\n                    <i className=\"fa fa-share\"></i>\n                  </Link>\n\n                </div>\n                <div title=\"Decline Query\">\n                  <Link\n                    to={`/admin/query_rejection/${row.id}`}\n                  >\n                    <i\n                      className=\"fa fa-trash\"\n                    ></i>\n                  </Link>\n                </div>\n\n\n\n              </div>\n\n\n\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody className = \"card-body\">\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"assign_no\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n          /> </div>\n          <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(PendingAllocation);","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js",["2930"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n  \n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n   LoadingTime.timer2(setTime, setDisabled)\n  \n   \n  }, [num]);\n\n  useEffect(() => {\n  \n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n\n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"adminkey\", JSON.stringify(response.data[\"user id\"]));\n          sessionStorage.setItem(\"adminIdsession\", JSON.stringify(response.data[\"user id\"]));\n          localStorage.setItem(\"adminEmail\", JSON.stringify(response.data.name));\n          history.push(\"/admin/dashboard\");\n\n        } else {\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          setLoading(false)\n          reset();\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(!num)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"uid\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js",["2931","2932","2933","2934","2935","2936","2937"],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\n\n\n\nfunction AllQueriesData({allData}) {\n\n  const [allQueriesData, setAllQueriesData] = useState([])\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n\n\n  useEffect(() => {\n    getAllQueriesData();\n  }, [allData]);\n\n  const getAllQueriesData = () => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n       // setAllQueriesData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n    setAllQueriesData(allData)\n  };\n\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n      formatter: (cellContent, row, rowIndex, index) => {\n\n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n           {row.status == \"Declined Query\"  ? \n           <div title=\"View Discussion Message\" className=\"ml-2\">\n           <i\n             className=\"fa fa-comments-o\"\n             style={{\n               fontSize: 16,\n               cursor: \"pointer\",\n               color: \"orange\"\n             }}\n             onClick={() => ViewDiscussionToggel(row.assign_no)}\n           ></i>\n         </div> : \n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div title=\"Send Message\">\n              <Link\n               to={{\n                pathname: `/admin/chatting/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              \n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/admin/queriestab`\n                  }\n                }}\n              >\n                <i\n                  className=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n\n            <div title=\"View Discussion Message\">\n              <i\n                className=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  color: \"orange\"\n                }}\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\n              ></i>\n            </div>\n          </div>\n}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n   \n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setAllQueriesData}\n            getData={getAllQueriesData}\n            allQueries=\"allQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n         {allQueriesData != undefined ? \n          <div className=\"tableFixHead\">\n          <BootstrapTable\n          bootstrap4\n          keyField=\"id\"\n          data={allQueriesData}\n          columns={columns}\n          rowIndex\n          wrapperClasses=\"table-responsive\"\n        />  </div> : \"\"}\n\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAllQueriesData}\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(AllQueriesData);","/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js",["2938","2939","2940"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\nfunction DeclinedQueries({ CountPendingForPayment }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n\n        // CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n  const ViewDiscussionToggel = (key) => {\n\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n      formatter: (cellContent, row, rowIndex, index) => {\n     \n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n    },\n   \n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                    <p className=\"completed\">\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n       style: {\n        fontSize: \"11px\",\n    },\n      formatter : function forma(cell, row) {\n        return(\n          <>\n           <div title=\"View Discussion Message\">\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  color: \"orange\"\n                              }}\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                      </div>\n          </>\n        )\n      }\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForPayment}\n            declinedQueries=\"declinedQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n          /> \n          </div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getPendingForPayment}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQueries;","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js",["2941","2942","2943","2944","2945","2946","2947","2948","2949","2950","2951","2952","2953"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n     \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        setRecords(res.data.result.length);\n        // CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n          \n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"tname\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setNonPendingData}\n            getData={getPendingForProposals}\n            pendingForProposal=\"pendingForProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={nonpendingData}\n            columns={columns}\n            wrapperClasses=\"table-responsive\"\n          />\n          </div>\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{p.name}</td>\n                        <td>{p.assign_no}</td>\n                        <td>{p.status}</td>\n                        <td>{p.date_of_allocation}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["2954","2955","2956","2957","2958","2959","2960","2961"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport RetviewModal from \"../AllProposalComponent/RetviewModal\";\nimport ShowProposal from \"../AllProposalComponent/ShowProposal\";\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [retview, setRetview] = useState(false)\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\n\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const retviewProposal = (e) => {\n    setRetview(!retview);\n    setAssignNo(e)\n  }\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n     headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n     headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 3,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Declined of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Client Declined; Proposal\" ?\n                  <p className=\"declined\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n       \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n            <div title=\"Send Message\">\n                <Link\n                \n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    index: 3,\n                    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\" className=\"ml-2\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n              {row.statuscode > \"3\" ?\n                 <div style={{ cursor: \"pointer\" }} title=\"View Proposal\" className=\"ml-2\">\n                \n                 <i\n                   className=\"fa fa-eye\"\n                   style={{ color: \"green\", fontSize: \"16px\" }}\n                   onClick={(e) => showProposalModal2(row.q_id)}\n                 />\n               \n             </div>\n                :\n                null\n              }\n{\n  row.statuscode == \"6\" ? \n  <>\n<div title=\"Restore Proposal\" className=\"ml-2\"\n onClick={(e) => retviewProposal(row.q_id)}> \n<i\n                    class=\"fa fa-share\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                   \n                  ></i>\n</div>\n  </> : \"\"\n}\n\n\n            \n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getDeclinedProposal}\n            declinedProposal=\"declinedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField= {\"assign_no\"}\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsivepayment\"\n          />\n</div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getDeclinedProposal}\n          />\n            <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={ getDeclinedProposal}\n          assignNo = {assignNo}\n         />\n          \n          <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["2962","2963","2964","2965","2966","2967","2968","2969"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ShowProposal from \"../AllProposalComponent/ShowProposal\";\n\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\n   \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n           <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 2,\n                routes: \"proposal\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {\n                row.status == \"Accepted; Proposal\" ?\n                  <p className=\"completed\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.q_id)}\n                />\n              \n            </div>\n                :\n                null\n              }\n\n\n              <div title=\"Send Message\" className=\"ml-2\">\n                <Link\n  to={{\n    pathname: `/admin/chatting/${row.q_id}`,\n    index: 2,\n    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    className=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\" className=\"ml-2\">\n                <i\n                  className=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getAcceptedProposal}\n            acceptedProposal=\"acceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField= {\"assign_no\"}\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsivepayment\"\n          />\n</div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAcceptedProposal}\n          />\n           <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js",["2970","2971","2972","2973","2974","2975","2976","2977"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\nimport RetviewModal from \"../../pages/Admin/AllProposalComponent/RetviewModal\"\nimport ShowProposal from \"../../pages/Admin/AllProposalComponent/ShowProposal\";\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [retview, setRetview] = useState(false)\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // pendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const retviewProposal = (e) => {\n    setRetview(!retview);\n    setAssignNo(e)\n  }\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n    headerStyle: () => {\n      return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n  },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n    },\n    headerStyle: () => {\n      return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n  },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 1,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n        wordBreak : \"break-word\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n            <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    index: 1,\n                    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    className=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\" className=\"ml-2\">\n                <i\n                  className=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n              {row.statuscode > \"3\" ?\n                 <div style={{ cursor: \"pointer\" }} title=\"View Proposal\" className=\"ml-2\">\n                \n                 <i\n                   className=\"fa fa-eye\"\n                   style={{ color: \"green\", fontSize: \"16px\" }}\n                   onClick={(e) => showProposalModal2(row.q_id)}\n                 />\n               \n             </div>\n                :\n                null\n              }\n\n{\n  row.statuscode == \"6\" ? \n  <>\n<div title=\"Retview Proposal\" className=\"ml-2\"\n onClick={(e) => retviewProposal(row.q_id)}> \n<i\n                    className=\"fa fa-share\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"red\"\n                    }}\n                   \n                  ></i>\n</div>\n  </> : null\n}\n              \n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getPendingAcceptedProposal}\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField= {\"assign_no\"}\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsivepayment\"\n          />\n</div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getPendingAcceptedProposal}\n          />\n           <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={ getPendingAcceptedProposal}\n          assignNo = {assignNo}\n         />\n         <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["2978","2979","2980","2981","2982","2983"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\nimport RetviewModal from \"./RetviewModal\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewComponent from \"../ViewProposal/ViewComponent\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ShowProposal from \"./ShowProposal\";\n\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n  const [viewData, setViewData] = useState({});\n  const [viewModal, setViewModal] = useState(false);\n  const [retview, setRetview] = useState(false)\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const ViewHandler = (key) => {\n   \n    setViewModal(!viewModal);\n    setViewData(key);\n  };\n\nconst showProposalModal2 = (e) => {\n  console.log(\"eeee\")\n  setViewProposalModal(!viewProposalModal);\n  setProposalId(e)\n}\n  \n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\nconst retviewProposal = (e) => {\n  setRetview(!retview);\n  setAssignNo(e)\n}\n  const columns = [\n    {\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style : {\n        wordBreak : \"break-word\"\n        },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },\nheaderStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n    },\nheaderStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 0,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n       style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n       style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n       style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance / decline of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n       style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n       style: {\n        fontSize: \"11px\",\n    },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Inprogress\" ?\n                  <div>\n                    {row.status}/\n                    <p className=\"inprogress\">\n                      {row.statusdescription}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Client Declined; Proposal\" ?\n                    <p className=\"declined\">\n                      {row.status}\n                    </p> :\n                    row.status == \"Accepted; Proposal\" ?\n                      <p className=\"completed\">\n                        {row.status}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n    },      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n       var nfObject = new Intl.NumberFormat('hi-IN')\n        var x = row.ProposedAmount;\n        \n        return(\n          <p className=\"rightAli\">{nfObject.format(x)}</p>\n        )\n      }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style : {\n       fontSize: \"11px\",\n       \n         },\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width: \"100px\", wordBreak: \"nowrap\", padding: \"10px 20px\"};\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{display: \"flex\"}}>\n            <div title=\"Send Message\">\n                <Link\n               \n                    to={{\n                      pathname: `/admin/chatting/${row.q_id}`,\n                      index: 0,\n                      routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    className=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\" className=\"ml-2\">\n                <i\n                  className=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\" className=\"ml-2\">\n                \n                    <i\n                      className=\"fa fa-eye\"\n                      style={{ color: \"green\", fontSize: \"16px\" }}\n                      onClick={(e) => showProposalModal2(row.q_id)}\n                    />\n                  \n                </div>\n                :\n                null\n              }\n{\n  row.statuscode == \"6\" ? \n  <>\n<div title=\"Restore Proposal\" className=\"ml-2\"\n onClick={(e) => retviewProposal(row.q_id)}> \n<i\n                    className=\"fa fa-share\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                   \n                  ></i>\n</div>\n  </> : null\n}\n\n            \n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getProposalData}\n            allProposal=\"allProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField= {\"assign_no\"}\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsivepayment\"\n          />\n          </div>\n\n          <ViewComponent\n            ViewHandler={ViewHandler}\n            viewModal={viewModal}\n            viewData={viewData}\n            getProposalData={getProposalData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getProposalData}\n          />\n          <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={getProposalData}\n          assignNo = {assignNo}\n         />\n          <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js",["2984","2985","2986"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DeleteQuery({ id, setLoading }) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n\n\n  //check\n  const del = (id) => {\n\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Want to delete query ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n          history.push(\"/customer/queries\");\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Query not deleted\", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default DeleteQuery;\n\n{\n  /* <i\n        className=\"fa fa-trash\"\n        style={{\n          fontSize: 16,\n          cursor: \"pointer\",\n        }}\n        \n      ></i> */\n}\n","/home/pooja/MazarsRepo/src/views/Schedule/demo.js",["2987","2988","2989","2990","2991","2992","2993","2994","2995","2996"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  ViewState,\n  EditingState,\n  IntegratedEditing,\n} from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  WeekView,\n  DayView,\n  Appointments,\n  Toolbar,\n  DateNavigator,\n  ViewSwitcher,\n  AppointmentForm,\n  AppointmentTooltip,\n  TodayButton,\n  Resources,\n  EditRecurrenceMenu,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Cookies from \"js-cookie\";\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState([]);\n\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\n\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n\n  const getData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n     \n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n          setLoading(false);\n        }\n      });\n  };\n\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    assign_no: appointment.assign_no,\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/customers/getAllQuery?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          var data = res.data.result;\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n   \n  ];\n\n\n\n  const commitChanges = ({ added, changed, deleted }) => {\n   \n  };\n\n\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <Appointments.Appointment {...restProps}>\n      <div style={{ display: \"flex\" }}>\n      <i\n            class=\"fa fa-video-camera\"\n            onClick={() => handleJoin(data)}\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n        <div>{children}</div>\n        <div\n         \n        >\n          \n        </div>\n      </div>\n    </Appointments.Appointment>\n  );\n\n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      />\n    );\n  };\n\n  \n  const handleJoin = (data) => {\n    // console.log(\"data\", data);\n//  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n//   console.log(\"dt\", dt)\n//   console.log(dt2.getDate())\n//  console.log(dt.getMinutes())\n//  console.log(dt2.getMinutes() + 20)\n//  console.log(\"ck\", ck)\n//   console.log(\"dt2\", dt2)\n//   console.log(\"pp\", pp)\n//   console.log(\"mm\", mm)\n//   console.log(\"dd\", dd)\n//   console.log(\"ss\", ss)\n//   console.log(\"rr\", rr)\n//   console.log(ck == pp)\n//   console.log(ee === eee)\n//   console.log(ss == rr)\n//   console.log(mm > dd)\n\n\n//if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel\", data.question_id);\n//   Cookies.set(\"baseMode\", baseMode);\n//   Cookies.set(\"transcode\", transcode);\n//   Cookies.set(\"attendeeMode\", attendeeMode);\n//   Cookies.set(\"videoProfile\", videoProfile);\n//   history.push(\"/customer/meeting\");\n\n// }\n// else{\n// // return false\n// Cookies.set(\"channel\", data.question_id);\n// Cookies.set(\"baseMode\", baseMode);\n// Cookies.set(\"transcode\", transcode);\n// Cookies.set(\"attendeeMode\", attendeeMode);\n// Cookies.set(\"videoProfile\", videoProfile);\n// history.push(\"/customer/meeting\");\n// }\n// }\nCookies.set(\"channel\", data.question_id);\nCookies.set(\"baseMode\", baseMode);\nCookies.set(\"transcode\", transcode);\nCookies.set(\"attendeeMode\", attendeeMode);\nCookies.set(\"videoProfile\", videoProfile);\nhistory.push(`/customer/meeting/${data.id}`);\n\n\n  };\n\n  const messages = {\n    moreInformationLabel: \"\"\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n   \n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n  return (\n    <Paper>\n      <Scheduler data={data} height={550}>\n        <ViewState\n          defaultCurrentDate={currentDate}\n          defaultCurrentViewName=\"Week\"\n        />\n        <EditingState onCommitChanges={commitChanges} />\n        <EditRecurrenceMenu />\n        <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n        <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n        <Appointments appointmentComponent={myAppointment} />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <ViewSwitcher />\n        <AppointmentTooltip showOpenButton />\n\n\n        <AppointmentForm\n          basicLayoutComponent={BasicLayout}\n          textEditorComponent={TextEditor}\n          booleanEditorComponent={BooleanEditor}\n          readOnly\n        />\n\n        <Resources\n          data={resources}\n          mainResourceName=\"username\"\n        />\n\n      </Scheduler>\n    </Paper>\n  );\n}\n\nexport default Demo;\n\n","/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js",["2997","2998"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ email, setDisabled, getTime, setLoad, setLoading, loading }) {\n    const userId = window.localStorage.getItem(\"userid\");\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"uid\", JSON.parse(userId));\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/regenrateotp`,\n            data: formData,\n        })\n            .then(function (response) {\n\n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                    setLoad(true)\n                } if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js",["2999","3000"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoad, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n            \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n                    setDisabled(false)\n                    setLoad(true)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/components/InputRoom/index.js",["3001","3002"],"import React from \"react\";\nimport * as Cookies from \"js-cookie\";\n\nimport \"../../assets/fonts/css/icons.css\";\n// import Validator from \"../../utils/Validator\";\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\nimport \"./index.css\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"\",\n      baseMode: \"avc\",\n      transcode: \"interop\",\n      attendeeMode: \"video\",\n      videoProfile: \"480p_4\",\n    };\n  }\n\n \n  render() {\n    return (\n      <div className=\"wrapper index\">\n        <div className=\"ag-header\"></div>\n        <div className=\"ag-main\">\n          <section className=\"login-wrapper\">\n            <div className=\"login-header\"></div>\n\n            \n\n            <div className=\"login-footer\">\n              <a\n              \n                className=\"ag-rounded button is-info\"\n              >\n                Join\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js",["3003","3004","3005","3006","3007","3008"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal22({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\nlet history = useHistory()\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", assignNo);\n    formData.append(\"status\", 6);\n    formData.append(\"notes\", value.p_chat);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"Rejected\", \"\", \"success\");\n          history.push({\n            pathname: `/customer/proposal`,\n            index: 0,\n          });\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal22;\n","/home/pooja/MazarsRepo/src/components/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js",["3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport DiscardReport from \"./DiscardReport\";\nimport './modalSty.css';\nimport { makeStyles } from '@material-ui/core';\nimport {Typography} from \"@material-ui/core\"\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\nconst useStyle = makeStyles({\n  modalHeaderStyle : {\n    display : \"flex\",\n    width : \"100%\", \n    justifyContent : \"space-between\"\n  }\n})\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n}) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [data, setData] = useState([]);\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\nconst viewStyle = {\n  display: \"block\",\n    width: \"100%\",\n    border: \"1px solid black\"\n}\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n const classes = useStyle()\n  return (\n    <>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n       <ModalHeader toggle={ViewReport} className = {classes.modalHeaderStyle}>\n           \n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n           \n        </ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n               \n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className=\"modalTable\">\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                    \n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i className=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                    \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i className=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    \n                  \n                   \n\n                    <td>\n                  <p>    {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                  \n                  <br>\n                  </br> \n                  {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }</td>\n                  <td>\n                  {p.stages_type === \"2\" ? <>\n                  {p.status === \"3\" ? \n                   <p style={{ color: \"red\" }}> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p style={{ color: \"red\" }}>Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                     \n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                      \n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n    </>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js",["3020","3021","3022","3023","3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040"],"/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/ShowProposal.js",["3041","3042","3043"],"import React from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button} from 'reactstrap';\nimport { baseUrl } from '../../../config/config';\nimport { Typography } from '@mui/material';\nconst ShowProposal = ({setViewProposal, viewProposalModal, showProposalModal2 , proposalId}) => {\n  \n    return(\n       \n        <>\n       \n          <Modal isOpen={viewProposalModal} toggle={showProposalModal2} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n            <ModalHeader toggle={showProposalModal2}>\n<Typography variant=\"h6\">\nView Proposal\n</Typography>\n            </ModalHeader>\n            <ModalBody>\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${proposalId}&viewpdf=1`}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n           \n        </Modal>\n       \n       \n        </>\n    )\n}\nexport default ShowProposal;","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/RetviewModal.js",["3044","3045","3046"],"import React from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Spinner } from \"reactstrap\";\nimport { useState } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Swal from \"sweetalert2\";\nconst RetviewModal = ({\n    retview,\n    retviewProposal,\n    getProposalData,\n    assignNo\n}) => {\n    const [loading, setLoading] = useState(false);\n    const userId = localStorage.getItem(\"adminkey\")\n    const Schema = yup.object().shape({\n        p_reason: yup.string().required(\"\"),\n      });\n      \n    const { handleSubmit, register, reset, errors } = useForm({\n        resolver: yupResolver(Schema),\n      });\n      const onSubmit = (value) => {\n          setLoading(true)\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"qid\", assignNo);\n        formData.append(\"notes\", value.p_reason);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/admin/reactiveProposal`,\n          data: formData,\n        })\n      .then((response) => {\n         if(response.data.code === 1){\n             setLoading(false)\n\n             retviewProposal()\n             getProposalData()\n             Swal.fire({\n                 \"title\" : \"success\",\n                 \"html\" : \"Proposal restored successfully\",\n                 \"icon\" : \"success\"\n             })\n         }\n         else{\n             setLoading(false)\n             retviewProposal()\n             getProposalData()\n             Swal.fire({\n                 \"title\" : \"error\",\n                 \"html\" : \"something went wrong , please try again\",\n                 \"icon\" :\"error\"\n             })\n         }\n      })\n    }\n    return(\n        <Modal isOpen={retview} toggle={retviewProposal}>\n            <ModalHeader toggle={retviewProposal }>\n<Typography variant=\"h6\">\n    Please provide the reason\n</Typography>\n            </ModalHeader>\n            <ModalBody>\n  <form onSubmit={handleSubmit(onSubmit)}>\n <div className=\"mb-3\">\n<textarea\n  className={classNames(\"form-control\", {\n    \"is-invalid\": errors.p_reason,\n  })}\nname=\"p_reason\" \nid=\"textarea\"\nref={register}\nplaceholder=\"Enter text here...\"\nrows=\"6\">\n</textarea>\n</div>\n<div className=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n</form>\n\n            </ModalBody>\n           \n        </Modal>\n    )\n\n}\nexport default RetviewModal;","/home/pooja/MazarsRepo/src/agora.config.js",[],"/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx",["3047","3048","3049","3050","3051","3052","3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport axios from \"axios\";\nimport \"./canvas.css\";\nimport \"../../assets/fonts/css/icons.css\";\nimport Cookies from \"js-cookie\";\nimport {baseUrl} from \"../../config/config\";\nimport Swal from \"sweetalert2\";\nimport CommonServices from \"../../common/common\";\nvar customer_id = \"d339577a294c458c86d8a78b474141fc\";\nvar customer_secret = \"1a61a4bef2144e78be6f671d5cf3fc32\";\n\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"8\": [\n    \"span 3/span 4/13/3\",\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 3/span 4/13/27\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"9\": [\n    \"span 3/span 4/13/1\",\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 3/span 4/13/29\",\n    \"span 9/span 16/10/21\",\n  ],\n  \n  \n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.customerName = Cookies.get(\"custName\")\n    this.client = {};\n    this.screenTrack = {}\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      addRemote : null,\n      atCustId: '',\n      disabledVedio : false,\n      vedTrack : null,\n      shareValue : false,\n    };\n  }\nchannelName = this.props.channel\nuserId = window.localStorage.getItem(\"userid\");\ncustEmail2 = window.localStorage.getItem(\"custEmail\");\nremoteShare2 = false\ncomponentWillMount() {\n  let $ = this.props;\n  // init AgoraRTC local client\n  this.client = AgoraRTC.createClient({ mode: $.transcode });\n  let show;\nAgoraRTC.getDevices(function(dev){\n  var cameras = dev.filter((e) => {\n    return e.kind === \"videoinput\"\n  })\n \n  if(cameras.length > 0){\n    show = true\n  }\n  else{\n    show = false\n  }\n})\n  this.client.init($.appId, () => {\n   \n \n    this.client.join($.appId, $.channel, $.uid, (uid) => {\n     \n      var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.customerName;\n axios.get(`${data_post_api}`).\n then((res) => {\n  \n })\n\n this.setState({getAdId : uid})\n this.subscribeStreamEvents();\n \n if(show === true){\n   this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile)\n   this.localStream.init(\n       \n     () => {\n       if ($.attendeeMode !== \"audience\") {\n         this.addStream(this.localStream, true);\n         \n \n         this.client.publish(this.localStream, (err) => {\n          \n         });\n       }\n       this.setState({ readyState: true });\n     },\n     (err) => {\n     \n       this.setState({ readyState: true });\n     }\n   );\n }\n else if(show === false){\n this.localStream = this.streamInit22(uid, $.attendeeMode, $.videoProfile);\n this.localStream.init(\n       \n   () => {\n     if ($.attendeeMode !== \"audience\") {\n       this.addStream(this.localStream, true);\n       \n \n       this.client.publish(this.localStream, (err) => {\n        \n       });\n     }\n     this.setState({ readyState: true });\n   },\n   (err) => {\n   \n     this.setState({ readyState: true });\n   }\n );\n }\n       \n     });\n   });\n }\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.subscribeStreamEvents();\n  }\n\n  componentDidUpdate() {\n    // rerendering\n   \n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n     \n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let txtColor = \"myPartName\";\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        \n        let dd;\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          dd = document.createElement(\"input\")\n          dd.setAttribute(\"id\", \"name\" + id)\n          dd.setAttribute(\"class\", txtColor)\n        box22.appendChild(dd)\n        item.play(\"ag-item-\" + id);\n        }\n       \n         \n         \n        if (index === no - 1) {\n          \n        \n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n           \n          } else {\n            let f = false;\n            dom.setAttribute(\n              \"style\",\n              `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                      z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n            );\n            dom.addEventListener('click', function (e){\n              if(f === false){\n                f = true\n                dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n                let list;\n             \n                list = Array.from(\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n                );\n                list.map((item) => {\n                  \n                    item.style.display = \"none\"\n                  }) \n              }\n              else{\n                f = false\n                dom.setAttribute(\n                  \"style\",\n                  `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                          z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n                );\n                let list;\n             \n                list = Array.from(\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n                );\n                list.map((item) => {\n                  \n                    item.style.display = \"block\"\n                  }) \n              }\n            })\n          }\nif(item.player === undefined){\n\n}\n       else{\n        item.player.resize && item.player.resize();\n       }\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let f = false;\n      let no = this.state.streamList.length;\n      let txtColor = \"myPartName\";\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n       \n        let dd;\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          dd = document.createElement(\"input\")\n          dd.setAttribute(\"id\", \"name\" + id)\n          dd.setAttribute(\"class\", txtColor)\n        box22.appendChild(dd)\n        item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        dom.addEventListener('click', function (e){\n          if(f === false){\n            f = true\n            dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n            let list;\n             \n            list = Array.from(\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n            );\n            list.map((item) => {\n              \n                item.style.display = \"none\"\n              }) \n          }\n          else{\n            f = false\n            dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n            let list;\n             \n            list = Array.from(\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n            );\n            list.map((item) => {\n              \n                item.style.display = \"block\"\n              }) \n          }\n        })\n        if(item.player === undefined){\n\n        }\n               else{\n                item.player.resize && item.player.resize();\n               }\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    \n    }\n  }\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n     this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n\n        },\n        () => {\n\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n  \n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  streamInit22 = (uid, attendeeMode, videoProfile, config) => {\n  \n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      \n      rt.client.subscribe(stream, function (err) {\n       \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n     \n      rt.removeStream(evt.uid);\n     \n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n    \n    \n  rt.addStream(stream);\n    }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n    axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${JSON.parse(this.userId)}&chname=${this.channelName}`)\n    .then((res) => {\n     if(res.data.result.rtc_id == uid){\n      Swal.fire({\n        title: \"success\",\n        html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\n        icon : \"success\"\n      })\n      setTimeout((e) =>{\n      this.handleExit(\"exit\");\n        window.location.assign(\"/#/customer/schedule\")\n      }, 3000)\n   \n     }\n    })\n    if(this.remoteShare2 === true){\n      this.remoteShare2 = false\n    } \n  };\n\n  addStream = (stream, push = false) => {\n   \n    this.hostId = stream.getId()\n \n  \n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n    axios.get(`${apiData}`)\n    .then((res) =>{\n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\n        praticipantVar.setAttribute(\"disabled\", true)\n      }\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n         praticipantVar.setAttribute(\"value\", \"You\");\n         praticipantVar.setAttribute(\"disabled\", true)\n       }\n       \n      else if(res.data.length == 0){\n        this.remoteShare2 = true\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\n        praticipantVar.setAttribute(\"disabled\", true)\n        }\n     })};   \n\n \n  \n  handleCamera = (e) => {\n    this.setState({disabledVedio : !this.state.disabledVedio})\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if(this.state.readyState === false){\n\n    }\n    else{\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n\n          },\n          () => {\n          \n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      window.location.assign(\"/#/customer/schedule\")\n    }\n  }\n  };\n\n  \n  sharingScreen = (e) => {\n    if(this.remoteShare2 === true && this.state.stateSharing === false){\n      Swal.fire({\n        title : \"error\",\n        html : \"Only one screen can be share at a time\",\n        icon : \"error\"\n      })\n    }\n    else if(this.state.stateSharing) {\n       this.shareClient && this.shareClient.unpublish(this.shareStream);\n       this.shareStream && this.shareStream.close();\n       this.setState({stateSharing : false})\n     }\n      else {\n      this.setState({stateSharing : true})\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n      this.shareClient.init($.appId, () => {\n      // this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          // create local stream\n          // It is not recommended to setState in function addStream\n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n     \n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n\n\n\nencodedString = \"N2VmMGY4ODg4NjI4NDFhYWIwNWY1NzFjNDM5MzE4OTc6NjU0ZDViYWM5ZDU2NGY4Y2JhOTJmNzJkOGM2N2FjYzI=\";\n\n  // recordStream = () => {\n\n  //   var data = JSON.stringify({\n  //     \"cname\":\"demo\",\n  //     \"uid\":\"527841\",\n  //     \"clientRequest\":{ \"resourceExpiredHour\": 24}});\n\n  //     var config = {\n  //     method: 'post',\n  //     url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n  //     headers: { \n  //       'Content-Type': 'application/json', \n  //       'Authorization': 'Basic '+this.encodedString,\n  //     },\n  //     data : data\n  //     };\n  //       axios(config)\n  //       .then(function (response) {\n        \n  //       })\n  //       .catch(function (error) {\n\n  //       });\n  // };\n\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n\n\n    // const recordingBtn = (\n    //   <span\n    //     onClick={this.recordStream}\n    //     className={\n    //       this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    //     }\n    //     title=\"Record\"\n    //   >\n    //     <RecordVoiceOverIcon />\n    //   </span>\n    // );\n\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n          {/* {recordingBtn} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js",["3068","3069","3070","3071","3072","3073"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n\n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\".completed{\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx",["3074","3075","3076","3077","3078","3079","3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094","3095","3096"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport Swal from \"sweetalert2\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\";\nimport CommonServices from \"../../../common/common\"\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"8\": [\n    \"span 3/span 4/13/3\",\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 3/span 4/13/27\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"9\": [\n    \"span 3/span 4/13/1\",\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 3/span 4/13/29\",\n    \"span 9/span 16/10/21\",\n  ],\n  \n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.adminName = Cookies.get(\"adminName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n      disabledVedio : false,\n      getAdId :'',\n      remoteRemove22: false,\n     \n      shareValue : false,\n      vedTrack : null,\n      vedOffer : '',\n     \n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"adminkey\");\n  adminEmail2 = window.localStorage.getItem(\"adminEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n  hostId ;\n  vendor = 1\n region = 14;\n bucket  = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\nlocalVedioTrack;\nremoteShare2 = false\ncomponentWillMount() {\n  let $ = this.props;\n  // init AgoraRTC local client\n  this.client = AgoraRTC.createClient({ mode: $.transcode });\n  let show;\nAgoraRTC.getDevices(function(dev){\n  var cameras = dev.filter((e) => {\n    return e.kind === \"videoinput\"\n  })\n \n  if(cameras.length > 0){\n    show = true\n  }\n  else{\n    show = false\n  }\n})\n  this.client.init($.appId, () => {\n   \n \n    this.client.join($.appId, $.channel, $.uid, (uid) => {\n     \n      var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.adminName;\n axios.get(`${data_post_api}`).\n then((res) => {\n  \n })\n\nthis.setState({getAdId : uid})\nthis.subscribeStreamEvents();\n\nif(show === true){\n  this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile)\n  this.localStream.init(\n      \n    () => {\n      if ($.attendeeMode !== \"audience\") {\n        this.addStream(this.localStream, true);\n        \n\n        this.client.publish(this.localStream, (err) => {\n         \n        });\n      }\n      this.setState({ readyState: true });\n    },\n    (err) => {\n    \n      this.setState({ readyState: true });\n    }\n  );\n}\nelse if(show === false){\nthis.localStream = this.streamInit22(uid, $.attendeeMode, $.videoProfile);\nthis.localStream.init(\n      \n  () => {\n    if ($.attendeeMode !== \"audience\") {\n      this.addStream(this.localStream, true);\n      \n\n      this.client.publish(this.localStream, (err) => {\n       \n      });\n    }\n    this.setState({ readyState: true });\n  },\n  (err) => {\n  \n    this.setState({ readyState: true });\n  }\n);\n}\n      \n    });\n  });\n}\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n    // this.accuire()\n  }\n\n  getSchedulerData =() =>{\n       axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                       \n                if (res.data.code === 1) {\n                 if(res.data.result.items){\n                  this.setState({\n                    item:res.data.result.items[0],\n                   showButton : res.data.result.items[0].owner_id\n                  })  \n                 }\n                        \n                }\n            });\n  }\n\n\n  componentDidUpdate() {\n    // rerendering\n   \n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      \n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n     \n        let txtColor = \"myPartName\";\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if(dom && this.state.disabledVedio === true){\n          dom.setAttribute(\"class\", \"ag-item2\");\n        }\n        else if (dom && this.state.disabledVedio === false) {\n         dom.setAttribute(\"class\", \"ag-item\");\n        }\n        let dd;\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          dd = document.createElement(\"input\")\n          dd.setAttribute(\"id\", \"name\" + id)\n          dd.setAttribute(\"class\", txtColor)\n        box22.appendChild(dd)\n        item.play(\"ag-item-\" + id);\n        }\n       \n         \n       \n       \n        if (index === no - 1) {\n         \n       \n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n         \n         \n          } else {\n           \n            let f = false;\n            dom.setAttribute(\n              \"style\",\n              `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                      z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n            );\n            dom.addEventListener('click', function (e){\n              if(f === false){\n                f = true\n                dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n                let list;\n             \n                list = Array.from(\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n                );\n                list.map((item) => {\n                  \n                    item.style.display = \"none\"\n                  }) \n              }\n              else{\n                f = false\n                dom.setAttribute(\n                  \"style\",\n                  `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                          z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n                );\n                let list;\n             \n                list = Array.from(\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n                );\n                list.map((item) => {\n                  \n                    item.style.display = \"block\"\n                  }) \n              }\n            })\n          }\n  if(item.player === undefined){\n  \n  }\n       else{\n        item.player.resize && item.player.resize();\n       }\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let f = false;\n      let no = this.state.streamList.length;\n      let txtColor = \"myPartName\";\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if(dom && this.state.disabledVedio === true){\n          dom.setAttribute(\"class\", \"ag-item2\");\n        }\n        else if (dom && this.state.disabledVedio === false) {\n         dom.setAttribute(\"class\", \"ag-item\");\n        }\n        let dd;\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          dd = document.createElement(\"input\")\n          dd.setAttribute(\"id\", \"name\" + id)\n          dd.setAttribute(\"class\", txtColor)\n        box22.appendChild(dd)\n        item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        dom.addEventListener('click', function (e){\n            \n          if(f === false){\n            f = true\n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n            let list;\n             \n            list = Array.from(\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n            );\n            list.map((item) => {\n              \n                item.style.display = \"none\"\n              }) \n          }\n          else{\n            f = false\n            dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n            let list;\n             \n            list = Array.from(\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n            );\n            list.map((item) => {\n              \n                item.style.display = \"block\"\n              }) \n          }\n        })\n        if(item.player === undefined){\n  \n        }\n               else{\n                item.player.resize && item.player.resize();\n               }\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    \n    }\n  }\n    componentWillUnmount() {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            \n          },\n          () => {\n                    }\n        );\n    }\n  \n\n    streamInit = (uid, attendeeMode, videoProfile, config) => {\n  \n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: true,\n        screen: false,\n      };\n  \n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n        default:\n        case \"video\":\n          break;\n      }\n  \n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n  \n    streamInit22 = (uid, attendeeMode, videoProfile, config) => {\n    \n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: false,\n        screen: false,\n      };\n  \n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n        default:\n        case \"video\":\n          break;\n      }\n  \n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.client.subscribe(stream, function (err) {\n        console.log(\"one\")\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"onee\")\n  \n      rt.removeStream(evt.uid);\n     \n      \n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n     \n      let stream = evt.stream;\n \n       \n     rt.addStream(stream)\n       }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"oneeee\")\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    console.log(\"remote\", this.remoteShare2)\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n    // console.log(\"showButton\", this.state.showButton)\n \n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${this.state.showButton}&chname=${this.channelName}`)\n      .then((res) => {\n        console.log(\"evt id\", uid)\n        if(res.data.result.rtc_id == uid){\n          console.log(\"evt id\", res.data.result.rtc_id)\n          Swal.fire({\n            title: \"success\",\n            html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\n            icon : \"success\"\n          })\n            setTimeout((e) => {\n              window.location.hash = \"/admin/schedule\";\n            }, 500)\n           \n           }\n          \n          \n      })\n     \n   if(this.remoteShare2 === true){\n   \n     this.remoteShare2 = false\n   }   \n  };\n\n  addStream = (stream, push = false) => {\n   \n    this.hostId = stream.getId()\n \n    console.log(\"two\", push)\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n    axios.get(`${apiData}`)\n    .then((res) =>{\n     \n\n \n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\n        praticipantVar.setAttribute(\"disabled\", true)\n      }\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n         praticipantVar.setAttribute(\"value\", \"You\");\n         praticipantVar.setAttribute(\"disabled\", true)\n       }\n       \n      else if(res.data.length == 0){\n        this.remoteShare2 = true\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\n        praticipantVar.setAttribute(\"disabled\", true)\n        }\n     })};\n\n  handleCamera = (e) => {\n   if(this.state.readyState === false){\n     return false\n   }\n   else{\n    this.setState({disabledVedio : !this.state.disabledVedio})\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n   }\n  };\n\n  handleMic = (e) => {\n   if(this.state.readyState === false){\n\n   }\n   else{\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n   }\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    \n   if(e.currentTarget === undefined){\n\n   }\n   else{\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n     this.state.streamList.length <= 1\n   ) {\n     return;\n   }\n   let list;\n   let id = this.state.streamList[this.state.streamList.length - 1].getId();\n   list = Array.from(\n     document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n   );\n   list.map((item) => {\n     if (item.style.display !== \"none\") {\n       item.style.display = \"none\";\n     } else {\n       item.style.display = \"block\";\n     }\n   });\n   }\n  };  \n  \n  handleExit = async() => {\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n \n     \n   }\n   sharingScreen = (e) => {\n   if(this.remoteShare2 === true && this.state.stateSharing === false){\n     Swal.fire({\n       title : \"error\",\n       html : \"Only one screen can be share at a time\",\n       icon : \"error\"\n     })\n   }\n   else if(this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.setState({stateSharing : false})\n    }\n     else {\n     \n      this.setState({stateSharing : true})\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n      \n\n       //  this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n         \n         \n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  \n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n             \n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video:  false,\n      screen: true,\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(\"1080p_2\");\n    return stream;\n  };\n\n  \n\n  CreateS3Folder = (uid) =>{\n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                \n            });\n  }\n\n\nencodedString = \"N2VmMGY4ODg4NjI4NDFhYWIwNWY1NzFjNDM5MzE4OTc6NjU0ZDViYWM5ZDU2NGY4Y2JhOTJmNzJkOGM2N2FjYzI=\";\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n//start recording\nasync startRecording(key){   \n    var resourceId = key.data.resourceId \n    this.CreateS3Folder(JSON.stringify(this.uid));\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n\n\n    await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n      });\n  };\n\n  //recording  acquire\n  accuire = () =>{\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n      .catch((error) => {\n      });\n  };\n// Start recording button\n  recStart = () => {\n   \n    this.localStream.enableVideo();\n    this.accuire();\n   \n    this.setState({ showRecBtn: false  });\n    \n  }\n\n  //toggelStop\n  toggleModal = (key) =>{\n  \n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n\n\n //stop recording \n stopRecording = () => {\n  if(this.state.showRecBtn === true){\nthis.del();\n  }\n  else if(this.state.showButton == JSON.parse(this.teamKey)){\n    console.log(\"done222\")\n    if(resourceId === undefined){\n      var resourceId = localStorage.getItem(\"resourceId\");\n    var sid = localStorage.getItem(\"sid\");\n    }\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n  \n    this.setState({vedOffer : json}),\n     this.setState({showRecBtn : true}),\n   \nthis.del(),\n    ) \n    .catch((error) => {   \n    });\n}\nelse{\n  this.localStream.disableVideo()\n  window.location.hash = \"/admin/schedule\";\n}\n};\n\n del = (e) => {\n \n    var serverResponse = this.state.data.serverResponse.fileList\n  var completeRecording;\n  if(this.tempArray === undefined || this.tempArray.length === 0){\n      completeRecording =  serverResponse;\n  }\n  else if(this.tempArray != undefined || this.tempArray.length > 0){\n   if(this.state.showRecBtn === true){\n        completeRecording = this.tempArray \n   }\n   else{\n        completeRecording = this.tempArray + \",\" + serverResponse;\n   }\n  }\n  else{\n      completeRecording = serverResponse;\n  }\n \n   let formData = new FormData()\n   formData.append(\"fileList\", completeRecording)\n  formData.append(\"schedule_id\", this.props.id);\n  formData.append(\"uid\", JSON.parse(this.teamKey));\n  formData.append(\"assign_id\", this.state.item.assign_no);\n  formData.append(\"participants\", this.state.item.username);\n  axios({\n    method: \"POST\",\n    url: `${baseUrl}/tl/callRecordingPost`,\n    data: formData,\n})\n  Swal.fire({\n  title: \"End this vedio call for everyone?\",\n  // text: \"End this vedio call for everyone\",\n  showCloseButton:true,\n   type: \"warning\",\n   showCancelButton : true,\n   confirmButtonColor: \"#3085d6\",\n   cancelButtonColor: \"#d33\",\n   confirmButtonText: \"End the call\",\n   cancelButtonText : \"Just leave the meeting\"\n  }).then((result) => {\n    if (result.value) {\n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&rtc_id=${this.state.getAdId}&uid=${JSON.parse(this.teamKey)}`)\n      .then((res) =>{\n        if(res){\n          this.client && this.client.unpublish(this.localStream);\n          this.localStream && this.localStream.close();\n          this.toggleModal()\n        }\n      })\n     \n     }\n   else if(result.dismiss === \"backdrop\" || result.dismiss === \"close\"){\n     return false\n   }\n   else{\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/callRecordingPost`,\n      data: formData,\n   })\n    window.location.hash = \"/admin/schedule\";\n   }\n });\n }\n \n  render() {\n\n    \n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className={this.state.readyState ? \"ag-btn videoControlBtn\" : \"ag-btn videoControlBtn disabled\"}\n         \n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n\n//recording btn on\n\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n\n\n    return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         schId = {this.props.id}\n         uid = {this.state.getAdId}\n         ownerId = {this.state.showButton}\n         />\n\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js",["3097","3098","3099","3100","3101","3102","3103"],"import React from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording,\n    schId,\n    uid,\n    ownerId\n}) {\n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"adminkey\");\n\n \n\n    const { assign_no, id, username, start } = item\n  \n\n    //submit\n    const onSubmit = (value) => {\n        var serverResponse = data.serverResponse.fileList\n        var completeRecording;\n        if(allrecording === undefined || allrecording.length === 0){\n            completeRecording =  serverResponse;\n        }\n        else if(allrecording != undefined || allrecording.length > 0){\n            completeRecording = allrecording + \",\" + serverResponse;\n        }\n        else{\n            completeRecording = serverResponse;\n        }\n                const { fileList } = serverResponse\n              \n        let formData2 = new FormData();\n                let formData = new FormData();\n                formData.append(\"uid\", JSON.parse(userId));\n                formData.append(\"fileList\", completeRecording);\n                formData.append(\"message_type\", value.msg_type);\n                formData.append(\"message\", value.p_message);\n                formData.append(\"assign_id\", assign_no);\n                formData.append(\"participants\", username);\n                formData.append(\"schedule_id\", id);\n        \n        \n\naxios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    toggle()\n                    history.push(\"/admin/schedule\")\n                }\n            })\n            .catch((error) => {\n               \n            });\n    };\n \n    return (\n        <div>\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\n                <ModalHeader >\n                 Minutes of meeting\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div className=\"col-md-10\">\n                                <div className=\"form-group\">\n\n                                    <div className=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                              \n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;\n\n","/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js",["3104","3105","3106"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { baseUrl } from \"../../config/config\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  readTerms,\n  id\n}) {\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n        <ModalHeader toggle={readTerms}>Engagement Letter</ModalHeader>\n        <ModalBody>\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${id}&viewpdf=1`}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={readTerms}>Ok</Button>\n        </ModalFooter>\n\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js",[],"/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js",["3107","3108","3109","3110","3111","3112","3113","3114"],"/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js",["3115","3116","3117","3118","3119","3120","3121","3122"],"/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js",["3123","3124","3125","3126","3127","3128","3129","3130"],"/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js",["3131","3132","3133","3134","3135","3136","3137","3138"],"/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js",["3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151"],"/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js",["3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164"],"/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js",["3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178"],"/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js",["3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3196","3197"],"/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js",["3198","3199","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217"],"/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js",["3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228"],"/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js",["3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252"],"/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js",["3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276"],"/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js",["3277","3278"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\n\nconst Schema = yup.object().shape({\n  p_tax: yup.string().required(\"\"),\n  p_tax2: yup.string().required(\"\"),\n});\n\n\nfunction CategorySelect({ addfreshbtn, startbtn }, props) {\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      setModal(!modal);\n    } else {\n      // alert(\"please select category and subcategory\")\n    }\n  };\n  const validation = () => {\n    toggle()\n  }\n  const validation2 = () => {\n    toggle2()\n  }\n\n  const toggle2 = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      history.push(\"/customer/addFresh\");\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(store.length != -1){\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n     }\n    getSubCategory();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div className=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <label>Category <span className=\"declined\">*</span></label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax,\n                })}\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Sub Category <span className=\"declined\">*</span></label>\n              <select\n                name=\"p_tax2\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax2,\n                })}\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax2 && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax2.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary  btn-block\"\n                  onClick={e => validation()} //\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary  btn-block\"\n                  onClick={e => validation2()} //\n                >\n                  Submit\n                </button>\n              )}\n\n            </div>\n\n          </form>\n\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div className=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div className=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" className=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" className=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n\n        </div>\n\n      </div>\n      <Mandatory />\n    </>\n  );\n}\n\nexport default CategorySelect;\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js",["3279","3280"],"\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction ResendOtp({ invalid, wEmail, disabled, indNumError, zipError, passError, email,\n    phone, setDisabled, getTime, setLoad, loading, emailError, phoneError, zipError1, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        if (emailError === true || phoneError === true || zipError1 === true)  {\n           return false\n              }\n              else {\n                setLoading(true)\n                let formData = new FormData();\n                formData.append(\"email\", value.p_email);\n                formData.append(\"phone\", phone);\n                formData.append(\"p\", \"registration\");\n        \n                if (invalid || wEmail || indNumError || zipError || passError) {\n                    \n                    setLoad(false)\n                }\n                else {\n                    \n                    axios({\n                        method: \"POST\",\n                        url: `${baseUrl}/customers/forgototp`,\n                        data: formData,\n                    })\n                        .then(function (response) {\n                            \n                            if (response.data.code === 1) {\n                                Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n                                setDisabled(false)\n                                getTime();\n                                setLoad(true)\n                                setLoading(false)\n                            } if (response.data.code === 0) {\n                                setLoading(false)\n                            }\n                        })\n                        .catch((error) => {\n                           \n                        });\n                    }\n                   }\n     \n        \n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                \n                {\n                      disabled ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <div style={{ paddingTop: \"10px\" }}>\n                        <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                    </div>\n                    }\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;\n\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js",[],"/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js",["3281"],"import React, {useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nconst Schema = yup.object().shape({\n    p_otp: yup.string().required(\"mandatory\"),\n});\n\n\nfunction VerifyOTP({ email, uid, time, setLoad,\n    setDisabled, disabled, loading, setLoading }) {\n    const { handleSubmit, register, errors, reset } = useForm({\n        resolver: yupResolver(Schema),\n    });\n\n    const history = useHistory();\n    const [setText, noSetText] = useState()\n\n\n    const validOtp = (e) => {\n        if (isNaN(e.target.value)) {\n            e.target.value = \"\"\n            noSetText(\"Please enter number only.\")\n        }\n    }\n\n    const onSubmit = (value) => {\n\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"otp\", value.p_otp);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/verifyloginotp`,\n            data: formData,\n        })\n            .then(function (response) {\n               \n\n                if (response.data.code == 1) {\n                    setLoading(false)\n                    Alerts.SuccessLogin(\"Login successfully.\")\n                    localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\n                    sessionStorage.setItem(\"userIdsession\", JSON.stringify(response.data.user_id));\n                    localStorage.setItem(\"custEmail\", JSON.stringify(response.data.name));\n                    history.push(\"customer/dashboard\");\n                } else {\n                    Alerts.ErrorNormal(\"Incorrect OTP\") \n                    setLoading(false)\n                    reset();\n                }\n            })\n            .catch((error) => {\n                ShowError.LoadingError(setLoading)\n            });\n    }\n\n\n    const resendOtp = () => {\n        setLoading(true)\n        noSetText(\" \")\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"uid\", uid);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/regenrateotp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"An OTP has been sent to your registered email address.\")\n                    setLoad(true)\n                    setDisabled(false)\n                }\n                else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n                ShowError.LoadingError(setLoading)\n            });\n    }\n\n    return (\n\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                {\n                    disabled ?\n                        null\n                        :\n                        <div className=\"form-group\">\n                            <label className=\"form-label\">Enter Your OTP <span className=\"declined\">*</span></label>\n                            <input\n                                type=\"text\"\n                                className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_otp,\n                                })}\n                                name=\"p_otp\"\n                                ref={register({ required: true })}\n                                placeholder=\"Enter your OTP\"\n                                onChange={(e) => validOtp(e)}\n                            />\n                            <p className=\"declinedmsg\">{setText ? setText : \"\"}</p>\n                            <small class=\"text-center\">\n                                Note: OTP is valid for {time} seconds.\n                            </small>\n\n                        </div>\n                }\n\n                {\n                    loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <div className=\"form-group\">\n                            {\n                                disabled ?\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                                    :\n                                    <button type=\"submit\" className=\"btn btn-success\">\n                                        Login\n                                    </button>\n                            }\n                        </div>\n                }\n            </form>\n        </div>\n    );\n}\n\n\nexport default VerifyOTP;\n","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js",["3282","3283","3284","3285"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tpkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js",["3286"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Spinner } from \"reactstrap\";\nimport Mandatory from \"../Common/Mandatory\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { LoginData } from \"./LoginFun\";\nimport { Link } from \"react-router-dom\";\nconst LoginForm = (props) => {\n    const data3 = useContext(LoginData)\n    const Schema = yup.object().shape({\n        p_email: yup.string().email(\"invalid email\").required(\"\"),\n        password: yup\n          .string()\n          .required(\"\")\n         \n      });\n      \n   \n    const { handleSubmit, register, reset, errors } = useForm({\n        resolver: yupResolver(Schema),\n      });\n \nreturn(\n    <div className=\"form\">\n    <div className=\"heading\">\n      <h2>ADMIN LOGIN</h2>\n    </div>\n    <form onSubmit={handleSubmit(data3.onSubmit)} autoComplete=\"off\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n            <input\n              type=\"text\"\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.p_email,\n              })}\n              name=\"p_email\"\n              ref={register}\n              placeholder=\"Enter Email\"\n              autocomplete=\"off\"\n              onChange={(e) => data3.handleChange(e)}\n            />\n            {errors.p_email && (\n              <div className=\"invalid-feedback\">\n                {errors.p_email.message}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n            <input\n              type={data3.isPasswordShow ? \"text\" : \"password\"}\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.password,\n              })}\n              name=\"password\"\n              placeholder=\"Enter Password\"\n              ref={register}\n              onCopy={(e) => {\n                e.preventDefault();\n                return false\n              }}\n              onPaste={(e) => {\n                e.preventDefault();\n                return false\n              }}\n            />\n            <i\n              className={`fa ${data3.isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n              onClick={data3.togglePasssword}\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">\n                {errors.password.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {\n        data3.loading ?\n          <div className=\"col-md-12\">\n            <Spinner color=\"primary\" />\n          </div>\n          :\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n      }\n\n      <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n        <Link\n          to={{\n            pathname: \"/admin/forget-password\",\n            email: `${data3.email}`,\n          }}\n        >\n          Forgot Password\n        </Link>\n      </div>\n\n      <Mandatory />\n    </form>\n  </div>\n\n)\n}\nexport default LoginForm;","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js",[],"/home/pooja/MazarsRepo/src/views/SignUpForm/city.js",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js",["3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310","3311","3312","3313"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = (props) => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"tpkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\n    const paydetails2 = () => {\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n       \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p style={{fontSize : \"11px\"}}>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\" , textAlign : \"right\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n        {\n            dataField: \"\",\n            text: \"Payment Details\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n                \"\" :   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"_blank\">Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n       \n      }\n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n                        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n            </Col>\n            <Col md=\"8\">\n              <h4>Payment Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n          <CardBody>\n          <div className=\"tableFixHead\">\n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/> \n</div>\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js",["3314"],"import React from 'react';\nimport { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../../config/config\";\nimport './Admin.css';\nimport Select from 'react-select';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography } from '@material-ui/core';\nimport Mandatory from '../../../components/Common/Mandatory';\n\nconst Report = () => {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n    const [item] = useState(current_date);\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const onSubmit = (value) => {\n        let formData = new FormData();\n        formData.append(\"from\", value.p_from);\n        formData.append(\"to\", value.p_to);\n      \n        // formData.append(\"category\",);\n        // formData.append(\"subCategory\");\n        formData.append(\"q_no\", value.qno);\n        formData.append(\"date_query\", value.dateQuery);\n        formData.append(\"cust_id\", value.cust_id);\n        formData.append(\"basic_category\", value.basicCategory);\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\n        formData.append(\"assessment\", value.assessment);\n        formData.append(\"purpose\", value.purpose);\n        formData.append(\"p_format\", value.p_format);\n        formData.append(\"t_requested\", value.t_requester);\n        formData.append(\"spc_que\", value.spc_que);\n        formData.append(\"date_allocation\", value.doa);\n        \n        formData.append(\"date_proposal\", value.dateProposal);\n        formData.append(\"proposed_amount\", value.proposedAmount);\n        formData.append(\"payment_terms\", value.paymentTerms);\n        formData.append(\"proposal_status\", value.proposal_status);\n        formData.append(\"accepted_amount\", value.acceptedAmount);\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\n        formData.append(\"amount_received\", value.amountReceived);\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\n        formData.append(\"amount_overdue\", value.amount_overdue);\n        formData.append(\"payment_declined\", value.declinedDate);\n        formData.append(\"assignment_number\", value.assignNumber);\n        formData.append(\"assign_date\", value.assignDate);\n        formData.append(\"proposed_completion_date\", value.completionDate);\n        formData.append(\"assignment_status\", value.assignStatus);\n        formData.append(\"date_complation\", value.completionQuery);\n        formData.append(\"assign_time\", value.assignTime);\n        formData.append(\"payment_recived_date\", value.receiptDate);\n        formData.append(\"amount_received\", value.amountReceived);\n   axios({\n     method : \"POST\",\n     url : `${baseUrl}/reports`,\n     data : formData\n\n   })\n    }\n    return (\n        <>\n          <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n          <div className=\"adminForm\">\n          <Typography variant=\"h4\">Taxprofessional Report</Typography>\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n\n      <div className=\"mb-3\">\n          <label className=\"form-label\">From</label>\n          <input\n            type=\"date\"\n            name=\"p_from\"\n            ref={register}\n            placeholder=\"Enter Mobile Number\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_mobile,\n            })}\n          />\n        </div>\n      </div>\n\n      <div className=\"col-md-3\">\n      <div className=\"mb-3\">\n          <label className=\"form-label\">To</label>\n          <input\n            type=\"date\"\n            name=\"p_to\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_type,\n            })}\n            defaultValue={item}\n            max={item}\n            placeholder=\"Enter type\"\n            ref={register({ required: true })}\n          />\n        </div>\n      </div>\n      <div className=\"col-md-3\">\n           <label className=\"form-label\">Category</label>\n           <Select isMulti = {true} />\n        </div>\n        <div className=\"col-md-3\">\n            <label className=\"form-label\">Sub Category</label>\n            <Select isMulti={true} />\n            </div>\n   </div> \n  \n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Basic Query Details</legend>\n            <div className=\"basicFeild\">\n            <span>\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\n               <label htmlFor=\"sno\">S.No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\n               <label htmlFor=\"qno\">Query No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\n               <label htmlFor=\"dataQuery\">Data Query</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\n               <label htmlFor=\"cust_id\">Client Id</label>\n            </span>\n            <span>\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\n               <label htmlFor=\"basicCategory\">Category</label>\n             </span>\n             <span>\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\n               </span>\n               <span> \n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\n\n</span>\n<span>\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\n</span> \n               <span>\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\n</span>\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\n<label htmlFor=\"t_requested\">Timeline Requested</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\n<label htmlFor=\"spc_que\">Specific questions</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\n</span>\n</div>\n</fieldset>\n</div>\n</div>\n\n\n   {/* Proposal */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Proposal</legend>\n            <div className=\"basicFeild\">\n<span>\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\n</span>\n<span>\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\n<label htmlFor=\"proposal_status\">Proposal Status</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\n<label htmlFor=\"declinedDate\">Payment decline date</label>\n</span>             \n            </div>      \n           </fieldset>\n           </div>\n   </div>\n\n   {/* Assignment */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Assignment</legend>\n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\n<label htmlFor=\"assignNumber\">Assignment Number</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\n<label htmlFor=\"assignDate\">Assignment Date</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\n<label htmlFor=\"assignStatus\">Assignment Status</label>\n</span>\n\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\n</span>\n            </div>    \n           </fieldset>\n           </div>\n   </div>\n\n\n   {/* Payment Receipt */}\n\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Payment Receipt</legend>  \n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\n</span>   \n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Amount Received</label>\n</span>\n            </div>\n           </fieldset>\n           </div>\n   </div>\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\n   <Mandatory />\n  </form>\n  </div>\n            </Layout>\n              </>\n   \n       );\n   }\nexport default Report;","/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js",["3315","3316","3317"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport RecordingEdit from './RecordingEdit';\nimport ReactPlayer from \"react-player\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\nimport {Link} from \"react-router-dom\";\nimport './recording.css';\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction Recording() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [editData, setEditData] = useState({\n        participant : '',\n        editMessage : '',\n        assignid : '',\n        id : ''\n    })\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\n\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\n    const modalBox = {\n        display : \"flex\",\n        position : \"fixed\",\n        top: \"50%\",\n        left : \"50%\",\n        transform : \"translate(-50%, -50%)\",\n      justifyContent : \"center\",\n      alignItems : \"center\",\n        width : \"100%\", \n        height: \"auto\",\n        flexDirection : \"column\"\n    }\nconst canBtn = {\n   \n    display : \"flex\",\n    width : \"50vw\",\n    alignItems : \"flex-end\",\n    justifyContent : \"flex-end\",\n    padding: \"20px\",\n    cursor : \"pointer\", \n    color : \"red\"\n}\nconst editRecording = (participants, assign_id, message, id) => {\n   \n    setShowEditModal(!showEditModal)\n    setEditData({\n        participant : participants,\n        editMessage : message,\n        assignid : assign_id,\n        id : id\n    })\n}\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/taxprofessional/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n\n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                       <div>\n                    {row.record_by === JSON.parse(userid) && row.message === null?\n                             <i\n                             className=\"fa fa-edit\"\n                             style={{\n                               fontSize: 18,\n                               cursor: \"pointer\",\n                               marginLeft: \"8px\",\n                             }}\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\n                           ></i> : \"\"}\n                    </div>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                    <>\n                                    <p style={videoIcon}>\n                                   {record.length === 0 ? \"\" : \n                                   <>\n                                     <span>{a++}</span>   <i\n                                        className=\"material-icons\"\n                                        style={{\n                                            cursor: \"pointer\",\n                                            color: \"red\",\n                                            fontSize: \"25px\",\n                                        }}\n                                        onClick={() => openModal(record)}\n                                    >\n                                        play_circle_outline\n                                     \n                                    </i>\n                                  \n                                   </>}\n                                  \n                                    </p>\n                                    </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n        <>\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                <RecordingFilter\n                       setData={setFeedBackData}\n                    //    getData={getInCompleteAssingment}\n                       SearchQuery=\"SearchQuery\"\n                      setRecords={setRecords}\n                       records={records} \n                       userid = {userid}\n                       getRecording = {getRecording}\n                    /> \n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n\n            </Card>\n          \n           </div>\n            \n          \n          <RecordingEdit \n          isOpen = {showEditModal}\n          recordingHandler = {editRecording}\n          participants = {editData.participant}\n          message = {editData.editMessage}\n          assignid = {editData.assignid}\n          editId = {editData.id}\n          recList = {getRecording}/>\n                     {isOpen === true ?\n          \n                 \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoid}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div>\n  : \"\"}\n         </Layout>\n\n           </>\n\n    );\n}\n\nexport default Recording;","/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js",["3318","3319","3320","3321","3322"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n           \n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js",["3323","3324","3325","3326"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  \n  return (\n   \n      <Meeting id={props.match.params.id} />\n  \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js",["3327","3328","3329","3330","3331"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\nfunction FeedbackTab() {\n  const alert = useAlert();\nconst history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    axios\n      .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setFeedBackData(res.data.result);\n        }\n      });\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n     \n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n    },\n    {\n      text: \"Feedback\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <div>\n              {\n                row.tp_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\", wordBreak : \"break-word\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n    \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          // alert.success(\"successfully read!\");\n          getFeedback()\n          history.push(\"/taxprofessional/feedback\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n\n  return (\n    <>\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js",["3332","3333","3334","3335","3336","3337"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n  \n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\".completed{\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js",["3338","3339","3340","3341","3342","3343","3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding. Do you still want to proceed to complete this query?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          data: formData,\n        })\n          .then(function (response) {\n          \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\n              getAssignmentList();\n              history.push(\"/taxprofessional/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n        \n          });\n     \n      }\n      else{\n        history.push(\"/taxprofessional/assignment\");\n        return false\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n\n      let formData = new FormData();\n \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n     \n       formData.append(\"stage_2_status\", value.draft_report);\n     \n      formData.append(\"stage_3_status\", value.final_discussion);\n    \n     formData.append(\"stage_4_status\", value.delivery_report);\n     \n       formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/taxprofessional/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n        \n        });\n    \n    }\n     \n    \n  };\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of final report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                       {p.client_discussion === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"client_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> : \n                       <div class=\"col-md-4\">\n                       <div class=\"form-group\">\n                         <select\n                           class=\"form-control\"\n                           ref={register}\n                           name=\"client_discussion\"\n                         >\n                           <option value=\"inprogress\">Inprogress</option>\n                           <option value=\"completed\">Completed</option>\n                           \n                         </select>\n                       </div>\n                     </div>}\n\n                       \n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        {\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\n                          <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div> :\n                         <div class=\"col-md-4\">\n                         <div class=\"form-group\">\n                           <select\n                             class=\"form-control\"\n                             ref={register}\n                             disabled\n                             defaultValue = \"inprogress\"\n                             name=\"draft_report\"\n                           >\n                             <option value=\"inprogress\">Inprogress</option>\n                             <option value=\"completed\">Completed</option>\n                             \n                           </select>\n                         </div>\n                       </div>\n                        }\n                       \n                      \n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> : \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> }\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of final report\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"delivery_report\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> :\n                      <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"delivery_report\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                          \n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \n                        ? <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"other_stage\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                          </select>\n                        </div>\n                      </div>\n                      : <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"other_stage\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js",["3356","3357","3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n      <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js",["3371","3372","3373","3374","3375","3376","3377"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\n\n\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n   \n    formData.append(\"sst\", \"tp\")\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n       <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                     \n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js",["3378","3379","3380","3381","3382","3383","3384","3385"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../../common/common\";\nimport { useHistory } from \"react-router\";\nfunction Message(props) {\n   \n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"tpkey\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\nconst history = useHistory();\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const paymentHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n    };\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n       \n        {\n            text: \"Date\",\n            dataField: \"setdate\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\" };\n            },\n        },\n          \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\n                        {row.assign_no}\n                        {/* </Link> */}\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link to={`/taxprofessional/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display : \"flex\",\n                                            justifyContent : \"space-between\",\n                                            wordBreak : \"break-word\"  \n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n                                    :\n                                    <div\n                                        style={{ cursor: \"pointer\",\n                                        display :\"flex\",\n                                        justifyContent : \"space-between\",\n                                        wordBreak : \"break-word\"}}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n                            }\n                        </Link>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n       \n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                \n            })\n            .catch((error) => {\n               \n            });\n    };\n\n    return (\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n            <Card>\n            <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <button\n                class=\"btn btn-success\" \n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <PaymentModal\n                        paymentHandler={paymentHandler}\n                        addPaymentModal={addPaymentModal}\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js",["3386","3387","3388","3389"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px 24px\",\n    borderRadius: \"50px\",\n    width: \"auto\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Delivery of Final Report ({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js",["3390","3391","3392","3393","3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"tpinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width :\"150px\"};\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"150px\"};\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n               \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        },  \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p style={{color : \"red\", fontSize: \"11px\"}}>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\", justifyContent : \"flex-start\", alignItems:\"center\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                              {row.is_paid == \"0\" ? \n                        <i\n                        class=\"fa fa-edit\"\n                        style={{\n                            fontSize: \"16px\",\n                            margin: \"0 5px\",\n                            cursor: \"pointer\",\n                            color : \"blue\",\n                        }}\n                       onClick = {() => addTdsToggle(row)} \n                    ></i> : \"\"\n                        }\n                         {row.is_paid == \"0\" \n                ?   \n                 <span title={row.paymenturl}>\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\n                   </span>  \n                   \n              \n                    : \"\" }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n       \n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n         if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"tpgenerated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                   \n                  \n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js",["3412","3413","3414","3415","3416","3417","3418","3419","3420","3421"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\n\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n \n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"tpinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width :\"200px\"};\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"200px\"};\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n             \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                                color : \"blue\",\n                                            }}\n                                            onClick = {() => addTdsToggle(row)} \n                                        ></i>\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice = \"tpcreate\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField='id'\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n</div>\n                   \n\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/pages/TP/Recording/RecordingEdit.js",["3422","3423"],"import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\n   const userid = localStorage.getItem(\"tpkey\")\n    const { handleSubmit, register, errors } = useForm();\n    const onSubmit = (value) => {\n       let formData = new FormData();\n       formData.append(\"uid\", JSON.parse(userid))\n       formData.append(\"message\", value.p_message);\n       formData.append(\"message_type\", value.msg_type)\n        formData.append(\"assign_id\", assignid);\n        formData.append(\"participants\", value.p_participants);\n        formData.append(\"id\", editId)\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\n            data: formData,\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n                recordingHandler()\n                Swal.fire({\n                    title : \"success\",\n                    html : \"Message edited successfully\",\n                    icon : \"success\"\n                })\n                recList()\n            }\n        })\n    }\n   \nreturn (\n \n    <>\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\n        <ModalHeader toggle={recordingHandler}>\n        <h1>Recording Edit</h1>\n        </ModalHeader>\n        <ModalBody>\n       <form onSubmit = {handleSubmit(onSubmit)}>\n<div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Participants Name</label>\n        <input \n        className=\"form-control\"\n        name=\"p_participants\"\n        ref = {register}\n        defaultValue = {participants}/>\n        </div>\n        \n</div>\n<div className = \"row\">\n<div className=\"col-md-12\">\n    <label>Message Type</label>\n<select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            required\n                            \n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Message</label>\n        <textarea \n        className=\"form-control\"\n        style={{height : \"100px\"}}\n        name=\"p_message\"\n        ref = {register}\n        defaultValue = {message}/>\n        </div>\n</div>\n<button className=\"btn btn-primary my-2\">\n    Submit\n</button>\n       </form>\n        </ModalBody>\n    </Modal>\n    \n    </>\n)\n}\nexport default RecordingEdit;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js",["3424","3425","3426","3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n    const [fianlModal, setFianlModal] = useState(false);\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const [loading, setLoading] = useState(false);\n\n  let des = false;\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n   \n    const uploadFinalReport = (id) => {\n        if(id && id.id === undefined){\n            \n          let des = true;\n          setLoading(false)\n          setFianlModal(!fianlModal);\n        }\n        else{\n          setFianlModal(!fianlModal);\n              setFinalId(id);\n        }\n            \n            };\n        \n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                   \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n      \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n      \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n      \n        setStatus(value);\n    };\n// view Report\nconst ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                index : 2,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                         <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n{row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n{row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n{row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n{row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n{row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            style : {\n                fontSize : \"11px\"\n              },\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n            \n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            style : {\n                fontSize : \"11px\"\n              },\n            headerStyle: () => {\n              return { fontSize: \"12px\",  textAlign: \"center\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n                return (\n                    <>\n               {\n                 row.paid_status == \"2\" ? null : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      <div title=\"upload Pdf\">\n       <p\n         style={{ cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n             <div>\n               <i\n                 class=\"fa fa-upload\"\n                 style={{ fontSize: \"16px\" }}\n               ></i>\n               final\n             </div>\n          \n       </p>\n      </div> : null\n      }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 2,\n    routes: \"assignment\",\n                                                    obj: {\n                                                        message_type: \"3\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/assignment`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n\n      \n               </div>\n               }\n                </>\n                );\n            },\n        },\n    ];\n\n\n\n    const onSubmit = (data) => {\n      \n        axios\n        .get(\n            `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Delivery_of_report&stages_status=1&pcat_id=${selectedData}`)\n        .then((res) => {\n          \n               \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n  <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    \n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js",["3451","3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484","3485"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  const [dataItem, setDataItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [draftModal, setDraftModal] = useState(false);\n  const [fianlModal, setFianlModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false)\n  let des = false;\n  var rowStyle2 = {}\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData != undefined){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   setError(false)\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   setError(false)\n    setStore2(value);\n  };\n\n  //reset category\n   const resetCategory = () => {\n    console.log(error)\n  \n    setSelectedData([]);\n    setStore2([]);\n   getAssignmentList()\n    setError(false)\n    setTax2([])\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n     setTax2([])\n    setError(false)\n    setHide(\"\")\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n   getAssignmentList()\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n   setError(false)\n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      }\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n    },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n              <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n{row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n{row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n{row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n{row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n{row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      style : {\n        fontSize : \"11px\",  textAlign: \"center\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n                {\n           row.paid_status == \"2\" ? null :\n              <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                <i class=\"fa fa-tasks\"></i>\n              </Link>\n      }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"90px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n         {\n           row.paid_status == \"2\" ? \n           <div style={{display : \"flex\"}}>\n                <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 0,\n    routes: \"assignment\",\n                                                    obj: {\n                                                        message_type: \"3\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/assignment`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n\n\n           </div> : \n           <div\n           style={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n           }}\n         >\n           \n           \n              {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n<div title=\"upload Pdf\">\n <p\n   style={{ cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n       <div>\n         <i\n           class=\"fa fa-upload\"\n           style={{ fontSize: \"16px\" }}\n         ></i>\n         final\n       </div>\n    \n </p>\n</div> : null\n}\n          \n\n           <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 0,\n    routes: \"assignment\",\n                                                    obj: {\n                                                        message_type: \"3\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/assignment`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n\n\n         </div>\n         }\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n  const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n\n  // final modal\n  \n    const uploadFinalReport = (id) => {\nif(id && id.id === undefined){\n    \n  let des = true;\n  setLoading(false)\n  setFianlModal(!fianlModal);\n}\nelse{\n  setFianlModal(!fianlModal);\n      setFinalId(id);\n}\n    \n    };\n\n \n  const onSubmit = (data) => {\n   \n    if(hide == 1 || hide == 2){\nif(status.length > 0){\n  axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n}\nelse{\n  setError(true);\n  return false\n}\n    }\n    else{\n      axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n        }\n      }\n      });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setStatus([])\n    setError(false)\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"1\" || hide == \"2\" ?\n                 \n                  <div className=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                      className={error ? \"customError\" : \"\"}\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div> : \"\"\n\n              }\n\n\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n            classes = \"table-responsive\"\n          />\n          </div>\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentList}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js",["3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\n\n\n\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\n    const [item] = useState(current_date);\n    const [dataItem, setDataItem] = useState({});\n    const [draftModal, setDraftModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  let des = false;\n    const ViewReport = (key) => {\n       \n        setReportModal(!reportModal);\n        setReport(key.assign_no);\n        setDataItem(key)\n      };\n // draft modal\n const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                  \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n     \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n   \n\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                index : 1,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                         <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span style={ row.client_discussion == \"completed\" ? clcomp : clinpro}>\n{row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span style={ row.draft_report == \"completed\" ? clcomp : clinpro}>\n{row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span style={ row.final_discussion == \"completed\" ? clcomp : clinpro}>\n{row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span style={ row.delivery_report == \"completed\" ? clcomp : clinpro}>\n{row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span style={ row.other_stage == \"completed\" ? clcomp : clinpro}>\n{row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\", textAlign: \"center\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style : {\n                fontSize : \"11px\"\n              },\n            formatter: function (cell, row) {\n                return (\n                    <>\n               {\n                 row.paid_status == \"2\" ? null : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 1,\n    routes: \"assignment\",\n                                                    obj: {\n                                                        message_type: \"3\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/assignment`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n\n               </div>\n               }\n                </>\n                );\n            },\n        },\n    ];\n\n\n    const onSubmit = (data) => {\n       \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Draft_Report&stages_status=1&pcat_id=${selectedData}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n<DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n           <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js",["3514","3515","3516","3517"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js",["3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\n\n\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n\n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery?tp_id=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n  \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n      \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n        <i\n         onClick={() => handleJoin(data)}\n            class=\"fa fa-video-camera\"\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n          <div>{children}</div>\n          \n         \n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n//     // console.log(\"data\", data);\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n\n\n// if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/taxprofessional/meeting/${data.id}`);\n\n// }\n// else{\n// // return false\n \n// Cookies.set(\"channel_2\", data.question_id);\n// Cookies.set(\"baseMode_2\", baseMode);\n// Cookies.set(\"transcode_2\", transcode);\n// Cookies.set(\"attendeeMode_2\", attendeeMode);\n// Cookies.set(\"videoProfile_2\", videoProfile);\n// // history.push(\"/teamleader/meeting/\");\n// history.push(`/taxprofessional/meeting/${data.id}`);\n\n// }\n// }\n\nCookies.set(\"channel_2\", data.question_id);\n  Cookies.set(\"baseMode_2\", baseMode);\n  Cookies.set(\"transcode_2\", transcode);\n  Cookies.set(\"attendeeMode_2\", attendeeMode);\n  Cookies.set(\"videoProfile_2\", videoProfile);\n  // history.push(\"/teamleader/meeting/\");\n  history.push(`/taxprofessional/meeting/${data.id}`);\n  };\n\n  const changeFormat = (d) => {\n    \n\n    if (typeof d === 'object') {\n\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n   \n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n\n    if (added) {\n      setLoading(true)\n\n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n      \n        });\n    }\n    if (changed) {\n    \n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n    \n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n    \n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n    \n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n        \n        });\n    }\n\n    if (deleted !== undefined) {\n   \n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n        \n          value = data.owner\n        }\n      });\n\n   \n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n        \n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n   \n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n      {\n        loading ?\n          <Loader />\n          :\n          <>\n           <div style ={{display : \"flex\", height : \"700px\"}}>\n            <Paper>\n              <Scheduler data={data} >\n                <ViewState\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState onCommitChanges={commitChanges} />\n                <EditRecurrenceMenu />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher />\n\n                <AppointmentTooltip showOpenButton />\n\n                {\n                  read ?\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      readOnly\n                    />\n                    :\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    />\n                }\n\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            </Paper>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Demo;","/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js",["3531","3532","3533","3534","3535"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n   let formData = new FormData();\n   formData.append(\"uid\", JSON.parse(userId));\n   formData.append(\"id\", assignNo);\n   formData.append(\"notes\" , value.p_chat);\n\n   axios({\n       method: \"POST\",\n       url: `${baseUrl}/customers/deleteQuery`,\n       data: formData,\n   })\n       .then(function (response) {\n         \n           if (response.data.code === 1) {\n            deleteCliente()\n               setLoading(false)\n               Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n               getQueriesData();\n           } else if (response.data.code === 0) {\n               setLoading(false)\n               Swal.fire(\"Oops...\", \"Query not deleted \", \"error\");\n           }\n       })\n       .catch((error) => {\n          \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js",["3536","3537","3538"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nfunction AdditionalQueryModal({\n  additionalQuery,\n  additionalHandler,\n  assignNo,\n  getQueriesData,\n  setLoading2,\n  loading2,\n  \n  des\n}) {\n  const { handleSubmit, register } = useForm();\n  \n // const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n des = false\n    setLoading2(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"upload[]\", file);\n      }\n    }\n    formData.append(\"assign_no\", assignNo);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1 && des === false) {\n          des = true\n          setLoading2(false)\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success !',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          additionalHandler();\n          getQueriesData();\n        } else if (response.data.code === 0) {\n          setLoading2(false)\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading2)\n       });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n                multiple\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading2 ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdditionalQueryModal;\n","/home/pooja/MazarsRepo/src/views/ModalManual/ModalManual.js",[],"/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js",["3539","3540","3541"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport DiscardReport from \"./DiscardReport\";\nimport Assignmodal from \"./Assignmodal\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport {Typography} from \"@material-ui/core\";\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n  const [additionalQuery, setAdditionalQuery] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [nestedModal, setNestedModal] = useState(false);\n  const [modaldoc, setModaldoc] = useState({})\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n  const additionalHandler = (p) => {\n setModaldoc(p.docid)\n    setAdditionalQuery(!additionalQuery);\n    setAssignNo(userId)\n};\n\n\n  //accept handler\n  const acceptHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", key.docid);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n   \n        if (response.data.code === 1) {\n          getData();\n         \n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          \n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n           \n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n              \n                {/* {\n                  dataItem ?\n                    dataItem.customer_file === null ? \"\" : <th scope=\"row\">File Upload</th>\n                    :\n                    null\n                } */}\n                <th scope=\"row\">Uploaded file\n                </th>\n               \n                {\n                  dataItem ?\n                    dataItem.final_report ? null : <th scope=\"row\">Action</th>\n                    :\n                    null\n                }\n              \n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                   {p.stages_type === \"2\" ?\n                   <p>Draft Report</p> : null}\n                   {p.stages_type === \"3\" ?\n                   <p>Final Report</p> : null}\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }\n                </td>\n               \n  {p.stages_type === \"2\" ?\n  <>\n   {\n        p.status === \"1\" ?\n          <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n            <i\n              class=\"fa fa-check\"\n              style={{\n                color: \"blue\",\n                fontSize: \"16px\",\n              }}\n            ></i>\n          </div> :\"\"}\n\n          {p.status === \"2\" && p.customer_files !== null ?\n          <p style={{color : \"red\"}}>Pending </p> : \"\"}\n\n\n\n\n         { p.status === \"2\" || p.status === \"0\" ?\n              <>\n              <div style={{display : \"flex\", flexDirection: \"row\"}}>\n               {p.status === \"2\" ? null :\n               <>\n             \n              {p.tlstatus ===  \"0\" ?\n              <div style={{ cursor: \"pointer\" }} title=\"Accept\">\n<i\n  class=\"fa fa-check\"\n  style={{\n    color: \"green\",\n    fontSize: \"16px\",\n  }}\n  onClick={() => acceptHandler(p)}\n></i>\n</div> : null}\n                <div title=\"Discussion\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"green\"\n                  }}\n                  onClick={() => toggleNested(p)}\n                ></i>\n              </div>\n              \n              </> }\n                {p.customer_files === null ?\n<div title=\"Upload Additional Documents\"\n        style={{ cursor: \"pointer\", display : \"inline-flex\" }}\n        onClick={() => additionalHandler(p)}\n       \n    >\n        <PublishIcon color=\"secondary\" />\n    </div> : \"\"}\n    </div>\n    </> :\"\"}</> : null}\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n     <Assignmodal\n                        additionalHandler={additionalHandler}\n                        additionalQuery={additionalQuery}\n                        assignNo={assignNo}\n                        modaldoc = {modaldoc}\n                        getData = {getData}\n                        // getQueriesData={getQueriesData}\n                    />\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js",[],"/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js",["3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\nimport {Spinner} from \"reactstrap\";\nimport './porposalStyle.css';\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [tdsR, setTdsR] = useState();\n   const [disabled, setDisabled] = useState(false)\n  const [description, setDiscription] = useState()\n  const [loading, setLoading] = useState(false);\n\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/tl/getServices`)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n     \n      setTdsR(10)\n      setCgetRate(18);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 18 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n    setSac(i.serviceCode)\n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n setDiscription(i.description)\nsetTdsR(i.tds_rate)\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseFloat(i.opt_expenses));\n setCgstTotal(parseFloat(i.cgst_amount));\n setIgstTotal(parseFloat(i.igst_amount));\n setSgstTotal(parseFloat(i.sgst_amount));\n setCgetRate(parseFloat(i.cgst_rate));\n setIgetRate(parseFloat(i.igst_rate));\n setSgetRate(parseFloat(i.sgst_rate));\nsetTds(parseFloat(i.tds_amount))\n setgrandTotal(parseFloat(i.payable_amount))\n setTotal(parseFloat(i.invoice_amount))\n setGst(parseFloat(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\nconst cgstFun = (e) => {\n \n \n  let kkk = e.target.value.split(\".\")[1]\n   if(kkk)\n    if(kkk.length < 3){\n      \n     setCgetRate(e.target.value);\n     let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = Math.round(a * e.target.value / 100)\n      setCgstTotal(parseInt(cget));\n      setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\n      setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n      setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n     \n    }\n    else{\n      return false;\n    }\n  else{\n   setCgetRate(e.target.value);\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\n    let cget = Math.round(a * e.target.value / 100)\n    setCgstTotal(parseInt(cget));\n    setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\n    setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n    setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n   \n  }\n }\n // Sgst tax function\n const sgstFun = (e) => {\n   let kkk = e.target.value.split(\".\")[1]\n   if(kkk){\n     if(kkk.length < 3){\n       setSgetRate(e.target.value)\n       let a = parseInt(basicAmount) + parseInt(pocketExp);\n             let cget = Math.round(a * e.target.value / 100)\n             setSgstTotal(parseInt(cget))\n             setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n             setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\n             setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n       \n     }\n     else{\n       return false;\n     }\n   }\n else{\n   setSgetRate(e.target.value)\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\n         let cget = Math.round(a * e.target.value / 100)\n         setSgstTotal(parseInt(cget))\n         setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n         setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\n         setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n   \n }\n    \n    }\n   \n  \n // Igst tax function\n  const igstFun = (e) => {\n  \n   let kkk = e.target.value.split(\".\")[1]\n   if(kkk){\n if(kkk.length < 3){\n   setIgetRate(e.target.value)\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\n       let cget = Math.round(a * e.target.value / 100) \n          setIgstTotal(cget) \n          setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\n          setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n          setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n \n  \n }\n else{\n   return false;\n }\n   }\n    else{\n     setIgetRate(e.target.value)\n     let a = parseInt(basicAmount) + parseInt(pocketExp);\n         let cget = Math.round(a * e.target.value / 100) \n            setIgstTotal(cget) \n            setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\n            setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n            setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n   \n    \n    }\n       \n  }\n  // Tds function\n  const tdsFun = (e) => {\n   let kkk = e.target.value.split(\".\")[1]\n  if(kkk){\n    if(kkk.length < 3){\n     if(e.target.value > 100){\n       setTdsR(100);\n       let a = parseInt(basicAmount) + parseInt(pocketExp);\n       let cget = Math.round((a * 100 / 100))\n          setTds(cget)\n        setgrandTotal(parseInt(total) - parseInt(cget))\n      \n     }  \n     else{\n      setTdsR(e.target.value)\n      let a = parseInt(basicAmount) + parseInt(pocketExp);\n       let cget = Math.round((a * e.target.value / 100))\n          setTds(cget)\n        setgrandTotal(parseInt(total) - parseInt(cget))  \n     }\n    }\n    else{\n      return false\n    }\n  }\n  else{\n   if(e.target.value > 100){\n     setTdsR(100);\n     let a = parseInt(basicAmount) + parseInt(pocketExp);\n     let cget = Math.round((a * 100 / 100))\n        setTds(cget)\n      setgrandTotal(parseInt(total) - parseInt(cget))\n    \n   }  \n   else{\n    setTdsR(e.target.value)\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\n     let cget = Math.round((a * e.target.value / 100))\n        setTds(cget)\n      setgrandTotal(parseInt(total) - parseInt(cget))  \n   }\n  }\n  }\n  \n \n  const pocketExpFun = (e) => {\n \n    if(e.target.value === \"\"){\n      setPocketExp(0)\n    }\n    else{\n      setPocketExp(parseInt(e.target.value).toString())\n    }\n   let a;\n   if(e.target.value){\n     if(basicAmount.length == \"0\"){\n        a = Math.round(e.target.value) + parseInt(0);\n     }\n     else{\n       a = Math.round(e.target.value) + parseInt(basicAmount);\n     }\n    \n   \n  \n   let cget1 = parseInt(Math.round(a * cgetRate / 100))\n   let sget1 = parseInt(Math.round(a * sgetRate / 100))\n   let iget1 = parseInt(Math.round(a * igetRate / 100))\n   let tdsamount = parseInt(Math.round(a * tdsR / 100))\n     setCgstTotal(Math.round(a * cgetRate / 100));\n    setSgstTotal(Math.round(a * sgetRate / 100));\n    setIgstTotal(Math.round(a * igetRate / 100));\n    \n  setGst((oldData) => {\n   return(parseInt(parseInt(cget1) + parseInt(sget1) + parseInt(iget1)))\n  })\n   setTotal((oldData) => {\n     return(parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a))\n   })\n   setTds((oldData) => {\n     return(parseInt(tdsamount))\n   })\n   setgrandTotal((oldData) => {\n     return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\n   })\n  \n }\n }\n \n const basicFun = (e) => {\n  \n   let a = Math.round(parseInt(e.target.value) + parseInt(pocketExp));\n   let tdsamount = parseInt(Math.round(a * tdsR / 100))\n   setBasicAmount(e.target.value);\n   if(e.target.value > 0){\n     setCgstTotal(Math.round(a * cgetRate / 100));\n    setSgstTotal(Math.round(a * sgetRate / 100));\n    setIgstTotal(Math.round(a * igetRate / 100));\n    setGst((oldData) => {\n     return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\n    })\n   setTotal((oldData) => {\n     return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\n   })\n   setTds((oldData) => {\n     return(parseInt(tdsamount))\n   })\n   setgrandTotal((oldData) => {\n     return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\n   })\n  \n }\n }\n    const onSubmit= (value) => {\n        setLoading(true);\n        let formData = new FormData();\n       formData.append(\"tp_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", description);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsR);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo)\n        formData.append(\"invoice_by\", JSON.parse(userid))\n        {props.generated == \"edited\" ? formData.append(\"generate_status\", 1) :\n        formData.append(\"generate_status\" , 0)}\n        axios({\n            method : \"POST\",\n            data : formData,\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            setLoading(false);\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n             \n                history.push(\"/taxprofessional/tpinvoice\")\n            }\n           else{\n                 Swal.fire({\n                title : \"error\", \n                html : `${res.data.result}`,\n                icon : \"error\"\n              })\n               \n              }\n        })\n      \n    }\n  const serviceFun = (e) => {\n    setDiscription(e)\n   services.map((k) => {\n    \nif(k.service == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled = {disabled}\n         className=\"form-control\"\n         onChange= {(e) => (setBillNo(e.target.value))}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Description <span className=\"declined\">*</span></label>\n          <select \n       //   defaultValue={description}\n       value={description}\n           ref={register({ required: true })}\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.description,\n          })}>\n               <option value=\"\">please select value</option>\n          {services.map((i) => (\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"number\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    onChange= {(e) => basicFun(e)}\n                    disabled\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6 headCenter\">\n               <label>Out of Pocket Expenses</label>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"number\"\n                    name=\"pocket_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <label>CGST</label>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"number\"\n                    ref={register}\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {Math.round(cgetTotal)}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <label>SGST/UTGST </label>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    ref={register}\n                    step=\"0.00001\"\n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={Math.round(sgetTotal)}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <label>IGST</label>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={Math.round(igetTotal)} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4 headCenter\">\n                  <label>Total GST</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8 headCenter\">\n                  <h5>Total Invoice Amount</h5>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(total)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1 headCenter\">\n              <label>TDS </label>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-6\"  style={percent}>\n                   <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    value={tdsR}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-6\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Math.round(tds2)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1 headCenter\">\n              <label>Net Payable Amount</label>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Math.round(grandTotal)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n            <>\n             {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                 <>\n                  <button  type=\"submit\" className=\"btn btn-success\">submit</button>\n          \n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button>\n                 </>\n              }\n             \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js",["3553","3554","3555","3556"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n        \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n        \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js",["3557","3558","3559","3560","3561"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"otp send your email !\",\n            \"icon\" : \"success\"\n          })\n        \n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n         \n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n    \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js",["3562","3563","3564","3565","3566","3567"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport { localeData } from \"moment\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    setLoad(false)\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/taxprofessional/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id}  setLoad={setLoad} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js",["3568","3569","3570"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tpkey\");\nconst sessionTpid = window.sessionStorage.getItem(\"sessionTpid\")\nlet history = useHistory()\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid,\n    totalpayment } = payment;\n\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/tp/totalComplete?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n              totalpayment: response.data.result.totalpayment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n\n const logout = () => {\n   localStorage.removeItem(\"tpkey\")\n   localStorage.removeItem(\"tpEmail\")\n   history.push(\"/taxprofessional/login\")\n }\n  \n\n  return (\n  <>\n  {sessionTpid ?\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n\n    <div className=\"row\">\n\n\n      <div className=\"col-md-3 content_header\">\n        <table className=\"table table-striped first main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">All Queries</th>\n              <th>{total}</th>\n            </tr>\n          </thead>\n        </table>\n        <table className=\"table table-striped second main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Inprogress; Queries</th>\n              <th>{inprogress_queries}</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Inprogress; Allocation</td>\n              <td>{inprogress_allocation}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Proposals</td>\n              <td>{inprogress_proposal}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Assignments</td>\n              <td>{inprogress_assignment}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <table className=\"table table-striped third main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Completed; Queries</th>\n              <th>{complete_query}</th>\n            </tr>\n          </thead>\n          <tbody className=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Completed; Assignments</td>\n              <td>{complete_query}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <table className=\"table table-striped forth main_table\">\n          <thead className=\"query_thead\">\n            <tr>\n              <th className=\"left_side\">Declined; Queries</th>\n              <th>{declined_queries}</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"table_body\">\n           \n            <tr>\n              <td className=\"left_side\">Client Declined; Proposals</td>\n              <td>{customer_declined_proposal}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Client Declined; Payment</td>\n              <td>{Customer_declined_payment}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"col-md-3 content_header\">\n\n        <table className=\"table table-striped fifth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">All Proposals</th>\n              <th>{allproposal}</th>\n\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped sixth main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Inprogress; Proposals</th>\n              <th>{InProgress}</th>\n            </tr>\n          </thead>\n          <tbody classNameName=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Inprogress; Preparation</td>\n              <td>{inprogress_preparation}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Inprogress; Acceptance</td>\n              <td>{inprogress_acceptance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped seventh main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Accepted; Proposals </th>\n              <th>{accepted_proposals}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped eight main_table\">\n          <thead className=\"proposal_thead\">\n            <tr>\n              <th className=\"left_side\">Client Declined; Proposals</th>\n              <th>{declined}</th>\n            </tr>\n          </thead>\n        </table>\n\n\n      </div>\n\n      <div className=\"col-md-3 content_header\">\n        <table className=\"table table-striped ninth main_table\">\n          <thead className=\"assignment_thead\">\n            <tr>\n              <th className=\"left_side\">All Assignments</th>\n              <th>{inprogress + complete + +(customer_declined_payment)}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Inprogress; Assignments</th>\n              <th>{inprogress}</th>\n            </tr>\n          </thead>\n\n          <tbody classNameName=\"table_body\">\n            <tr>\n              <td className=\"left_side\">Client Discussion</td>\n              <td>{client_discussion}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Draft Reports</td>\n              <td>{draft_report}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Final Discussion</td>\n              <td>{final_discussion}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Delivery of Final Reports</td>\n              <td>{final_report}</td>\n            </tr>\n            <tr>\n              <td className=\"left_side\">Awaiting Completion</td>\n              <td>{complete_inprocess}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Completed; Assignments</th>\n              <th>{complete}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped tenth main_table\">\n          <thead className=\"assignment_thead\">\n\n            <tr>\n              <th className=\"left_side\">Client Declined; Payment</th>\n              <th>{customer_declined_payment}</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n\n\n      <div className=\"col-md-3 content_header\">\n\n        <table className=\"table table-striped twelvth main_table\">\n          <thead className=\"payment_thead\">\n            <tr>\n              <th className=\"left_side\">All Payments</th>\n              <th>{totalpayment}</th>\n            </tr>\n          </thead>\n        </table>\n        <table className=\"table table-striped thirteen main_table\">\n          <thead className=\"payment_thead2\">\n            <tr>\n              <th className=\"left_side\">Paid</th>\n              <th>{paid}</th>\n            </tr>\n          </thead>\n        </table>\n\n        <table className=\"table table-striped thirteen main_table\">\n          <thead className=\"payment_thead2\">\n            <tr>\n              <th className=\"left_side\">Unpaid</th>\n              <th>{unpaid}</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n    </div>\n\n\n  </Layout> : \n  <>\n  {logout()}\n  </>}\n  </>\n  );\n}\n\nexport default Dashboard;","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js",["3571","3572","3573","3574","3575","3576","3577","3578"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\n// import \"../../assets/css/style.css\";\n// import \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/passChange`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //   \n    //     if (response.data.code === 1) {\n    //       alert.success(\"change password successfully!\");\n    //       reset();\n    //     } else if (response.data.code === 0) {\n    //       \n\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //       reset();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //    \n    //   });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js",["3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604"],"/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js",["3605","3606"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  console.log(\"userid\", userid)\n  return (\n    <>\n   <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js",["3607","3608","3609","3610","3611"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n\n\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"auto\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px 24px\",\n        borderRadius: \"50px\",\n        width: \"auto\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n                            Client Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["3612","3613"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {CardHeader, Row, Col} from 'reactstrap'\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [accept, setAccept] = useState();\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tpname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n        \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tp/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Query Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>    {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js",["3614","3615","3616","3617","3618","3619"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\nimport AllQuery from \"./AllQuery\";\n\n\n\nfunction QueriesTab(props) {\n  \n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const AllQuery = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setAllQuery(res.data.result.length);\n          }\n        });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setPendingForAcceptence(res.data.result.length);\n          }\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n     \n      axios\n     \n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\n        .then((res) => {\n    \n          if (res.data.code === 1) {\n         \n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const Declined = () => {\n   \n      axios\n        .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setDeclined(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined()\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Query ({allQuery})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Pending For Acceptence ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Queries ({incomplete})\n            </Tab>\n            {/* <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n            Pending for assignment({complete})\n            </Tab> */}\n            {/* <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab> */}\n          </TabList>\n\n\n          <TabPanel>\n            <AllQuery\n            />\n          </TabPanel>\n          <TabPanel>\n            <PendingForAcceptence\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <InCompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <DeclinedQuery\n            />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n ","/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js",["3620","3621","3622"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport {useHistory} from 'react-router-dom';\nimport Cookies from \"js-cookie\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  let history = useHistory()\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tp\");\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/login`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          Cookies.set(\"tpName\", response.data.display_name)\n          setLoading(false)\n          setShow(true)\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\n            \"icon\" : \"success\"\n          })\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data[\"user id\"])\n          logout()\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/taxprofessional/login\");\n    }, 36000000)\n  }\n  const handleChange = (e) => {\n   \n    setEmail(e.target.value);\n  };\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  return (\n    <>\n      <Header mtp=\"mtp\" noTpSign = \"noTpSign\"/>\n      <div class=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid}\n              loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div class=\"form\">\n              <div class=\"heading\">\n                <h2>TAX PROFESSIONAL LOGIN</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}  autocomplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                       \n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/taxprofessional/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n\n      </div>\n      <Footer />\n    </>\n  );\n}\nexport default Login;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js",["3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport OutlinedInputIcons from \"@mui/material/OutlinedInput\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nconst Invoice = () => {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n \n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                  \n                  setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n               textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"150px\"};\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"200px\"};\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                                color : \"blue\",\n                                            }}\n                                            onClick = {() => addTdsToggle(row)} \n                                        ></i>\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"create\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"id\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n</div>\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    tabIndex22 = {1}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Invoice;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js",["3638","3639","3640","3641","3642","3643"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Invoice from \"./Invoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tlkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <Invoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js",["3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = (props) => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"tlkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n        \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n           \n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p style={{fontSize : \"11px\"}}>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\", textAlign : \"right\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\", textAlign : \"right\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n         \n       \n          \n        {\n            dataField: \"\",\n            text: \"Payment Details\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n                \"\" :   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target = \"_blank\">Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n         <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n                  <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n            </Col>\n            <Col md=\"8\">\n              <h4>Payment Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n          <CardBody>\n          <div className=\"tableFixHead\">\n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsivepayment\"\n/> \n</div>\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js",["3670","3671","3672"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport RecordingEdit from './RecordingEdit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReactPlayer from \"react-player\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\nimport {Link} from 'react-router-dom';\nimport './recording.css';\n\n\n\n\n\nfunction Recording() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [editData, setEditData] = useState({\n        participant : '',\n        editMessage : '',\n        assignid : '',\n        id : ''\n    })\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\nconst videoIcon = {\n    display : \"flex\", \n    justifyContent : \"space-around\", \n    alignItems : \"center\"\n}\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n    const modalBox = {\n        display : \"flex\",\n        position : \"fixed\",\n        top: \"50%\",\n        left : \"50%\",\n        transform : \"translate(-50%, -50%)\",\n      justifyContent : \"center\",\n      alignItems : \"center\",\n        width : \"100%\", \n        height: \"auto\",\n        flexDirection : \"column\"\n    }\nconst canBtn = {\n   \n    display : \"flex\",\n    width : \"50vw\",\n    alignItems : \"flex-end\",\n    justifyContent : \"flex-end\",\n    padding: \"20px\",\n    cursor : \"pointer\", \n    color : \"red\"\n}\nconst editRecording = (participants, assign_id, message, id) => {\n   \n    setShowEditModal(!showEditModal)\n    setEditData({\n        participant : participants,\n        editMessage : message,\n        assignid : assign_id,\n        id : id\n    })\n}\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/teamleader/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n            formatter : function formatterName(cell, row) {\n                \n                 return(\n                     <p>\n                         {row.participants}\n                     </p>\n                 )\n            }\n        },\n        \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n           \n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                    <div>\n                    {row.record_by === JSON.parse(userid) && row.message === null ?\n                             <i\n                             className=\"fa fa-edit\"\n                             style={{\n                               fontSize: 18,\n                               cursor: \"pointer\",\n                               marginLeft: \"8px\",\n                             }}\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\n                           ></i> : \"\"}\n                    </div>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n<>\n                                <p style={videoIcon}>\n                               {record.length === 0 ? \"\" : \n                               <>\n                                 <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                              \n                               </>}\n                              \n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <>\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                <RecordingFilter\n                       setData={setFeedBackData}\n                    //    getData={getInCompleteAssingment}\n                       SearchQuery=\"SearchQuery\"\n                      setRecords={setRecords}\n                       records={records} \n                       userid = {userid}\n                       getRecording = {getRecording}\n                    /> \n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n\n            </Card>\n          \n           </div>\n            \n          \n          <RecordingEdit \n          isOpen = {showEditModal}\n          recordingHandler = {editRecording}\n          participants = {editData.participant}\n          message = {editData.editMessage}\n          assignid = {editData.assignid}\n          editId = {editData.id}\n          recList = {getRecording}/>\n                    {isOpen === true ?\n          \n                 \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoid}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div>\n  : \"\"}\n         </Layout>\n\n           </>\n\n    );\n}\n\nexport default Recording;","/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js",["3673","3674","3675","3676"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const tlEmail = window.localStorage.getItem(\"tlkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id} \n      tlEmail = {tlEmail}/>\n \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js",["3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js",["3692","3693","3694","3695","3696","3697","3698","3699"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../../common/common\";\nimport { useHistory } from \"react-router\";\n\nfunction Message(props) {\n  \n    const alert = useAlert();\nconst history = useHistory();\n    const userId = window.localStorage.getItem(\"tlkey\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const paymentHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n    };\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        \n        {\n            text: \"Date\",\n            dataField: \"setdate\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\" };\n            },\n        },\n          \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                return (\n                    <>\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\n                        {row.assign_no}\n                        {/* </Link> */}\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                return (\n                    <>\n                        <Link to={`/teamleader/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display : \"flex\",\n                                            justifyContent : \"space-between\",\n                                            wordBreak : \"break-word\"\n                                          \n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n                                    :\n                                    <div\n                                        style={{ cursor: \"pointer\",\n                                        display :\"flex\",\n                                        justifyContent : \"space-between\",\n                                        wordBreak : \"break-word\"}}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n                            }\n                        </Link>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n       \n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                \n            })\n            .catch((error) => {\n              \n            });\n    };\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n            <Card>\n            <CardHeader>\n          <Row>\n          <Col md=\"4\">\n          <button\n                class=\"btn btn-success\" \n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n            \n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <PaymentModal\n                        paymentHandler={paymentHandler}\n                        addPaymentModal={addPaymentModal}\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;","/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js",["3700","3701","3702","3703","3704","3705","3706","3707","3708","3709"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\nconst [showTl, setShowTl] = useState(false)\n\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n  useEffect(() => {\n    checkAssigned();\n  }, [item]);\n\n  const checkAssigned = () => {\n    if(query_No === undefined){\n\n    }\n    else{\n      axios\n    .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${query_No}`).then((res) => {\n           if(res.data.code === 0){\n                setShowTl(false)\n           }\n           else{\n             setShowTl(true)\n           }\n         })\n    }\n  };\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n\n    {\n      value.p_to != undefined ?\n    \n    formData.append(\"to\", value.p_to)\n  : formData.append(\"to\", \"customer\") }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                      {showTl === true ?\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Client</option>\n                        \n                          <>\n                          <option value=\"tp\">Tax Professional</option>\n                          <option value=\"both\">Both</option> \n                          </>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n: \n<div class=\"form-group\">\n\n<input \ntype=\"text\"\n  className={classNames(\"form-control\", {\n    \"is-invalid\": errors.p_to,\n  })}\n  disabled\n  hidden\n  value=\"customer\"\n  name=\"pcustomer_to\"\n  ref={register}\n  style={{ height: \"33px\" }}/>\n  \n\n</div> }\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js",["3710","3711","3712","3713","3714"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n;\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            {/* <thead>\n              <tr>\n                <th scope=\"col\">Titles</th>\n                <th scope=\"col\">Data</th>\n              </tr>\n            </thead> */}\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js",["3715","3716","3717","3718","3719","3720","3721","3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732","3733","3734","3735","3736","3737","3738","3739"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useState , useEffect, useRef} from 'react';\nimport classNames from \"classnames\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport './Admin.css';\nimport Select from 'react-select';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography, Button } from '@material-ui/core';\nimport Mandatory from '../../../components/Common/Mandatory';\nimport { useHistory } from 'react-router';\nconst Report = () => {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const selectInputRef = useRef();\n    const selectInputRef2 = useRef();\n    const selectInputRef3 = useRef();\n    const selectInputRef4 = useRef();\n    const selectInputRef5 = useRef();\n   \n    const [subCategory, setSubCategory] = useState([]);\n    const [subData, subCategeryData] = useState([])\n    const [custCate, setCustcate] = useState([])\n    const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store, setStore] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [mcatname, setmcatname] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcategory, setmcategory] = useState([]);\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate2, setCustcate2] = useState([]);\n  const [data, setData] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [taxId, setTaxId] = useState(\"\");\n  const [teamleader44, setTeamleader44] = useState(\"\") \n  const [taxprofessional44, setTaxprofessional44] = useState(\"\")\n  const [custData, setcustData] = useState();\n  const [cname, setcName] = useState()\n  var kk = []\n  var pp = []\n  var vv = []\n\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  const [dd, setDd] = useState([]);\nconst history = useHistory()\n    const { handleSubmit, register, errors, getValues , reset} = useForm();\n    let date = new Date()\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n const firstDay = new Date(date.getFullYear() + + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2));\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        if (res.data.code === 1) {\n       \n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  useEffect(() => {\n    getTeamLeader();\n    getData();\n\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n        pp.push(res.data.result)\n        setData((res.data.result));\n       \n      }\n    });\n  };\n\n  useEffect(() => {\n    getTaxProf();\n  }, [taxId]);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${taxId}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setData2(res.data.result);\n         \n        }\n      });\n  };\n\n\n  const getData = () => {\n    axios\n    .get(`${baseUrl}//admin/getAllList`)\n      .then((res) => {\n       \n        var a = res.data.result;\n        if (a) {\n          setcustData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\nconst mapAppointmentData = ((appiontmentData) => ({\n\"label\" : appiontmentData.name,\n\"value\" : appiontmentData.id\n}))\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n  const options3 = data.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.name\n    }))\n    const options4 = data2.map(d => (\n      {\n        \"value\": d.id,\n        \"label\": d.name\n      }))\n\n    const onSubmit = (value) => {\n      console.log(selectInputRef)\n      selectInputRef.current.select.clearValue();\n\n      selectInputRef3.current.select.clearValue();\n      selectInputRef4.current.select.clearValue();\n      selectInputRef5.current.select.clearValue();\n    \n      reset()\n\n     let basic_info = false\n     let proposal_info = false\n     let assignment_info = false\n     let payment_info = false\n     if(value.assessment || value.purpose_p || value.p_format || value.t_requested || value.spc_que || value.doa){\n      basic_info = true\n     }\n     if(value.dateProposal || value.proposedAmount || value.paymentTerms || value.proposal_status || value.acceptedAmount\n      || value.paymentDeclinedReason || value.date_acceptance || value.amountOutstanding\n      || value.amount_overdue || value.declinedDate){\n        proposal_info = true\n      }\n   if(value.assignDate || value.completionDate || value.assignStatus || value.completionQuery || value.assignTime){\n     assignment_info = true\n   }\n   if(value.receiptDate || value.amountReceived){\n     payment_info = true\n   }\n        let formData = new FormData();\n        formData.append(\"report_name\", value.report_name)\n        formData.append(\"basic_info\", Number(basic_info));\n        formData.append(\"proposal_info\", Number(proposal_info));\n        formData.append(\"assignment_info\", Number(assignment_info));\n        formData.append(\"payment_info\", Number(payment_info))\n        formData.append(\"from\", value.p_from);\n        formData.append(\"to\", value.p_to);\n        formData.append(\"customer_name\", cname)\n        formData.append(\"teamleader\", teamleader44);\n        formData.append(\"taxprofessional\", taxprofessional44);\n        formData.append(\"category\", mcatname);\n        formData.append(\"subCategory\", dd);\n        formData.append(\"q_no\", Number(value.qno));\n        formData.append(\"date_query\", Number(value.dataQuery));\n        formData.append(\"cust_id\", Number(value.cust_id));\n        formData.append(\"basic_category\", Number(value.basicCategory));\n        formData.append(\"basic_sub_category\", Number(value.basic_sub_category));\n        formData.append(\"assessment\", Number(value.assessment));\n        formData.append(\"purpose\", Number(value.purpose_p));\n        formData.append(\"p_format\", Number(value.p_format));\n        formData.append(\"t_requested\", Number(value.t_requested));\n        formData.append(\"spc_que\", Number(value.spc_que));\n        formData.append(\"date_allocation\", Number(value.doa));\n        // formData.append(\"teamleader\", Number(value.tl_name));\n        // formData.append(\"taxprofessional\", Number(value.tp_name));\n        formData.append(\"date_proposal\", Number(value.dateProposal));\n        formData.append(\"proposed_amount\", Number(value.proposedAmount));\n        formData.append(\"payment_terms\", Number(value.paymentTerms));\n        formData.append(\"proposal_status\", Number(value.proposal_status));\n        formData.append(\"accepted_amount\", Number(value.acceptedAmount));\n        formData.append(\"payment_declined_reasen\", Number(value.paymentDeclinedReason));\n        formData.append(\"date_of_acceptance\", Number(value.date_acceptance));\n        // formData.append(\"amount_received\", value.amountReceived);\n        formData.append(\"amount_outstanding\", Number(value.amountOutstanding));\n        formData.append(\"amount_overdue\", Number(value.amount_overdue));\n        formData.append(\"payment_declined\", Number(value.declinedDate));\n        // formData.append(\"assignment_number\", Number(value.assignNumber));\n        formData.append(\"assign_date\", Number(value.assignDate));\n        formData.append(\"proposed_completion_date\", Number(value.completionDate));\n        formData.append(\"assignment_status\", Number(value.assignStatus));\n        formData.append(\"date_complation\", Number(value.completionQuery));\n        formData.append(\"assign_time\", Number(value.assignTime));\n        formData.append(\"payment_recived_date\", Number(value.receiptDate));\n        formData.append(\"basic_amount\", Number(value.basic_amount));\n        formData.append(\"pocket_expensive\", Number(value.pocket_expensive));\n        formData.append(\"cget_tax\", Number(value.cget_tax));\n        formData.append(\"igst_tax\", Number(value.igst_tax));\n        formData.append(\"sgst_tax\", Number(value.sgst_tax));\n        formData.append(\"total_gst\", Number(value.total_gst));\n        formData.append(\"total_invoice\", Number(value.total_invoice));\n        formData.append(\"tds\", Number(value.tds));\n        formData.append(\"net_amount\", Number(value.net_amount));\n        formData.append(\"amount_received\", Number(value.amountReceived));\n        formData.append(\"uid\", JSON.parse(userid))\n        formData.append(\"t\", Math.floor(Math.random() * 110000))\n   axios({\n     method : \"POST\",\n     url : `${baseUrl}/report/generateReport?t=${JSON.stringify(Math.floor(Math.random() * 110000))}`,\n     data : formData\n\n   })\n   .then(function (response) {\n   if(response.data.code === 1){\n    window.open(`${baseUrl3}/${response.data.result}`)\n   }\n   })\n   .catch((error) => {\n  \n   });\n    }\n\n    // Category \n    const category2 = (v) => {\nlet cc = []\n      setCategoryData(v)\n      setNn((oldData) => {\n        return [...oldData, mcategory]\n      })\n      setError(\"\")\n      setCustcate(v)\n      v.map((val) => {\n        vv.push(val.value)\n        cc.push(val.value)\n        setmcategory(val.value);\n       \n        setStore(val.value)\n      })\n  \n  setmcatname(cc)\n      if (vv.length > 0) {\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\n       \n        }\n        else if (vv.includes(\"1\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value < 9) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n        else if (vv.includes(\"2\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value > 8) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n      }\n  \n      else if (vv.length === 0) {\n        subCategeryData(\"\")\n      }\n  \n    }\n\n    // Sub Category Function \n    const subCategory22 = (e) => {\n  let kk = []\n      subCategeryData(e)\n      setCustcate2(e)\n      setError2(\"\")\n     \n      e.map((i) => {\n  \n      kk.push(i.value)\n      })\n     setDd(kk)\n      \n    }\n    const custName = (a) => {\n      let pk = []\n      a.map((r) => {\n        pk.push(r.value)\n      })\n      setcName(pk)\n    }\n  const teamLeader = (a) => {\n let tk = []\n    a.map((i) => {\n    \n      setTaxId(i.value) \n     tk.push(i.value)\n    })\n    setTeamleader44(tk)\n  \n  }\n  const taxProfessional = (e) => {\n    let kk2 = []\n    e.map((i) => {\n      \n      kk2.push(i.value)\n    })\n    setTaxprofessional44(kk2)\n  }\n    return (\n        <>\n         <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n          <div className=\"adminForm\">\n         <div className=\"row\">\n           <div className=\"col-md-6\">\n           <Typography variant=\"h4\">Admin Report</Typography>\n         \n             </div>\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\n             <button  className=\"btn btn-lg btn btn-success\" onClick = {() => history.goBack()}>Go Back </button>\n               </div>\n           </div>\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">From</label>\n          <input\n            type=\"date\"\n            name=\"p_from\"\n            ref={register}\n            placeholder=\"Enter Mobile Number\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_mobile,\n            })}\n            defaultValue={item}\n          />\n        </div>\n      </div>\n\n      <div className=\"col-md-3\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">To</label>\n          <input\n            type=\"date\"\n            name=\"p_to\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_type,\n            })}\n            defaultValue={item}\n            max={item}\n            placeholder=\"Enter type\"\n            ref={register({ required: true })}\n          />\n        </div>\n       \n      </div>\n      <div className=\"col-md-3\">\n      <div className=\"mb-3\">\n          <label className=\"form-label\">Client Id</label>\n         <Select isMulti options={custData} ref={selectInputRef5} onChange={(e) => custName(e)}>\n\n         </Select>\n        </div>\n          </div>\n          <div className=\"col-md-3\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Report Name</label>\n          <input\n            type=\"text\"\n            name=\"report_name\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.report_name,\n            })}\n           defaultValue=\"Report\"\n            placeholder=\"Enter report name\"\n            ref={register({ required: true })}\n          />\n        </div>\n       \n      </div>\n   </div> \n   <div className=\"row\">\n   <div className=\"col-md-3\">\n\n<div className=\"mb-3\">\n<label className=\"form-label\">Teamleader</label>\n<Select  isMulti={true}\noptions={options3}\nref={selectInputRef}\nonChange= {(e) =>teamLeader(e)}/>\n</div>\n</div>\n\n\n       <div className=\"col-md-3\">\n           <label className=\"form-label\">Category</label>\n           <Select isMulti options={options}\n                        className={error ? \"customError\" : \"\"}\n                        ref={selectInputRef3}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category2}>\n                      </Select>\n        </div>\n        <div className=\"col-md-3\">\n            <label className=\"form-label\">Sub Category</label>\n            <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        ref={selectInputRef4}\n                        onChange={subCategory22}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n            </div>\n   </div>\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n           <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Basic Query Details</legend>\n            <div className=\"basicFeild\">\n            <span>\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\n               <label htmlFor=\"sno\">S.No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\n               <label htmlFor=\"qno\">Query No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\n               <label htmlFor=\"dataQuery\">Query Date </label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\n               <label htmlFor=\"cust_id\">Client Id</label>\n            </span>\n            <span>\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\n               <label htmlFor=\"basicCategory\">Category</label>\n             </span>\n             <span>\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\n               </span>\n               <span> \n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\n\n</span>\n<span>\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\n</span> \n               <span>\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\n<label htmlFor=\"assessment\">Assessment Year(s)</label>\n</span>\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"purpose_p\" id=\"purpose_p\"></input>\n<label htmlFor=\"purpose_p\">Purpose for which Opinion is sought</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"p_format\" id=\"p_format\"></input>\n<label htmlFor=\"p_format\">Format in which Opinion is required</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\n<label htmlFor=\"t_requested\">Timeline Requested</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\n<label htmlFor=\"spc_que\">Specific questions</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\n</span>\n</div>\n</fieldset>\n</div>\n</div>\n\n\n   {/* Proposal */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Proposal</legend>\n            <div className=\"basicFeild\">\n<span>\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\n</span>\n<span>\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\n<label htmlFor=\"proposal_status\">Proposal Status</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\n</span>\n{/* <span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\n</span> */}\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\n<label htmlFor=\"declinedDate\">Payment decline date</label>\n</span>             \n            </div>      \n           </fieldset>\n           </div>\n   </div>\n\n   {/* Assignment */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Assessnment</legend>\n            <div className=\"basicFeild\">\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\n<label htmlFor=\"assignDate\">Assignment Date</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\n<label htmlFor=\"assignStatus\">Assignment Status</label>\n</span>\n\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\n</span>\n            </div>    \n           </fieldset>\n           </div>\n   </div>\n\n\n   {/* Payment Receipt */}\n\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Payment Receipt</legend>  \n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\n</span>   \n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Amount Received</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"basic_amount\" id=\"basic_amount\"></input>\n<label htmlFor=\"basic_amount\">Basic Amount</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"pocket_expensive\" id=\"pocket_expensive\"></input>\n<label htmlFor=\"pocket_expensive\">Out of pocket </label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"cget_tax\" id=\"cget_tax\"></input>\n<label htmlFor=\"cget_tax\">Cgst Tax</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"igst_tax\" id=\"igst_tax\"></input>\n<label htmlFor=\"igst_tax\">Igst Tax </label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"sgst_tax\" id=\"sgst_tax\"></input>\n<label htmlFor=\"sgst_tax\">Sgst Tax</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"total_gst\" id=\"total_gst\"></input>\n<label htmlFor=\"total_gst\">Total Gst </label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"total_inovice\" id=\"total_invoice\"></input>\n<label htmlFor=\"total_invoice\">Invoice Amount</label>\n</span>\n          \n<span>\n<input type=\"checkbox\" ref={register} name=\"tds\" id=\"tds\"></input>\n<label htmlFor=\"tds\">TDS Deducted</label>\n</span> \n<span>\n<input type=\"checkbox\" ref={register} name=\"net_amount\" id=\"net_amount\"></input>\n<label htmlFor=\"net_amount\">Net Amount </label>\n</span> </div>\n           </fieldset>\n           </div>\n   </div>\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\n   <Mandatory />\n  </form>\n  </div>\n            </Layout>\n              </>\n       );\n   }\nexport default Report;","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js",["3740","3741","3742","3743","3744"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, []);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/teamleader/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js",["3745","3746","3747","3748"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/teamleader/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n\n  }\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Get OTP\n                </button>\n                <Link to=\"/teamleader/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </Link>\n\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js",["3749","3750","3751","3752","3753","3754"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction ViewReport() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>ViewReport</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Report</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js",["3755","3756","3757","3758","3759","3760","3761","3762","3763","3764","3765","3766"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AssignmentForm(props) {\n\n\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n  const history = useHistory();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [assignNo, setAssignNo] = useState(null);\n  const [data, setData] = useState([]);\n  const [store, setStore] = useState(null);\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setAssignNo(res.data.result[0].assign_no);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [assignNo]);\n\n  const getDetails = (value) => {\n  \n    let formData = new FormData();\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  const onSubmit = (value) => {\n   \n    let formData = new FormData();\n    formData.append(\"assign_id\", id);\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n    formData.append(\"notes\", value.p_notes);\n    formData.append(\"receive_sent_date\", value.p_date);\n    formData.append(\"notes_type\", value.p_type);\n    formData.append(\"type_info\", value.p_info);\n    formData.append(\"upload\", value.p_upload[0]);\n    formData.append(\"send_received\", item);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/addAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getDetails();\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>success</p>\n      </>\n    );\n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Client Discussion Information</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          {props.location.clients == \"completed\" ? (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                        disabled\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                        disabled\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                        disabled\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  {store == \"email\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {store == \"phone\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {store == \"other\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Notes info</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n        </CardHeader>\n\n        <CardBody>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <h4>List</h4>\n              </Col>\n            </Row>\n          </CardHeader>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Documents</th>\n                  <th scope=\"row\">Titles</th>\n                  <th scope=\"row\">Notes type</th>\n                  <th scope=\"row\">Notes Info</th>\n                  <th scope=\"row\">Date</th>\n                  <th scope=\"row\">send/Received</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                      <td>{p.notes}</td>\n                      <td>{p.notes_type}</td>\n                      <td>{p.type_info}</td>\n                      <td>{p.receive_sent_date}</td>\n                      <td>{p.send_received}</td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentForm;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js",["3767","3768","3769","3770","3771"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n \n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n      \n        if (response.data.code === 1  && des === false) {\n          setLoading(false)\n\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js",["3772","3773","3774","3775","3776"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n  \n\n\n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1 && des === false) {\n        des = true\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js",["3777","3778","3779","3780","3781","3782","3783","3784","3785","3786","3787","3788","3789"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\nimport {Typography} from \"@material-ui/core\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n\n\n  const [nestedModal, setNestedModal] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n\n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discard it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    \n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n          Alerts.SuccessNormal(\"Discarded Successfully\")\n          ViewReport()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n            <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                    \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                     <p> {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                 <td>\n                  {p.stages_type === \"2\" ?\n                  <>\n                   {p.status === \"3\" ? \n                   <p style={{ color: \"red\" }}> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p style={{ color: \"red\" }}>Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                      onClick = {() => toggleNested(p)}\n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                       onClick={() => toggleDiscard(p)}\n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>   \n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js",["3790","3791","3792","3793","3794","3795","3796","3797","3798","3799","3800","3801","3802","3803","3804","3805","3806","3807","3808","3809"],"/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js",["3810","3811","3812","3813","3814","3815"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  // mazarapi/v1/tl/getMessage?id=128&q_no=Q-24-72\n\n  const getHistory = () => {\n   if(report != undefined && report.length > 0){\n    axios.get(`${baseUrl}/tp/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n   }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/views/ModalManual/RegistrationInfo.js",["3816","3817","3818"],"/home/pooja/MazarsRepo/src/views/ModalManual/RegError.js",["3819","3820"],"/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js",["3821","3822","3823","3824","3825","3826","3827","3828","3829","3830","3831","3832","3833","3834","3835"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from 'moment';\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    // End UseSatate \n    // Global Veriable\n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}`).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"100px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"80px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        {row.paid_status === \"2\" ?  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n<div title=\"Payment History\"\n\n    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n>\n<Link\n          \n            to={{\n                pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n                index : 0,\n                routes: \"paymentstatus\",\n            }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n</div>\n\n<div title=\"View Discussion Message\">\n    <i\n        class=\"fa fa-comments-o\"\n        style={{\n            fontSize: 16,\n            cursor: \"pointer\",\n            color: \"orange\"\n        }}\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\n    ></i>\n</div>\n\n</div> : \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                        <div title=\"Payment History\"\n\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                        >\n                          <Link\n          \n          to={{\n              pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n              index : 0,\n              routes: \"paymentstatus\",\n          }}\n          >\n                          <i\n                              class=\"fa fa-credit-card\"\n                              style={{ color: \"green\", fontSize: \"16px\" }}\n                              // onClick={() => toggle(row.assign_id)}\n                          ></i>\n                          </Link>\n                        </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 0,\n    routes: \"paymentstatus\",\n                                                    obj: {\n                                                        message_type: \"5\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/paymentstatus`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        rowStyle={rowStyle2}\n                        rowIndex\n                        classes=\"table-responsivepayment\"\n                    />\n\n</div>\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js",["3836","3837","3838","3839","3840","3841","3842","3843","3844","3845","3846","3847","3848","3849","3850"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n\n\n   \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=1`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                 \n                 <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"100px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },     {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"100px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        {row.paid_status === \"2\" ? \n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                         <div title=\"Payment History\"\n \n                             style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                         >  \n                         <Link\n          \n          to={{\n              pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n              index : 1,\n              routes: \"paymentstatus\",\n          }}\n          >\n                          <i\n                              class=\"fa fa-credit-card\"\n                              style={{ color: \"green\", fontSize: \"16px\" }}\n                              // onClick={() => toggle(row.assign_id)}\n                          ></i>\n                          </Link>\n                         </div>\n                        \n \n \n                         <div title=\"View Discussion Message\">\n                             <i\n                                 class=\"fa fa-comments-o\"\n                                 style={{\n                                     fontSize: 16,\n                                     cursor: \"pointer\",\n                                     color: \"orange\"\n                                 }}\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\n                             ></i>\n                         </div>\n \n                     </div> : \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                        <div title=\"Payment History\"\n\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                        >\n<Link\n          \n          to={{\n              pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n              index : 1,\n              routes: \"paymentstatus\",\n          }}\n          >\n                          <i\n                              class=\"fa fa-credit-card\"\n                              style={{ color: \"green\", fontSize: \"16px\" }}\n                              // onClick={() => toggle(row.assign_id)}\n                          ></i>\n                          </Link>\n                        </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 1,\n    routes: \"paymentstatus\",\n                                                    obj: {\n                                                        message_type: \"5\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/paymentstatus`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                        {/* <div>\n                            {\n                                row.paid_status == \"0\" ?\n                                    <div title=\"Payment decline\"\n                                        onClick={() => rejectHandler(row)}\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                    >\n                                        <PaymentIcon />\n                                    </div>\n                                    : null\n                            }\n                        </div> */}\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div>}\n                    </>\n                );\n            },\n        },\n        \n    ];\n\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                        rowStyle={rowStyle2}\n                        rowIndex\n                    />\n</div>\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js",["3851","3852","3853","3854","3855","3856","3857","3858","3859","3860","3861"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n   \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=2`).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n     \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"120px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"100px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                   \n\n                   <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 2,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        {row.paid_status === \"2\" ?  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n<div title=\"Payment History\"\n\n    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n>\n<Link\n          \n            to={{\n                pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n                index : 2,\n                routes: \"paymentstatus\",\n            }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n</div>\n\n<div title=\"View Discussion Message\">\n    <i\n        class=\"fa fa-comments-o\"\n        style={{\n            fontSize: 16,\n            cursor: \"pointer\",\n            color: \"orange\"\n        }}\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\n    ></i>\n</div>\n\n</div> : \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                        <div title=\"Payment History\"\n\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                        >\n<Link\n          \n          to={{\n              pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n              index : 2,\n              routes: \"paymentstatus\",\n          }}\n          >\n                          <i\n                              class=\"fa fa-credit-card\"\n                              style={{ color: \"green\", fontSize: \"16px\" }}\n                              // onClick={() => toggle(row.assign_id)}\n                          ></i>\n                          </Link>\n                        </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 2,\n    routes: \"paymentstatus\",\n                                                    obj: {\n                                                        message_type: \"5\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/paymentstatus`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                      \n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsivepayment\"\n                    />\n</div>\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js",["3862","3863"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setLoad, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n                \n                if (response.data.code === 1) {\n                    setLoad(true)\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx",["3864","3865","3866","3867","3868","3869","3870","3871","3872","3873","3874","3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887","3888"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\"\nimport Swal from \"sweetalert2\";\nimport $ from 'jquery';\nimport CommonServices from \"../../../common/common\"\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"8\": [\n    \"span 3/span 4/13/3\",\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 3/span 4/13/27\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"9\": [\n    \"span 3/span 4/13/1\",\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 3/span 4/13/29\",\n    \"span 9/span 16/10/21\",\n  ],\n  \n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n   \n    // window.onbeforeunload = (event) => {\n    //   this.stopRecording()\n    //   const e = event || window.event;\n    //   // Cancel the event\n    //   e.preventDefault();\n    //   if (e) {\n       \n    //     e.returnValue = ''; // Legacy method for cross browser support\n    //   }\n    //   return ''; // Legacy method for cross browser support\n    //};\n    this.tlName = Cookies.get(\"tpName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n     \n      disabledVedio : false,\n      getAdId :'', \n      vedTrack : null,\n      shareValue : false,\n      vedOffer : ''\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"tpkey\");\n  tlEmail2 = window.localStorage.getItem(\"tpEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n  vendor = 1\n region = 14;\n bucket  = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\nremoteShare2 = false\nprevFile;\n\n  componentWillMount() {\n//  let a = localStorage.getItem(\"chNametp\");\n//  let bb = localStorage.getItem(\"tpid\")\n//  let b = JSON.parse(bb)\n//  console.log(\"bbb\", b)\n//  let c = localStorage.getItem(\"resourceIdtp\")\n//  let d = localStorage.getItem(\"sidtp\");\n//  this.prevFile = localStorage.getItem(\"prevFiletp\")\n//  console.log(\"ddd\", b, c)\n//  if(a && b && c && d){\n//   var data = JSON.stringify({\n//     \"cname\":a,\n//     \"uid\" : JSON.stringify(b),\n//     \"clientRequest\":{ }});\n//   axios({\n//     method: \"POST\",\n//     headers: {\n//       \"content-type\": \"application/json;charset=utf-8\",\n//       \"authorization\": \"Basic \"+this.encodedString,\n//       \"cache-control\": \"no-cache\",\n//     },\n//     url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${c}/sid/${d}/mode/mix/stop`,\n//     data: data,\n//   })\n//   .then(json => \n//     this.setState({vedOffer : json}),\n//   localStorage.removeItem(\"resourceIdtp\"),\n//   localStorage.removeItem(\"sidtp\"),\n//   localStorage.removeItem(\"chNametp\"),\n//   localStorage.removeItem(\"tpid\")\n    \n//     ) \n//     .catch((error) => {\n      \n//     });\n//  }\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    let show;\n  AgoraRTC.getDevices(function(dev){\n    var cameras = dev.filter((e) => {\n      return e.kind === \"videoinput\"\n    })\n   \n    if(cameras.length > 0){\n      show = true\n    }\n    else{\n      show = false\n    }\n  })\n    this.client.init($.appId, () => {\n     \n   \n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n       \n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.tlName;\n   axios.get(`${data_post_api}`).\n   then((res) => {\n    \n   })\n\n   this.setState({getAdId : uid})\n   this.subscribeStreamEvents();\n   \n   if(show === true){\n     this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile)\n     this.localStream.init(\n         \n       () => {\n         if ($.attendeeMode !== \"audience\") {\n           this.addStream(this.localStream, true);\n           \n   \n           this.client.publish(this.localStream, (err) => {\n            \n           });\n         }\n         this.setState({ readyState: true });\n       },\n       (err) => {\n       \n         this.setState({ readyState: true });\n       }\n     );\n   }\n   else if(show === false){\n   this.localStream = this.streamInit22(uid, $.attendeeMode, $.videoProfile);\n   this.localStream.init(\n         \n     () => {\n       if ($.attendeeMode !== \"audience\") {\n         this.addStream(this.localStream, true);\n         \n   \n         this.client.publish(this.localStream, (err) => {\n          \n         });\n       }\n       this.setState({ readyState: true });\n     },\n     (err) => {\n     \n       this.setState({ readyState: true });\n     }\n   );\n   }\n         \n       });\n     });\n   }\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n   \n    // this.accuire()\n  }\n\n  getSchedulerData =() =>{\n       axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                       \n              if (res.data.code === 1) {\n                if(res.data.result.items){\n                 this.setState({\n                   item:res.data.result.items[0],\n                  showButton : res.data.result.items[0].owner_id\n                 })  \n                }\n                       \n               }\n           });\n }\n\n\n componentDidUpdate() {\n  // rerendering\n  \n  let canvas = document.querySelector(\"#ag-canvas\");\n  // pip mode (can only use when less than 4 people in channel)\n  if (this.state.displayMode === \"pip\") {\n    let no = this.state.streamList.length;\n   \n    if (no > 4) {\n      this.setState({ displayMode: \"tile\" });\n      return;\n    }\n    this.state.streamList.map((item, index) => {\n      let txtColor = \"myPartName\";\n      let id = item.getId();\n      let dom = document.querySelector(\"#ag-item-\" + id);\n     \n      let dd;\n      if (!dom) {\n        dom = document.createElement(\"section\");\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\n        dom.setAttribute(\"class\", \"ag-item\");\n        canvas.appendChild(dom);\n        var box22 = document.getElementById(\"ag-item-\" + id)\n        dd = document.createElement(\"input\")\n        dd.setAttribute(\"id\", \"name\" + id)\n        dd.setAttribute(\"class\", txtColor)\n      box22.appendChild(dd)\n      item.play(\"ag-item-\" + id);\n      }\n     \n       \n     \n       \n      if (index === no - 1) {\n    \n        //  document.getElementById(\"custName\").value = \"Lucky\"\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n         \n        } else {\n          \n          let f = false;\n        \n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n          dom.addEventListener('click', function (e){\n            if(f === false){\n             \n              \n              f = true\n              dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n              let list;\n             \n              list = Array.from(\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n              );\n              list.map((item) => {\n                \n                  item.style.display = \"none\"\n                }) \n            }\n            else{\n              f = false\n           \n              dom.setAttribute(\n                \"style\",\n                `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                        z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n              );\n              let list;\n             \n              list = Array.from(\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n              );\n              list.map((item) => {\n                \n                  item.style.display = \"block\"\n                })\n            }\n          })\n        }\nif(item.player === undefined){\n\n}\n     else{\n      item.player.resize && item.player.resize();\n     }\n    });\n  }\n  // tile mode\n  else if (this.state.displayMode === \"tile\") {\n    let f = false;\n    let no = this.state.streamList.length;\n    let txtColor = \"myPartName\";\n    this.state.streamList.map((item, index) => {\n      let id = item.getId();\n      let dom = document.querySelector(\"#ag-item-\" + id);\n      \n      let dd;\n      if (!dom) {\n        dom = document.createElement(\"section\");\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\n        dom.setAttribute(\"class\", \"ag-item\");\n        canvas.appendChild(dom);\n        var box22 = document.getElementById(\"ag-item-\" + id)\n        dd = document.createElement(\"input\")\n        dd.setAttribute(\"id\", \"name\" + id)\n        dd.setAttribute(\"class\", txtColor)\n      box22.appendChild(dd)\n      item.play(\"ag-item-\" + id);\n      }\n      dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n      dom.addEventListener('click', function (e){\n          \n        if(f === false){\n          f = true\n          dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n          let list;\n             \n          list = Array.from(\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n          );\n          list.map((item) => {\n            \n              item.style.display = \"none\"\n            }) \n        }\n        else{\n          f = false\n          dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n          let list;\n             \n          list = Array.from(\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n          );\n          list.map((item) => {\n            \n              item.style.display = \"block\"\n            }) \n        }\n      })\n      if(item.player === undefined){\n\n      }\n             else{\n              item.player.resize && item.player.resize();\n             }\n    });\n  }\n  // screen share mode (tbd)\n  else if (this.state.displayMode === \"share\") {\n  \n  }\n}\n\n\n  componentWillUnmount() {\n   \n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n  if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          \n        },\n        () => {\n                  }\n      );\n  }\n\n  streamInit22 = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n       streamID: uid,\n       audio: true,\n       video: false,\n       screen: false,\n     };\n \n     switch (attendeeMode) {\n       case \"audio-only\":\n         defaultConfig.video = false;\n         break;\n       case \"audience\":\n         defaultConfig.video = false;\n         defaultConfig.audio = false;\n         break;\n       default:\n       case \"video\":\n         break;\n     }\n \n     let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n     stream.setVideoProfile(videoProfile);\n     return stream;\n   };\n  \n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n   let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n \n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      \n      rt.client.subscribe(stream, function (err) {\n        \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n     console.log(\"two\")\n      rt.removeStream(evt.uid);\n      \n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n    \n        let stream = evt.stream;\n      \n         rt.addStream(stream)\n \n    \n       }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     console.log(\"evt id\", evt.uid)\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n    // console.log(\"showButton\", this.state.showButton)\n  \n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${this.state.showButton}&chname=${this.channelName}`)\n      .then((res) => {\n        console.log(\"evt id\", uid)\n        if(res.data.result.rtc_id == uid){\n          console.log(\"evt id\", res.data.result.rtc_id)\n          Swal.fire({\n            title: \"success\",\n            html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\n            icon : \"success\"\n          })\n            setTimeout((e) => {\n              window.location.hash = \"/taxprofessional/schedule\";\n            }, 500)\n           \n           }\n          \n      })\n     \n      if(this.remoteShare2 === true){\n        this.remoteShare2 = false\n      } \n      if(uid === this.state.getAdId){\n        this.del()\n      }\n  };\n\n  addStream = (stream, push = false) => {\n   \n    this.hostId = stream.getId()\n \n  \n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n    axios.get(`${apiData}`)\n    .then((res) =>{\n     \n\n \n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\n        praticipantVar.setAttribute(\"disabled\", true)\n      }\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n         praticipantVar.setAttribute(\"value\", \"You\");\n         praticipantVar.setAttribute(\"disabled\", true)\n       }\n       \n       else if(res.data.length == 0){\n        this.remoteShare2 = true\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\n        praticipantVar.setAttribute(\"disabled\", true)\n        }\n     })};\n\n  handleCamera = (e) => {\n    if(this.state.readyState === false){\n\n    }\n    else{\n    this.setState({disabledVedio : !this.state.disabledVedio})\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n  }\n  handleMic = (e) => {\n    if(this.state.readyState === false){\n\n    }\n    else{\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isAudioOn()\n        ? this.localStream.muteAudio()\n        : this.localStream.unmuteAudio();\n    }\n   \n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };  \n  \n  handleExit = async() => {\n  if(this.state.readyState === true){\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n  }\n  else {\n    return false;\n  }\n   }\n\n   sharingScreen = (e) => {\n    if(this.remoteShare2 === true && this.state.stateSharing === false){\n      Swal.fire({\n        title : \"error\",\n        html : \"Only one screen can be share at a time\",\n        icon : \"error\"\n      })\n    }\n    else if(this.state.stateSharing) {\n       this.shareClient && this.shareClient.unpublish(this.shareStream);\n       this.shareStream && this.shareStream.close();\n       this.setState({stateSharing : false})\n     }\n     else {\n       \n        this.setState({stateSharing : true})\n        let $ = this.props;\n        // init AgoraRTC local client\n        this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n  \n        this.shareClient.init($.appId, () => {\n        \n  \n         //  this.subscribeStreamEvents();\n          this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n            this.state.uid = uid;\n           \n            // create local stream\n            // It is not recommended to setState in function addStream\n            \n            this.shareStream = this.streamInitSharing(\n              uid,\n              $.attendeeMode,\n              $.videoProfile\n            );\n            this.shareStream.init(\n              () => {\n                if ($.attendeeMode !== \"audience\") {\n                  this.addStream(this.shareStream, true);\n                  this.shareClient.publish(this.shareStream, (err) => {\n                    \n                  });\n                }\n                this.setState({ readyState: true });\n              },\n              (err) => {\n               \n                this.setState({ readyState: true });\n              }\n            );\n          });\n        });\n      }\n     };\n\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      \n      control : true\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                \n            });\n  }\n\n\nencodedString = \"N2VmMGY4ODg4NjI4NDFhYWIwNWY1NzFjNDM5MzE4OTc6NjU0ZDViYWM5ZDU2NGY4Y2JhOTJmNzJkOGM2N2FjYzI=\";\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n// if(this.state.showButton === JSON.parse(this.teamKey)){\n//   localStorage.setItem(\"sidtp\", sid)\n// }\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n       \n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n        // if(this.state.showButton === JSON.parse(this.teamKey)){\n        //   localStorage.setItem(\"prevFiletp\", response.serverResponse.fileList)\n        // }\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n\n//start recording\nasync startRecording(key){\n   \n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n   \n    // if(this.state.showButton === JSON.parse(this.teamKey)){\n    //   localStorage.setItem(\"chNametp\",this.channelName )\n    //   localStorage.setItem(\"tpid\", this.uid)\n    //   localStorage.setItem(\"resourceIdtp\", resourceId)\n    //  }\n   \n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n      \n      });\n  };\n\n\n  //recording  acquire\n  accuire = () =>{\n   \n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n     \n      .catch((error) => {\n       \n      });\n  };\n// Start recording button\n  recStart = () => {\n   \n    this.localStream.enableVideo();\n    this.accuire();\n    this.setState({ showRecBtn: false  });\n    \n  }\n\n  //toggelStop\n  toggleModal = (key) =>{\n  \n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n //stop recording \n stopRecording = () => {\n  if(this.state.showRecBtn === true){\n   \n    console.log(\"done3\")\nthis.del()\n\n  }\n  \n  else if(this.state.showButton == JSON.parse(this.teamKey)){\n console.log(\"done33\")\n    if(resourceId === undefined){\n      var resourceId = localStorage.getItem(\"resourceId\");\n    var sid = localStorage.getItem(\"sid\");\n    }\n\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n    this.setState({vedOffer : json}),\n   \n   \n     this.setState({showRecBtn : true}),\n    \nthis.del(),\n    ) \n    .catch((error) => {\n      \n    });\n}\nelse{\n  console.log(\"done333\")\n  window.location.hash = \"/taxprofessional/schedule\";\n}\n  \n};\ndel = (e) => {\n \n    \n      // localStorage.removeItem(\"resourceId\");\n      // localStorage.removeItem(\"sid\");\n      // localStorage.removeItem(\"resourceIdtp\");\n      // localStorage.removeItem(\"sidtp\");\n      // localStorage.removeItem(\"chNametp\");\n      // localStorage.removeItem(\"tpid\");\n      //   localStorage.removeItem(\"prevFiletp\");\n    var serverResponse = this.state.data.serverResponse.fileList\n    var completeRecording;\n    if(this.tempArray === undefined || this.tempArray.length === 0){\n        completeRecording =  serverResponse;\n    }\n    else if(this.tempArray != undefined || this.tempArray.length > 0){\n   if(this.state.showRecBtn === true){\n        completeRecording = this.tempArray \n   }\n   else{\n        completeRecording = this.tempArray + \",\" + serverResponse;\n   }\n  }\n    else{\n        completeRecording = serverResponse;\n    }\n    if(this.prevFile){\n      completeRecording = completeRecording + \",\" + this.prevFile\n    }\n     let formData = new FormData()\n     formData.append(\"fileList\", completeRecording)\n    formData.append(\"schedule_id\", this.props.id);\n    formData.append(\"uid\", JSON.parse(this.teamKey));\n    formData.append(\"assign_id\", this.state.item.assign_no);\n    formData.append(\"participants\", this.state.item.username);\n   \n    Swal.fire({\n      title: \"End this vedio call for everyone?\",\n      // text: \"End this vedio call for everyone\",\n       type: \"warning\",\n       showCloseButton:true,\n       showCancelButton : true,\n       confirmButtonColor: \"#3085d6\",\n       cancelButtonColor: \"#d33\",\n       confirmButtonText: \"End the call\",\n       cancelButtonText : \"Just leave the meeting\"\n      }).then((result) => {\n      \n       if (result.value) {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&rtc_id=${this.state.getAdId}&uid=${JSON.parse(this.teamKey)}`)\n          .then((res) =>{\n            if(res){\n              this.client && this.client.unpublish(this.localStream);\n              this.localStream && this.localStream.close();\n              this.toggleModal()\n            }\n          })\n         \n         }\n       }\n       else if(result.dismiss === \"backdrop\" || result.dismiss === \"close\"){\n       \n       return false\n      }\n     else{\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/callRecordingPost`,\n        data: formData,\n     })\n      window.location.hash = \"/taxprofessional/schedule\";\n     }\n     \n   });\n    }\n  \n\n\n  render() {    \n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n\n//recording btn on\n\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n     return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         schId = {this.props.id}\n         uid = {this.state.getAdId}\n         ownerId = {this.state.showButton}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js",["3889","3890","3891","3892"],"/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js",["3893","3894","3895","3896","3897","3898","3899","3900","3901","3902","3903","3904","3905"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n     \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n  \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 1,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n <Link \n to={{\n     pathname: `/taxprofessional/edit-proposal/${row.id}`,\n     index : 1,\n     routes: \"proposal\" }}>\n     <i\n         className=\"fa fa-edit\"\n         style={{\n             fontSize: \"16px\",\n             cursor: \"pointer\",\n             color: \"green\",\n         }}\n     ></i>\n </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/sendproposal/${row.id}`,\n                                        index : 1,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n  <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js",["3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n import CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\n\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n    const showProposalModal2 = (e) => {\n      \n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n   \n\n\n   \n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n      \n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Client Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                        <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 0,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/edit-proposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/sendproposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                     <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js",["3919","3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3940","3941","3942","3943"],"/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js",["3944","3945","3946","3947","3948","3949","3950","3951","3952"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n import CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n\n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n  \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 3,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Client Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                           \n\n                            {row.status_code > \"3\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft : \"8px\" }} title=\"View Proposal\">\n                \n                                <i\n                                  className=\"fa fa-eye\"\n                                  style={{ color: \"green\", fontSize: \"16px\" }}\n                                  onClick={(e) => showProposalModal2(row.id)}\n                                />\n                              \n                             </div>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                               \n                            <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 3,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            </div>\n                            \n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js",["3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3966"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n   \n      const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\", whiteSpace : \"nowrap\", padding: \"10px 20px\"};\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 2,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                           \n                            <div style={{ cursor: \"pointer\", marginLeft : \"8px\" }} title=\"View Proposal\">\n                \n                <i\n                  className=\"fa fa-eye\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={(e) => showProposalModal2(row.id)}\n                />\n              \n             </div>\n                               \n\n\n                            <div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\" className=\"ml-2\">\n                                            <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 2,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                                }\n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n           <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js",["3967"],"\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n \n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, [num]);\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"tpkey\", JSON.stringify(response.data[\"user id\"]));\n          localStorage.setItem(\"tpEmail\", JSON.stringify(response.data.name));\n          sessionStorage.setItem(\"sessionTpid\", JSON.stringify(response.data[\"user id\"]))\n          history.push(\"/taxprofessional/dashboard\");\n\n        } else {\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          setLoading(false)\n          reset();\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"id\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js",["3968","3969","3970","3971","3972","3973","3974","3975","3976","3977"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllQuery() {\n\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getInCompleteAssingment();\n    }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            }\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width : \"150px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            }\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" , width : \"150px\"};\n            },\n            style: {\n                fontSize : \"11px\"\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                     \n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\",width : \"120px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            }\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            }\n        },\n        {\n            text: \"Client Name\",\n            dataField: \"name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width : \"120px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            }\n        },\n        {\n            text: \"Delivery due date / Actual Delivery date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width : \"120px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width : \"120px\" };\n            },\n            style: {\n                fontSize : \"11px\"\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" , width : \"120px\"};\n            },\n            style: {\n                fontSize : \"11px\"\n            },\n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                     {row.tp_status == \"1\" ? null : \n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"green\",\n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                        <div title=\"Send Message\" className=\"ml-2\">\n                        <Link\nto={{\npathname: `/taxprofessional/chatting/${row.id}`,\nindex : 0,\nroutes: \"queriestab\",\n                                obj: {\n                                    message_type: \"4\",\n                                    query_No: row.assign_no,\n                                    query_id: row.id,\n                                    routes: `/taxprofessional/queriestab`\n                                }\n                            }}\n                        >\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    marginLeft: \"8px\",\n                                    color: \"blue\"\n                                }}\n                            ></i>\n                        </Link>\n                    </div>\n}\n\n                      <div title=\"View Discussion Message\">\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  color: \"orange\"\n                              }}\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                      </div>\n                  </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setInCompleteData}\n                        getData={getInCompleteAssingment}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={incompleteData}\n                        columns={columns}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js",["3978","3979","3980","3981","3982","3983","3984","3985","3986","3987","3988","3989","3990","3991","3992","3993","3994","3995","3996","3997","3998","3999","4000","4001"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\n\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                   \n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"120px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\",  width : \"150px\" };\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\"></p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p style={{fontSize: \"12px\"}}>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p  style={{fontSize: \"12px\"}}>Paid</p> : <p style={{color : \"red\", fontSize: \"12px\"}}>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n        \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems : \"center\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                              {row.is_paid == \"0\" ? \n                        <i\n                        class=\"fa fa-edit\"\n                        style={{\n                            fontSize: \"16px\",\n                            margin: \"0 5px\",\n                            cursor: \"pointer\",\n                            color : \"blue\",\n                        }}\n                       onClick = {() => addTdsToggle(row)} \n                    ></i> : \"\"\n                        }\n                          {row.is_paid == \"0\" \n                ?   \n                <span title={row.paymenturl}>\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\n                   </span>\n              \n                    : \"\" }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n       \n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n         if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"generated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    \n                    \n                <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField= {\"id\"}\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                        classes=\"table-responsive\"\n                    />\n                    </div>\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/TL/Recording/RecordingEdit.js",["4002","4003"],"import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\n   const userid = localStorage.getItem(\"tlkey\")\n    const { handleSubmit, register, errors } = useForm();\n    const onSubmit = (value) => {\n       let formData = new FormData();\n       formData.append(\"uid\", JSON.parse(userid))\n       formData.append(\"message\", value.p_message);\n       formData.append(\"message_type\", value.msg_type)\n        formData.append(\"assign_id\", assignid);\n        formData.append(\"participants\", value.p_participants);\n        formData.append(\"id\", editId)\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\n            data: formData,\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n                recordingHandler()\n                Swal.fire({\n                    title : \"success\",\n                    html : \"Message edited successfully\",\n                    icon : \"success\"\n                })\n                recList()\n            }\n        })\n    }\n   \nreturn (\n \n    <>\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\n        <ModalHeader toggle={recordingHandler}>\n        <h1>Recording Edit</h1>\n        </ModalHeader>\n        <ModalBody>\n       <form onSubmit = {handleSubmit(onSubmit)}>\n<div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Participants Name</label>\n        <input \n        className=\"form-control\"\n        name=\"p_participants\"\n        ref = {register}\n        defaultValue = {participants}/>\n        </div>\n        \n</div>\n<div className = \"row\">\n<div className=\"col-md-12\">\n    <label>Message Type</label>\n<select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            required\n                            \n                          >\n                            <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                          </select>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Message</label>\n        <textarea \n           style={{height : \"100px\"}}\n        className=\"form-control\"\n        name=\"p_message\"\n        ref = {register}\n        defaultValue = {message}/>\n        </div>\n</div>\n<button className=\"btn btn-primary my-2\">\n    Submit\n</button>\n       </form>\n        </ModalBody>\n    </Modal>\n    \n    </>\n)\n}\nexport default RecordingEdit;","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js",["4004","4005","4006","4007","4008","4009","4010","4011","4012","4013","4014","4015","4016","4017"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\n\n\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const userEmail = window.localStorage.getItem(\"tlEmail\")\n  const em = JSON.parse(userEmail)\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n         \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n    \n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n        <i\n          onClick={() => handleJoin(data)}\n            class=\"fa fa-video-camera\"\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n          <div>{children}</div>\n          \n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n//     // console.log(\"data\", data);\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n\n\n// if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/teamleader/meeting/${data.id}`);\n\n// }\n// else{\n// // return false\n// Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/teamleader/meeting/${data.id}`);\n\n// }\n  //}\n  console.log(\"data\", data.id)\nCookies.set(\"channel_2\", data.question_id);\nCookies.set(\"baseMode_2\", baseMode);\nCookies.set(\"transcode_2\", transcode);\nCookies.set(\"attendeeMode_2\", attendeeMode);\nCookies.set(\"videoProfile_2\", videoProfile);\nCookies.set(\"tlid\", data.id)\n// history.push(\"/teamleader/meeting/\");\nhistory.push(`/teamleader/meeting/${data.id}`);\n\n\n\n\n  };\n\n  const changeFormat = (d) => {\n    console.log(\"d ---\", d);\n\n    if (typeof d === 'object') {\n      console.log(\"GMT\");\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n      console.log(\"d\");\n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted, cancel }) => {\n\n    if (added) {\n      setLoading(true)\n      console.log(\"added - \", added);\nconsole.log(\"cancle\", cancel)\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    if (changed) {\n      console.log(\"changed\", changed);\n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n      console.log(\"data2 - \", data2);\n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n      console.log(\"id -\", id);\n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      console.log(\"owner\", dataIttem.owner);\n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            console.log(\"call 0 code\")\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (deleted !== undefined) {\n      console.log(\"deleted f\", deleted);\n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n          console.log(\"owner\", data.owner);\n          value = data.owner\n        }\n      });\n\n      // console.log(\"value\", value);\n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n            console.log(\"res -\", res);\n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n    console.log(\"appointmentData\", appointmentData);\n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n      {\n        loading ?\n          <Loader />\n          :\n          <>\n       <div style ={{display : \"flex\", height : \"700px\"}}>\n          <Paper>\n              <Scheduler data={data} >\n                <ViewState\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState onCommitChanges={commitChanges} />\n                <EditRecurrenceMenu />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher />\n\n                <AppointmentTooltip showOpenButton />\n\n                {\n                  read ?\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      readOnly\n                    />\n                    :\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    />\n                }\n\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            </Paper>\n          </div>\n           \n          \n          </>\n          \n      }\n    </>\n  );\n}\n\nexport default Demo;","/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js",["4018","4019","4020","4021"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js",["4022"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router\";\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n   \n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n          // CountPendingForAcceptence(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize : \"11px\"\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n      style: {\n        fontSize : \"11px\"\n    },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"120px\"};\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      style: {\n        fontSize : \"11px\"\n    },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      style: {\n        fontSize : \"11px\"\n    }\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"150px\" };\n      },\n      style: {\n        fontSize : \"11px\"\n    }\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      style: {\n        fontSize : \"11px\"\n    }\n    },\n    {\n      text: \"Delivery due date / Actual Delivery date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n      style: {\n        fontSize : \"11px\"\n    }\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize : \"11px\"\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                // onClick={() => rejectHandler(row)}\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n   \n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          \n          getPendingforAcceptance();\n         // updateTab(1);\n         history.push(\"/taxprofessional/proposal\")\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <div className=\"tableFixHead\">\n              <BootstrapTable\n                bootstrap4\n                keyField=\"id\"\n                data={pendingData}\n                columns={columns}\n                rowIndex\n                classes=\"table-responsive\"\n              />\n              </div>\n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js",["4023","4024","4025","4026","4027","4028","4029","4030","4031","4032"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      \n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"120px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"130px\"};\n      },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"120px\"};\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width :\"150px\"};\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      style : {\n        fontSize : \"11px\"\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"150px\"};\n      },\n    },\n    {\n      text: \"Delivery due date / Actual Delivery date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width : \"150px\" };\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" , width : \"100px\"};\n      },\n      style : {\n        fontSize : \"11px\"\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" , width : \"120px\"};\n      },\n      style: {\n          fontSize : \"11px\"\n      },\n      formatter: function (cell, row) {\n        \n          return (\n              <>\n               {row.tp_status == \"1\" ? null : \n                \n                <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    color: \"green\",\n                }}\n            >\n               \n\n                {row.status == \"Declined Query\" ? null :\n  <div title=\"Send Message\" className=\"ml-2\">\n  <Link\nto={{\npathname: `/taxprofessional/chatting/${row.id}`,\nindex : 2,\nroutes: \"queriestab\",\n          obj: {\n              message_type: \"4\",\n              query_No: row.assign_no,\n              query_id: row.id,\n              routes: `/taxprofessional/queriestab`\n          }\n      }}\n  >\n      <i\n          class=\"fa fa-comments-o\"\n          style={{\n              fontSize: 16,\n              cursor: \"pointer\",\n              marginLeft: \"8px\",\n              color: \"blue\"\n          }}\n      ></i>\n  </Link>\n</div>}\n\n                <div title=\"View Discussion Message\">\n                    <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                            fontSize: 16,\n                            cursor: \"pointer\",\n                            color: \"orange\"\n                        }}\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\n                    ></i>\n                </div>\n            </div>}\n              </>\n          );\n      },\n  },\n];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <div className=\"tableFixHead\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            classes=\"table-responsive\"\n            rowIndex\n          />\n</div>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js",["4033","4034","4035","4036","4037","4038","4039","4040"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\n\n\nfunction CompletedQuery() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js",["4041","4042","4043","4044","4045","4046"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction DeclinedQuery({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            DeclinedQuery=\"DeclinedQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js",["4047","4048"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js",["4049","4050","4051"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n   console.log(value)\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js",["4052","4053","4054","4055"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js",["4056","4057","4058","4059","4060","4061","4062","4063","4064","4065"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording,\n    schId,\n    uid,\n    ownerId\n}) {\n   \n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tpkey\");\n\n   \n\n    const { assign_no, id, username, start } = item\n  \n    const onSubmit = (value) => {\n        var serverResponse = data.serverResponse.fileList\n        var completeRecording;\n        if(allrecording === undefined || allrecording.length === 0){\n            completeRecording =  serverResponse;\n        }\n        else if(allrecording != undefined || allrecording.length > 0){\n            completeRecording = allrecording + \",\" + serverResponse;\n        }\n        else{\n            completeRecording = serverResponse;\n        }\n                const { fileList } = serverResponse\n             \n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    toggle();\n                    history.push(\"/taxprofessional/schedule\")\n                   \n                }\n            })\n            .catch((error) => {\n               \n            });\n    };\n  \n    return (\n        <div>\n            <Modal isOpen={isOpen}  size=\"md\">\n                <ModalHeader>\n                Minutes of meeting\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                             \n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js",["4066","4067"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\n          userId\n        )}&type=2&q_no=${qno}`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setNotification(res.data.result);\n        }\n      });\n  };\n\n \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js",["4068","4069"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                       \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js",["4070","4071","4072"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx",["4073","4074","4075","4076","4077","4078","4079","4080","4081","4082","4083","4084","4085","4086","4087","4088","4089","4090","4091","4092","4093","4094","4095","4096","4097"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\"\nimport Swal from \"sweetalert2\";\nimport $ from 'jquery';\nimport CommonServices from \"../../../common/common\"\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"8\": [\n    \"span 3/span 4/13/3\",\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 3/span 4/13/27\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"9\": [\n    \"span 3/span 4/13/1\",\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 3/span 4/13/29\",\n    \"span 9/span 16/10/21\",\n  ],\n  \n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n   \n    // window.onbeforeunload = (event) => {\n    //   this.stopRecording()\n    //   const e = event || window.event;\n    //   // Cancel the event\n    //   e.preventDefault();\n    //   if (e) {\n       \n    //     e.returnValue = ''; // Legacy method for cross browser support\n    //   }\n    //   return ''; // Legacy method for cross browser support\n    //};\n    this.tlName = Cookies.get(\"tlName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n     \n      disabledVedio : false,\n      getAdId :'', \n      vedTrack : null,\n      shareValue : false,\n      vedOffer : ''\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"tlkey\");\n  tlEmail2 = window.localStorage.getItem(\"tlEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n  vendor = 1\n region = 14;\n bucket  = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\nremoteShare2 = false\nprevFile;\n\n  componentWillMount() {\n//  let a = localStorage.getItem(\"chNametl\");\n//  let bb = localStorage.getItem(\"tlUid\")\n//  let b = JSON.parse(bb)\n//  console.log(\"bbb\", b)\n//  let c = localStorage.getItem(\"resourceIdtl\")\n//  let d = localStorage.getItem(\"sid\");\n//  this.prevFile = localStorage.getItem(\"prevFiletl\")\n//  console.log(\"ddd\", b, c)\n//  if(a && b && c && d){\n//   var data = JSON.stringify({\n//     \"cname\":a,\n//     \"uid\" : JSON.stringify(b),\n//     \"clientRequest\":{ }});\n//   axios({\n//     method: \"POST\",\n//     headers: {\n//       \"content-type\": \"application/json;charset=utf-8\",\n//       \"authorization\": \"Basic \"+this.encodedString,\n//       \"cache-control\": \"no-cache\",\n//     },\n//     url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${c}/sid/${d}/mode/mix/stop`,\n//     data: data,\n//   })\n//   .then(json => \n//     this.setState({vedOffer : json}),\n//   localStorage.removeItem(\"resourceIdtl\"),\n//   localStorage.removeItem(\"sid\"),\n//   localStorage.removeItem(\"chNametl\"),\n//   localStorage.removeItem(\"tlUid\")\n    \n//     ) \n//     .catch((error) => {\n      \n//     });\n//  }\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    let show;\n  AgoraRTC.getDevices(function(dev){\n    var cameras = dev.filter((e) => {\n      return e.kind === \"videoinput\"\n    })\n   \n    if(cameras.length > 0){\n      show = true\n    }\n    else{\n      show = false\n    }\n  })\n    this.client.init($.appId, () => {\n     \n   \n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n       \n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.tlName;\n   axios.get(`${data_post_api}`).\n   then((res) => {\n    \n   })\n\n   this.setState({getAdId : uid})\n   this.subscribeStreamEvents();\n   \n   if(show === true){\n     this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile)\n     this.localStream.init(\n         \n       () => {\n         if ($.attendeeMode !== \"audience\") {\n           this.addStream(this.localStream, true);\n           \n   \n           this.client.publish(this.localStream, (err) => {\n            \n           });\n         }\n         this.setState({ readyState: true });\n       },\n       (err) => {\n       \n         this.setState({ readyState: true });\n       }\n     );\n   }\n   else if(show === false){\n   this.localStream = this.streamInit22(uid, $.attendeeMode, $.videoProfile);\n   this.localStream.init(\n         \n     () => {\n       if ($.attendeeMode !== \"audience\") {\n         this.addStream(this.localStream, true);\n         \n   \n         this.client.publish(this.localStream, (err) => {\n          \n         });\n       }\n       this.setState({ readyState: true });\n     },\n     (err) => {\n     \n       this.setState({ readyState: true });\n     }\n   );\n   }\n         \n       });\n     });\n   }\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n   \n    // this.accuire()\n  }\n\n  getSchedulerData =() =>{\n       axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                       \n              if (res.data.code === 1) {\n                if(res.data.result.items){\n                 this.setState({\n                   item:res.data.result.items[0],\n                  showButton : res.data.result.items[0].owner_id\n                 })  \n                }\n                       \n               }\n           });\n }\n\n\n componentDidUpdate() {\n  // rerendering\n  \n  let canvas = document.querySelector(\"#ag-canvas\");\n  // pip mode (can only use when less than 4 people in channel)\n  if (this.state.displayMode === \"pip\") {\n    let no = this.state.streamList.length;\n   \n    if (no > 4) {\n      this.setState({ displayMode: \"tile\" });\n      return;\n    }\n    this.state.streamList.map((item, index) => {\n      let txtColor = \"myPartName\";\n      let id = item.getId();\n      let dom = document.querySelector(\"#ag-item-\" + id);\n     \n      let dd;\n      if (!dom) {\n        dom = document.createElement(\"section\");\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\n        dom.setAttribute(\"class\", \"ag-item\");\n        canvas.appendChild(dom);\n        var box22 = document.getElementById(\"ag-item-\" + id)\n        dd = document.createElement(\"input\")\n        dd.setAttribute(\"id\", \"name\" + id)\n        dd.setAttribute(\"class\", txtColor)\n      box22.appendChild(dd)\n      item.play(\"ag-item-\" + id);\n      }\n     \n       \n     \n       \n      if (index === no - 1) {\n    \n        //  document.getElementById(\"custName\").value = \"Lucky\"\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n         \n        } else {\n          \n          let f = false;\n        \n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n          dom.addEventListener('click', function (e){\n            if(f === false){\n             \n              \n              f = true\n              dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n              let list;\n             \n              list = Array.from(\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n              );\n              list.map((item) => {\n                \n                  item.style.display = \"none\"\n                }) \n            }\n            else{\n              f = false\n           \n              dom.setAttribute(\n                \"style\",\n                `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                        z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n              );\n              let list;\n             \n              list = Array.from(\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n              );\n              list.map((item) => {\n                \n                  item.style.display = \"block\"\n                })\n            }\n          })\n        }\nif(item.player === undefined){\n\n}\n     else{\n      item.player.resize && item.player.resize();\n     }\n    });\n  }\n  // tile mode\n  else if (this.state.displayMode === \"tile\") {\n    let f = false;\n    let no = this.state.streamList.length;\n    let txtColor = \"myPartName\";\n    this.state.streamList.map((item, index) => {\n      let id = item.getId();\n      let dom = document.querySelector(\"#ag-item-\" + id);\n      \n      let dd;\n      if (!dom) {\n        dom = document.createElement(\"section\");\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\n        dom.setAttribute(\"class\", \"ag-item\");\n        canvas.appendChild(dom);\n        var box22 = document.getElementById(\"ag-item-\" + id)\n        dd = document.createElement(\"input\")\n        dd.setAttribute(\"id\", \"name\" + id)\n        dd.setAttribute(\"class\", txtColor)\n      box22.appendChild(dd)\n      item.play(\"ag-item-\" + id);\n      }\n      dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n      dom.addEventListener('click', function (e){\n          \n        if(f === false){\n          f = true\n          dom.setAttribute(\"style\", `grid-area: span 14/span 24/13/25`);\n          let list;\n             \n          list = Array.from(\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n          );\n          list.map((item) => {\n            \n              item.style.display = \"none\"\n            }) \n        }\n        else{\n          f = false\n          dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n          let list;\n             \n          list = Array.from(\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n          );\n          list.map((item) => {\n            \n              item.style.display = \"block\"\n            }) \n        }\n      })\n      if(item.player === undefined){\n\n      }\n             else{\n              item.player.resize && item.player.resize();\n             }\n    });\n  }\n  // screen share mode (tbd)\n  else if (this.state.displayMode === \"share\") {\n  \n  }\n}\n\n\n  componentWillUnmount() {\n   \n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n  if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          \n        },\n        () => {\n                  }\n      );\n  }\n\n  streamInit22 = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n       streamID: uid,\n       audio: true,\n       video: false,\n       screen: false,\n     };\n \n     switch (attendeeMode) {\n       case \"audio-only\":\n         defaultConfig.video = false;\n         break;\n       case \"audience\":\n         defaultConfig.video = false;\n         defaultConfig.audio = false;\n         break;\n       default:\n       case \"video\":\n         break;\n     }\n \n     let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n     stream.setVideoProfile(videoProfile);\n     return stream;\n   };\n  \n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n   let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n \n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      \n      rt.client.subscribe(stream, function (err) {\n        \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n     console.log(\"two\")\n      rt.removeStream(evt.uid);\n      \n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n    \n        let stream = evt.stream;\n      \n         rt.addStream(stream)\n \n    \n       }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     console.log(\"evt id\", evt.uid)\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n    // console.log(\"showButton\", this.state.showButton)\n  \n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${this.state.showButton}&chname=${this.channelName}`)\n      .then((res) => {\n        console.log(\"evt id\", uid)\n        if(res.data.result.rtc_id == uid){\n          console.log(\"evt id\", res.data.result.rtc_id)\n          Swal.fire({\n            title: \"success\",\n            html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\n            icon : \"success\"\n          })\n            setTimeout((e) => {\n              window.location.hash = \"/teamleader/schedule\";\n            }, 500)\n           \n           }\n          \n      })\n     \n      if(this.remoteShare2 === true){\n        this.remoteShare2 = false\n      } \n      if(uid === this.state.getAdId){\n        this.del()\n      }\n  };\n\n  addStream = (stream, push = false) => {\n   \n    this.hostId = stream.getId()\n \n  \n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n    axios.get(`${apiData}`)\n    .then((res) =>{\n     \n\n \n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\n        praticipantVar.setAttribute(\"disabled\", true)\n      }\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n         praticipantVar.setAttribute(\"value\", \"You\");\n         praticipantVar.setAttribute(\"disabled\", true)\n       }\n       \n       else if(res.data.length == 0){\n        this.remoteShare2 = true\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\n        praticipantVar.setAttribute(\"disabled\", true)\n        }\n     })};\n\n  handleCamera = (e) => {\n    if(this.state.readyState === false){\n\n    }\n    else{\n    this.setState({disabledVedio : !this.state.disabledVedio})\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n  }\n  handleMic = (e) => {\n    if(this.state.readyState === false){\n\n    }\n    else{\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isAudioOn()\n        ? this.localStream.muteAudio()\n        : this.localStream.unmuteAudio();\n    }\n   \n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };  \n  \n  handleExit = async() => {\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n   }\n\n   sharingScreen = (e) => {\n    if(this.remoteShare2 === true && this.state.stateSharing === false){\n      Swal.fire({\n        title : \"error\",\n        html : \"Only one screen can be share at a time\",\n        icon : \"error\"\n      })\n    }\n    else if(this.state.stateSharing) {\n       this.shareClient && this.shareClient.unpublish(this.shareStream);\n       this.shareStream && this.shareStream.close();\n       this.setState({stateSharing : false})\n     }\n     else {\n       \n        this.setState({stateSharing : true})\n        let $ = this.props;\n        // init AgoraRTC local client\n        this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n  \n        this.shareClient.init($.appId, () => {\n        \n  \n         //  this.subscribeStreamEvents();\n          this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n            this.state.uid = uid;\n           \n            // create local stream\n            // It is not recommended to setState in function addStream\n            \n            this.shareStream = this.streamInitSharing(\n              uid,\n              $.attendeeMode,\n              $.videoProfile\n            );\n            this.shareStream.init(\n              () => {\n                if ($.attendeeMode !== \"audience\") {\n                  this.addStream(this.shareStream, true);\n                  this.shareClient.publish(this.shareStream, (err) => {\n                    \n                  });\n                }\n                this.setState({ readyState: true });\n              },\n              (err) => {\n               \n                this.setState({ readyState: true });\n              }\n            );\n          });\n        });\n      }\n     };\n\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      \n      control : true\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                \n            });\n  }\n\n\nencodedString = \"N2VmMGY4ODg4NjI4NDFhYWIwNWY1NzFjNDM5MzE4OTc6NjU0ZDViYWM5ZDU2NGY4Y2JhOTJmNzJkOGM2N2FjYzI=\";\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n       \n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n       // localStorage.setItem(\"prevFiletl\", response.serverResponse.fileList)\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n\n//start recording\nasync startRecording(key){\n   \n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n    // localStorage.setItem(\"recBoxtl\", data)\n    // localStorage.setItem(\"chNametl\",this.channelName )\n    // localStorage.setItem(\"tlUid\", this.uid)\n    // localStorage.setItem(\"resourceIdtl\", resourceId)\n    // console.log(\"data\", data)\n\n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n      \n      });\n  };\n\n\n  //recording  acquire\n  accuire = () =>{\n   \n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n     \n      .catch((error) => {\n       \n      });\n  };\n// Start recording button\n  recStart = () => {\n   \n    this.localStream.enableVideo();\n    this.accuire();\n    this.setState({ showRecBtn: false  });\n    \n  }\n\n  //toggelStop\n  toggleModal = (key) =>{\n  \n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n //stop recording \n stopRecording = () => {\n  if(this.state.showRecBtn === true){\n   \n    console.log(\"done3\")\nthis.del()\n\n  }\n  \n  else if(this.state.showButton == JSON.parse(this.teamKey)){\n console.log(\"done33\")\n    if(resourceId === undefined){\n      var resourceId = localStorage.getItem(\"resourceId\");\n    var sid = localStorage.getItem(\"sid\");\n    }\n\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n    this.setState({vedOffer : json}),\n   \n   \n     this.setState({showRecBtn : true}),\n    \nthis.del(),\n    ) \n    .catch((error) => {\n      \n    });\n}\nelse{\n  console.log(\"done333\")\n  window.location.hash = \"/teamleader/schedule\";\n}\n  \n};\ndel = (e) => {\n//  console.log(\"tempArray\", this.tempArray)\n//  localStorage.removeItem(\"prevFiletl\")\n//  localStorage.removeItem(\"sid\");\n//  localStorage.removeItem(\"tlUid\");\n//  localStorage.removeItem(\"resourceIdtl\")\n//  localStorage.removeItem(\"resourceId\");\n//  localStorage.removeItem(\"chNametl\");\n  var serverResponse = this.state.data.serverResponse.fileList\n  var completeRecording;\n  if(this.tempArray === undefined || this.tempArray.length === 0){\n      completeRecording =  serverResponse;\n  }\n  else if(this.tempArray != undefined || this.tempArray.length > 0){\n   if(this.state.showRecBtn === true){\n        completeRecording = this.tempArray \n   }\n   else{\n        completeRecording = this.tempArray + \",\" + serverResponse;\n   }\n  }\n  else{\n      completeRecording = serverResponse;\n  }\n  if(this.prevFile){\n    completeRecording = completeRecording + \",\" + this.prevFile\n  }\n   let formData = new FormData()\n   formData.append(\"fileList\", completeRecording)\n  formData.append(\"schedule_id\", this.props.id);\n  formData.append(\"uid\", JSON.parse(this.teamKey));\n  formData.append(\"assign_id\", this.state.item.assign_no);\n  formData.append(\"participants\", this.state.item.username);\n \n  Swal.fire({\n    title: \"End this vedio call for everyone?\",\n    // text: \"End this vedio call for everyone\",\n     type: \"warning\",\n     showCloseButton:true,\n     showCancelButton : true,\n     confirmButtonColor: \"#3085d6\",\n     cancelButtonColor: \"#d33\",\n     confirmButtonText: \"End the call\",\n     cancelButtonText : \"Just leave the meeting\"\n    }).then((result) => {\n    \n     if (result.value) {\n      if (result.value) {\n        axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&rtc_id=${this.state.getAdId}&uid=${JSON.parse(this.teamKey)}`)\n        .then((res) =>{\n          if(res){\n            this.client && this.client.unpublish(this.localStream);\n            this.localStream && this.localStream.close();\n            this.toggleModal()\n          }\n        })\n       \n       }\n     }\n     else if(result.dismiss === \"backdrop\" || result.dismiss === \"close\"){\n     \n     return false\n    }\n   else{\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/callRecordingPost`,\n      data: formData,\n   })\n    window.location.hash = \"/teamleader/schedule\";\n   }\n   \n });\n \n}\n\n  render() {    \n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n\n//recording btn on\n\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n     return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         schId = {this.props.id}\n         uid = {this.state.getAdId}\n         ownerId = {this.state.showButton}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js",["4098","4099","4100","4101","4102","4103","4104","4105"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording,\n    schId,\n    uid,\n    ownerId\n}) {\n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tlkey\");\n\n    \n    const { assign_no, id, username, start } = item\n   \n\n\n    //submit\n    const onSubmit = (value) => {\n      \n\nvar serverResponse = data.serverResponse.fileList\nvar completeRecording;\nif(allrecording === undefined || allrecording.length === 0){\n    completeRecording =  serverResponse;\n}\nelse if(allrecording != undefined || allrecording.length > 0){\n    completeRecording = allrecording + \",\" + serverResponse;\n}\nelse{\n    completeRecording = serverResponse;\n}\n        const { fileList } = serverResponse\n        \n\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n                        if (response.data.code === 1) {\n                    toggle()\n                history.push(\"/teamleader/schedule\")\n                }\n               \n            })\n            .catch((error) => {\n                       });\n    };\n  \n    return (\n        <div>\n            <Modal isOpen={isOpen} size=\"md\">\n                <ModalHeader >\n                Minutes of meeting\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                                {/* <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button> */}\n                                <button type=\"submit\" className=\"btn btn-primary mx-2\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/views/ModalManual/Query.js",["4106","4107","4108","4109","4110"],"/home/pooja/MazarsRepo/src/views/ModalManual/QueryProcessing.js",["4111","4112","4113"],"/home/pooja/MazarsRepo/src/views/ModalManual/Proposal.js",["4114","4115"],"/home/pooja/MazarsRepo/src/views/ModalManual/Assignment.js",["4116","4117","4118"],"/home/pooja/MazarsRepo/src/views/ModalManual/Payment.js",["4119","4120"],"/home/pooja/MazarsRepo/src/views/ModalManual/Scheduler.js",["4121","4122"],"import React from 'react';\nimport { makeStyles, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport scheduleImg from '../ManualImg/schedulerImg.png'\nimport schFormImg from '../ManualImg/schFormImg.png';\nimport schForm2 from '../ManualImg/schForm2.png';\nimport videoCallIcon from '../ManualImg/videoCallIcon.png';\nimport message from '../ManualImg/message.png';\nconst Scheduler = () => {\n    const useStyle = makeStyles(theme => ({\n        root : {\n            backgroundColor : \"green\", \n            color : \"white\",\n            margin : \"10px 0px\",\n            outline : \"none\",\n            '&:hover': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            },\n            '&:focus': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n    }))\n    const classes = useStyle()\n    return(\n        <>\n           <section id=\"seceduler\">\n     <Container>\n         <Card>\n             <CardHeader title={\n                 <>\n                  <Typography variant=\"h4\">\n                     For organizing Video conferences or meetings with the client & the Mazars Team members,\n                      schedule facility may be used. Whenever, any meeting is organized by the Mazars Team \n                      on the request of client or otherwise, it will be visible to the client as below.\n                      An email alert will also be sent to the client informing scheduling of the meeting.\n                     </Typography>\n                 </>\n             }/>\n             <CardActionArea>\n                 <CardContent>\n                    <CardMedia src={scheduleImg} component=\"img\"/>\n                 </CardContent>\n             </CardActionArea>\n         </Card>\n     </Container>\n     <Container>\n         <Card>\n             <CardHeader title={\n                 <>\n                  <Typography variant=\"h4\">\n                  Schedule: By double clicking on the meeting schedule other than \n                  the camera icon the client can view full details of the meeting\n                   including the <Button variant=\"contained\" className={classes.root}> Discussion on </Button>\n                 participants as per the below screen. \n                      </Typography>\n                 </>\n             }/>\n             <CardActionArea>\n                 <CardContent>\n                    <CardMedia src={schFormImg} component=\"img\"/>\n                 </CardContent>\n             </CardActionArea>\n         </Card>\n     </Container>\n     <Container>\n         <Card>\n             <CardHeader title={\n                 <>\n                  <Typography variant=\"h4\">\n                  The client may join the meeting by clicking on \n                  <Button variant=\"contained\" className={classes.root}> <CardMedia src={videoCallIcon} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>     , at the scheduled date & time.\n                 \n               \n                      </Typography>\n                 </>\n             }/>\n             <CardActionArea>\n                 <CardContent>\n                    <CardMedia src={schForm2} component=\"img\"/>\n                    <Typography variant=\"h4\">\n                    The client can make request for meeting with the Mazars Team by \n                    sending message after clicking message icon  \n                    <Button><CardMedia component=\"img\" src={message} /></Button>    \n                    available in different tabs. During such meeting the client will \n                    be able to discuss and present documents for discussion in the meeting.\n\n                    </Typography>\n                 </CardContent>\n             </CardActionArea>\n         </Card>\n     </Container>\n     </section>\n        </>\n    )\n}\nexport default Scheduler;","/home/pooja/MazarsRepo/src/views/ModalManual/Feedback.js",["4123","4124"],"import React from 'react';\nimport { makeStyles, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport feedbackImageDetails from '../ManualImg/feedbackImageDetails.png'\nimport feedBackIcon from '../ManualImg/feedback.png';\nimport feedbackQueryDetails from '../ManualImg/feedbackQueryDetails.png';\nconst Feedback = () => {\n    return(\n        <>\n          <section id= \"feedback\">\n             <Container>\n         <Card>\n             <CardHeader title={\n                 <>\n                  <Typography variant=\"h4\">\n                  Feedback: On clicking feedback   <Button variant=\"contained\"> <CardMedia src={feedBackIcon} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>    \n                      following screen will display all the feedback messages sent chronologically.\n                \n                 \n               \n                      </Typography>\n                 </>\n             }/>\n             <CardActionArea>\n                 <CardContent>\n                    <CardMedia src={feedbackImageDetails} component=\"img\"/>\n                    \n                 </CardContent>\n             </CardActionArea>\n         </Card>\n     </Container>\n     <Container>\n         <Card>\n             <CardHeader title={\n                 <>\n                  <Typography variant=\"h4\">\n                  Individual feedback message of any query will also\n                   be visible under the feedback tab in query details\n                      </Typography>\n                 </>\n             }/>\n             <CardActionArea>\n                 <CardContent>\n                    <CardMedia src={feedbackQueryDetails} component=\"img\"/>\n                    \n                 </CardContent>\n             </CardActionArea>\n         </Card>\n     </Container>\n     </section>\n        </>\n    )\n}\nexport default Feedback;","/home/pooja/MazarsRepo/src/views/ModalManual/Content.js",["4125","4126","4127","4128","4129","4130","4131"],"/home/pooja/MazarsRepo/src/views/ModalManual/Login.js",["4132","4133","4134","4135"],"/home/pooja/MazarsRepo/src/views/About/About.js",["4136","4137","4138"],"import React from 'react';\nimport Layout from \"../../components/Layout/Layout\";\nimport { Card, CardBody, CardTitle, CardHeader, Row, Col } from 'reactstrap';\nimport { Typography } from '@material-ui/core';\nconst About = () => {\n    const userId = window.localStorage.getItem(\"userid\")\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n            <Card>\n\n                <CardHeader>\n                    <h3 style={{ textAlign: \"center\" }}>About Us</h3>\n                </CardHeader>\n                <CardBody style={{ textAlign: \"justify\" }}>\n                    <Typography variant=\"h6\">\n                        Mazars is an internationally integrated partnership, specialising in audit, accountancy, advisory and tax services. Operating in over 90 countries and territories around the world, we draw on the expertise of more than 44,000 professionals – 28,000+ in Mazars’ integrated partnership and 16,000+ via the Mazars North America Alliance – to assist clients of all sizes at every stage in their development.\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        In India, Mazars has an ambitious growth plan and already has a national presence with a strong team of over 1,000 professionals with 7 offices located in Bangalore, Chennai, Delhi (and Delhi NCR), Hyderabad, Kol…\n                    </Typography>\n                </CardBody>\n            </Card>\n        </Layout>\n    )\n}\nexport default About;","/home/pooja/MazarsRepo/src/views/About/AboutOuter.js",["4139","4140","4141","4142","4143"],"/home/pooja/MazarsRepo/src/views/Contact/ContactOuter.js",["4144","4145","4146"],"/home/pooja/MazarsRepo/src/views/ModalManual/AllComponentManual.js",["4147","4148"],{"ruleId":"4149","replacedBy":"4150"},{"ruleId":"4151","replacedBy":"4152"},{"ruleId":"4153","severity":1,"message":"4154","line":77,"column":8,"nodeType":"4155","messageId":"4156","endLine":77,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4157","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":38},{"ruleId":"4153","severity":1,"message":"4158","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4159","line":12,"column":9,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4160","line":1,"column":10,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4161","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4162","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4164","line":46,"column":6,"nodeType":"4165","endLine":46,"endColumn":12,"suggestions":"4166"},{"ruleId":"4167","severity":1,"message":"4168","line":56,"column":97,"nodeType":"4169","messageId":"4170","endLine":56,"endColumn":99},{"ruleId":"4153","severity":1,"message":"4171","line":29,"column":21,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4172","line":37,"column":17,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4173","line":44,"column":10,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4174","line":66,"column":9,"nodeType":"4155","messageId":"4156","endLine":66,"endColumn":24},{"ruleId":"4163","severity":1,"message":"4164","line":87,"column":6,"nodeType":"4165","endLine":87,"endColumn":12,"suggestions":"4175"},{"ruleId":"4153","severity":1,"message":"4176","line":96,"column":9,"nodeType":"4155","messageId":"4156","endLine":96,"endColumn":10},{"ruleId":"4167","severity":1,"message":"4168","line":127,"column":13,"nodeType":"4169","messageId":"4170","endLine":127,"endColumn":15},{"ruleId":"4177","severity":1,"message":"4178","line":136,"column":26,"nodeType":"4179","messageId":"4180","endLine":136,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":137,"column":27,"nodeType":"4169","messageId":"4170","endLine":137,"endColumn":29},{"ruleId":"4177","severity":1,"message":"4178","line":147,"column":27,"nodeType":"4179","messageId":"4180","endLine":147,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":148,"column":15,"nodeType":"4169","messageId":"4170","endLine":148,"endColumn":17},{"ruleId":"4177","severity":1,"message":"4178","line":165,"column":23,"nodeType":"4179","messageId":"4180","endLine":165,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":166,"column":16,"nodeType":"4169","messageId":"4170","endLine":166,"endColumn":18},{"ruleId":"4177","severity":1,"message":"4178","line":172,"column":26,"nodeType":"4179","messageId":"4180","endLine":172,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":283,"column":36,"nodeType":"4169","messageId":"4170","endLine":283,"endColumn":38},{"ruleId":"4181","severity":1,"message":"4182","line":358,"column":2,"nodeType":"4183","messageId":"4184","endLine":359,"endColumn":41},{"ruleId":"4181","severity":1,"message":"4182","line":365,"column":5,"nodeType":"4183","messageId":"4184","endLine":366,"endColumn":44},{"ruleId":"4153","severity":1,"message":"4185","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4186","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4189","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4190","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4191","line":42,"column":10,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":99,"column":40,"nodeType":"4169","messageId":"4170","endLine":99,"endColumn":42},{"ruleId":"4163","severity":1,"message":"4192","line":188,"column":6,"nodeType":"4165","endLine":188,"endColumn":16,"suggestions":"4193"},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4195","line":117,"column":6,"nodeType":"4165","endLine":117,"endColumn":8,"suggestions":"4196"},{"ruleId":"4167","severity":1,"message":"4197","line":159,"column":27,"nodeType":"4169","messageId":"4170","endLine":159,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4197","line":159,"column":52,"nodeType":"4169","messageId":"4170","endLine":159,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4197","line":174,"column":25,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4197","line":174,"column":51,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4197","line":204,"column":18,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":20},{"ruleId":"4167","severity":1,"message":"4197","line":254,"column":22,"nodeType":"4169","messageId":"4170","endLine":254,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4197","line":295,"column":23,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4186","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4198","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":18},{"ruleId":"4163","severity":1,"message":"4199","line":38,"column":6,"nodeType":"4165","endLine":38,"endColumn":8,"suggestions":"4200"},{"ruleId":"4167","severity":1,"message":"4168","line":108,"column":34,"nodeType":"4169","messageId":"4170","endLine":108,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":111,"column":34,"nodeType":"4169","messageId":"4170","endLine":111,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":114,"column":34,"nodeType":"4169","messageId":"4170","endLine":114,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":118,"column":34,"nodeType":"4169","messageId":"4170","endLine":118,"endColumn":36},{"ruleId":"4163","severity":1,"message":"4201","line":36,"column":6,"nodeType":"4165","endLine":36,"endColumn":8,"suggestions":"4202"},{"ruleId":"4167","severity":1,"message":"4168","line":117,"column":34,"nodeType":"4169","messageId":"4170","endLine":117,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":120,"column":34,"nodeType":"4169","messageId":"4170","endLine":120,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":34,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":128,"column":34,"nodeType":"4169","messageId":"4170","endLine":128,"endColumn":36},{"ruleId":"4163","severity":1,"message":"4203","line":35,"column":6,"nodeType":"4165","endLine":35,"endColumn":8,"suggestions":"4204"},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":27,"column":9,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":28,"column":35,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":66,"column":14,"nodeType":"4169","messageId":"4170","endLine":66,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4198","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4207","line":20,"column":8,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4208","line":56,"column":18,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":30},{"ruleId":"4163","severity":1,"message":"4209","line":66,"column":6,"nodeType":"4165","endLine":66,"endColumn":8,"suggestions":"4210"},{"ruleId":"4153","severity":1,"message":"4211","line":188,"column":7,"nodeType":"4155","messageId":"4156","endLine":188,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4212","line":189,"column":12,"nodeType":"4155","messageId":"4156","endLine":189,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":286,"column":37,"nodeType":"4169","messageId":"4170","endLine":286,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":289,"column":39,"nodeType":"4169","messageId":"4170","endLine":289,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":292,"column":41,"nodeType":"4169","messageId":"4170","endLine":292,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":308,"column":33,"nodeType":"4169","messageId":"4170","endLine":308,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":322,"column":35,"nodeType":"4169","messageId":"4170","endLine":322,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":346,"column":32,"nodeType":"4169","messageId":"4170","endLine":346,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":347,"column":32,"nodeType":"4169","messageId":"4170","endLine":347,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":348,"column":33,"nodeType":"4169","messageId":"4170","endLine":348,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4213","line":10,"column":10,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4214","line":11,"column":13,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4215","line":13,"column":8,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4164","line":45,"column":6,"nodeType":"4165","endLine":45,"endColumn":12,"suggestions":"4216"},{"ruleId":"4153","severity":1,"message":"4176","line":52,"column":9,"nodeType":"4155","messageId":"4156","endLine":52,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4218","line":6,"column":9,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4206","line":20,"column":54,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":59},{"ruleId":"4163","severity":1,"message":"4164","line":35,"column":6,"nodeType":"4165","endLine":35,"endColumn":12,"suggestions":"4219"},{"ruleId":"4153","severity":1,"message":"4176","line":44,"column":9,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4220","line":25,"column":6,"nodeType":"4165","endLine":25,"endColumn":10,"suggestions":"4221"},{"ruleId":"4153","severity":1,"message":"4187","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4222","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":35,"column":9,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4223","line":44,"column":11,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4224","line":58,"column":6,"nodeType":"4165","endLine":58,"endColumn":12,"suggestions":"4225"},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4226","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4222","line":20,"column":8,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4227","line":46,"column":12,"nodeType":"4155","messageId":"4156","endLine":46,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4228","line":46,"column":18,"nodeType":"4155","messageId":"4156","endLine":46,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4229","line":61,"column":6,"nodeType":"4165","endLine":61,"endColumn":8,"suggestions":"4230"},{"ruleId":"4167","severity":1,"message":"4168","line":79,"column":22,"nodeType":"4169","messageId":"4170","endLine":79,"endColumn":24},{"ruleId":"4153","severity":1,"message":"4231","line":138,"column":13,"nodeType":"4155","messageId":"4156","endLine":138,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":189,"column":25,"nodeType":"4169","messageId":"4170","endLine":189,"endColumn":27},{"ruleId":"4232","severity":1,"message":"4233","line":360,"column":29,"nodeType":"4234","messageId":"4235","endLine":360,"endColumn":63},{"ruleId":"4236","severity":1,"message":"4237","line":496,"column":35,"nodeType":"4238","messageId":"4239","endLine":499,"endColumn":36,"fix":"4240"},{"ruleId":"4153","severity":1,"message":"4198","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4194","line":15,"column":10,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4241","line":17,"column":8,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4242","line":29,"column":8,"nodeType":"4165","endLine":29,"endColumn":10,"suggestions":"4243"},{"ruleId":"4153","severity":1,"message":"4198","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4241","line":18,"column":8,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4244","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4245","line":26,"column":18,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4242","line":40,"column":8,"nodeType":"4165","endLine":40,"endColumn":10,"suggestions":"4246"},{"ruleId":"4167","severity":1,"message":"4168","line":109,"column":45,"nodeType":"4169","messageId":"4170","endLine":109,"endColumn":47},{"ruleId":"4163","severity":1,"message":"4247","line":32,"column":6,"nodeType":"4165","endLine":32,"endColumn":8,"suggestions":"4248"},{"ruleId":"4167","severity":1,"message":"4168","line":99,"column":34,"nodeType":"4169","messageId":"4170","endLine":99,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":102,"column":34,"nodeType":"4169","messageId":"4170","endLine":102,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":105,"column":34,"nodeType":"4169","messageId":"4170","endLine":105,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4249","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4250","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4251","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4252","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4253","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4161","line":19,"column":3,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4254","line":22,"column":10,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4255","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4190","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4256","line":56,"column":8,"nodeType":"4165","endLine":56,"endColumn":10,"suggestions":"4257"},{"ruleId":"4167","severity":1,"message":"4168","line":115,"column":44,"nodeType":"4169","messageId":"4170","endLine":115,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":180,"column":32,"nodeType":"4169","messageId":"4170","endLine":180,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":202,"column":32,"nodeType":"4169","messageId":"4170","endLine":202,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":223,"column":42,"nodeType":"4169","messageId":"4170","endLine":223,"endColumn":44},{"ruleId":"4236","severity":1,"message":"4237","line":224,"column":21,"nodeType":"4238","messageId":"4239","endLine":224,"endColumn":76,"fix":"4258"},{"ruleId":"4167","severity":1,"message":"4168","line":227,"column":40,"nodeType":"4169","messageId":"4170","endLine":227,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":26,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":28},{"ruleId":"4236","severity":1,"message":"4237","line":265,"column":36,"nodeType":"4238","messageId":"4239","endLine":265,"endColumn":78,"fix":"4259"},{"ruleId":"4167","severity":1,"message":"4168","line":267,"column":25,"nodeType":"4169","messageId":"4170","endLine":267,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":313,"column":15,"nodeType":"4169","messageId":"4170","endLine":313,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4187","line":3,"column":27,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":23,"column":1,"nodeType":"4238","messageId":"4239","endLine":23,"endColumn":53,"fix":"4260"},{"ruleId":"4153","severity":1,"message":"4261","line":3,"column":8,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4262","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4263","line":7,"column":45,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4159","line":30,"column":9,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":32,"column":35,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":93,"column":97,"nodeType":"4169","messageId":"4170","endLine":93,"endColumn":99},{"ruleId":"4167","severity":1,"message":"4168","line":121,"column":34,"nodeType":"4169","messageId":"4170","endLine":121,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":34,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":128,"column":34,"nodeType":"4169","messageId":"4170","endLine":128,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":132,"column":34,"nodeType":"4169","messageId":"4170","endLine":132,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":9,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":33,"column":35,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4264","line":42,"column":10,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4265","line":43,"column":10,"nodeType":"4155","messageId":"4156","endLine":43,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4266","line":48,"column":10,"nodeType":"4155","messageId":"4156","endLine":48,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4267","line":54,"column":10,"nodeType":"4155","messageId":"4156","endLine":54,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4268","line":56,"column":10,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4269","line":56,"column":21,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4270","line":58,"column":10,"nodeType":"4155","messageId":"4156","endLine":58,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4271","line":58,"column":25,"nodeType":"4155","messageId":"4156","endLine":58,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4272","line":60,"column":10,"nodeType":"4155","messageId":"4156","endLine":60,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4273","line":60,"column":23,"nodeType":"4155","messageId":"4156","endLine":60,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4274","line":62,"column":10,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4275","line":62,"column":22,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4276","line":65,"column":10,"nodeType":"4155","messageId":"4156","endLine":65,"endColumn":17},{"ruleId":"4277","severity":1,"message":"4278","line":129,"column":9,"nodeType":"4155","messageId":"4279","endLine":129,"endColumn":21},{"ruleId":"4177","severity":1,"message":"4280","line":133,"column":21,"nodeType":"4179","messageId":"4180","endLine":133,"endColumn":23},{"ruleId":"4177","severity":1,"message":"4280","line":138,"column":26,"nodeType":"4179","messageId":"4180","endLine":138,"endColumn":28},{"ruleId":"4177","severity":1,"message":"4280","line":198,"column":43,"nodeType":"4179","messageId":"4180","endLine":198,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4281","line":215,"column":7,"nodeType":"4155","messageId":"4156","endLine":215,"endColumn":15},{"ruleId":"4177","severity":1,"message":"4280","line":225,"column":15,"nodeType":"4179","messageId":"4180","endLine":225,"endColumn":17},{"ruleId":"4177","severity":1,"message":"4280","line":267,"column":17,"nodeType":"4179","messageId":"4180","endLine":267,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4282","line":363,"column":9,"nodeType":"4155","messageId":"4156","endLine":363,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4283","line":373,"column":9,"nodeType":"4155","messageId":"4156","endLine":373,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":560,"column":49,"nodeType":"4169","messageId":"4170","endLine":560,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":567,"column":47,"nodeType":"4169","messageId":"4170","endLine":567,"endColumn":49},{"ruleId":"4232","severity":1,"message":"4233","line":603,"column":25,"nodeType":"4234","messageId":"4235","endLine":603,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4284","line":6,"column":27,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4186","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4159","line":35,"column":9,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":36,"column":43,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4286","line":47,"column":10,"nodeType":"4155","messageId":"4156","endLine":47,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4287","line":57,"column":9,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4288","line":74,"column":6,"nodeType":"4165","endLine":74,"endColumn":8,"suggestions":"4289"},{"ruleId":"4163","severity":1,"message":"4229","line":101,"column":6,"nodeType":"4165","endLine":101,"endColumn":15,"suggestions":"4290"},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":22,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":24},{"ruleId":"4153","severity":1,"message":"4291","line":133,"column":9,"nodeType":"4155","messageId":"4156","endLine":133,"endColumn":24},{"ruleId":"4153","severity":1,"message":"4292","line":176,"column":9,"nodeType":"4155","messageId":"4156","endLine":176,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":181,"column":13,"nodeType":"4169","messageId":"4170","endLine":181,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4168","line":189,"column":20,"nodeType":"4169","messageId":"4170","endLine":189,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4185","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4186","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4207","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4190","line":23,"column":9,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4293","line":28,"column":24,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":102,"column":39,"nodeType":"4169","messageId":"4170","endLine":102,"endColumn":41},{"ruleId":"4163","severity":1,"message":"4294","line":209,"column":6,"nodeType":"4165","endLine":209,"endColumn":16,"suggestions":"4295"},{"ruleId":"4153","severity":1,"message":"4296","line":1,"column":56,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":69},{"ruleId":"4167","severity":1,"message":"4168","line":106,"column":34,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":109,"column":34,"nodeType":"4169","messageId":"4170","endLine":109,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":112,"column":34,"nodeType":"4169","messageId":"4170","endLine":112,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":116,"column":34,"nodeType":"4169","messageId":"4170","endLine":116,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4297","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4298","line":33,"column":11,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4159","line":36,"column":9,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4299","line":44,"column":10,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4300","line":44,"column":18,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4301","line":46,"column":10,"nodeType":"4155","messageId":"4156","endLine":46,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4302","line":47,"column":10,"nodeType":"4155","messageId":"4156","endLine":47,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4303","line":47,"column":17,"nodeType":"4155","messageId":"4156","endLine":47,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4304","line":48,"column":10,"nodeType":"4155","messageId":"4156","endLine":48,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4305","line":48,"column":21,"nodeType":"4155","messageId":"4156","endLine":48,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4276","line":58,"column":10,"nodeType":"4155","messageId":"4156","endLine":58,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4265","line":62,"column":10,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4306","line":64,"column":10,"nodeType":"4155","messageId":"4156","endLine":64,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4266","line":65,"column":10,"nodeType":"4155","messageId":"4156","endLine":65,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4307","line":72,"column":11,"nodeType":"4155","messageId":"4156","endLine":72,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4308","line":72,"column":25,"nodeType":"4155","messageId":"4156","endLine":72,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":72,"column":35,"nodeType":"4155","messageId":"4156","endLine":72,"endColumn":40},{"ruleId":"4163","severity":1,"message":"4309","line":100,"column":6,"nodeType":"4165","endLine":100,"endColumn":10,"suggestions":"4310"},{"ruleId":"4153","severity":1,"message":"4311","line":124,"column":9,"nodeType":"4155","messageId":"4156","endLine":124,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4312","line":126,"column":10,"nodeType":"4155","messageId":"4156","endLine":126,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4313","line":127,"column":10,"nodeType":"4155","messageId":"4156","endLine":127,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4314","line":144,"column":6,"nodeType":"4165","endLine":144,"endColumn":15,"suggestions":"4315"},{"ruleId":"4163","severity":1,"message":"4316","line":150,"column":6,"nodeType":"4165","endLine":150,"endColumn":13,"suggestions":"4317"},{"ruleId":"4177","severity":1,"message":"4280","line":170,"column":21,"nodeType":"4179","messageId":"4180","endLine":170,"endColumn":23},{"ruleId":"4177","severity":1,"message":"4280","line":174,"column":26,"nodeType":"4179","messageId":"4180","endLine":174,"endColumn":28},{"ruleId":"4181","severity":1,"message":"4182","line":208,"column":6,"nodeType":"4183","messageId":"4184","endLine":210,"endColumn":39},{"ruleId":"4181","severity":1,"message":"4182","line":211,"column":7,"nodeType":"4183","messageId":"4184","endLine":213,"endColumn":45},{"ruleId":"4181","severity":1,"message":"4182","line":214,"column":6,"nodeType":"4183","messageId":"4184","endLine":215,"endColumn":47},{"ruleId":"4181","severity":1,"message":"4182","line":216,"column":6,"nodeType":"4183","messageId":"4184","endLine":217,"endColumn":38},{"ruleId":"4181","severity":1,"message":"4182","line":218,"column":7,"nodeType":"4183","messageId":"4184","endLine":220,"endColumn":45},{"ruleId":"4177","severity":1,"message":"4280","line":246,"column":43,"nodeType":"4179","messageId":"4180","endLine":246,"endColumn":45},{"ruleId":"4177","severity":1,"message":"4280","line":319,"column":15,"nodeType":"4179","messageId":"4180","endLine":319,"endColumn":17},{"ruleId":"4177","severity":1,"message":"4280","line":357,"column":17,"nodeType":"4179","messageId":"4180","endLine":357,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4318","line":499,"column":8,"nodeType":"4155","messageId":"4156","endLine":499,"endColumn":11},{"ruleId":"4177","severity":1,"message":"4280","line":517,"column":22,"nodeType":"4179","messageId":"4180","endLine":517,"endColumn":24},{"ruleId":"4177","severity":1,"message":"4280","line":531,"column":24,"nodeType":"4179","messageId":"4180","endLine":531,"endColumn":26},{"ruleId":"4177","severity":1,"message":"4280","line":551,"column":16,"nodeType":"4179","messageId":"4180","endLine":551,"endColumn":18},{"ruleId":"4177","severity":1,"message":"4280","line":554,"column":16,"nodeType":"4179","messageId":"4180","endLine":554,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":649,"column":23,"nodeType":"4169","messageId":"4170","endLine":649,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":682,"column":46,"nodeType":"4169","messageId":"4170","endLine":682,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":701,"column":47,"nodeType":"4169","messageId":"4170","endLine":701,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":778,"column":49,"nodeType":"4169","messageId":"4170","endLine":778,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":785,"column":47,"nodeType":"4169","messageId":"4170","endLine":785,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":100,"column":34,"nodeType":"4169","messageId":"4170","endLine":100,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":103,"column":34,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":106,"column":34,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":90,"column":46,"nodeType":"4169","messageId":"4170","endLine":90,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":93,"column":46,"nodeType":"4169","messageId":"4170","endLine":93,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":96,"column":46,"nodeType":"4169","messageId":"4170","endLine":96,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4249","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4250","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4251","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4252","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4253","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4161","line":19,"column":3,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4254","line":22,"column":10,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4255","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4190","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4319","line":34,"column":12,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4320","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4321","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4322","line":36,"column":28,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":45},{"ruleId":"4163","severity":1,"message":"4256","line":59,"column":8,"nodeType":"4165","endLine":59,"endColumn":10,"suggestions":"4323"},{"ruleId":"4153","severity":1,"message":"4324","line":60,"column":8,"nodeType":"4155","messageId":"4156","endLine":60,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":117,"column":44,"nodeType":"4169","messageId":"4170","endLine":117,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":168,"column":34,"nodeType":"4169","messageId":"4170","endLine":168,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":186,"column":34,"nodeType":"4169","messageId":"4170","endLine":186,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":43,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":45},{"ruleId":"4236","severity":1,"message":"4237","line":207,"column":21,"nodeType":"4238","messageId":"4239","endLine":207,"endColumn":76,"fix":"4325"},{"ruleId":"4167","severity":1,"message":"4168","line":231,"column":40,"nodeType":"4169","messageId":"4170","endLine":231,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":233,"column":28,"nodeType":"4169","messageId":"4170","endLine":233,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":235,"column":26,"nodeType":"4169","messageId":"4170","endLine":235,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4326","line":252,"column":13,"nodeType":"4155","messageId":"4156","endLine":252,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4327","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":30},{"ruleId":"4153","severity":1,"message":"4186","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":19,"column":3,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":20,"column":3,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4298","line":41,"column":11,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4159","line":44,"column":9,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4299","line":52,"column":10,"nodeType":"4155","messageId":"4156","endLine":52,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4300","line":52,"column":18,"nodeType":"4155","messageId":"4156","endLine":52,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4301","line":54,"column":10,"nodeType":"4155","messageId":"4156","endLine":54,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4302","line":55,"column":10,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4303","line":55,"column":17,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4304","line":56,"column":10,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4305","line":56,"column":21,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4330","line":59,"column":10,"nodeType":"4155","messageId":"4156","endLine":59,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4276","line":66,"column":10,"nodeType":"4155","messageId":"4156","endLine":66,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4265","line":70,"column":10,"nodeType":"4155","messageId":"4156","endLine":70,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4331","line":71,"column":10,"nodeType":"4155","messageId":"4156","endLine":71,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4306","line":72,"column":10,"nodeType":"4155","messageId":"4156","endLine":72,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4266","line":73,"column":10,"nodeType":"4155","messageId":"4156","endLine":73,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4332","line":74,"column":10,"nodeType":"4155","messageId":"4156","endLine":74,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4333","line":74,"column":22,"nodeType":"4155","messageId":"4156","endLine":74,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4334","line":75,"column":10,"nodeType":"4155","messageId":"4156","endLine":75,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4335","line":75,"column":14,"nodeType":"4155","messageId":"4156","endLine":75,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4336","line":76,"column":10,"nodeType":"4155","messageId":"4156","endLine":76,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4337","line":76,"column":17,"nodeType":"4155","messageId":"4156","endLine":76,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4338","line":77,"column":10,"nodeType":"4155","messageId":"4156","endLine":77,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4339","line":77,"column":16,"nodeType":"4155","messageId":"4156","endLine":77,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4340","line":78,"column":10,"nodeType":"4155","messageId":"4156","endLine":78,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4341","line":78,"column":19,"nodeType":"4155","messageId":"4156","endLine":78,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4307","line":87,"column":11,"nodeType":"4155","messageId":"4156","endLine":87,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4206","line":87,"column":35,"nodeType":"4155","messageId":"4156","endLine":87,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4342","line":93,"column":7,"nodeType":"4155","messageId":"4156","endLine":93,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4343","line":95,"column":7,"nodeType":"4155","messageId":"4156","endLine":95,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4344","line":96,"column":7,"nodeType":"4155","messageId":"4156","endLine":96,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4345","line":97,"column":7,"nodeType":"4155","messageId":"4156","endLine":97,"endColumn":21},{"ruleId":"4277","severity":1,"message":"4346","line":98,"column":7,"nodeType":"4155","messageId":"4279","endLine":98,"endColumn":9},{"ruleId":"4163","severity":1,"message":"4347","line":142,"column":6,"nodeType":"4165","endLine":142,"endColumn":10,"suggestions":"4348"},{"ruleId":"4153","severity":1,"message":"4349","line":178,"column":9,"nodeType":"4155","messageId":"4156","endLine":178,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4350","line":179,"column":9,"nodeType":"4155","messageId":"4156","endLine":179,"endColumn":27},{"ruleId":"4177","severity":1,"message":"4280","line":180,"column":21,"nodeType":"4179","messageId":"4180","endLine":180,"endColumn":23},{"ruleId":"4181","severity":1,"message":"4182","line":205,"column":7,"nodeType":"4183","messageId":"4184","endLine":207,"endColumn":41},{"ruleId":"4181","severity":1,"message":"4182","line":208,"column":9,"nodeType":"4183","messageId":"4184","endLine":210,"endColumn":47},{"ruleId":"4181","severity":1,"message":"4182","line":215,"column":7,"nodeType":"4183","messageId":"4184","endLine":218,"endColumn":8},{"ruleId":"4181","severity":1,"message":"4182","line":222,"column":7,"nodeType":"4183","messageId":"4184","endLine":225,"endColumn":8},{"ruleId":"4181","severity":1,"message":"4182","line":228,"column":7,"nodeType":"4183","messageId":"4184","endLine":232,"endColumn":8},{"ruleId":"4181","severity":1,"message":"4182","line":234,"column":7,"nodeType":"4183","messageId":"4184","endLine":237,"endColumn":8},{"ruleId":"4177","severity":1,"message":"4280","line":259,"column":43,"nodeType":"4179","messageId":"4180","endLine":259,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4197","line":433,"column":11,"nodeType":"4169","messageId":"4170","endLine":433,"endColumn":13},{"ruleId":"4167","severity":1,"message":"4168","line":514,"column":23,"nodeType":"4169","messageId":"4170","endLine":514,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":573,"column":47,"nodeType":"4169","messageId":"4170","endLine":573,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":594,"column":45,"nodeType":"4169","messageId":"4170","endLine":594,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":666,"column":53,"nodeType":"4169","messageId":"4170","endLine":666,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4168","line":673,"column":52,"nodeType":"4169","messageId":"4170","endLine":673,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4188","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4327","line":20,"column":8,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":30},{"ruleId":"4153","severity":1,"message":"4159","line":23,"column":9,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4351","line":28,"column":10,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4352","line":28,"column":21,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4353","line":284,"column":9,"nodeType":"4155","messageId":"4156","endLine":284,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":20,"column":9,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4354","line":23,"column":10,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4355","line":23,"column":18,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4349","line":26,"column":7,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":9},{"ruleId":"4181","severity":1,"message":"4182","line":40,"column":5,"nodeType":"4183","messageId":"4184","endLine":53,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4356","line":131,"column":9,"nodeType":"4155","messageId":"4156","endLine":131,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4168","line":175,"column":43,"nodeType":"4169","messageId":"4170","endLine":175,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4168","line":181,"column":47,"nodeType":"4169","messageId":"4170","endLine":181,"endColumn":49},{"ruleId":"4163","severity":1,"message":"4309","line":266,"column":6,"nodeType":"4165","endLine":266,"endColumn":8,"suggestions":"4357"},{"ruleId":"4153","severity":1,"message":"4358","line":271,"column":11,"nodeType":"4155","messageId":"4156","endLine":271,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4353","line":282,"column":9,"nodeType":"4155","messageId":"4156","endLine":282,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4241","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4167","severity":1,"message":"4197","line":35,"column":27,"nodeType":"4169","messageId":"4170","endLine":35,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":89,"column":32,"nodeType":"4169","messageId":"4170","endLine":89,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4293","line":22,"column":24,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":39},{"ruleId":"4163","severity":1,"message":"4294","line":43,"column":6,"nodeType":"4165","endLine":43,"endColumn":16,"suggestions":"4359"},{"ruleId":"4167","severity":1,"message":"4168","line":192,"column":42,"nodeType":"4169","messageId":"4170","endLine":192,"endColumn":44},{"ruleId":"4167","severity":1,"message":"4168","line":192,"column":72,"nodeType":"4169","messageId":"4170","endLine":192,"endColumn":74},{"ruleId":"4167","severity":1,"message":"4168","line":224,"column":39,"nodeType":"4169","messageId":"4170","endLine":224,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4360","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4361","line":3,"column":15,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4362","line":3,"column":21,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4363","line":3,"column":30,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":38},{"ruleId":"4153","severity":1,"message":"4364","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4185","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4187","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4366","line":16,"column":12,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4367","line":16,"column":22,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4215","line":12,"column":8,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":25,"column":9,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":27,"column":35,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":65,"column":14,"nodeType":"4169","messageId":"4170","endLine":65,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4368","line":2,"column":17,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4217","line":3,"column":8,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4369","line":7,"column":9,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4284","line":6,"column":27,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4198","line":7,"column":10,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4186","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":5,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4285","line":16,"column":5,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4206","line":33,"column":45,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":50},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4220","line":28,"column":6,"nodeType":"4165","endLine":28,"endColumn":10,"suggestions":"4370"},{"ruleId":"4153","severity":1,"message":"4198","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4241","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4244","line":27,"column":12,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4245","line":27,"column":18,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4242","line":32,"column":8,"nodeType":"4165","endLine":32,"endColumn":10,"suggestions":"4371"},{"ruleId":"4167","severity":1,"message":"4168","line":98,"column":45,"nodeType":"4169","messageId":"4170","endLine":98,"endColumn":47},{"ruleId":"4181","severity":1,"message":"4372","line":186,"column":1,"nodeType":"4183","messageId":"4373","endLine":201,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4374","line":27,"column":11,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4375","line":48,"column":8,"nodeType":"4165","endLine":48,"endColumn":10,"suggestions":"4376"},{"ruleId":"4153","severity":1,"message":"4187","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4159","line":40,"column":9,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":41,"column":9,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4224","line":67,"column":6,"nodeType":"4165","endLine":67,"endColumn":12,"suggestions":"4377"},{"ruleId":"4153","severity":1,"message":"4188","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4194","line":14,"column":10,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4327","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":30},{"ruleId":"4153","severity":1,"message":"4159","line":23,"column":9,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4351","line":27,"column":10,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4352","line":27,"column":21,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4356","line":31,"column":7,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":13},{"ruleId":"4181","severity":1,"message":"4182","line":185,"column":5,"nodeType":"4183","messageId":"4184","endLine":197,"endColumn":6},{"ruleId":"4378","severity":1,"message":"4379","line":186,"column":12,"nodeType":"4380","messageId":"4381","endLine":186,"endColumn":13,"fix":"4382"},{"ruleId":"4153","severity":1,"message":"4383","line":204,"column":9,"nodeType":"4155","messageId":"4156","endLine":204,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4161","line":7,"column":23,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":29},{"ruleId":"4163","severity":1,"message":"4384","line":17,"column":8,"nodeType":"4165","endLine":17,"endColumn":10,"suggestions":"4385"},{"ruleId":"4236","severity":1,"message":"4237","line":99,"column":16,"nodeType":"4238","messageId":"4239","endLine":99,"endColumn":76,"fix":"4386"},{"ruleId":"4153","severity":1,"message":"4213","line":8,"column":10,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4214","line":9,"column":13,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4215","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4387","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":53},{"ruleId":"4153","severity":1,"message":"4261","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4262","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":39,"column":46,"nodeType":"4169","messageId":"4170","endLine":39,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":42,"column":46,"nodeType":"4169","messageId":"4170","endLine":42,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4161","line":13,"column":24,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":30},{"ruleId":"4236","severity":1,"message":"4237","line":246,"column":17,"nodeType":"4238","messageId":"4239","endLine":248,"endColumn":16,"fix":"4388"},{"ruleId":"4153","severity":1,"message":"4215","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":30,"column":35,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":89,"column":97,"nodeType":"4169","messageId":"4170","endLine":89,"endColumn":99},{"ruleId":"4153","severity":1,"message":"4389","line":54,"column":23,"nodeType":"4155","messageId":"4156","endLine":54,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4390","line":55,"column":5,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":28},{"ruleId":"4163","severity":1,"message":"4391","line":154,"column":6,"nodeType":"4165","endLine":154,"endColumn":8,"suggestions":"4392"},{"ruleId":"4153","severity":1,"message":"4255","line":10,"column":10,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4161","line":10,"column":22,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4185","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4186","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":20,"column":3,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4393","line":30,"column":12,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4394","line":30,"column":25,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4395","line":32,"column":12,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4264","line":39,"column":10,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4396","line":41,"column":10,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4266","line":42,"column":10,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4397","line":51,"column":10,"nodeType":"4155","messageId":"4156","endLine":51,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4398","line":51,"column":16,"nodeType":"4155","messageId":"4156","endLine":51,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4281","line":56,"column":7,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4399","line":57,"column":7,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4400","line":58,"column":7,"nodeType":"4155","messageId":"4156","endLine":58,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4263","line":61,"column":45,"nodeType":"4155","messageId":"4156","endLine":61,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4401","line":64,"column":8,"nodeType":"4155","messageId":"4156","endLine":64,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4402","line":98,"column":6,"nodeType":"4165","endLine":98,"endColumn":8,"suggestions":"4403"},{"ruleId":"4153","severity":1,"message":"4358","line":103,"column":11,"nodeType":"4155","messageId":"4156","endLine":103,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4404","line":114,"column":6,"nodeType":"4165","endLine":114,"endColumn":13,"suggestions":"4405"},{"ruleId":"4153","severity":1,"message":"4244","line":133,"column":15,"nodeType":"4155","messageId":"4156","endLine":133,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":295,"column":19,"nodeType":"4179","messageId":"4180","endLine":295,"endColumn":21},{"ruleId":"4177","severity":1,"message":"4280","line":341,"column":17,"nodeType":"4179","messageId":"4180","endLine":341,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":350,"column":17,"nodeType":"4179","messageId":"4180","endLine":350,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":357,"column":15,"nodeType":"4179","messageId":"4180","endLine":357,"endColumn":17},{"ruleId":"4177","severity":1,"message":"4280","line":367,"column":15,"nodeType":"4179","messageId":"4180","endLine":367,"endColumn":17},{"ruleId":"4177","severity":1,"message":"4280","line":376,"column":15,"nodeType":"4179","messageId":"4180","endLine":376,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":499,"column":49,"nodeType":"4169","messageId":"4170","endLine":499,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":506,"column":47,"nodeType":"4169","messageId":"4170","endLine":506,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4213","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4214","line":6,"column":13,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4406","line":27,"column":35,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4404","line":27,"column":6,"nodeType":"4165","endLine":27,"endColumn":8,"suggestions":"4407"},{"ruleId":"4153","severity":1,"message":"4353","line":156,"column":9,"nodeType":"4155","messageId":"4156","endLine":156,"endColumn":12},{"ruleId":"4163","severity":1,"message":"4391","line":104,"column":8,"nodeType":"4165","endLine":104,"endColumn":10,"suggestions":"4408"},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":46,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":46,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":125,"column":46,"nodeType":"4169","messageId":"4170","endLine":125,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":128,"column":46,"nodeType":"4169","messageId":"4170","endLine":128,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":33,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4198","line":7,"column":10,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4186","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4409","line":19,"column":10,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4406","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4410","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":26},{"ruleId":"4163","severity":1,"message":"4411","line":34,"column":6,"nodeType":"4165","endLine":34,"endColumn":8,"suggestions":"4412"},{"ruleId":"4167","severity":1,"message":"4168","line":53,"column":39,"nodeType":"4169","messageId":"4170","endLine":53,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":53,"column":65,"nodeType":"4169","messageId":"4170","endLine":53,"endColumn":67},{"ruleId":"4167","severity":1,"message":"4168","line":167,"column":38,"nodeType":"4169","messageId":"4170","endLine":167,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":168,"column":37,"nodeType":"4169","messageId":"4170","endLine":168,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":169,"column":34,"nodeType":"4169","messageId":"4170","endLine":169,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":38,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":171,"column":33,"nodeType":"4169","messageId":"4170","endLine":171,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":389,"column":47,"nodeType":"4169","messageId":"4170","endLine":389,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":437,"column":44,"nodeType":"4169","messageId":"4170","endLine":437,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":486,"column":46,"nodeType":"4169","messageId":"4170","endLine":486,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":536,"column":46,"nodeType":"4169","messageId":"4170","endLine":536,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4185","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4186","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4189","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4190","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4413","line":38,"column":10,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4191","line":39,"column":10,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":97,"column":40,"nodeType":"4169","messageId":"4170","endLine":97,"endColumn":42},{"ruleId":"4163","severity":1,"message":"4192","line":202,"column":6,"nodeType":"4165","endLine":202,"endColumn":16,"suggestions":"4414"},{"ruleId":"4153","severity":1,"message":"4406","line":13,"column":35,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4206","line":13,"column":43,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4241","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":19,"column":9,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4415","line":26,"column":6,"nodeType":"4165","endLine":26,"endColumn":8,"suggestions":"4416"},{"ruleId":"4167","severity":1,"message":"4168","line":76,"column":29,"nodeType":"4169","messageId":"4170","endLine":76,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4186","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4159","line":34,"column":9,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4417","line":56,"column":9,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4418","line":75,"column":6,"nodeType":"4165","endLine":75,"endColumn":8,"suggestions":"4419"},{"ruleId":"4163","severity":1,"message":"4229","line":104,"column":6,"nodeType":"4165","endLine":104,"endColumn":15,"suggestions":"4420"},{"ruleId":"4167","severity":1,"message":"4168","line":128,"column":22,"nodeType":"4169","messageId":"4170","endLine":128,"endColumn":24},{"ruleId":"4163","severity":1,"message":"4247","line":32,"column":6,"nodeType":"4165","endLine":32,"endColumn":8,"suggestions":"4421"},{"ruleId":"4167","severity":1,"message":"4168","line":97,"column":34,"nodeType":"4169","messageId":"4170","endLine":97,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":100,"column":34,"nodeType":"4169","messageId":"4170","endLine":100,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":103,"column":34,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4163","severity":1,"message":"4391","line":89,"column":6,"nodeType":"4165","endLine":89,"endColumn":8,"suggestions":"4422"},{"ruleId":"4167","severity":1,"message":"4168","line":104,"column":34,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":107,"column":34,"nodeType":"4169","messageId":"4170","endLine":107,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":110,"column":34,"nodeType":"4169","messageId":"4170","endLine":110,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4423","line":23,"column":10,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":18},{"ruleId":"4163","severity":1,"message":"4391","line":113,"column":6,"nodeType":"4165","endLine":113,"endColumn":8,"suggestions":"4424"},{"ruleId":"4167","severity":1,"message":"4168","line":130,"column":34,"nodeType":"4169","messageId":"4170","endLine":130,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":134,"column":34,"nodeType":"4169","messageId":"4170","endLine":134,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":137,"column":34,"nodeType":"4169","messageId":"4170","endLine":137,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":140,"column":34,"nodeType":"4169","messageId":"4170","endLine":140,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4159","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":30,"column":35,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4425","line":35,"column":10,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4426","line":38,"column":10,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4427","line":38,"column":16,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4428","line":47,"column":8,"nodeType":"4155","messageId":"4156","endLine":47,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4429","line":61,"column":7,"nodeType":"4155","messageId":"4156","endLine":61,"endColumn":12},{"ruleId":"4163","severity":1,"message":"4229","line":71,"column":6,"nodeType":"4165","endLine":71,"endColumn":8,"suggestions":"4430"},{"ruleId":"4167","severity":1,"message":"4168","line":127,"column":23,"nodeType":"4169","messageId":"4170","endLine":127,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":132,"column":23,"nodeType":"4169","messageId":"4170","endLine":132,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":151,"column":19,"nodeType":"4169","messageId":"4170","endLine":151,"endColumn":21},{"ruleId":"4167","severity":1,"message":"4168","line":153,"column":21,"nodeType":"4169","messageId":"4170","endLine":153,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":161,"column":25,"nodeType":"4169","messageId":"4170","endLine":161,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":162,"column":25,"nodeType":"4169","messageId":"4170","endLine":162,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":174,"column":31,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":174,"column":50,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":178,"column":29,"nodeType":"4169","messageId":"4170","endLine":178,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":178,"column":46,"nodeType":"4169","messageId":"4170","endLine":178,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4197","line":187,"column":33,"nodeType":"4169","messageId":"4170","endLine":187,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":215,"column":32,"nodeType":"4169","messageId":"4170","endLine":215,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":248,"column":28,"nodeType":"4169","messageId":"4170","endLine":248,"endColumn":30},{"ruleId":"4177","severity":1,"message":"4280","line":261,"column":45,"nodeType":"4179","messageId":"4180","endLine":261,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":271,"column":45,"nodeType":"4179","messageId":"4180","endLine":271,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4431","line":290,"column":5,"nodeType":"4155","messageId":"4156","endLine":290,"endColumn":6},{"ruleId":"4167","severity":1,"message":"4168","line":477,"column":32,"nodeType":"4169","messageId":"4170","endLine":477,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":492,"column":33,"nodeType":"4169","messageId":"4170","endLine":492,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":506,"column":33,"nodeType":"4169","messageId":"4170","endLine":506,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":9,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":33,"column":35,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4264","line":42,"column":10,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4265","line":43,"column":10,"nodeType":"4155","messageId":"4156","endLine":43,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4266","line":48,"column":10,"nodeType":"4155","messageId":"4156","endLine":48,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4267","line":54,"column":10,"nodeType":"4155","messageId":"4156","endLine":54,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4432","line":55,"column":10,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4172","line":55,"column":17,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4276","line":59,"column":10,"nodeType":"4155","messageId":"4156","endLine":59,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4336","line":62,"column":10,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4337","line":62,"column":17,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4433","line":75,"column":7,"nodeType":"4155","messageId":"4156","endLine":75,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4434","line":87,"column":9,"nodeType":"4155","messageId":"4156","endLine":87,"endColumn":20},{"ruleId":"4277","severity":1,"message":"4278","line":134,"column":9,"nodeType":"4155","messageId":"4279","endLine":134,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4349","line":135,"column":9,"nodeType":"4155","messageId":"4156","endLine":135,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4350","line":137,"column":9,"nodeType":"4155","messageId":"4156","endLine":137,"endColumn":27},{"ruleId":"4177","severity":1,"message":"4280","line":138,"column":21,"nodeType":"4179","messageId":"4180","endLine":138,"endColumn":23},{"ruleId":"4177","severity":1,"message":"4280","line":195,"column":43,"nodeType":"4179","messageId":"4180","endLine":195,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4431","line":313,"column":9,"nodeType":"4155","messageId":"4156","endLine":313,"endColumn":10},{"ruleId":"4177","severity":1,"message":"4178","line":315,"column":27,"nodeType":"4179","messageId":"4180","endLine":315,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":317,"column":16,"nodeType":"4169","messageId":"4170","endLine":317,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":492,"column":49,"nodeType":"4169","messageId":"4170","endLine":492,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":499,"column":47,"nodeType":"4169","messageId":"4170","endLine":499,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4194","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4435","line":32,"column":6,"nodeType":"4165","endLine":32,"endColumn":16,"suggestions":"4436"},{"ruleId":"4167","severity":1,"message":"4168","line":295,"column":39,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4437","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4431","line":72,"column":17,"nodeType":"4155","messageId":"4156","endLine":72,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4431","line":83,"column":25,"nodeType":"4155","messageId":"4156","endLine":83,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4198","line":18,"column":10,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4438","line":32,"column":11,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4439","line":36,"column":10,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":15},{"ruleId":"4163","severity":1,"message":"4440","line":93,"column":6,"nodeType":"4165","endLine":93,"endColumn":8,"suggestions":"4441"},{"ruleId":"4167","severity":1,"message":"4168","line":239,"column":32,"nodeType":"4169","messageId":"4170","endLine":239,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":400,"column":31,"nodeType":"4169","messageId":"4170","endLine":400,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4442","line":485,"column":9,"nodeType":"4155","messageId":"4156","endLine":485,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4159","line":32,"column":9,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4438","line":33,"column":11,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4439","line":38,"column":10,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":15},{"ruleId":"4163","severity":1,"message":"4440","line":95,"column":6,"nodeType":"4165","endLine":95,"endColumn":8,"suggestions":"4443"},{"ruleId":"4167","severity":1,"message":"4168","line":241,"column":32,"nodeType":"4169","messageId":"4170","endLine":241,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":391,"column":31,"nodeType":"4169","messageId":"4170","endLine":391,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4439","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":94,"column":8,"nodeType":"4165","endLine":94,"endColumn":10,"suggestions":"4444"},{"ruleId":"4167","severity":1,"message":"4168","line":239,"column":36,"nodeType":"4169","messageId":"4170","endLine":239,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":359,"column":41,"nodeType":"4169","messageId":"4170","endLine":359,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4190","line":17,"column":9,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4445","line":3,"column":8,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4431","line":30,"column":9,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":10},{"ruleId":"4446","severity":1,"message":"4447","line":43,"column":1,"nodeType":"4448","endLine":48,"endColumn":3},{"ruleId":"4446","severity":1,"message":"4447","line":135,"column":1,"nodeType":"4448","endLine":145,"endColumn":3},{"ruleId":"4167","severity":1,"message":"4168","line":83,"column":44,"nodeType":"4169","messageId":"4170","endLine":83,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":24,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":106,"column":34,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":31,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":5,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":5,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":5,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4449","line":37,"column":8,"nodeType":"4165","endLine":37,"endColumn":10,"suggestions":"4450"},{"ruleId":"4167","severity":1,"message":"4168","line":179,"column":44,"nodeType":"4169","messageId":"4170","endLine":179,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":185,"column":48,"nodeType":"4169","messageId":"4170","endLine":185,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":190,"column":52,"nodeType":"4169","messageId":"4170","endLine":190,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":215,"column":40,"nodeType":"4169","messageId":"4170","endLine":215,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":226,"column":35,"nodeType":"4169","messageId":"4170","endLine":226,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4190","line":21,"column":11,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4406","line":24,"column":37,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4451","line":25,"column":21,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4439","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4452","line":32,"column":12,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4453","line":57,"column":17,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":20},{"ruleId":"4163","severity":1,"message":"4411","line":72,"column":8,"nodeType":"4165","endLine":72,"endColumn":10,"suggestions":"4454"},{"ruleId":"4167","severity":1,"message":"4197","line":90,"column":29,"nodeType":"4169","messageId":"4170","endLine":90,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4197","line":152,"column":24,"nodeType":"4169","messageId":"4170","endLine":152,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":152,"column":45,"nodeType":"4169","messageId":"4170","endLine":152,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4197","line":156,"column":29,"nodeType":"4169","messageId":"4170","endLine":156,"endColumn":31},{"ruleId":"4455","severity":1,"message":"4456","line":255,"column":11,"nodeType":"4457","messageId":"4170","endLine":255,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":262,"column":34,"nodeType":"4169","messageId":"4170","endLine":262,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":269,"column":56,"nodeType":"4169","messageId":"4170","endLine":269,"endColumn":58},{"ruleId":"4167","severity":1,"message":"4168","line":275,"column":52,"nodeType":"4169","messageId":"4170","endLine":275,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":281,"column":56,"nodeType":"4169","messageId":"4170","endLine":281,"endColumn":58},{"ruleId":"4167","severity":1,"message":"4168","line":287,"column":55,"nodeType":"4169","messageId":"4170","endLine":287,"endColumn":57},{"ruleId":"4167","severity":1,"message":"4168","line":293,"column":51,"nodeType":"4169","messageId":"4170","endLine":293,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":334,"column":48,"nodeType":"4169","messageId":"4170","endLine":334,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":354,"column":37,"nodeType":"4169","messageId":"4170","endLine":354,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":387,"column":37,"nodeType":"4169","messageId":"4170","endLine":387,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":405,"column":34,"nodeType":"4169","messageId":"4170","endLine":405,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":416,"column":43,"nodeType":"4169","messageId":"4170","endLine":416,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4168","line":416,"column":78,"nodeType":"4169","messageId":"4170","endLine":416,"endColumn":80},{"ruleId":"4167","severity":1,"message":"4197","line":416,"column":113,"nodeType":"4169","messageId":"4170","endLine":416,"endColumn":115},{"ruleId":"4167","severity":1,"message":"4168","line":428,"column":43,"nodeType":"4169","messageId":"4170","endLine":428,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4168","line":428,"column":78,"nodeType":"4169","messageId":"4170","endLine":428,"endColumn":80},{"ruleId":"4167","severity":1,"message":"4168","line":428,"column":117,"nodeType":"4169","messageId":"4170","endLine":428,"endColumn":119},{"ruleId":"4153","severity":1,"message":"4190","line":21,"column":11,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4406","line":24,"column":37,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4451","line":25,"column":21,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4439","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":28,"column":12,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":28,"column":16,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4452","line":33,"column":12,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4459","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4460","line":36,"column":18,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4411","line":63,"column":8,"nodeType":"4165","endLine":63,"endColumn":10,"suggestions":"4461"},{"ruleId":"4167","severity":1,"message":"4197","line":81,"column":29,"nodeType":"4169","messageId":"4170","endLine":81,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4453","line":131,"column":15,"nodeType":"4155","messageId":"4156","endLine":131,"endColumn":18},{"ruleId":"4455","severity":1,"message":"4456","line":239,"column":13,"nodeType":"4457","messageId":"4170","endLine":239,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":246,"column":36,"nodeType":"4169","messageId":"4170","endLine":246,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":253,"column":58,"nodeType":"4169","messageId":"4170","endLine":253,"endColumn":60},{"ruleId":"4167","severity":1,"message":"4168","line":259,"column":54,"nodeType":"4169","messageId":"4170","endLine":259,"endColumn":56},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":58,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":60},{"ruleId":"4167","severity":1,"message":"4168","line":271,"column":57,"nodeType":"4169","messageId":"4170","endLine":271,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":277,"column":53,"nodeType":"4169","messageId":"4170","endLine":277,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4168","line":318,"column":48,"nodeType":"4169","messageId":"4170","endLine":318,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":338,"column":37,"nodeType":"4169","messageId":"4170","endLine":338,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":371,"column":37,"nodeType":"4169","messageId":"4170","endLine":371,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":392,"column":34,"nodeType":"4169","messageId":"4170","endLine":392,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":30,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":65,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":67},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":104,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":106},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":142,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":144},{"ruleId":"4167","severity":1,"message":"4197","line":478,"column":28,"nodeType":"4169","messageId":"4170","endLine":478,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4197","line":478,"column":49,"nodeType":"4169","messageId":"4170","endLine":478,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4197","line":482,"column":33,"nodeType":"4169","messageId":"4170","endLine":482,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4462","line":2,"column":19,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":32},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4463","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4215","line":22,"column":8,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4425","line":39,"column":10,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4464","line":43,"column":17,"nodeType":"4155","messageId":"4156","endLine":43,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4465","line":72,"column":6,"nodeType":"4165","endLine":72,"endColumn":8,"suggestions":"4466"},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":23,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":100,"column":23,"nodeType":"4169","messageId":"4170","endLine":100,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":19,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":21},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":21,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":132,"column":25,"nodeType":"4169","messageId":"4170","endLine":132,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":133,"column":25,"nodeType":"4169","messageId":"4170","endLine":133,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":147,"column":31,"nodeType":"4169","messageId":"4170","endLine":147,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":147,"column":50,"nodeType":"4169","messageId":"4170","endLine":147,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":152,"column":29,"nodeType":"4169","messageId":"4170","endLine":152,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":152,"column":46,"nodeType":"4169","messageId":"4170","endLine":152,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4197","line":162,"column":33,"nodeType":"4169","messageId":"4170","endLine":162,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":190,"column":32,"nodeType":"4169","messageId":"4170","endLine":190,"endColumn":34},{"ruleId":"4177","severity":1,"message":"4280","line":225,"column":45,"nodeType":"4179","messageId":"4180","endLine":225,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":235,"column":45,"nodeType":"4179","messageId":"4180","endLine":235,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":256,"column":28,"nodeType":"4169","messageId":"4170","endLine":256,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":453,"column":32,"nodeType":"4169","messageId":"4170","endLine":453,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":468,"column":33,"nodeType":"4169","messageId":"4170","endLine":468,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":481,"column":33,"nodeType":"4169","messageId":"4170","endLine":481,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":25,"column":9,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4406","line":27,"column":35,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4451","line":28,"column":19,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4439","line":29,"column":10,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":15},{"ruleId":"4163","severity":1,"message":"4411","line":69,"column":6,"nodeType":"4165","endLine":69,"endColumn":8,"suggestions":"4467"},{"ruleId":"4167","severity":1,"message":"4197","line":87,"column":22,"nodeType":"4169","messageId":"4170","endLine":87,"endColumn":24},{"ruleId":"4455","severity":1,"message":"4456","line":235,"column":7,"nodeType":"4457","messageId":"4170","endLine":235,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":242,"column":30,"nodeType":"4169","messageId":"4170","endLine":242,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":249,"column":52,"nodeType":"4169","messageId":"4170","endLine":249,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":255,"column":48,"nodeType":"4169","messageId":"4170","endLine":255,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":261,"column":52,"nodeType":"4169","messageId":"4170","endLine":261,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":267,"column":51,"nodeType":"4169","messageId":"4170","endLine":267,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":273,"column":47,"nodeType":"4169","messageId":"4170","endLine":273,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":314,"column":40,"nodeType":"4169","messageId":"4170","endLine":314,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":334,"column":31,"nodeType":"4169","messageId":"4170","endLine":334,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":367,"column":31,"nodeType":"4169","messageId":"4170","endLine":367,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":388,"column":28,"nodeType":"4169","messageId":"4170","endLine":388,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":436,"column":37,"nodeType":"4169","messageId":"4170","endLine":436,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":436,"column":72,"nodeType":"4169","messageId":"4170","endLine":436,"endColumn":74},{"ruleId":"4167","severity":1,"message":"4197","line":436,"column":107,"nodeType":"4169","messageId":"4170","endLine":436,"endColumn":109},{"ruleId":"4167","severity":1,"message":"4168","line":448,"column":37,"nodeType":"4169","messageId":"4170","endLine":448,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":448,"column":72,"nodeType":"4169","messageId":"4170","endLine":448,"endColumn":74},{"ruleId":"4167","severity":1,"message":"4168","line":448,"column":111,"nodeType":"4169","messageId":"4170","endLine":448,"endColumn":113},{"ruleId":"4167","severity":1,"message":"4168","line":460,"column":24,"nodeType":"4169","messageId":"4170","endLine":460,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":460,"column":59,"nodeType":"4169","messageId":"4170","endLine":460,"endColumn":61},{"ruleId":"4167","severity":1,"message":"4168","line":460,"column":98,"nodeType":"4169","messageId":"4170","endLine":460,"endColumn":100},{"ruleId":"4167","severity":1,"message":"4168","line":460,"column":136,"nodeType":"4169","messageId":"4170","endLine":460,"endColumn":138},{"ruleId":"4167","severity":1,"message":"4197","line":538,"column":24,"nodeType":"4169","messageId":"4170","endLine":538,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":538,"column":45,"nodeType":"4169","messageId":"4170","endLine":538,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4197","line":542,"column":29,"nodeType":"4169","messageId":"4170","endLine":542,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4453","line":555,"column":11,"nodeType":"4155","messageId":"4156","endLine":555,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4453","line":572,"column":7,"nodeType":"4155","messageId":"4156","endLine":572,"endColumn":10},{"ruleId":"4167","severity":1,"message":"4168","line":586,"column":11,"nodeType":"4169","messageId":"4170","endLine":586,"endColumn":13},{"ruleId":"4167","severity":1,"message":"4168","line":586,"column":24,"nodeType":"4169","messageId":"4170","endLine":586,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":754,"column":22,"nodeType":"4169","messageId":"4170","endLine":754,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":754,"column":37,"nodeType":"4169","messageId":"4170","endLine":754,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4468","line":24,"column":8,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":11,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":32,"column":13,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":34,"column":11,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":38,"column":12,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":61,"column":8,"nodeType":"4165","endLine":61,"endColumn":10,"suggestions":"4470"},{"ruleId":"4167","severity":1,"message":"4197","line":103,"column":24,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":103,"column":45,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":226,"column":38,"nodeType":"4169","messageId":"4170","endLine":226,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":427,"column":48,"nodeType":"4169","messageId":"4170","endLine":427,"endColumn":50},{"ruleId":"4236","severity":1,"message":"4237","line":517,"column":53,"nodeType":"4238","messageId":"4239","endLine":517,"endColumn":93,"fix":"4471"},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4472","line":24,"column":8,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":32,"column":11,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":33,"column":13,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":35,"column":11,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":39,"column":12,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":64,"column":8,"nodeType":"4165","endLine":64,"endColumn":10,"suggestions":"4473"},{"ruleId":"4167","severity":1,"message":"4197","line":106,"column":24,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":106,"column":45,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":226,"column":38,"nodeType":"4169","messageId":"4170","endLine":226,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":428,"column":48,"nodeType":"4169","messageId":"4170","endLine":428,"endColumn":50},{"ruleId":"4236","severity":1,"message":"4237","line":520,"column":53,"nodeType":"4238","messageId":"4239","endLine":520,"endColumn":93,"fix":"4474"},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4468","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4472","line":26,"column":8,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":11,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":32,"column":13,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":34,"column":11,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":38,"column":12,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":55,"column":8,"nodeType":"4165","endLine":55,"endColumn":10,"suggestions":"4475"},{"ruleId":"4167","severity":1,"message":"4168","line":362,"column":53,"nodeType":"4169","messageId":"4170","endLine":362,"endColumn":55},{"ruleId":"4153","severity":1,"message":"4189","line":7,"column":10,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4307","line":9,"column":13,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4263","line":9,"column":45,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":29,"column":50,"nodeType":"4169","messageId":"4170","endLine":29,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4476","line":18,"column":10,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4477","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4478","line":31,"column":9,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":29},{"ruleId":"4163","severity":1,"message":"4449","line":40,"column":6,"nodeType":"4165","endLine":40,"endColumn":8,"suggestions":"4479"},{"ruleId":"4167","severity":1,"message":"4168","line":198,"column":38,"nodeType":"4169","messageId":"4170","endLine":198,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":204,"column":42,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":44},{"ruleId":"4167","severity":1,"message":"4168","line":209,"column":46,"nodeType":"4169","messageId":"4170","endLine":209,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":333,"column":33,"nodeType":"4169","messageId":"4170","endLine":333,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4449","line":34,"column":6,"nodeType":"4165","endLine":34,"endColumn":8,"suggestions":"4480"},{"ruleId":"4167","severity":1,"message":"4168","line":176,"column":28,"nodeType":"4169","messageId":"4170","endLine":176,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":181,"column":30,"nodeType":"4169","messageId":"4170","endLine":181,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":186,"column":32,"nodeType":"4169","messageId":"4170","endLine":186,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":211,"column":34,"nodeType":"4169","messageId":"4170","endLine":211,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":222,"column":29,"nodeType":"4169","messageId":"4170","endLine":222,"endColumn":31},{"ruleId":"4163","severity":1,"message":"4481","line":41,"column":6,"nodeType":"4165","endLine":41,"endColumn":8,"suggestions":"4482"},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4483","line":2,"column":10,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4194","line":2,"column":22,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4484","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4485","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4486","line":8,"column":8,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4241","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4487","line":19,"column":6,"nodeType":"4165","endLine":19,"endColumn":14,"suggestions":"4488"},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4489","line":8,"column":8,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4308","line":20,"column":25,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":22,"column":9,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4490","line":24,"column":22,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4491","line":25,"column":5,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4492","line":25,"column":20,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4493","line":25,"column":39,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4494","line":26,"column":15,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4208","line":26,"column":28,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4495","line":26,"column":42,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":55},{"ruleId":"4153","severity":1,"message":"4496","line":57,"column":9,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":90,"column":28,"nodeType":"4169","messageId":"4170","endLine":90,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":93,"column":37,"nodeType":"4169","messageId":"4170","endLine":93,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4437","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4489","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4487","line":21,"column":6,"nodeType":"4165","endLine":21,"endColumn":14,"suggestions":"4497"},{"ruleId":"4167","severity":1,"message":"4197","line":25,"column":13,"nodeType":"4169","messageId":"4170","endLine":25,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4168","line":54,"column":41,"nodeType":"4169","messageId":"4170","endLine":54,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":60,"column":32,"nodeType":"4169","messageId":"4170","endLine":60,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4206","line":25,"column":35,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4437","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4498","line":14,"column":7,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4384","line":89,"column":6,"nodeType":"4165","endLine":89,"endColumn":14,"suggestions":"4499"},{"ruleId":"4236","severity":1,"message":"4237","line":147,"column":27,"nodeType":"4238","messageId":"4239","endLine":150,"endColumn":28,"fix":"4500"},{"ruleId":"4236","severity":1,"message":"4237","line":160,"column":23,"nodeType":"4238","messageId":"4239","endLine":163,"endColumn":28,"fix":"4501"},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":41,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":43},{"ruleId":"4502","severity":1,"message":"4503","line":170,"column":46,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":48},{"ruleId":"4502","severity":1,"message":"4503","line":170,"column":64,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":66},{"ruleId":"4502","severity":1,"message":"4506","line":170,"column":64,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":66},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":81,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":83},{"ruleId":"4502","severity":1,"message":"4506","line":170,"column":86,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":88},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4206","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4406","line":9,"column":35,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4507","line":25,"column":5,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4197","line":44,"column":29,"nodeType":"4169","messageId":"4170","endLine":44,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":18,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":20},{"ruleId":"4167","severity":1,"message":"4168","line":114,"column":30,"nodeType":"4169","messageId":"4170","endLine":114,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":134,"column":25,"nodeType":"4169","messageId":"4170","endLine":134,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":152,"column":23,"nodeType":"4169","messageId":"4170","endLine":152,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":168,"column":28,"nodeType":"4169","messageId":"4170","endLine":168,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":187,"column":21,"nodeType":"4169","messageId":"4170","endLine":187,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":28,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":17,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":283,"column":20,"nodeType":"4169","messageId":"4170","endLine":283,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":301,"column":16,"nodeType":"4169","messageId":"4170","endLine":301,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":319,"column":14,"nodeType":"4169","messageId":"4170","endLine":319,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":439,"column":29,"nodeType":"4169","messageId":"4170","endLine":439,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":453,"column":36,"nodeType":"4169","messageId":"4170","endLine":453,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":469,"column":34,"nodeType":"4169","messageId":"4170","endLine":469,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":482,"column":32,"nodeType":"4169","messageId":"4170","endLine":482,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":496,"column":39,"nodeType":"4169","messageId":"4170","endLine":496,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":509,"column":31,"nodeType":"4169","messageId":"4170","endLine":509,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4159","line":12,"column":9,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":13,"column":35,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4159","line":14,"column":9,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":15,"column":35,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4508","line":1,"column":10,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4189","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4406","line":11,"column":35,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4509","line":13,"column":11,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4197","line":41,"column":22,"nodeType":"4169","messageId":"4170","endLine":41,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":90,"column":15,"nodeType":"4169","messageId":"4170","endLine":90,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":115,"column":30,"nodeType":"4169","messageId":"4170","endLine":115,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":164,"column":33,"nodeType":"4169","messageId":"4170","endLine":164,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":186,"column":23,"nodeType":"4169","messageId":"4170","endLine":186,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":210,"column":18,"nodeType":"4169","messageId":"4170","endLine":210,"endColumn":20},{"ruleId":"4167","severity":1,"message":"4168","line":234,"column":28,"nodeType":"4169","messageId":"4170","endLine":234,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":281,"column":26,"nodeType":"4169","messageId":"4170","endLine":281,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":304,"column":26,"nodeType":"4169","messageId":"4170","endLine":304,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":328,"column":20,"nodeType":"4169","messageId":"4170","endLine":328,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":350,"column":20,"nodeType":"4169","messageId":"4170","endLine":350,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":372,"column":20,"nodeType":"4169","messageId":"4170","endLine":372,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":394,"column":20,"nodeType":"4169","messageId":"4170","endLine":394,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":417,"column":20,"nodeType":"4169","messageId":"4170","endLine":417,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":436,"column":16,"nodeType":"4169","messageId":"4170","endLine":436,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":455,"column":14,"nodeType":"4169","messageId":"4170","endLine":455,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":574,"column":26,"nodeType":"4169","messageId":"4170","endLine":574,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":588,"column":41,"nodeType":"4169","messageId":"4170","endLine":588,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":603,"column":34,"nodeType":"4169","messageId":"4170","endLine":603,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":618,"column":29,"nodeType":"4169","messageId":"4170","endLine":618,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":632,"column":39,"nodeType":"4169","messageId":"4170","endLine":632,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":645,"column":31,"nodeType":"4169","messageId":"4170","endLine":645,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":659,"column":31,"nodeType":"4169","messageId":"4170","endLine":659,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4185","line":3,"column":3,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":4,"column":3,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4186","line":5,"column":3,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4510","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4194","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4511","line":36,"column":7,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4512","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4190","line":27,"column":7,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4513","line":49,"column":4,"nodeType":"4165","endLine":49,"endColumn":20,"suggestions":"4514"},{"ruleId":"4167","severity":1,"message":"4197","line":55,"column":21,"nodeType":"4169","messageId":"4170","endLine":55,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4197","line":60,"column":27,"nodeType":"4169","messageId":"4170","endLine":60,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":67,"column":48,"nodeType":"4169","messageId":"4170","endLine":67,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":67,"column":108,"nodeType":"4169","messageId":"4170","endLine":67,"endColumn":110},{"ruleId":"4167","severity":1,"message":"4197","line":73,"column":17,"nodeType":"4169","messageId":"4170","endLine":73,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4197","line":78,"column":24,"nodeType":"4169","messageId":"4170","endLine":78,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":84,"column":47,"nodeType":"4169","messageId":"4170","endLine":84,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":84,"column":107,"nodeType":"4169","messageId":"4170","endLine":84,"endColumn":109},{"ruleId":"4167","severity":1,"message":"4197","line":93,"column":18,"nodeType":"4169","messageId":"4170","endLine":93,"endColumn":20},{"ruleId":"4167","severity":1,"message":"4197","line":98,"column":26,"nodeType":"4169","messageId":"4170","endLine":98,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":104,"column":48,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":104,"column":108,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":110},{"ruleId":"4515","severity":1,"message":"4516","line":137,"column":15,"nodeType":"4238","endLine":137,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4517","line":26,"column":11,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4518","line":46,"column":8,"nodeType":"4165","endLine":46,"endColumn":10,"suggestions":"4519"},{"ruleId":"4167","severity":1,"message":"4168","line":196,"column":44,"nodeType":"4169","messageId":"4170","endLine":196,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":307,"column":50,"nodeType":"4169","messageId":"4170","endLine":307,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":318,"column":53,"nodeType":"4169","messageId":"4170","endLine":318,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":318,"column":74,"nodeType":"4169","messageId":"4170","endLine":318,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":331,"column":71,"nodeType":"4169","messageId":"4170","endLine":331,"endColumn":73},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":17,"column":12,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":18,"column":12,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4517","line":23,"column":11,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4518","line":43,"column":8,"nodeType":"4165","endLine":43,"endColumn":10,"suggestions":"4520"},{"ruleId":"4167","severity":1,"message":"4168","line":194,"column":44,"nodeType":"4169","messageId":"4170","endLine":194,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":304,"column":50,"nodeType":"4169","messageId":"4170","endLine":304,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":315,"column":53,"nodeType":"4169","messageId":"4170","endLine":315,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":315,"column":74,"nodeType":"4169","messageId":"4170","endLine":315,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":328,"column":71,"nodeType":"4169","messageId":"4170","endLine":328,"endColumn":73},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4518","line":44,"column":8,"nodeType":"4165","endLine":44,"endColumn":10,"suggestions":"4521"},{"ruleId":"4167","severity":1,"message":"4168","line":194,"column":44,"nodeType":"4169","messageId":"4170","endLine":194,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":200,"column":48,"nodeType":"4169","messageId":"4170","endLine":200,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":205,"column":52,"nodeType":"4169","messageId":"4170","endLine":205,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":311,"column":50,"nodeType":"4169","messageId":"4170","endLine":311,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":326,"column":53,"nodeType":"4169","messageId":"4170","endLine":326,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":326,"column":74,"nodeType":"4169","messageId":"4170","endLine":326,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":343,"column":71,"nodeType":"4169","messageId":"4170","endLine":343,"endColumn":73},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4522","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4439","line":22,"column":12,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4523","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4524","line":26,"column":17,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4525","line":27,"column":12,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4526","line":27,"column":17,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4518","line":55,"column":8,"nodeType":"4165","endLine":55,"endColumn":10,"suggestions":"4527"},{"ruleId":"4167","severity":1,"message":"4168","line":208,"column":44,"nodeType":"4169","messageId":"4170","endLine":208,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":216,"column":48,"nodeType":"4169","messageId":"4170","endLine":216,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":220,"column":52,"nodeType":"4169","messageId":"4170","endLine":220,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":334,"column":50,"nodeType":"4169","messageId":"4170","endLine":334,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":349,"column":53,"nodeType":"4169","messageId":"4170","endLine":349,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":349,"column":74,"nodeType":"4169","messageId":"4170","endLine":349,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":366,"column":71,"nodeType":"4169","messageId":"4170","endLine":366,"endColumn":73},{"ruleId":"4181","severity":1,"message":"4372","line":448,"column":1,"nodeType":"4183","messageId":"4373","endLine":458,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":64,"column":32,"nodeType":"4169","messageId":"4170","endLine":64,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4406","line":19,"column":37,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4206","line":19,"column":45,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":50},{"ruleId":"4153","severity":1,"message":"4358","line":24,"column":11,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4309","line":35,"column":6,"nodeType":"4165","endLine":35,"endColumn":8,"suggestions":"4528"},{"ruleId":"4177","severity":1,"message":"4280","line":43,"column":26,"nodeType":"4179","messageId":"4180","endLine":43,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":38,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":4,"column":49,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":4,"column":54,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4529","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":15},{"ruleId":"4232","severity":1,"message":"4233","line":207,"column":21,"nodeType":"4234","messageId":"4235","endLine":207,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":38,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":4,"column":49,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":4,"column":54,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4529","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4439","line":18,"column":12,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4530","line":18,"column":19,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4531","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4532","line":21,"column":28,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4533","line":29,"column":6,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4534","line":30,"column":6,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":195,"column":35,"nodeType":"4169","messageId":"4170","endLine":195,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":215,"column":34,"nodeType":"4169","messageId":"4170","endLine":215,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":217,"column":34,"nodeType":"4169","messageId":"4170","endLine":217,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":238,"column":25,"nodeType":"4238","messageId":"4239","endLine":241,"endColumn":20,"fix":"4535"},{"ruleId":"4167","severity":1,"message":"4168","line":246,"column":44,"nodeType":"4169","messageId":"4170","endLine":246,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4197","line":282,"column":34,"nodeType":"4169","messageId":"4170","endLine":282,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4197","line":282,"column":56,"nodeType":"4169","messageId":"4170","endLine":282,"endColumn":58},{"ruleId":"4167","severity":1,"message":"4197","line":286,"column":32,"nodeType":"4169","messageId":"4170","endLine":286,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4197","line":286,"column":54,"nodeType":"4169","messageId":"4170","endLine":286,"endColumn":56},{"ruleId":"4167","severity":1,"message":"4197","line":286,"column":75,"nodeType":"4169","messageId":"4170","endLine":286,"endColumn":77},{"ruleId":"4167","severity":1,"message":"4197","line":291,"column":33,"nodeType":"4169","messageId":"4170","endLine":291,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4197","line":291,"column":55,"nodeType":"4169","messageId":"4170","endLine":291,"endColumn":57},{"ruleId":"4232","severity":1,"message":"4233","line":339,"column":21,"nodeType":"4234","messageId":"4235","endLine":339,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4536","line":3,"column":8,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4188","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4161","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4537","line":18,"column":8,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4375","line":39,"column":8,"nodeType":"4165","endLine":39,"endColumn":10,"suggestions":"4538"},{"ruleId":"4153","severity":1,"message":"4539","line":40,"column":11,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4540","line":56,"column":7,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4218","line":10,"column":11,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":17},{"ruleId":"4236","severity":1,"message":"4237","line":61,"column":45,"nodeType":"4238","messageId":"4239","endLine":64,"endColumn":46,"fix":"4541"},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":15,"column":9,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":14},{"ruleId":"4167","severity":1,"message":"4168","line":31,"column":33,"nodeType":"4169","messageId":"4170","endLine":31,"endColumn":35},{"ruleId":"4236","severity":1,"message":"4237","line":35,"column":23,"nodeType":"4238","messageId":"4239","endLine":38,"endColumn":24,"fix":"4542"},{"ruleId":"4153","severity":1,"message":"4543","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4544","line":13,"column":11,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4545","line":15,"column":9,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4546","line":20,"column":9,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":38,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":96,"column":37,"nodeType":"4169","messageId":"4170","endLine":96,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":97,"column":34,"nodeType":"4169","messageId":"4170","endLine":97,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":98,"column":38,"nodeType":"4169","messageId":"4170","endLine":98,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":112,"column":38,"nodeType":"4169","messageId":"4170","endLine":112,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":112,"column":86,"nodeType":"4169","messageId":"4170","endLine":112,"endColumn":88},{"ruleId":"4236","severity":1,"message":"4237","line":116,"column":27,"nodeType":"4238","messageId":"4239","endLine":119,"endColumn":28,"fix":"4547"},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":42,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":44},{"ruleId":"4502","severity":1,"message":"4503","line":124,"column":74,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":76},{"ruleId":"4502","severity":1,"message":"4503","line":124,"column":92,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":94},{"ruleId":"4502","severity":1,"message":"4506","line":124,"column":92,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":94},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":109,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":111},{"ruleId":"4502","severity":1,"message":"4506","line":124,"column":141,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":143},{"ruleId":"4502","severity":1,"message":"4506","line":124,"column":159,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":161},{"ruleId":"4502","severity":1,"message":"4506","line":124,"column":186,"nodeType":"4504","messageId":"4505","endLine":124,"endColumn":188},{"ruleId":"4167","severity":1,"message":"4168","line":126,"column":35,"nodeType":"4169","messageId":"4170","endLine":126,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4548","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4369","line":7,"column":9,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":15},{"ruleId":"4181","severity":1,"message":"4372","line":129,"column":2,"nodeType":"4183","messageId":"4373","endLine":131,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4549","line":3,"column":19,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4550","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4551","line":39,"column":11,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4552","line":111,"column":7,"nodeType":"4155","messageId":"4156","endLine":111,"endColumn":9},{"ruleId":"4167","severity":1,"message":"4168","line":168,"column":29,"nodeType":"4169","messageId":"4170","endLine":168,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":35,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":37,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":209,"column":39,"nodeType":"4169","messageId":"4170","endLine":209,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":225,"column":31,"nodeType":"4169","messageId":"4170","endLine":225,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":239,"column":33,"nodeType":"4169","messageId":"4170","endLine":239,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":269,"column":33,"nodeType":"4169","messageId":"4170","endLine":269,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":270,"column":33,"nodeType":"4169","messageId":"4170","endLine":270,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":271,"column":34,"nodeType":"4169","messageId":"4170","endLine":271,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":295,"column":34,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":304,"column":21,"nodeType":"4238","messageId":"4239","endLine":304,"endColumn":63,"fix":"4553"},{"ruleId":"4167","severity":1,"message":"4168","line":336,"column":29,"nodeType":"4169","messageId":"4170","endLine":336,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":73,"column":21,"nodeType":"4238","messageId":"4239","endLine":76,"endColumn":22,"fix":"4554"},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":22,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":45,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":28,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":51,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":125,"column":30,"nodeType":"4169","messageId":"4170","endLine":125,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":137,"column":27,"nodeType":"4169","messageId":"4170","endLine":137,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4406","line":11,"column":27,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":11,"column":35,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4185","line":3,"column":3,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":4,"column":3,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4186","line":5,"column":3,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4510","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4197","line":43,"column":22,"nodeType":"4169","messageId":"4170","endLine":43,"endColumn":24},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4406","line":9,"column":35,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4298","line":10,"column":11,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4451","line":10,"column":19,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4555","line":12,"column":10,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4556","line":12,"column":24,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":30,"column":16,"nodeType":"4169","messageId":"4170","endLine":30,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4176","line":17,"column":9,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":10},{"ruleId":"4446","severity":1,"message":"4447","line":31,"column":1,"nodeType":"4448","endLine":33,"endColumn":5},{"ruleId":"4446","severity":1,"message":"4447","line":23,"column":1,"nodeType":"4448","endLine":29,"endColumn":3},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4298","line":8,"column":11,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4406","line":9,"column":35,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4555","line":23,"column":10,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4557","line":24,"column":10,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4558","line":24,"column":16,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4299","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4559","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4560","line":31,"column":10,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":14},{"ruleId":"4167","severity":1,"message":"4168","line":50,"column":16,"nodeType":"4169","messageId":"4170","endLine":50,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4206","line":24,"column":35,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4561","line":10,"column":39,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":53},{"ruleId":"4153","severity":1,"message":"4190","line":12,"column":9,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":16},{"ruleId":"4515","severity":1,"message":"4562","line":26,"column":17,"nodeType":"4238","endLine":29,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":57,"column":61,"nodeType":"4169","messageId":"4170","endLine":57,"endColumn":63},{"ruleId":"4167","severity":1,"message":"4168","line":64,"column":21,"nodeType":"4169","messageId":"4170","endLine":64,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":68,"column":21,"nodeType":"4169","messageId":"4170","endLine":68,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":72,"column":21,"nodeType":"4169","messageId":"4170","endLine":72,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":75,"column":22,"nodeType":"4169","messageId":"4170","endLine":75,"endColumn":24},{"ruleId":"4515","severity":1,"message":"4562","line":81,"column":17,"nodeType":"4238","endLine":86,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":99,"column":27,"nodeType":"4169","messageId":"4170","endLine":99,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4563","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4564","line":37,"column":11,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":60,"column":24,"nodeType":"4169","messageId":"4170","endLine":60,"endColumn":26},{"ruleId":"4163","severity":1,"message":"4565","line":81,"column":6,"nodeType":"4165","endLine":81,"endColumn":24,"suggestions":"4566"},{"ruleId":"4153","severity":1,"message":"4263","line":82,"column":45,"nodeType":"4155","messageId":"4156","endLine":82,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4206","line":82,"column":56,"nodeType":"4155","messageId":"4156","endLine":82,"endColumn":61},{"ruleId":"4177","severity":1,"message":"4280","line":90,"column":35,"nodeType":"4179","messageId":"4180","endLine":90,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":27,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":29},{"ruleId":"4181","severity":1,"message":"4182","line":348,"column":9,"nodeType":"4183","messageId":"4184","endLine":349,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":348,"column":26,"nodeType":"4169","messageId":"4170","endLine":348,"endColumn":28},{"ruleId":"4177","severity":1,"message":"4280","line":379,"column":21,"nodeType":"4179","messageId":"4180","endLine":379,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":381,"column":14,"nodeType":"4169","messageId":"4170","endLine":381,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4253","line":4,"column":41,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4163","severity":1,"message":"4567","line":12,"column":6,"nodeType":"4165","endLine":12,"endColumn":11,"suggestions":"4568"},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4406","line":7,"column":36,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":20,"column":22,"nodeType":"4169","messageId":"4170","endLine":20,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":33,"column":28,"nodeType":"4169","messageId":"4170","endLine":33,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":46,"column":28,"nodeType":"4169","messageId":"4170","endLine":46,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":59,"column":27,"nodeType":"4169","messageId":"4170","endLine":59,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":72,"column":27,"nodeType":"4169","messageId":"4170","endLine":72,"endColumn":29},{"ruleId":"4167","severity":1,"message":"4168","line":85,"column":28,"nodeType":"4169","messageId":"4170","endLine":85,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":174,"column":22,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":174,"column":52,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":174,"column":86,"nodeType":"4169","messageId":"4170","endLine":174,"endColumn":88},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":40,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":51},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":53,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":59},{"ruleId":"4569","severity":1,"message":"4570","line":18,"column":11,"nodeType":"4238","endLine":19,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":57,"column":24,"nodeType":"4169","messageId":"4170","endLine":57,"endColumn":26},{"ruleId":"4163","severity":1,"message":"4571","line":76,"column":6,"nodeType":"4165","endLine":76,"endColumn":24,"suggestions":"4572"},{"ruleId":"4153","severity":1,"message":"4263","line":77,"column":45,"nodeType":"4155","messageId":"4156","endLine":77,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4206","line":77,"column":56,"nodeType":"4155","messageId":"4156","endLine":77,"endColumn":61},{"ruleId":"4177","severity":1,"message":"4280","line":85,"column":35,"nodeType":"4179","messageId":"4180","endLine":85,"endColumn":37},{"ruleId":"4177","severity":1,"message":"4280","line":238,"column":21,"nodeType":"4179","messageId":"4180","endLine":238,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":240,"column":9,"nodeType":"4169","messageId":"4170","endLine":240,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4437","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4489","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4487","line":21,"column":6,"nodeType":"4165","endLine":21,"endColumn":14,"suggestions":"4573"},{"ruleId":"4167","severity":1,"message":"4197","line":26,"column":17,"nodeType":"4169","messageId":"4170","endLine":26,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":55,"column":41,"nodeType":"4169","messageId":"4170","endLine":55,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":61,"column":32,"nodeType":"4169","messageId":"4170","endLine":61,"endColumn":34},{"ruleId":"4163","severity":1,"message":"4567","line":18,"column":8,"nodeType":"4165","endLine":18,"endColumn":18,"suggestions":"4574"},{"ruleId":"4167","severity":1,"message":"4197","line":27,"column":42,"nodeType":"4169","messageId":"4170","endLine":27,"endColumn":44},{"ruleId":"4153","severity":1,"message":"4185","line":3,"column":3,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":4,"column":3,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4186","line":5,"column":3,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4510","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4185","line":3,"column":3,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":4,"column":3,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4186","line":5,"column":3,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4510","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4575","line":5,"column":8,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4576","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4577","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4222","line":28,"column":8,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4578","line":49,"column":9,"nodeType":"4155","messageId":"4156","endLine":49,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4579","line":52,"column":10,"nodeType":"4155","messageId":"4156","endLine":52,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4580","line":58,"column":20,"nodeType":"4155","messageId":"4156","endLine":58,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4581","line":59,"column":21,"nodeType":"4155","messageId":"4156","endLine":59,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4582","line":60,"column":24,"nodeType":"4155","messageId":"4156","endLine":60,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4583","line":61,"column":25,"nodeType":"4155","messageId":"4156","endLine":61,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4584","line":62,"column":24,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4585","line":71,"column":23,"nodeType":"4155","messageId":"4156","endLine":71,"endColumn":37},{"ruleId":"4163","severity":1,"message":"4586","line":77,"column":6,"nodeType":"4165","endLine":77,"endColumn":8,"suggestions":"4587"},{"ruleId":"4277","severity":1,"message":"4588","line":406,"column":17,"nodeType":"4155","messageId":"4279","endLine":406,"endColumn":20},{"ruleId":"4177","severity":1,"message":"4178","line":420,"column":26,"nodeType":"4179","messageId":"4180","endLine":420,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":421,"column":21,"nodeType":"4169","messageId":"4170","endLine":421,"endColumn":23},{"ruleId":"4277","severity":1,"message":"4589","line":429,"column":13,"nodeType":"4155","messageId":"4279","endLine":429,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4590","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4369","line":26,"column":9,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4406","line":29,"column":35,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4451","line":30,"column":19,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4591","line":31,"column":10,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4452","line":35,"column":10,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4592","line":120,"column":9,"nodeType":"4155","messageId":"4156","endLine":120,"endColumn":25},{"ruleId":"4455","severity":1,"message":"4456","line":219,"column":7,"nodeType":"4457","messageId":"4170","endLine":219,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":226,"column":30,"nodeType":"4169","messageId":"4170","endLine":226,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":233,"column":52,"nodeType":"4169","messageId":"4170","endLine":233,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":239,"column":48,"nodeType":"4169","messageId":"4170","endLine":239,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":245,"column":52,"nodeType":"4169","messageId":"4170","endLine":245,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":251,"column":51,"nodeType":"4169","messageId":"4170","endLine":251,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":257,"column":47,"nodeType":"4169","messageId":"4170","endLine":257,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":295,"column":40,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":316,"column":31,"nodeType":"4169","messageId":"4170","endLine":316,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4197","line":410,"column":24,"nodeType":"4169","messageId":"4170","endLine":410,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":410,"column":45,"nodeType":"4169","messageId":"4170","endLine":410,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4197","line":414,"column":29,"nodeType":"4169","messageId":"4170","endLine":414,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4590","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4369","line":26,"column":9,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4406","line":29,"column":35,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4451","line":30,"column":19,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4591","line":31,"column":10,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4452","line":35,"column":10,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4592","line":119,"column":9,"nodeType":"4155","messageId":"4156","endLine":119,"endColumn":25},{"ruleId":"4455","severity":1,"message":"4456","line":217,"column":7,"nodeType":"4457","messageId":"4170","endLine":217,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":224,"column":30,"nodeType":"4169","messageId":"4170","endLine":224,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":231,"column":52,"nodeType":"4169","messageId":"4170","endLine":231,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":237,"column":48,"nodeType":"4169","messageId":"4170","endLine":237,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":243,"column":52,"nodeType":"4169","messageId":"4170","endLine":243,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":249,"column":51,"nodeType":"4169","messageId":"4170","endLine":249,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":255,"column":47,"nodeType":"4169","messageId":"4170","endLine":255,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":296,"column":40,"nodeType":"4169","messageId":"4170","endLine":296,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":317,"column":31,"nodeType":"4169","messageId":"4170","endLine":317,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4197","line":410,"column":24,"nodeType":"4169","messageId":"4170","endLine":410,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":410,"column":45,"nodeType":"4169","messageId":"4170","endLine":410,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4197","line":414,"column":29,"nodeType":"4169","messageId":"4170","endLine":414,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4590","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4369","line":27,"column":9,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4406","line":30,"column":35,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4451","line":31,"column":19,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4591","line":32,"column":10,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4593","line":66,"column":10,"nodeType":"4155","messageId":"4156","endLine":66,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4594","line":68,"column":9,"nodeType":"4155","messageId":"4156","endLine":68,"endColumn":20},{"ruleId":"4455","severity":1,"message":"4456","line":236,"column":7,"nodeType":"4457","messageId":"4170","endLine":236,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":243,"column":30,"nodeType":"4169","messageId":"4170","endLine":243,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":250,"column":52,"nodeType":"4169","messageId":"4170","endLine":250,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":256,"column":48,"nodeType":"4169","messageId":"4170","endLine":256,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":262,"column":52,"nodeType":"4169","messageId":"4170","endLine":262,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":268,"column":51,"nodeType":"4169","messageId":"4170","endLine":268,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":274,"column":47,"nodeType":"4169","messageId":"4170","endLine":274,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":316,"column":40,"nodeType":"4169","messageId":"4170","endLine":316,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":336,"column":31,"nodeType":"4169","messageId":"4170","endLine":336,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4197","line":429,"column":24,"nodeType":"4169","messageId":"4170","endLine":429,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":429,"column":45,"nodeType":"4169","messageId":"4170","endLine":429,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":438,"column":12,"nodeType":"4169","messageId":"4170","endLine":438,"endColumn":14},{"ruleId":"4167","severity":1,"message":"4168","line":438,"column":25,"nodeType":"4169","messageId":"4170","endLine":438,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":593,"column":22,"nodeType":"4169","messageId":"4170","endLine":593,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":593,"column":37,"nodeType":"4169","messageId":"4170","endLine":593,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4187","line":8,"column":5,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4437","line":17,"column":10,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4575","line":19,"column":10,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4595","line":32,"column":12,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":188,"column":38,"nodeType":"4169","messageId":"4170","endLine":188,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4187","line":8,"column":5,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4437","line":17,"column":10,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4575","line":19,"column":10,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4595","line":33,"column":12,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":24},{"ruleId":"4236","severity":1,"message":"4237","line":423,"column":53,"nodeType":"4238","messageId":"4239","endLine":423,"endColumn":93,"fix":"4596"},{"ruleId":"4153","severity":1,"message":"4595","line":29,"column":12,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":38,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":40},{"ruleId":"4236","severity":1,"message":"4237","line":431,"column":53,"nodeType":"4238","messageId":"4239","endLine":431,"endColumn":93,"fix":"4597"},{"ruleId":"4153","severity":1,"message":"4476","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4483","line":5,"column":21,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":28,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":65,"column":32,"nodeType":"4169","messageId":"4170","endLine":65,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4598","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":48},{"ruleId":"4163","severity":1,"message":"4599","line":33,"column":6,"nodeType":"4165","endLine":33,"endColumn":15,"suggestions":"4600"},{"ruleId":"4167","severity":1,"message":"4168","line":154,"column":28,"nodeType":"4169","messageId":"4170","endLine":154,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":160,"column":30,"nodeType":"4169","messageId":"4170","endLine":160,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":165,"column":32,"nodeType":"4169","messageId":"4170","endLine":165,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":188,"column":24,"nodeType":"4169","messageId":"4170","endLine":188,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":263,"column":26,"nodeType":"4169","messageId":"4170","endLine":263,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":150,"column":28,"nodeType":"4169","messageId":"4170","endLine":150,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":155,"column":30,"nodeType":"4169","messageId":"4170","endLine":155,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":159,"column":32,"nodeType":"4169","messageId":"4170","endLine":159,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4307","line":28,"column":11,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4308","line":28,"column":25,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4406","line":28,"column":35,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4206","line":28,"column":43,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4298","line":29,"column":11,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4451","line":29,"column":19,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4555","line":32,"column":10,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4556","line":32,"column":24,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":161,"column":28,"nodeType":"4169","messageId":"4170","endLine":161,"endColumn":30},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4437","line":13,"column":10,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4575","line":15,"column":10,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":193,"column":28,"nodeType":"4169","messageId":"4170","endLine":193,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":329,"column":18,"nodeType":"4169","messageId":"4170","endLine":329,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4437","line":13,"column":10,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4575","line":15,"column":10,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":187,"column":28,"nodeType":"4169","messageId":"4170","endLine":187,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":270,"column":55,"nodeType":"4169","messageId":"4170","endLine":270,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4437","line":13,"column":10,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4575","line":15,"column":10,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":193,"column":28,"nodeType":"4169","messageId":"4170","endLine":193,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":333,"column":18,"nodeType":"4169","messageId":"4170","endLine":333,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4601","line":11,"column":16,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":196,"column":28,"nodeType":"4169","messageId":"4170","endLine":196,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":204,"column":30,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":208,"column":32,"nodeType":"4169","messageId":"4170","endLine":208,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":329,"column":55,"nodeType":"4169","messageId":"4170","endLine":329,"endColumn":57},{"ruleId":"4167","severity":1,"message":"4168","line":343,"column":18,"nodeType":"4169","messageId":"4170","endLine":343,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4181","severity":1,"message":"4372","line":70,"column":1,"nodeType":"4183","messageId":"4373","endLine":79,"endColumn":2},{"ruleId":"4153","severity":1,"message":"4602","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4194","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4579","line":33,"column":10,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4603","line":34,"column":10,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4580","line":37,"column":20,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4581","line":38,"column":21,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4582","line":39,"column":24,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4584","line":40,"column":24,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":39},{"ruleId":"4163","severity":1,"message":"4604","line":56,"column":6,"nodeType":"4165","endLine":56,"endColumn":8,"suggestions":"4605"},{"ruleId":"4153","severity":1,"message":"4606","line":259,"column":9,"nodeType":"4155","messageId":"4156","endLine":259,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4406","line":12,"column":27,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":12,"column":35,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4406","line":11,"column":27,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":11,"column":35,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4607","line":2,"column":13,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":20},{"ruleId":"4515","severity":1,"message":"4516","line":33,"column":15,"nodeType":"4238","endLine":36,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4489","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4218","line":26,"column":9,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4206","line":27,"column":35,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4498","line":11,"column":7,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4608","line":35,"column":7,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4384","line":42,"column":6,"nodeType":"4165","endLine":42,"endColumn":14,"suggestions":"4609"},{"ruleId":"4236","severity":1,"message":"4237","line":103,"column":27,"nodeType":"4238","messageId":"4239","endLine":106,"endColumn":28,"fix":"4610"},{"ruleId":"4236","severity":1,"message":"4237","line":116,"column":23,"nodeType":"4238","messageId":"4239","endLine":119,"endColumn":28,"fix":"4611"},{"ruleId":"4167","severity":1,"message":"4168","line":130,"column":41,"nodeType":"4169","messageId":"4170","endLine":130,"endColumn":43},{"ruleId":"4502","severity":1,"message":"4503","line":130,"column":46,"nodeType":"4504","messageId":"4505","endLine":130,"endColumn":48},{"ruleId":"4502","severity":1,"message":"4503","line":130,"column":64,"nodeType":"4504","messageId":"4505","endLine":130,"endColumn":66},{"ruleId":"4502","severity":1,"message":"4506","line":130,"column":64,"nodeType":"4504","messageId":"4505","endLine":130,"endColumn":66},{"ruleId":"4167","severity":1,"message":"4168","line":130,"column":81,"nodeType":"4169","messageId":"4170","endLine":130,"endColumn":83},{"ruleId":"4502","severity":1,"message":"4506","line":130,"column":86,"nodeType":"4504","messageId":"4505","endLine":130,"endColumn":88},{"ruleId":"4153","severity":1,"message":"4406","line":9,"column":35,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4509","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4507","line":23,"column":5,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4197","line":42,"column":23,"nodeType":"4169","messageId":"4170","endLine":42,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":26,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":111,"column":33,"nodeType":"4169","messageId":"4170","endLine":111,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":127,"column":26,"nodeType":"4169","messageId":"4170","endLine":127,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":143,"column":25,"nodeType":"4169","messageId":"4170","endLine":143,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":159,"column":28,"nodeType":"4169","messageId":"4170","endLine":159,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":175,"column":20,"nodeType":"4169","messageId":"4170","endLine":175,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":26,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":207,"column":20,"nodeType":"4169","messageId":"4170","endLine":207,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":223,"column":16,"nodeType":"4169","messageId":"4170","endLine":223,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":239,"column":14,"nodeType":"4169","messageId":"4170","endLine":239,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":255,"column":21,"nodeType":"4169","messageId":"4170","endLine":255,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":368,"column":31,"nodeType":"4169","messageId":"4170","endLine":368,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":383,"column":44,"nodeType":"4169","messageId":"4170","endLine":383,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":396,"column":39,"nodeType":"4169","messageId":"4170","endLine":396,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":409,"column":32,"nodeType":"4169","messageId":"4170","endLine":409,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":423,"column":36,"nodeType":"4169","messageId":"4170","endLine":423,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":438,"column":31,"nodeType":"4169","messageId":"4170","endLine":438,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":40,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":51},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":53,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":59},{"ruleId":"4569","severity":1,"message":"4570","line":18,"column":11,"nodeType":"4238","endLine":19,"endColumn":42},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4206","line":25,"column":37,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":42},{"ruleId":"4153","severity":1,"message":"4612","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4241","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4613","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4614","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":20},{"ruleId":"4615","severity":1,"message":"4616","line":128,"column":151,"nodeType":"4169","messageId":"4617","endLine":128,"endColumn":152},{"ruleId":"4615","severity":1,"message":"4616","line":128,"column":154,"nodeType":"4169","messageId":"4617","endLine":128,"endColumn":155},{"ruleId":"4378","severity":1,"message":"4379","line":129,"column":31,"nodeType":"4380","messageId":"4381","endLine":129,"endColumn":32,"fix":"4618"},{"ruleId":"4177","severity":1,"message":"4280","line":211,"column":47,"nodeType":"4179","messageId":"4180","endLine":211,"endColumn":49},{"ruleId":"4177","severity":1,"message":"4280","line":253,"column":33,"nodeType":"4179","messageId":"4180","endLine":253,"endColumn":35},{"ruleId":"4177","severity":1,"message":"4280","line":270,"column":33,"nodeType":"4179","messageId":"4180","endLine":270,"endColumn":35},{"ruleId":"4177","severity":1,"message":"4280","line":290,"column":47,"nodeType":"4179","messageId":"4180","endLine":290,"endColumn":49},{"ruleId":"4177","severity":1,"message":"4280","line":317,"column":29,"nodeType":"4179","messageId":"4180","endLine":317,"endColumn":31},{"ruleId":"4177","severity":1,"message":"4280","line":330,"column":29,"nodeType":"4179","messageId":"4180","endLine":330,"endColumn":31},{"ruleId":"4619","severity":1,"message":"4620","line":442,"column":7,"nodeType":"4621","messageId":"4170","endLine":442,"endColumn":11,"fix":"4622"},{"ruleId":"4177","severity":1,"message":"4280","line":452,"column":45,"nodeType":"4179","messageId":"4180","endLine":452,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":468,"column":32,"nodeType":"4169","messageId":"4170","endLine":468,"endColumn":34},{"ruleId":"4277","severity":1,"message":"4623","line":515,"column":14,"nodeType":"4155","messageId":"4279","endLine":515,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":520,"column":31,"nodeType":"4169","messageId":"4170","endLine":520,"endColumn":33},{"ruleId":"4277","severity":1,"message":"4623","line":522,"column":13,"nodeType":"4155","messageId":"4279","endLine":522,"endColumn":27},{"ruleId":"4177","severity":1,"message":"4280","line":575,"column":21,"nodeType":"4179","messageId":"4180","endLine":575,"endColumn":23},{"ruleId":"4624","severity":1,"message":"4625","line":636,"column":11,"nodeType":"4380","messageId":"4626","endLine":636,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":36,"column":37,"nodeType":"4169","messageId":"4170","endLine":36,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":44,"column":39,"nodeType":"4169","messageId":"4170","endLine":44,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":51,"column":41,"nodeType":"4169","messageId":"4170","endLine":51,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4627","line":11,"column":17,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4241","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":22},{"ruleId":"4615","severity":1,"message":"4616","line":155,"column":151,"nodeType":"4169","messageId":"4617","endLine":155,"endColumn":152},{"ruleId":"4615","severity":1,"message":"4616","line":155,"column":154,"nodeType":"4169","messageId":"4617","endLine":155,"endColumn":155},{"ruleId":"4378","severity":1,"message":"4379","line":156,"column":31,"nodeType":"4380","messageId":"4381","endLine":156,"endColumn":32,"fix":"4628"},{"ruleId":"4177","severity":1,"message":"4280","line":259,"column":47,"nodeType":"4179","messageId":"4180","endLine":259,"endColumn":49},{"ruleId":"4177","severity":1,"message":"4280","line":310,"column":33,"nodeType":"4179","messageId":"4180","endLine":310,"endColumn":35},{"ruleId":"4177","severity":1,"message":"4280","line":327,"column":33,"nodeType":"4179","messageId":"4180","endLine":327,"endColumn":35},{"ruleId":"4177","severity":1,"message":"4280","line":347,"column":47,"nodeType":"4179","messageId":"4180","endLine":347,"endColumn":49},{"ruleId":"4177","severity":1,"message":"4280","line":380,"column":29,"nodeType":"4179","messageId":"4180","endLine":380,"endColumn":31},{"ruleId":"4177","severity":1,"message":"4280","line":393,"column":29,"nodeType":"4179","messageId":"4180","endLine":393,"endColumn":31},{"ruleId":"4619","severity":1,"message":"4620","line":507,"column":10,"nodeType":"4621","messageId":"4170","endLine":507,"endColumn":14,"fix":"4629"},{"ruleId":"4177","severity":1,"message":"4280","line":518,"column":45,"nodeType":"4179","messageId":"4180","endLine":518,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":537,"column":35,"nodeType":"4169","messageId":"4170","endLine":537,"endColumn":37},{"ruleId":"4277","severity":1,"message":"4623","line":591,"column":14,"nodeType":"4155","messageId":"4279","endLine":591,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":596,"column":31,"nodeType":"4169","messageId":"4170","endLine":596,"endColumn":33},{"ruleId":"4277","severity":1,"message":"4623","line":598,"column":13,"nodeType":"4155","messageId":"4279","endLine":598,"endColumn":27},{"ruleId":"4177","severity":1,"message":"4280","line":664,"column":20,"nodeType":"4179","messageId":"4180","endLine":664,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":896,"column":33,"nodeType":"4169","messageId":"4170","endLine":896,"endColumn":35},{"ruleId":"4630","severity":1,"message":"4631","line":898,"column":8,"nodeType":"4155","messageId":"4632","endLine":898,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4197","line":939,"column":26,"nodeType":"4169","messageId":"4170","endLine":939,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":1110,"column":29,"nodeType":"4169","messageId":"4170","endLine":1110,"endColumn":31},{"ruleId":"4633","severity":1,"message":"4634","line":1112,"column":6,"nodeType":"4238","endLine":1112,"endColumn":55},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4215","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4406","line":19,"column":37,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4635","line":24,"column":38,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4197","line":34,"column":30,"nodeType":"4169","messageId":"4170","endLine":34,"endColumn":32},{"ruleId":"4153","severity":1,"message":"4636","line":40,"column":25,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4637","line":42,"column":13,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4569","severity":1,"message":"4570","line":17,"column":11,"nodeType":"4238","endLine":18,"endColumn":42},{"ruleId":"4163","severity":1,"message":"4638","line":57,"column":8,"nodeType":"4165","endLine":57,"endColumn":10,"suggestions":"4639"},{"ruleId":"4455","severity":1,"message":"4456","line":165,"column":13,"nodeType":"4457","messageId":"4170","endLine":165,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":172,"column":36,"nodeType":"4169","messageId":"4170","endLine":172,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":179,"column":58,"nodeType":"4169","messageId":"4170","endLine":179,"endColumn":60},{"ruleId":"4167","severity":1,"message":"4168","line":185,"column":54,"nodeType":"4169","messageId":"4170","endLine":185,"endColumn":56},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":58,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":60},{"ruleId":"4167","severity":1,"message":"4168","line":197,"column":57,"nodeType":"4169","messageId":"4170","endLine":197,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":53,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":55},{"ruleId":"4163","severity":1,"message":"4638","line":56,"column":6,"nodeType":"4165","endLine":56,"endColumn":8,"suggestions":"4640"},{"ruleId":"4455","severity":1,"message":"4456","line":165,"column":7,"nodeType":"4457","messageId":"4170","endLine":165,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":172,"column":30,"nodeType":"4169","messageId":"4170","endLine":172,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":179,"column":52,"nodeType":"4169","messageId":"4170","endLine":179,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":185,"column":48,"nodeType":"4169","messageId":"4170","endLine":185,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":52,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":197,"column":51,"nodeType":"4169","messageId":"4170","endLine":197,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":47,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":49},{"ruleId":"4163","severity":1,"message":"4638","line":66,"column":6,"nodeType":"4165","endLine":66,"endColumn":8,"suggestions":"4641"},{"ruleId":"4455","severity":1,"message":"4456","line":174,"column":7,"nodeType":"4457","messageId":"4170","endLine":174,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":181,"column":30,"nodeType":"4169","messageId":"4170","endLine":181,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":188,"column":52,"nodeType":"4169","messageId":"4170","endLine":188,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":194,"column":48,"nodeType":"4169","messageId":"4170","endLine":194,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":200,"column":52,"nodeType":"4169","messageId":"4170","endLine":200,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":51,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":212,"column":47,"nodeType":"4169","messageId":"4170","endLine":212,"endColumn":49},{"ruleId":"4163","severity":1,"message":"4638","line":55,"column":6,"nodeType":"4165","endLine":55,"endColumn":8,"suggestions":"4642"},{"ruleId":"4455","severity":1,"message":"4456","line":165,"column":7,"nodeType":"4457","messageId":"4170","endLine":165,"endColumn":12},{"ruleId":"4167","severity":1,"message":"4168","line":172,"column":30,"nodeType":"4169","messageId":"4170","endLine":172,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":179,"column":52,"nodeType":"4169","messageId":"4170","endLine":179,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":185,"column":48,"nodeType":"4169","messageId":"4170","endLine":185,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":52,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":197,"column":51,"nodeType":"4169","messageId":"4170","endLine":197,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":47,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4643","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4159","line":29,"column":11,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4644","line":33,"column":12,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4438","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":36,"column":16,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4645","line":37,"column":12,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4646","line":37,"column":20,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":31},{"ruleId":"4163","severity":1,"message":"4647","line":55,"column":8,"nodeType":"4165","endLine":55,"endColumn":10,"suggestions":"4648"},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4643","line":20,"column":8,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4159","line":28,"column":11,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4644","line":32,"column":12,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4438","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":36,"column":16,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4645","line":37,"column":12,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4646","line":37,"column":20,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":31},{"ruleId":"4163","severity":1,"message":"4647","line":47,"column":8,"nodeType":"4165","endLine":47,"endColumn":10,"suggestions":"4649"},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4643","line":15,"column":8,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4489","line":17,"column":8,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4159","line":27,"column":11,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4644","line":31,"column":12,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4438","line":34,"column":12,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":34,"column":16,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4645","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4163","severity":1,"message":"4647","line":57,"column":8,"nodeType":"4165","endLine":57,"endColumn":10,"suggestions":"4650"},{"ruleId":"4167","severity":1,"message":"4168","line":204,"column":44,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":212,"column":48,"nodeType":"4169","messageId":"4170","endLine":212,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":219,"column":52,"nodeType":"4169","messageId":"4170","endLine":219,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":394,"column":56,"nodeType":"4169","messageId":"4170","endLine":394,"endColumn":58},{"ruleId":"4153","severity":1,"message":"4651","line":431,"column":11,"nodeType":"4155","messageId":"4156","endLine":431,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":12,"column":5,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4643","line":19,"column":8,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4489","line":21,"column":8,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4215","line":22,"column":8,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":11,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4644","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4645","line":37,"column":12,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4646","line":37,"column":20,"nodeType":"4155","messageId":"4156","endLine":37,"endColumn":31},{"ruleId":"4163","severity":1,"message":"4647","line":65,"column":8,"nodeType":"4165","endLine":65,"endColumn":10,"suggestions":"4652"},{"ruleId":"4153","severity":1,"message":"4653","line":84,"column":7,"nodeType":"4155","messageId":"4156","endLine":84,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4168","line":222,"column":44,"nodeType":"4169","messageId":"4170","endLine":222,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":230,"column":48,"nodeType":"4169","messageId":"4170","endLine":230,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":236,"column":52,"nodeType":"4169","messageId":"4170","endLine":236,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":410,"column":56,"nodeType":"4169","messageId":"4170","endLine":410,"endColumn":58},{"ruleId":"4181","severity":1,"message":"4372","line":508,"column":1,"nodeType":"4183","messageId":"4373","endLine":514,"endColumn":51},{"ruleId":"4153","severity":1,"message":"4654","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4159","line":30,"column":9,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4655","line":33,"column":10,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4656","line":51,"column":6,"nodeType":"4165","endLine":51,"endColumn":8,"suggestions":"4657"},{"ruleId":"4167","severity":1,"message":"4168","line":165,"column":28,"nodeType":"4169","messageId":"4170","endLine":165,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":30,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":175,"column":32,"nodeType":"4169","messageId":"4170","endLine":175,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":26,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":237,"column":40,"nodeType":"4169","messageId":"4170","endLine":237,"endColumn":42},{"ruleId":"4502","severity":1,"message":"4658","line":241,"column":40,"nodeType":"4169","messageId":"4505","endLine":241,"endColumn":41},{"ruleId":"4502","severity":1,"message":"4658","line":241,"column":50,"nodeType":"4169","messageId":"4505","endLine":241,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":277,"column":41,"nodeType":"4169","messageId":"4170","endLine":277,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":277,"column":100,"nodeType":"4169","messageId":"4170","endLine":277,"endColumn":102},{"ruleId":"4502","severity":1,"message":"4658","line":281,"column":46,"nodeType":"4169","messageId":"4505","endLine":281,"endColumn":47},{"ruleId":"4502","severity":1,"message":"4658","line":281,"column":56,"nodeType":"4169","messageId":"4505","endLine":281,"endColumn":59},{"ruleId":"4153","severity":1,"message":"4654","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4159","line":24,"column":9,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4655","line":27,"column":10,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4656","line":33,"column":6,"nodeType":"4165","endLine":33,"endColumn":8,"suggestions":"4659"},{"ruleId":"4167","severity":1,"message":"4168","line":177,"column":26,"nodeType":"4169","messageId":"4170","endLine":177,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":26,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":213,"column":57,"nodeType":"4169","messageId":"4170","endLine":213,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":213,"column":116,"nodeType":"4169","messageId":"4170","endLine":213,"endColumn":118},{"ruleId":"4502","severity":1,"message":"4658","line":217,"column":62,"nodeType":"4169","messageId":"4505","endLine":217,"endColumn":63},{"ruleId":"4502","severity":1,"message":"4658","line":217,"column":72,"nodeType":"4169","messageId":"4505","endLine":217,"endColumn":75},{"ruleId":"4153","severity":1,"message":"4654","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4159","line":31,"column":9,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4655","line":34,"column":10,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4656","line":54,"column":6,"nodeType":"4165","endLine":54,"endColumn":8,"suggestions":"4660"},{"ruleId":"4167","severity":1,"message":"4168","line":171,"column":40,"nodeType":"4169","messageId":"4170","endLine":171,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":176,"column":44,"nodeType":"4169","messageId":"4170","endLine":176,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":181,"column":48,"nodeType":"4169","messageId":"4170","endLine":181,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":210,"column":36,"nodeType":"4169","messageId":"4170","endLine":210,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4197","line":213,"column":45,"nodeType":"4169","messageId":"4170","endLine":213,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":243,"column":26,"nodeType":"4169","messageId":"4170","endLine":243,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":248,"column":37,"nodeType":"4169","messageId":"4170","endLine":248,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":248,"column":63,"nodeType":"4169","messageId":"4170","endLine":248,"endColumn":65},{"ruleId":"4167","severity":1,"message":"4168","line":248,"column":89,"nodeType":"4169","messageId":"4170","endLine":248,"endColumn":91},{"ruleId":"4167","severity":1,"message":"4168","line":314,"column":57,"nodeType":"4169","messageId":"4170","endLine":314,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":314,"column":116,"nodeType":"4169","messageId":"4170","endLine":314,"endColumn":118},{"ruleId":"4502","severity":1,"message":"4658","line":318,"column":62,"nodeType":"4169","messageId":"4505","endLine":318,"endColumn":63},{"ruleId":"4502","severity":1,"message":"4658","line":318,"column":72,"nodeType":"4169","messageId":"4505","endLine":318,"endColumn":75},{"ruleId":"4167","severity":1,"message":"4168","line":334,"column":47,"nodeType":"4169","messageId":"4170","endLine":334,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4661","line":492,"column":7,"nodeType":"4155","messageId":"4156","endLine":492,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4654","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4188","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4222","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4662","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4655","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":24},{"ruleId":"4163","severity":1,"message":"4656","line":69,"column":8,"nodeType":"4165","endLine":69,"endColumn":10,"suggestions":"4663"},{"ruleId":"4167","severity":1,"message":"4168","line":188,"column":44,"nodeType":"4169","messageId":"4170","endLine":188,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":193,"column":48,"nodeType":"4169","messageId":"4170","endLine":193,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":198,"column":52,"nodeType":"4169","messageId":"4170","endLine":198,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":227,"column":40,"nodeType":"4169","messageId":"4170","endLine":227,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4197","line":230,"column":49,"nodeType":"4169","messageId":"4170","endLine":230,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":264,"column":40,"nodeType":"4169","messageId":"4170","endLine":264,"endColumn":42},{"ruleId":"4502","severity":1,"message":"4658","line":267,"column":41,"nodeType":"4169","messageId":"4505","endLine":267,"endColumn":42},{"ruleId":"4502","severity":1,"message":"4658","line":267,"column":51,"nodeType":"4169","messageId":"4505","endLine":267,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":302,"column":41,"nodeType":"4169","messageId":"4170","endLine":302,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":302,"column":67,"nodeType":"4169","messageId":"4170","endLine":302,"endColumn":69},{"ruleId":"4167","severity":1,"message":"4168","line":302,"column":93,"nodeType":"4169","messageId":"4170","endLine":302,"endColumn":95},{"ruleId":"4167","severity":1,"message":"4168","line":368,"column":41,"nodeType":"4169","messageId":"4170","endLine":368,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":368,"column":100,"nodeType":"4169","messageId":"4170","endLine":368,"endColumn":102},{"ruleId":"4502","severity":1,"message":"4658","line":372,"column":46,"nodeType":"4169","messageId":"4505","endLine":372,"endColumn":47},{"ruleId":"4502","severity":1,"message":"4658","line":372,"column":56,"nodeType":"4169","messageId":"4505","endLine":372,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":387,"column":57,"nodeType":"4169","messageId":"4170","endLine":387,"endColumn":59},{"ruleId":"4167","severity":1,"message":"4168","line":395,"column":50,"nodeType":"4169","messageId":"4170","endLine":395,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4664","line":475,"column":7,"nodeType":"4155","messageId":"4156","endLine":475,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4197","line":75,"column":22,"nodeType":"4169","messageId":"4170","endLine":75,"endColumn":24},{"ruleId":"4232","severity":1,"message":"4233","line":104,"column":17,"nodeType":"4234","messageId":"4235","endLine":106,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4406","line":13,"column":27,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":13,"column":35,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":50,"column":40,"nodeType":"4169","messageId":"4170","endLine":50,"endColumn":42},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4387","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":37,"column":46,"nodeType":"4169","messageId":"4170","endLine":37,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":40,"column":46,"nodeType":"4169","messageId":"4170","endLine":40,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4206","line":22,"column":37,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":42},{"ruleId":"4153","severity":1,"message":"4249","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4250","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4251","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4252","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4253","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4161","line":19,"column":3,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4254","line":22,"column":10,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4255","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4190","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4319","line":34,"column":12,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4320","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4321","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4322","line":36,"column":28,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":45},{"ruleId":"4163","severity":1,"message":"4256","line":56,"column":8,"nodeType":"4165","endLine":56,"endColumn":10,"suggestions":"4665"},{"ruleId":"4153","severity":1,"message":"4324","line":57,"column":8,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":114,"column":44,"nodeType":"4169","messageId":"4170","endLine":114,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":165,"column":34,"nodeType":"4169","messageId":"4170","endLine":165,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":183,"column":34,"nodeType":"4169","messageId":"4170","endLine":183,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":43,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":45},{"ruleId":"4236","severity":1,"message":"4237","line":204,"column":21,"nodeType":"4238","messageId":"4239","endLine":204,"endColumn":76,"fix":"4666"},{"ruleId":"4167","severity":1,"message":"4168","line":228,"column":40,"nodeType":"4169","messageId":"4170","endLine":228,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":230,"column":28,"nodeType":"4169","messageId":"4170","endLine":230,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":232,"column":26,"nodeType":"4169","messageId":"4170","endLine":232,"endColumn":28},{"ruleId":"4236","severity":1,"message":"4237","line":232,"column":36,"nodeType":"4238","messageId":"4239","endLine":232,"endColumn":78,"fix":"4667"},{"ruleId":"4153","severity":1,"message":"4668","line":246,"column":13,"nodeType":"4155","messageId":"4156","endLine":246,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4326","line":251,"column":13,"nodeType":"4155","messageId":"4156","endLine":251,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4263","line":18,"column":45,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":54},{"ruleId":"4163","severity":1,"message":"4375","line":45,"column":8,"nodeType":"4165","endLine":45,"endColumn":10,"suggestions":"4669"},{"ruleId":"4153","severity":1,"message":"4539","line":63,"column":11,"nodeType":"4155","messageId":"4156","endLine":63,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4540","line":75,"column":7,"nodeType":"4155","messageId":"4156","endLine":75,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4220","line":28,"column":6,"nodeType":"4165","endLine":28,"endColumn":10,"suggestions":"4670"},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4369","line":6,"column":9,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4188","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4241","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":19,"column":9,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4415","line":26,"column":6,"nodeType":"4165","endLine":26,"endColumn":8,"suggestions":"4671"},{"ruleId":"4167","severity":1,"message":"4168","line":76,"column":29,"nodeType":"4169","messageId":"4170","endLine":76,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":36,"column":37,"nodeType":"4169","messageId":"4170","endLine":36,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":44,"column":39,"nodeType":"4169","messageId":"4170","endLine":44,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":51,"column":41,"nodeType":"4169","messageId":"4170","endLine":51,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":33,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4198","line":7,"column":10,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4186","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4187","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4406","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4410","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":26},{"ruleId":"4163","severity":1,"message":"4411","line":34,"column":6,"nodeType":"4165","endLine":34,"endColumn":8,"suggestions":"4672"},{"ruleId":"4167","severity":1,"message":"4168","line":51,"column":39,"nodeType":"4169","messageId":"4170","endLine":51,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":51,"column":65,"nodeType":"4169","messageId":"4170","endLine":51,"endColumn":67},{"ruleId":"4167","severity":1,"message":"4168","line":169,"column":38,"nodeType":"4169","messageId":"4170","endLine":169,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":37,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":171,"column":34,"nodeType":"4169","messageId":"4170","endLine":171,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":172,"column":38,"nodeType":"4169","messageId":"4170","endLine":172,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":173,"column":33,"nodeType":"4169","messageId":"4170","endLine":173,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":391,"column":47,"nodeType":"4169","messageId":"4170","endLine":391,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":439,"column":44,"nodeType":"4169","messageId":"4170","endLine":439,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":488,"column":46,"nodeType":"4169","messageId":"4170","endLine":488,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":538,"column":46,"nodeType":"4169","messageId":"4170","endLine":538,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4360","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4361","line":3,"column":15,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4362","line":3,"column":21,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4363","line":3,"column":30,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":38},{"ruleId":"4153","severity":1,"message":"4364","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4185","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4187","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4366","line":16,"column":12,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4367","line":16,"column":22,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4673","line":17,"column":11,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4674","line":26,"column":11,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4159","line":33,"column":9,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":34,"column":9,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4223","line":44,"column":11,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4224","line":59,"column":6,"nodeType":"4165","endLine":59,"endColumn":8,"suggestions":"4675"},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4241","line":18,"column":8,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":22,"column":11,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4244","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4245","line":26,"column":18,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4242","line":36,"column":8,"nodeType":"4165","endLine":36,"endColumn":10,"suggestions":"4676"},{"ruleId":"4167","severity":1,"message":"4168","line":103,"column":45,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":47},{"ruleId":"4163","severity":1,"message":"4391","line":89,"column":6,"nodeType":"4165","endLine":89,"endColumn":8,"suggestions":"4677"},{"ruleId":"4167","severity":1,"message":"4168","line":104,"column":34,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":107,"column":34,"nodeType":"4169","messageId":"4170","endLine":107,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":110,"column":34,"nodeType":"4169","messageId":"4170","endLine":110,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":38,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":4,"column":49,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":4,"column":54,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":18,"column":12,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4530","line":18,"column":19,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4531","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4532","line":21,"column":28,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":45},{"ruleId":"4163","severity":1,"message":"4518","line":44,"column":8,"nodeType":"4165","endLine":44,"endColumn":10,"suggestions":"4678"},{"ruleId":"4167","severity":1,"message":"4168","line":180,"column":35,"nodeType":"4169","messageId":"4170","endLine":180,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":200,"column":34,"nodeType":"4169","messageId":"4170","endLine":200,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":202,"column":34,"nodeType":"4169","messageId":"4170","endLine":202,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":219,"column":25,"nodeType":"4238","messageId":"4239","endLine":222,"endColumn":20,"fix":"4679"},{"ruleId":"4167","severity":1,"message":"4168","line":225,"column":44,"nodeType":"4169","messageId":"4170","endLine":225,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":237,"column":39,"nodeType":"4169","messageId":"4170","endLine":237,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4197","line":268,"column":33,"nodeType":"4169","messageId":"4170","endLine":268,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4197","line":268,"column":55,"nodeType":"4169","messageId":"4170","endLine":268,"endColumn":57},{"ruleId":"4167","severity":1,"message":"4197","line":272,"column":32,"nodeType":"4169","messageId":"4170","endLine":272,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4197","line":272,"column":54,"nodeType":"4169","messageId":"4170","endLine":272,"endColumn":56},{"ruleId":"4167","severity":1,"message":"4197","line":272,"column":75,"nodeType":"4169","messageId":"4170","endLine":272,"endColumn":77},{"ruleId":"4167","severity":1,"message":"4197","line":277,"column":33,"nodeType":"4169","messageId":"4170","endLine":277,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4197","line":277,"column":55,"nodeType":"4169","messageId":"4170","endLine":277,"endColumn":57},{"ruleId":"4232","severity":1,"message":"4233","line":323,"column":21,"nodeType":"4234","messageId":"4235","endLine":323,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":38,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":4,"column":49,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":4,"column":54,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":14,"column":12,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4530","line":14,"column":19,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4525","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4526","line":19,"column":17,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4478","line":41,"column":11,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":31},{"ruleId":"4163","severity":1,"message":"4518","line":49,"column":8,"nodeType":"4165","endLine":49,"endColumn":10,"suggestions":"4680"},{"ruleId":"4232","severity":1,"message":"4233","line":226,"column":21,"nodeType":"4234","messageId":"4235","endLine":226,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4190","line":19,"column":11,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4406","line":22,"column":37,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4451","line":23,"column":21,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4439","line":24,"column":12,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":26,"column":16,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4452","line":31,"column":12,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4459","line":34,"column":12,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4460","line":34,"column":18,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4477","line":40,"column":12,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4453","line":62,"column":15,"nodeType":"4155","messageId":"4156","endLine":62,"endColumn":18},{"ruleId":"4163","severity":1,"message":"4411","line":75,"column":8,"nodeType":"4165","endLine":75,"endColumn":10,"suggestions":"4681"},{"ruleId":"4153","severity":1,"message":"4592","line":137,"column":11,"nodeType":"4155","messageId":"4156","endLine":137,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":244,"column":30,"nodeType":"4169","messageId":"4170","endLine":244,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":251,"column":52,"nodeType":"4169","messageId":"4170","endLine":251,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":257,"column":48,"nodeType":"4169","messageId":"4170","endLine":257,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":263,"column":52,"nodeType":"4169","messageId":"4170","endLine":263,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":269,"column":51,"nodeType":"4169","messageId":"4170","endLine":269,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":275,"column":47,"nodeType":"4169","messageId":"4170","endLine":275,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":316,"column":48,"nodeType":"4169","messageId":"4170","endLine":316,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":337,"column":37,"nodeType":"4169","messageId":"4170","endLine":337,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":371,"column":34,"nodeType":"4169","messageId":"4170","endLine":371,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":393,"column":34,"nodeType":"4169","messageId":"4170","endLine":393,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":30,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":65,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":67},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":104,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":106},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":142,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":144},{"ruleId":"4153","severity":1,"message":"4682","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4190","line":25,"column":9,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4406","line":28,"column":35,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4451","line":29,"column":19,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4439","line":30,"column":10,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":15},{"ruleId":"4163","severity":1,"message":"4411","line":77,"column":6,"nodeType":"4165","endLine":77,"endColumn":8,"suggestions":"4683"},{"ruleId":"4167","severity":1,"message":"4197","line":95,"column":23,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":248,"column":30,"nodeType":"4169","messageId":"4170","endLine":248,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":255,"column":52,"nodeType":"4169","messageId":"4170","endLine":255,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":261,"column":48,"nodeType":"4169","messageId":"4170","endLine":261,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":267,"column":52,"nodeType":"4169","messageId":"4170","endLine":267,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":273,"column":51,"nodeType":"4169","messageId":"4170","endLine":273,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":279,"column":47,"nodeType":"4169","messageId":"4170","endLine":279,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":320,"column":40,"nodeType":"4169","messageId":"4170","endLine":320,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":340,"column":31,"nodeType":"4169","messageId":"4170","endLine":340,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":374,"column":28,"nodeType":"4169","messageId":"4170","endLine":374,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":396,"column":28,"nodeType":"4169","messageId":"4170","endLine":396,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":446,"column":37,"nodeType":"4169","messageId":"4170","endLine":446,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":446,"column":72,"nodeType":"4169","messageId":"4170","endLine":446,"endColumn":74},{"ruleId":"4167","severity":1,"message":"4197","line":446,"column":107,"nodeType":"4169","messageId":"4170","endLine":446,"endColumn":109},{"ruleId":"4167","severity":1,"message":"4168","line":458,"column":37,"nodeType":"4169","messageId":"4170","endLine":458,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":458,"column":72,"nodeType":"4169","messageId":"4170","endLine":458,"endColumn":74},{"ruleId":"4167","severity":1,"message":"4168","line":458,"column":111,"nodeType":"4169","messageId":"4170","endLine":458,"endColumn":113},{"ruleId":"4167","severity":1,"message":"4168","line":470,"column":24,"nodeType":"4169","messageId":"4170","endLine":470,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":470,"column":59,"nodeType":"4169","messageId":"4170","endLine":470,"endColumn":61},{"ruleId":"4167","severity":1,"message":"4168","line":470,"column":98,"nodeType":"4169","messageId":"4170","endLine":470,"endColumn":100},{"ruleId":"4167","severity":1,"message":"4168","line":470,"column":136,"nodeType":"4169","messageId":"4170","endLine":470,"endColumn":138},{"ruleId":"4167","severity":1,"message":"4197","line":544,"column":24,"nodeType":"4169","messageId":"4170","endLine":544,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":544,"column":45,"nodeType":"4169","messageId":"4170","endLine":544,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4453","line":556,"column":11,"nodeType":"4155","messageId":"4156","endLine":556,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4453","line":573,"column":7,"nodeType":"4155","messageId":"4156","endLine":573,"endColumn":10},{"ruleId":"4167","severity":1,"message":"4168","line":587,"column":13,"nodeType":"4169","messageId":"4170","endLine":587,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4168","line":587,"column":26,"nodeType":"4169","messageId":"4170","endLine":587,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":753,"column":22,"nodeType":"4169","messageId":"4170","endLine":753,"endColumn":24},{"ruleId":"4167","severity":1,"message":"4168","line":753,"column":37,"nodeType":"4169","messageId":"4170","endLine":753,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4190","line":23,"column":11,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4406","line":26,"column":37,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4451","line":27,"column":21,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4439","line":28,"column":12,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4684","line":31,"column":12,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4685","line":31,"column":21,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4452","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4459","line":38,"column":12,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4460","line":38,"column":18,"nodeType":"4155","messageId":"4156","endLine":38,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4453","line":65,"column":11,"nodeType":"4155","messageId":"4156","endLine":65,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4411","line":83,"column":8,"nodeType":"4165","endLine":83,"endColumn":10,"suggestions":"4686"},{"ruleId":"4167","severity":1,"message":"4197","line":101,"column":29,"nodeType":"4169","messageId":"4170","endLine":101,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":245,"column":30,"nodeType":"4169","messageId":"4170","endLine":245,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":252,"column":52,"nodeType":"4169","messageId":"4170","endLine":252,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":258,"column":48,"nodeType":"4169","messageId":"4170","endLine":258,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":264,"column":52,"nodeType":"4169","messageId":"4170","endLine":264,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":270,"column":51,"nodeType":"4169","messageId":"4170","endLine":270,"endColumn":53},{"ruleId":"4167","severity":1,"message":"4168","line":276,"column":47,"nodeType":"4169","messageId":"4170","endLine":276,"endColumn":49},{"ruleId":"4167","severity":1,"message":"4168","line":317,"column":48,"nodeType":"4169","messageId":"4170","endLine":317,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":337,"column":37,"nodeType":"4169","messageId":"4170","endLine":337,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":371,"column":34,"nodeType":"4169","messageId":"4170","endLine":371,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":393,"column":34,"nodeType":"4169","messageId":"4170","endLine":393,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":403,"column":43,"nodeType":"4169","messageId":"4170","endLine":403,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4168","line":403,"column":78,"nodeType":"4169","messageId":"4170","endLine":403,"endColumn":80},{"ruleId":"4167","severity":1,"message":"4197","line":403,"column":113,"nodeType":"4169","messageId":"4170","endLine":403,"endColumn":115},{"ruleId":"4167","severity":1,"message":"4168","line":415,"column":43,"nodeType":"4169","messageId":"4170","endLine":415,"endColumn":45},{"ruleId":"4167","severity":1,"message":"4168","line":415,"column":78,"nodeType":"4169","messageId":"4170","endLine":415,"endColumn":80},{"ruleId":"4167","severity":1,"message":"4168","line":415,"column":117,"nodeType":"4169","messageId":"4170","endLine":415,"endColumn":119},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4190","line":17,"column":9,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4576","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4577","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4580","line":41,"column":20,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4581","line":42,"column":21,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4582","line":43,"column":24,"nodeType":"4155","messageId":"4156","endLine":43,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4584","line":44,"column":24,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4585","line":53,"column":23,"nodeType":"4155","messageId":"4156","endLine":53,"endColumn":37},{"ruleId":"4163","severity":1,"message":"4604","line":59,"column":6,"nodeType":"4165","endLine":59,"endColumn":8,"suggestions":"4687"},{"ruleId":"4277","severity":1,"message":"4588","line":379,"column":17,"nodeType":"4155","messageId":"4279","endLine":379,"endColumn":20},{"ruleId":"4177","severity":1,"message":"4178","line":393,"column":26,"nodeType":"4179","messageId":"4180","endLine":393,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":394,"column":21,"nodeType":"4169","messageId":"4170","endLine":394,"endColumn":23},{"ruleId":"4277","severity":1,"message":"4589","line":402,"column":13,"nodeType":"4155","messageId":"4279","endLine":402,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4489","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":26,"column":35,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4163","severity":1,"message":"4384","line":38,"column":6,"nodeType":"4165","endLine":38,"endColumn":14,"suggestions":"4688"},{"ruleId":"4236","severity":1,"message":"4237","line":149,"column":27,"nodeType":"4238","messageId":"4239","endLine":152,"endColumn":28,"fix":"4689"},{"ruleId":"4236","severity":1,"message":"4237","line":162,"column":23,"nodeType":"4238","messageId":"4239","endLine":165,"endColumn":28,"fix":"4690"},{"ruleId":"4153","severity":1,"message":"4563","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":21},{"ruleId":"4167","severity":1,"message":"4168","line":61,"column":24,"nodeType":"4169","messageId":"4170","endLine":61,"endColumn":26},{"ruleId":"4163","severity":1,"message":"4565","line":82,"column":6,"nodeType":"4165","endLine":82,"endColumn":24,"suggestions":"4691"},{"ruleId":"4153","severity":1,"message":"4263","line":83,"column":45,"nodeType":"4155","messageId":"4156","endLine":83,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4206","line":83,"column":56,"nodeType":"4155","messageId":"4156","endLine":83,"endColumn":61},{"ruleId":"4177","severity":1,"message":"4280","line":91,"column":35,"nodeType":"4179","messageId":"4180","endLine":91,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":28,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":30},{"ruleId":"4181","severity":1,"message":"4182","line":348,"column":9,"nodeType":"4183","messageId":"4184","endLine":349,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":348,"column":26,"nodeType":"4169","messageId":"4170","endLine":348,"endColumn":28},{"ruleId":"4177","severity":1,"message":"4280","line":379,"column":21,"nodeType":"4179","messageId":"4180","endLine":379,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":381,"column":14,"nodeType":"4169","messageId":"4170","endLine":381,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4247","line":32,"column":6,"nodeType":"4165","endLine":32,"endColumn":8,"suggestions":"4692"},{"ruleId":"4167","severity":1,"message":"4168","line":96,"column":34,"nodeType":"4169","messageId":"4170","endLine":96,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":99,"column":34,"nodeType":"4169","messageId":"4170","endLine":99,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":102,"column":34,"nodeType":"4169","messageId":"4170","endLine":102,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4368","line":2,"column":17,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":62,"column":14,"nodeType":"4169","messageId":"4170","endLine":62,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4213","line":8,"column":10,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4214","line":9,"column":13,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4215","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4693","line":16,"column":10,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4176","line":50,"column":7,"nodeType":"4155","messageId":"4156","endLine":50,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4389","line":55,"column":23,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4390","line":56,"column":5,"nodeType":"4155","messageId":"4156","endLine":56,"endColumn":28},{"ruleId":"4163","severity":1,"message":"4391","line":155,"column":6,"nodeType":"4165","endLine":155,"endColumn":8,"suggestions":"4694"},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4261","line":5,"column":8,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4262","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4215","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":21,"column":9,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":26,"column":54,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":59},{"ruleId":"4153","severity":1,"message":"4331","line":28,"column":10,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4464","line":28,"column":17,"nodeType":"4155","messageId":"4156","endLine":28,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4187","line":500,"column":3,"nodeType":"4155","messageId":"4156","endLine":500,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":503,"column":3,"nodeType":"4155","messageId":"4156","endLine":503,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4159","line":517,"column":9,"nodeType":"4155","messageId":"4156","endLine":517,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":518,"column":35,"nodeType":"4155","messageId":"4156","endLine":518,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4425","line":523,"column":10,"nodeType":"4155","messageId":"4156","endLine":523,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4426","line":526,"column":10,"nodeType":"4155","messageId":"4156","endLine":526,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4427","line":526,"column":16,"nodeType":"4155","messageId":"4156","endLine":526,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4229","line":556,"column":6,"nodeType":"4165","endLine":556,"endColumn":8,"suggestions":"4695"},{"ruleId":"4167","severity":1,"message":"4168","line":611,"column":24,"nodeType":"4169","messageId":"4170","endLine":611,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":616,"column":23,"nodeType":"4169","messageId":"4170","endLine":616,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":635,"column":19,"nodeType":"4169","messageId":"4170","endLine":635,"endColumn":21},{"ruleId":"4167","severity":1,"message":"4168","line":637,"column":21,"nodeType":"4169","messageId":"4170","endLine":637,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":645,"column":25,"nodeType":"4169","messageId":"4170","endLine":645,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":646,"column":25,"nodeType":"4169","messageId":"4170","endLine":646,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":658,"column":31,"nodeType":"4169","messageId":"4170","endLine":658,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":658,"column":50,"nodeType":"4169","messageId":"4170","endLine":658,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":662,"column":29,"nodeType":"4169","messageId":"4170","endLine":662,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":662,"column":46,"nodeType":"4169","messageId":"4170","endLine":662,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4197","line":671,"column":33,"nodeType":"4169","messageId":"4170","endLine":671,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":699,"column":32,"nodeType":"4169","messageId":"4170","endLine":699,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":732,"column":28,"nodeType":"4169","messageId":"4170","endLine":732,"endColumn":30},{"ruleId":"4177","severity":1,"message":"4280","line":745,"column":45,"nodeType":"4179","messageId":"4180","endLine":745,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":755,"column":45,"nodeType":"4179","messageId":"4180","endLine":755,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":960,"column":32,"nodeType":"4169","messageId":"4170","endLine":960,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":975,"column":33,"nodeType":"4169","messageId":"4170","endLine":975,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":989,"column":33,"nodeType":"4169","messageId":"4170","endLine":989,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4163","severity":1,"message":"4391","line":104,"column":8,"nodeType":"4165","endLine":104,"endColumn":10,"suggestions":"4696"},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":46,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":46,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":125,"column":46,"nodeType":"4169","messageId":"4170","endLine":125,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":128,"column":46,"nodeType":"4169","messageId":"4170","endLine":128,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4190","line":12,"column":9,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4192","line":167,"column":6,"nodeType":"4165","endLine":167,"endColumn":16,"suggestions":"4697"},{"ruleId":"4153","severity":1,"message":"4698","line":22,"column":10,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4423","line":25,"column":10,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":18},{"ruleId":"4163","severity":1,"message":"4391","line":119,"column":6,"nodeType":"4165","endLine":119,"endColumn":8,"suggestions":"4699"},{"ruleId":"4167","severity":1,"message":"4168","line":136,"column":34,"nodeType":"4169","messageId":"4170","endLine":136,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":139,"column":34,"nodeType":"4169","messageId":"4170","endLine":139,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":142,"column":34,"nodeType":"4169","messageId":"4170","endLine":142,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":31,"column":35,"nodeType":"4155","messageId":"4156","endLine":31,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":91,"column":97,"nodeType":"4169","messageId":"4170","endLine":91,"endColumn":99},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4700","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4701","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4522","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4702","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4550","line":16,"column":8,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4439","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4530","line":21,"column":19,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4525","line":26,"column":12,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4526","line":26,"column":17,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4518","line":56,"column":8,"nodeType":"4165","endLine":56,"endColumn":10,"suggestions":"4703"},{"ruleId":"4232","severity":1,"message":"4233","line":245,"column":21,"nodeType":"4234","messageId":"4235","endLine":245,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4387","line":1,"column":38,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":53},{"ruleId":"4153","severity":1,"message":"4261","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4262","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":39,"column":46,"nodeType":"4169","messageId":"4170","endLine":39,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4168","line":42,"column":46,"nodeType":"4169","messageId":"4170","endLine":42,"endColumn":48},{"ruleId":"4153","severity":1,"message":"4249","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":12,"column":3,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4250","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4251","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4252","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4253","line":18,"column":3,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4161","line":19,"column":3,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4254","line":22,"column":10,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4255","line":26,"column":10,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4190","line":29,"column":9,"nodeType":"4155","messageId":"4156","endLine":29,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4319","line":34,"column":12,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4321","line":35,"column":12,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4322","line":35,"column":28,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":45},{"ruleId":"4153","severity":1,"message":"4320","line":36,"column":12,"nodeType":"4155","messageId":"4156","endLine":36,"endColumn":21},{"ruleId":"4163","severity":1,"message":"4256","line":56,"column":8,"nodeType":"4165","endLine":56,"endColumn":10,"suggestions":"4704"},{"ruleId":"4153","severity":1,"message":"4324","line":57,"column":8,"nodeType":"4155","messageId":"4156","endLine":57,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":117,"column":44,"nodeType":"4169","messageId":"4170","endLine":117,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":168,"column":34,"nodeType":"4169","messageId":"4170","endLine":168,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":186,"column":34,"nodeType":"4169","messageId":"4170","endLine":186,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":206,"column":43,"nodeType":"4169","messageId":"4170","endLine":206,"endColumn":45},{"ruleId":"4236","severity":1,"message":"4237","line":207,"column":21,"nodeType":"4238","messageId":"4239","endLine":207,"endColumn":76,"fix":"4705"},{"ruleId":"4167","severity":1,"message":"4168","line":234,"column":40,"nodeType":"4169","messageId":"4170","endLine":234,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4168","line":236,"column":28,"nodeType":"4169","messageId":"4170","endLine":236,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":238,"column":26,"nodeType":"4169","messageId":"4170","endLine":238,"endColumn":28},{"ruleId":"4236","severity":1,"message":"4237","line":238,"column":36,"nodeType":"4238","messageId":"4239","endLine":238,"endColumn":80,"fix":"4706"},{"ruleId":"4153","severity":1,"message":"4326","line":253,"column":13,"nodeType":"4155","messageId":"4156","endLine":253,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4375","line":46,"column":8,"nodeType":"4165","endLine":46,"endColumn":10,"suggestions":"4707"},{"ruleId":"4153","severity":1,"message":"4539","line":63,"column":11,"nodeType":"4155","messageId":"4156","endLine":63,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4540","line":75,"column":7,"nodeType":"4155","messageId":"4156","endLine":75,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4369","line":6,"column":9,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4360","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4361","line":3,"column":15,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4362","line":3,"column":21,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4363","line":3,"column":30,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":38},{"ruleId":"4153","severity":1,"message":"4364","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4185","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":7},{"ruleId":"4153","severity":1,"message":"4365","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4187","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4366","line":16,"column":12,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4367","line":16,"column":22,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4673","line":17,"column":11,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4674","line":26,"column":11,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":5,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4241","line":18,"column":8,"nodeType":"4155","messageId":"4156","endLine":18,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":23,"column":11,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4244","line":27,"column":12,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4245","line":27,"column":18,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4242","line":37,"column":8,"nodeType":"4165","endLine":37,"endColumn":10,"suggestions":"4708"},{"ruleId":"4167","severity":1,"message":"4168","line":104,"column":45,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4187","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":16,"column":3,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":17,"column":3,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4159","line":33,"column":9,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4190","line":34,"column":9,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4223","line":44,"column":11,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":23},{"ruleId":"4163","severity":1,"message":"4224","line":59,"column":6,"nodeType":"4165","endLine":59,"endColumn":8,"suggestions":"4709"},{"ruleId":"4163","severity":1,"message":"4710","line":63,"column":6,"nodeType":"4165","endLine":63,"endColumn":12,"suggestions":"4711"},{"ruleId":"4181","severity":1,"message":"4182","line":92,"column":5,"nodeType":"4183","messageId":"4184","endLine":96,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4197","line":93,"column":18,"nodeType":"4169","messageId":"4170","endLine":93,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4220","line":28,"column":6,"nodeType":"4165","endLine":28,"endColumn":10,"suggestions":"4712"},{"ruleId":"4153","severity":1,"message":"4161","line":10,"column":22,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4713","line":16,"column":11,"nodeType":"4155","messageId":"4156","endLine":16,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4393","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":23},{"ruleId":"4153","severity":1,"message":"4394","line":21,"column":25,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4395","line":23,"column":12,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4264","line":30,"column":10,"nodeType":"4155","messageId":"4156","endLine":30,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4396","line":32,"column":10,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4266","line":33,"column":10,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4281","line":45,"column":7,"nodeType":"4155","messageId":"4156","endLine":45,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4399","line":46,"column":7,"nodeType":"4155","messageId":"4156","endLine":46,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4400","line":47,"column":7,"nodeType":"4155","messageId":"4156","endLine":47,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4263","line":50,"column":45,"nodeType":"4155","messageId":"4156","endLine":50,"endColumn":54},{"ruleId":"4153","severity":1,"message":"4401","line":53,"column":8,"nodeType":"4155","messageId":"4156","endLine":53,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4714","line":86,"column":6,"nodeType":"4165","endLine":86,"endColumn":8,"suggestions":"4715"},{"ruleId":"4153","severity":1,"message":"4358","line":91,"column":11,"nodeType":"4155","messageId":"4156","endLine":91,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4404","line":102,"column":6,"nodeType":"4165","endLine":102,"endColumn":13,"suggestions":"4716"},{"ruleId":"4153","severity":1,"message":"4717","line":148,"column":11,"nodeType":"4155","messageId":"4156","endLine":148,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":263,"column":19,"nodeType":"4179","messageId":"4180","endLine":263,"endColumn":21},{"ruleId":"4177","severity":1,"message":"4280","line":309,"column":17,"nodeType":"4179","messageId":"4180","endLine":309,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":318,"column":17,"nodeType":"4179","messageId":"4180","endLine":318,"endColumn":19},{"ruleId":"4177","severity":1,"message":"4280","line":325,"column":15,"nodeType":"4179","messageId":"4180","endLine":325,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4718","line":333,"column":9,"nodeType":"4155","messageId":"4156","endLine":333,"endColumn":24},{"ruleId":"4177","severity":1,"message":"4280","line":335,"column":15,"nodeType":"4179","messageId":"4180","endLine":335,"endColumn":17},{"ruleId":"4167","severity":1,"message":"4168","line":437,"column":49,"nodeType":"4169","messageId":"4170","endLine":437,"endColumn":51},{"ruleId":"4167","severity":1,"message":"4168","line":444,"column":47,"nodeType":"4169","messageId":"4170","endLine":444,"endColumn":49},{"ruleId":"4153","severity":1,"message":"4213","line":8,"column":10,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4214","line":9,"column":13,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4215","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4159","line":20,"column":9,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4176","line":49,"column":7,"nodeType":"4155","messageId":"4156","endLine":49,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4205","line":2,"column":27,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4159","line":22,"column":9,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":24,"column":35,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":40},{"ruleId":"4167","severity":1,"message":"4168","line":61,"column":14,"nodeType":"4169","messageId":"4170","endLine":61,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4719","line":26,"column":6,"nodeType":"4165","endLine":26,"endColumn":8,"suggestions":"4720"},{"ruleId":"4236","severity":1,"message":"4237","line":86,"column":29,"nodeType":"4238","messageId":"4239","endLine":89,"endColumn":30,"fix":"4721"},{"ruleId":"4153","severity":1,"message":"4187","line":11,"column":3,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4285","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":10},{"ruleId":"4153","severity":1,"message":"4406","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4722","line":23,"column":50,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":58},{"ruleId":"4163","severity":1,"message":"4411","line":34,"column":6,"nodeType":"4165","endLine":34,"endColumn":8,"suggestions":"4723"},{"ruleId":"4163","severity":1,"message":"4724","line":49,"column":6,"nodeType":"4165","endLine":49,"endColumn":16,"suggestions":"4725"},{"ruleId":"4167","severity":1,"message":"4168","line":136,"column":35,"nodeType":"4169","messageId":"4170","endLine":136,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":309,"column":26,"nodeType":"4169","messageId":"4170","endLine":309,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":323,"column":26,"nodeType":"4169","messageId":"4170","endLine":323,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":336,"column":26,"nodeType":"4169","messageId":"4170","endLine":336,"endColumn":28},{"ruleId":"4236","severity":1,"message":"4237","line":398,"column":29,"nodeType":"4238","messageId":"4239","endLine":401,"endColumn":30,"fix":"4726"},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4159","line":12,"column":9,"nodeType":"4155","messageId":"4156","endLine":12,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":13,"column":35,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4159","line":14,"column":9,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4206","line":15,"column":35,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4437","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4498","line":14,"column":7,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":13},{"ruleId":"4163","severity":1,"message":"4384","line":89,"column":6,"nodeType":"4165","endLine":89,"endColumn":14,"suggestions":"4727"},{"ruleId":"4236","severity":1,"message":"4237","line":147,"column":27,"nodeType":"4238","messageId":"4239","endLine":150,"endColumn":28,"fix":"4728"},{"ruleId":"4236","severity":1,"message":"4237","line":160,"column":23,"nodeType":"4238","messageId":"4239","endLine":163,"endColumn":28,"fix":"4729"},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":41,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":43},{"ruleId":"4502","severity":1,"message":"4503","line":170,"column":46,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":48},{"ruleId":"4502","severity":1,"message":"4503","line":170,"column":64,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":66},{"ruleId":"4502","severity":1,"message":"4506","line":170,"column":64,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":66},{"ruleId":"4167","severity":1,"message":"4168","line":170,"column":81,"nodeType":"4169","messageId":"4170","endLine":170,"endColumn":83},{"ruleId":"4502","severity":1,"message":"4506","line":170,"column":86,"nodeType":"4504","messageId":"4505","endLine":170,"endColumn":88},{"ruleId":"4153","severity":1,"message":"4406","line":10,"column":35,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":41},{"ruleId":"4153","severity":1,"message":"4507","line":26,"column":5,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":15},{"ruleId":"4167","severity":1,"message":"4197","line":45,"column":23,"nodeType":"4169","messageId":"4170","endLine":45,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":94,"column":18,"nodeType":"4169","messageId":"4170","endLine":94,"endColumn":20},{"ruleId":"4167","severity":1,"message":"4168","line":112,"column":30,"nodeType":"4169","messageId":"4170","endLine":112,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":131,"column":25,"nodeType":"4169","messageId":"4170","endLine":131,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":149,"column":23,"nodeType":"4169","messageId":"4170","endLine":149,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":165,"column":28,"nodeType":"4169","messageId":"4170","endLine":165,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":184,"column":21,"nodeType":"4169","messageId":"4170","endLine":184,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":203,"column":28,"nodeType":"4169","messageId":"4170","endLine":203,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":222,"column":17,"nodeType":"4169","messageId":"4170","endLine":222,"endColumn":19},{"ruleId":"4167","severity":1,"message":"4168","line":240,"column":20,"nodeType":"4169","messageId":"4170","endLine":240,"endColumn":22},{"ruleId":"4167","severity":1,"message":"4168","line":256,"column":16,"nodeType":"4169","messageId":"4170","endLine":256,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4168","line":272,"column":14,"nodeType":"4169","messageId":"4170","endLine":272,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":390,"column":29,"nodeType":"4169","messageId":"4170","endLine":390,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":404,"column":36,"nodeType":"4169","messageId":"4170","endLine":404,"endColumn":38},{"ruleId":"4167","severity":1,"message":"4168","line":420,"column":34,"nodeType":"4169","messageId":"4170","endLine":420,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":433,"column":32,"nodeType":"4169","messageId":"4170","endLine":433,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":447,"column":39,"nodeType":"4169","messageId":"4170","endLine":447,"endColumn":41},{"ruleId":"4167","severity":1,"message":"4168","line":460,"column":31,"nodeType":"4169","messageId":"4170","endLine":460,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4437","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4489","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":14},{"ruleId":"4163","severity":1,"message":"4487","line":21,"column":6,"nodeType":"4165","endLine":21,"endColumn":14,"suggestions":"4730"},{"ruleId":"4167","severity":1,"message":"4197","line":25,"column":14,"nodeType":"4169","messageId":"4170","endLine":25,"endColumn":16},{"ruleId":"4167","severity":1,"message":"4168","line":53,"column":41,"nodeType":"4169","messageId":"4170","endLine":53,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4168","line":59,"column":32,"nodeType":"4169","messageId":"4170","endLine":59,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4731","line":2,"column":58,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":72},{"ruleId":"4153","severity":1,"message":"4365","line":2,"column":74,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":84},{"ruleId":"4153","severity":1,"message":"4732","line":2,"column":97,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":108},{"ruleId":"4153","severity":1,"message":"4731","line":2,"column":51,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":65},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":103,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":114},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4249","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4472","line":24,"column":8,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4159","line":32,"column":11,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":33,"column":13,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":35,"column":11,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":39,"column":12,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":62,"column":8,"nodeType":"4165","endLine":62,"endColumn":10,"suggestions":"4734"},{"ruleId":"4167","severity":1,"message":"4197","line":104,"column":24,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":104,"column":45,"nodeType":"4169","messageId":"4170","endLine":104,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":222,"column":38,"nodeType":"4169","messageId":"4170","endLine":222,"endColumn":40},{"ruleId":"4236","severity":1,"message":"4237","line":500,"column":53,"nodeType":"4238","messageId":"4239","endLine":500,"endColumn":93,"fix":"4735"},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4468","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4249","line":24,"column":8,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4159","line":32,"column":11,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":33,"column":13,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":35,"column":11,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":39,"column":12,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":57,"column":8,"nodeType":"4165","endLine":57,"endColumn":10,"suggestions":"4736"},{"ruleId":"4167","severity":1,"message":"4197","line":103,"column":24,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4197","line":103,"column":45,"nodeType":"4169","messageId":"4170","endLine":103,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":223,"column":38,"nodeType":"4169","messageId":"4170","endLine":223,"endColumn":40},{"ruleId":"4236","severity":1,"message":"4237","line":516,"column":53,"nodeType":"4238","messageId":"4239","endLine":516,"endColumn":93,"fix":"4737"},{"ruleId":"4153","severity":1,"message":"4217","line":4,"column":8,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":10,"column":5,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":11,"column":5,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4468","line":23,"column":8,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4249","line":24,"column":8,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4159","line":32,"column":11,"nodeType":"4155","messageId":"4156","endLine":32,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4438","line":33,"column":13,"nodeType":"4155","messageId":"4156","endLine":33,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4469","line":35,"column":11,"nodeType":"4155","messageId":"4156","endLine":35,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4439","line":39,"column":12,"nodeType":"4155","messageId":"4156","endLine":39,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4440","line":56,"column":8,"nodeType":"4165","endLine":56,"endColumn":10,"suggestions":"4738"},{"ruleId":"4153","severity":1,"message":"4406","line":11,"column":27,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":11,"column":35,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4627","line":10,"column":17,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4739","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4241","line":15,"column":8,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":22},{"ruleId":"4615","severity":1,"message":"4616","line":201,"column":153,"nodeType":"4169","messageId":"4617","endLine":201,"endColumn":154},{"ruleId":"4615","severity":1,"message":"4616","line":201,"column":156,"nodeType":"4169","messageId":"4617","endLine":201,"endColumn":157},{"ruleId":"4378","severity":1,"message":"4379","line":202,"column":33,"nodeType":"4380","messageId":"4381","endLine":202,"endColumn":34,"fix":"4740"},{"ruleId":"4177","severity":1,"message":"4280","line":305,"column":45,"nodeType":"4179","messageId":"4180","endLine":305,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":352,"column":31,"nodeType":"4179","messageId":"4180","endLine":352,"endColumn":33},{"ruleId":"4177","severity":1,"message":"4280","line":370,"column":31,"nodeType":"4179","messageId":"4180","endLine":370,"endColumn":33},{"ruleId":"4177","severity":1,"message":"4280","line":390,"column":45,"nodeType":"4179","messageId":"4180","endLine":390,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":418,"column":27,"nodeType":"4179","messageId":"4180","endLine":418,"endColumn":29},{"ruleId":"4177","severity":1,"message":"4280","line":431,"column":27,"nodeType":"4179","messageId":"4180","endLine":431,"endColumn":29},{"ruleId":"4619","severity":1,"message":"4620","line":545,"column":10,"nodeType":"4621","messageId":"4170","endLine":545,"endColumn":14,"fix":"4741"},{"ruleId":"4177","severity":1,"message":"4280","line":555,"column":45,"nodeType":"4179","messageId":"4180","endLine":555,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":574,"column":35,"nodeType":"4169","messageId":"4170","endLine":574,"endColumn":37},{"ruleId":"4277","severity":1,"message":"4623","line":629,"column":14,"nodeType":"4155","messageId":"4279","endLine":629,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":634,"column":32,"nodeType":"4169","messageId":"4170","endLine":634,"endColumn":34},{"ruleId":"4277","severity":1,"message":"4623","line":636,"column":14,"nodeType":"4155","messageId":"4279","endLine":636,"endColumn":28},{"ruleId":"4177","severity":1,"message":"4280","line":697,"column":21,"nodeType":"4179","messageId":"4180","endLine":697,"endColumn":23},{"ruleId":"4624","severity":1,"message":"4625","line":768,"column":13,"nodeType":"4380","messageId":"4626","endLine":768,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":960,"column":33,"nodeType":"4169","messageId":"4170","endLine":960,"endColumn":35},{"ruleId":"4630","severity":1,"message":"4631","line":962,"column":8,"nodeType":"4155","messageId":"4632","endLine":962,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4197","line":1014,"column":28,"nodeType":"4169","messageId":"4170","endLine":1014,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":1187,"column":29,"nodeType":"4169","messageId":"4170","endLine":1187,"endColumn":31},{"ruleId":"4633","severity":1,"message":"4634","line":1189,"column":6,"nodeType":"4238","endLine":1189,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4168","line":83,"column":44,"nodeType":"4169","messageId":"4170","endLine":83,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":24,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":106,"column":34,"nodeType":"4169","messageId":"4170","endLine":106,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":119,"column":31,"nodeType":"4169","messageId":"4170","endLine":119,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4518","line":47,"column":8,"nodeType":"4165","endLine":47,"endColumn":10,"suggestions":"4742"},{"ruleId":"4167","severity":1,"message":"4168","line":198,"column":44,"nodeType":"4169","messageId":"4170","endLine":198,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":204,"column":48,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":209,"column":52,"nodeType":"4169","messageId":"4170","endLine":209,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":309,"column":50,"nodeType":"4169","messageId":"4170","endLine":309,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":324,"column":53,"nodeType":"4169","messageId":"4170","endLine":324,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":324,"column":74,"nodeType":"4169","messageId":"4170","endLine":324,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":341,"column":71,"nodeType":"4169","messageId":"4170","endLine":341,"endColumn":73},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":17},{"ruleId":"4163","severity":1,"message":"4518","line":50,"column":8,"nodeType":"4165","endLine":50,"endColumn":10,"suggestions":"4743"},{"ruleId":"4167","severity":1,"message":"4168","line":201,"column":44,"nodeType":"4169","messageId":"4170","endLine":201,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":209,"column":48,"nodeType":"4169","messageId":"4170","endLine":209,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":213,"column":52,"nodeType":"4169","messageId":"4170","endLine":213,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":314,"column":50,"nodeType":"4169","messageId":"4170","endLine":314,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":329,"column":53,"nodeType":"4169","messageId":"4170","endLine":329,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4197","line":329,"column":74,"nodeType":"4169","messageId":"4170","endLine":329,"endColumn":76},{"ruleId":"4167","severity":1,"message":"4168","line":346,"column":71,"nodeType":"4169","messageId":"4170","endLine":346,"endColumn":73},{"ruleId":"4153","severity":1,"message":"4462","line":2,"column":19,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":32},{"ruleId":"4153","severity":1,"message":"4187","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4188","line":13,"column":3,"nodeType":"4155","messageId":"4156","endLine":13,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4463","line":14,"column":3,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4425","line":40,"column":10,"nodeType":"4155","messageId":"4156","endLine":40,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4464","line":44,"column":17,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":25},{"ruleId":"4163","severity":1,"message":"4465","line":74,"column":6,"nodeType":"4165","endLine":74,"endColumn":8,"suggestions":"4744"},{"ruleId":"4167","severity":1,"message":"4168","line":95,"column":24,"nodeType":"4169","messageId":"4170","endLine":95,"endColumn":26},{"ruleId":"4167","severity":1,"message":"4168","line":100,"column":23,"nodeType":"4169","messageId":"4170","endLine":100,"endColumn":25},{"ruleId":"4167","severity":1,"message":"4168","line":122,"column":19,"nodeType":"4169","messageId":"4170","endLine":122,"endColumn":21},{"ruleId":"4167","severity":1,"message":"4168","line":124,"column":21,"nodeType":"4169","messageId":"4170","endLine":124,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":132,"column":25,"nodeType":"4169","messageId":"4170","endLine":132,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":133,"column":25,"nodeType":"4169","messageId":"4170","endLine":133,"endColumn":27},{"ruleId":"4167","severity":1,"message":"4168","line":150,"column":31,"nodeType":"4169","messageId":"4170","endLine":150,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":150,"column":50,"nodeType":"4169","messageId":"4170","endLine":150,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":155,"column":29,"nodeType":"4169","messageId":"4170","endLine":155,"endColumn":31},{"ruleId":"4167","severity":1,"message":"4168","line":155,"column":46,"nodeType":"4169","messageId":"4170","endLine":155,"endColumn":48},{"ruleId":"4167","severity":1,"message":"4197","line":165,"column":33,"nodeType":"4169","messageId":"4170","endLine":165,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":194,"column":32,"nodeType":"4169","messageId":"4170","endLine":194,"endColumn":34},{"ruleId":"4177","severity":1,"message":"4280","line":228,"column":45,"nodeType":"4179","messageId":"4180","endLine":228,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":238,"column":45,"nodeType":"4179","messageId":"4180","endLine":238,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":257,"column":28,"nodeType":"4169","messageId":"4170","endLine":257,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":443,"column":32,"nodeType":"4169","messageId":"4170","endLine":443,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":458,"column":33,"nodeType":"4169","messageId":"4170","endLine":458,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4168","line":471,"column":33,"nodeType":"4169","messageId":"4170","endLine":471,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4517","line":26,"column":11,"nodeType":"4155","messageId":"4156","endLine":26,"endColumn":22},{"ruleId":"4163","severity":1,"message":"4518","line":43,"column":8,"nodeType":"4165","endLine":43,"endColumn":10,"suggestions":"4745"},{"ruleId":"4167","severity":1,"message":"4168","line":194,"column":44,"nodeType":"4169","messageId":"4170","endLine":194,"endColumn":46},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4439","line":19,"column":12,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4438","line":20,"column":12,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4458","line":20,"column":16,"nodeType":"4155","messageId":"4156","endLine":20,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4746","line":21,"column":12,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":27},{"ruleId":"4153","severity":1,"message":"4747","line":21,"column":29,"nodeType":"4155","messageId":"4156","endLine":21,"endColumn":44},{"ruleId":"4163","severity":1,"message":"4518","line":40,"column":8,"nodeType":"4165","endLine":40,"endColumn":10,"suggestions":"4748"},{"ruleId":"4167","severity":1,"message":"4168","line":191,"column":44,"nodeType":"4169","messageId":"4170","endLine":191,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":252,"column":50,"nodeType":"4169","messageId":"4170","endLine":252,"endColumn":52},{"ruleId":"4167","severity":1,"message":"4168","line":263,"column":53,"nodeType":"4169","messageId":"4170","endLine":263,"endColumn":55},{"ruleId":"4167","severity":1,"message":"4168","line":291,"column":48,"nodeType":"4169","messageId":"4170","endLine":291,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":63,"column":32,"nodeType":"4169","messageId":"4170","endLine":63,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":5,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":5,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":5,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":8},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":5,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":10},{"ruleId":"4163","severity":1,"message":"4449","line":37,"column":8,"nodeType":"4165","endLine":37,"endColumn":10,"suggestions":"4749"},{"ruleId":"4167","severity":1,"message":"4168","line":169,"column":44,"nodeType":"4169","messageId":"4170","endLine":169,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":175,"column":48,"nodeType":"4169","messageId":"4170","endLine":175,"endColumn":50},{"ruleId":"4167","severity":1,"message":"4168","line":180,"column":52,"nodeType":"4169","messageId":"4170","endLine":180,"endColumn":54},{"ruleId":"4167","severity":1,"message":"4168","line":205,"column":37,"nodeType":"4169","messageId":"4170","endLine":205,"endColumn":39},{"ruleId":"4167","severity":1,"message":"4168","line":216,"column":35,"nodeType":"4169","messageId":"4170","endLine":216,"endColumn":37},{"ruleId":"4153","severity":1,"message":"4217","line":2,"column":8,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4187","line":5,"column":38,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":47},{"ruleId":"4153","severity":1,"message":"4328","line":5,"column":49,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":5,"column":54,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4700","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4701","line":10,"column":8,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4522","line":11,"column":8,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":26},{"ruleId":"4153","severity":1,"message":"4439","line":24,"column":12,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4530","line":24,"column":19,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":27},{"ruleId":"4163","severity":1,"message":"4518","line":55,"column":8,"nodeType":"4165","endLine":55,"endColumn":10,"suggestions":"4750"},{"ruleId":"4167","severity":1,"message":"4168","line":204,"column":35,"nodeType":"4169","messageId":"4170","endLine":204,"endColumn":37},{"ruleId":"4167","severity":1,"message":"4168","line":225,"column":34,"nodeType":"4169","messageId":"4170","endLine":225,"endColumn":36},{"ruleId":"4167","severity":1,"message":"4168","line":227,"column":34,"nodeType":"4169","messageId":"4170","endLine":227,"endColumn":36},{"ruleId":"4236","severity":1,"message":"4237","line":247,"column":25,"nodeType":"4238","messageId":"4239","endLine":250,"endColumn":20,"fix":"4751"},{"ruleId":"4167","severity":1,"message":"4168","line":253,"column":44,"nodeType":"4169","messageId":"4170","endLine":253,"endColumn":46},{"ruleId":"4167","severity":1,"message":"4168","line":265,"column":40,"nodeType":"4169","messageId":"4170","endLine":265,"endColumn":42},{"ruleId":"4167","severity":1,"message":"4197","line":295,"column":33,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4197","line":295,"column":55,"nodeType":"4169","messageId":"4170","endLine":295,"endColumn":57},{"ruleId":"4167","severity":1,"message":"4197","line":299,"column":32,"nodeType":"4169","messageId":"4170","endLine":299,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4197","line":299,"column":54,"nodeType":"4169","messageId":"4170","endLine":299,"endColumn":56},{"ruleId":"4167","severity":1,"message":"4197","line":299,"column":75,"nodeType":"4169","messageId":"4170","endLine":299,"endColumn":77},{"ruleId":"4167","severity":1,"message":"4197","line":304,"column":33,"nodeType":"4169","messageId":"4170","endLine":304,"endColumn":35},{"ruleId":"4167","severity":1,"message":"4197","line":304,"column":55,"nodeType":"4169","messageId":"4170","endLine":304,"endColumn":57},{"ruleId":"4232","severity":1,"message":"4233","line":358,"column":21,"nodeType":"4234","messageId":"4235","endLine":358,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":10,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4576","line":10,"column":3,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4577","line":15,"column":3,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":19},{"ruleId":"4153","severity":1,"message":"4578","line":34,"column":9,"nodeType":"4155","messageId":"4156","endLine":34,"endColumn":11},{"ruleId":"4153","severity":1,"message":"4580","line":43,"column":20,"nodeType":"4155","messageId":"4156","endLine":43,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4581","line":44,"column":21,"nodeType":"4155","messageId":"4156","endLine":44,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4582","line":45,"column":24,"nodeType":"4155","messageId":"4156","endLine":45,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4584","line":46,"column":24,"nodeType":"4155","messageId":"4156","endLine":46,"endColumn":39},{"ruleId":"4153","severity":1,"message":"4585","line":55,"column":23,"nodeType":"4155","messageId":"4156","endLine":55,"endColumn":37},{"ruleId":"4163","severity":1,"message":"4604","line":61,"column":6,"nodeType":"4165","endLine":61,"endColumn":8,"suggestions":"4752"},{"ruleId":"4277","severity":1,"message":"4588","line":386,"column":17,"nodeType":"4155","messageId":"4279","endLine":386,"endColumn":20},{"ruleId":"4177","severity":1,"message":"4178","line":400,"column":26,"nodeType":"4179","messageId":"4180","endLine":400,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":401,"column":21,"nodeType":"4169","messageId":"4170","endLine":401,"endColumn":23},{"ruleId":"4277","severity":1,"message":"4589","line":409,"column":13,"nodeType":"4155","messageId":"4279","endLine":409,"endColumn":21},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4190","line":17,"column":9,"nodeType":"4155","messageId":"4156","endLine":17,"endColumn":16},{"ruleId":"4163","severity":1,"message":"4481","line":42,"column":6,"nodeType":"4165","endLine":42,"endColumn":8,"suggestions":"4753"},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4449","line":34,"column":6,"nodeType":"4165","endLine":34,"endColumn":8,"suggestions":"4754"},{"ruleId":"4167","severity":1,"message":"4168","line":167,"column":28,"nodeType":"4169","messageId":"4170","endLine":167,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":172,"column":30,"nodeType":"4169","messageId":"4170","endLine":172,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":177,"column":32,"nodeType":"4169","messageId":"4170","endLine":177,"endColumn":34},{"ruleId":"4167","severity":1,"message":"4168","line":202,"column":31,"nodeType":"4169","messageId":"4170","endLine":202,"endColumn":33},{"ruleId":"4167","severity":1,"message":"4168","line":213,"column":29,"nodeType":"4169","messageId":"4170","endLine":213,"endColumn":31},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4449","line":29,"column":6,"nodeType":"4165","endLine":29,"endColumn":8,"suggestions":"4755"},{"ruleId":"4167","severity":1,"message":"4168","line":137,"column":28,"nodeType":"4169","messageId":"4170","endLine":137,"endColumn":30},{"ruleId":"4167","severity":1,"message":"4168","line":142,"column":30,"nodeType":"4169","messageId":"4170","endLine":142,"endColumn":32},{"ruleId":"4167","severity":1,"message":"4168","line":147,"column":32,"nodeType":"4169","messageId":"4170","endLine":147,"endColumn":34},{"ruleId":"4153","severity":1,"message":"4187","line":6,"column":3,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4328","line":7,"column":3,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4329","line":8,"column":3,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":6},{"ruleId":"4153","severity":1,"message":"4188","line":9,"column":3,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":8},{"ruleId":"4163","severity":1,"message":"4449","line":27,"column":6,"nodeType":"4165","endLine":27,"endColumn":8,"suggestions":"4756"},{"ruleId":"4167","severity":1,"message":"4168","line":135,"column":28,"nodeType":"4169","messageId":"4170","endLine":135,"endColumn":30},{"ruleId":"4153","severity":1,"message":"4406","line":11,"column":27,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4206","line":11,"column":35,"nodeType":"4155","messageId":"4156","endLine":11,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4206","line":24,"column":35,"nodeType":"4155","messageId":"4156","endLine":24,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4198","line":6,"column":10,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4206","line":25,"column":35,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4241","line":6,"column":8,"nodeType":"4155","messageId":"4156","endLine":6,"endColumn":22},{"ruleId":"4153","severity":1,"message":"4489","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4215","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4406","line":22,"column":37,"nodeType":"4155","messageId":"4156","endLine":22,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4635","line":27,"column":38,"nodeType":"4155","messageId":"4156","endLine":27,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4197","line":35,"column":30,"nodeType":"4169","messageId":"4170","endLine":35,"endColumn":32},{"ruleId":"4153","severity":1,"message":"4636","line":41,"column":25,"nodeType":"4155","messageId":"4156","endLine":41,"endColumn":33},{"ruleId":"4153","severity":1,"message":"4253","line":4,"column":41,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4163","severity":1,"message":"4567","line":12,"column":6,"nodeType":"4165","endLine":12,"endColumn":11,"suggestions":"4757"},{"ruleId":"4153","severity":1,"message":"4508","line":1,"column":10,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4189","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":17},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4253","line":2,"column":41,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4206","line":23,"column":35,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":40},{"ruleId":"4153","severity":1,"message":"4627","line":10,"column":17,"nodeType":"4155","messageId":"4156","endLine":10,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4739","line":14,"column":8,"nodeType":"4155","messageId":"4156","endLine":14,"endColumn":9},{"ruleId":"4153","severity":1,"message":"4241","line":15,"column":8,"nodeType":"4155","messageId":"4156","endLine":15,"endColumn":22},{"ruleId":"4615","severity":1,"message":"4616","line":201,"column":153,"nodeType":"4169","messageId":"4617","endLine":201,"endColumn":154},{"ruleId":"4615","severity":1,"message":"4616","line":201,"column":156,"nodeType":"4169","messageId":"4617","endLine":201,"endColumn":157},{"ruleId":"4378","severity":1,"message":"4379","line":202,"column":33,"nodeType":"4380","messageId":"4381","endLine":202,"endColumn":34,"fix":"4758"},{"ruleId":"4177","severity":1,"message":"4280","line":305,"column":45,"nodeType":"4179","messageId":"4180","endLine":305,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":352,"column":31,"nodeType":"4179","messageId":"4180","endLine":352,"endColumn":33},{"ruleId":"4177","severity":1,"message":"4280","line":370,"column":31,"nodeType":"4179","messageId":"4180","endLine":370,"endColumn":33},{"ruleId":"4177","severity":1,"message":"4280","line":390,"column":45,"nodeType":"4179","messageId":"4180","endLine":390,"endColumn":47},{"ruleId":"4177","severity":1,"message":"4280","line":418,"column":27,"nodeType":"4179","messageId":"4180","endLine":418,"endColumn":29},{"ruleId":"4177","severity":1,"message":"4280","line":431,"column":27,"nodeType":"4179","messageId":"4180","endLine":431,"endColumn":29},{"ruleId":"4619","severity":1,"message":"4620","line":545,"column":10,"nodeType":"4621","messageId":"4170","endLine":545,"endColumn":14,"fix":"4759"},{"ruleId":"4177","severity":1,"message":"4280","line":555,"column":45,"nodeType":"4179","messageId":"4180","endLine":555,"endColumn":47},{"ruleId":"4167","severity":1,"message":"4168","line":574,"column":35,"nodeType":"4169","messageId":"4170","endLine":574,"endColumn":37},{"ruleId":"4277","severity":1,"message":"4623","line":629,"column":14,"nodeType":"4155","messageId":"4279","endLine":629,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":634,"column":32,"nodeType":"4169","messageId":"4170","endLine":634,"endColumn":34},{"ruleId":"4277","severity":1,"message":"4623","line":636,"column":14,"nodeType":"4155","messageId":"4279","endLine":636,"endColumn":28},{"ruleId":"4177","severity":1,"message":"4280","line":697,"column":21,"nodeType":"4179","messageId":"4180","endLine":697,"endColumn":23},{"ruleId":"4624","severity":1,"message":"4625","line":763,"column":13,"nodeType":"4380","messageId":"4626","endLine":763,"endColumn":23},{"ruleId":"4167","severity":1,"message":"4168","line":950,"column":33,"nodeType":"4169","messageId":"4170","endLine":950,"endColumn":35},{"ruleId":"4630","severity":1,"message":"4631","line":952,"column":8,"nodeType":"4155","messageId":"4632","endLine":952,"endColumn":18},{"ruleId":"4167","severity":1,"message":"4197","line":1002,"column":26,"nodeType":"4169","messageId":"4170","endLine":1002,"endColumn":28},{"ruleId":"4167","severity":1,"message":"4168","line":1174,"column":29,"nodeType":"4169","messageId":"4170","endLine":1174,"endColumn":31},{"ruleId":"4633","severity":1,"message":"4634","line":1176,"column":6,"nodeType":"4238","endLine":1176,"endColumn":55},{"ruleId":"4153","severity":1,"message":"4368","line":1,"column":17,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4205","line":1,"column":27,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":36},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":54,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":60},{"ruleId":"4153","severity":1,"message":"4215","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":12},{"ruleId":"4153","severity":1,"message":"4406","line":19,"column":37,"nodeType":"4155","messageId":"4156","endLine":19,"endColumn":43},{"ruleId":"4153","severity":1,"message":"4635","line":23,"column":38,"nodeType":"4155","messageId":"4156","endLine":23,"endColumn":43},{"ruleId":"4167","severity":1,"message":"4197","line":36,"column":22,"nodeType":"4169","messageId":"4170","endLine":36,"endColumn":24},{"ruleId":"4153","severity":1,"message":"4636","line":42,"column":17,"nodeType":"4155","messageId":"4156","endLine":42,"endColumn":25},{"ruleId":"4153","severity":1,"message":"4731","line":1,"column":76,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":90},{"ruleId":"4153","severity":1,"message":"4733","line":1,"column":92,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":103},{"ruleId":"4153","severity":1,"message":"4760","line":7,"column":8,"nodeType":"4155","messageId":"4156","endLine":7,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4761","line":8,"column":8,"nodeType":"4155","messageId":"4156","endLine":8,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4762","line":25,"column":8,"nodeType":"4155","messageId":"4156","endLine":25,"endColumn":15},{"ruleId":"4153","severity":1,"message":"4731","line":2,"column":64,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":78},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":93,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":104},{"ruleId":"4153","severity":1,"message":"4763","line":52,"column":11,"nodeType":"4155","messageId":"4156","endLine":52,"endColumn":18},{"ruleId":"4153","severity":1,"message":"4731","line":1,"column":60,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":74},{"ruleId":"4153","severity":1,"message":"4733","line":1,"column":76,"nodeType":"4155","messageId":"4156","endLine":1,"endColumn":87},{"ruleId":"4153","severity":1,"message":"4731","line":2,"column":43,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":83,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":94},{"ruleId":"4153","severity":1,"message":"4764","line":3,"column":10,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":87,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":98},{"ruleId":"4455","severity":1,"message":"4765","line":72,"column":9,"nodeType":"4457","messageId":"4170","endLine":72,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":87,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":98},{"ruleId":"4455","severity":1,"message":"4765","line":58,"column":9,"nodeType":"4457","messageId":"4170","endLine":58,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4764","line":2,"column":10,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":87,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":98},{"ruleId":"4153","severity":1,"message":"4764","line":2,"column":10,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":20},{"ruleId":"4153","severity":1,"message":"4161","line":2,"column":22,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4731","line":2,"column":71,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":85},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":87,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":98},{"ruleId":"4153","severity":1,"message":"4766","line":2,"column":100,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":109},{"ruleId":"4153","severity":1,"message":"4194","line":4,"column":9,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":13},{"ruleId":"4153","severity":1,"message":"4767","line":5,"column":23,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":29},{"ruleId":"4153","severity":1,"message":"4768","line":2,"column":9,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":14},{"ruleId":"4153","severity":1,"message":"4733","line":2,"column":110,"nodeType":"4155","messageId":"4156","endLine":2,"endColumn":121},{"ruleId":"4153","severity":1,"message":"4769","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":13},{"ruleId":"4236","severity":1,"message":"4237","line":40,"column":16,"nodeType":"4238","messageId":"4239","endLine":40,"endColumn":80,"fix":"4770"},{"ruleId":"4153","severity":1,"message":"4187","line":3,"column":26,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4328","line":3,"column":49,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":3,"column":54,"nodeType":"4155","messageId":"4156","endLine":3,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":26,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4328","line":4,"column":49,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":52},{"ruleId":"4153","severity":1,"message":"4329","line":4,"column":54,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":57},{"ruleId":"4153","severity":1,"message":"4161","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":16},{"ruleId":"4236","severity":1,"message":"4237","line":29,"column":9,"nodeType":"4238","messageId":"4239","endLine":29,"endColumn":61,"fix":"4771"},{"ruleId":"4153","severity":1,"message":"4187","line":4,"column":26,"nodeType":"4155","messageId":"4156","endLine":4,"endColumn":35},{"ruleId":"4153","severity":1,"message":"4161","line":5,"column":10,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":16},{"ruleId":"4153","severity":1,"message":"4255","line":5,"column":18,"nodeType":"4155","messageId":"4156","endLine":5,"endColumn":28},{"ruleId":"4153","severity":1,"message":"4772","line":9,"column":8,"nodeType":"4155","messageId":"4156","endLine":9,"endColumn":15},{"ruleId":"4163","severity":1,"message":"4773","line":27,"column":4,"nodeType":"4165","endLine":27,"endColumn":6,"suggestions":"4774"},"no-native-reassign",["4775"],"no-negated-in-lhs",["4776"],"no-unused-vars","'LoginFun' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'LoginForm' is defined but never used.","'alert' is assigned a value but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'MyPDF' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.","ArrayExpression",["4777"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setpassError' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'stateName' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.",["4778"],"'s' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'Spinner' is defined but never used.","'history' is assigned a value but never used.","'declinedStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["4779"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["4780"],"Expected '!==' and instead saw '!='.","'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["4781"],"React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["4782"],"React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["4783"],"'useEffect' is defined but never used.","'reset' is assigned a value but never used.","'classNames' is defined but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalDetails'. Either include it or remove the dependency array.",["4784"],"'date' is assigned a value but never used.","'convert' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.",["4785"],"'Layout' is defined but never used.","'userId' is assigned a value but never used.",["4786"],"React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["4787"],"'Loader' is defined but never used.","'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.obj'. Either include it or remove the dependency array.",["4788"],"'ArrowBackIcon' is defined but never used.","'val3' is assigned a value but never used.","'setVal3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["4789"],"'timer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"4790","text":"4791"},"'CommonServices' is defined but never used.","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["4792"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["4793"],"React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["4794"],"'PaymentIcon' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'baseUrl2' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'paydetails2'. Either include it or remove the dependency array.",["4795"],{"range":"4796","text":"4791"},{"range":"4797","text":"4791"},{"range":"4798","text":"4791"},"'axios' is defined but never used.","'baseUrl' is defined but never used.","'getValues' is assigned a value but never used.","'nn' is assigned a value but never used.","'mcatname' is assigned a value but never used.","'custCate2' is assigned a value but never used.","'postValue' is assigned a value but never used.","'emailPost' is assigned a value but never used.","'setEmailPost' is assigned a value but never used.","'valiEmailPost' is assigned a value but never used.","'setValiemailPost' is assigned a value but never used.","'invalidPost' is assigned a value but never used.","'setInvalidPost' is assigned a value but never used.","'wEmailPost' is assigned a value but never used.","'setWemailPost' is assigned a value but never used.","'display' is assigned a value but never used.","no-redeclare","'categeryName' is already defined.","redeclared","Array.prototype.map() expects a return value from arrow function.","'allData1' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'emailValidation' is assigned a value but never used.","'Redirect' is defined but never used.","'Tooltip' is defined but never used.","'expectedDate' is assigned a value but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["4799"],["4800"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'setDisplayQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["4801"],"'createContext' is defined but never used.","'Reset' is defined but never used.","'Option' is assigned a value but never used.","'store2' is assigned a value but never used.","'setStore2' is assigned a value but never used.","'mcategory' is assigned a value but never used.","'mdata' is assigned a value but never used.","'setmdata' is assigned a value but never used.","'mdataName' is assigned a value but never used.","'setMdataname' is assigned a value but never used.","'error2' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["4802"],"'data8' is assigned a value but never used.","'data10' is assigned a value but never used.","'data11' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data5', 'defSubValue', and 'defValue'. Either include them or remove the dependency array.",["4803"],"React Hook useEffect has a missing dependency: 'getSubCategory'. Either include it or remove the dependency array.",["4804"],"'ind' is assigned a value but never used.","'modalData' is assigned a value but never used.","'showTable' is assigned a value but never used.","'paymentUrlcopy' is assigned a value but never used.","'setPaymentUrlCopy' is assigned a value but never used.",["4805"],"'openModal' is assigned a value but never used.",{"range":"4806","text":"4791"},"'Container' is assigned a value but never used.","'TaxProffesionalService' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'numAvail' is assigned a value but never used.","'error' is assigned a value but never used.","'teamleader' is assigned a value but never used.","'setTeamLeader' is assigned a value but never used.","'tl' is assigned a value but never used.","'setTl' is assigned a value but never used.","'post1' is assigned a value but never used.","'setPost1' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'post_na' is assigned a value but never used.","'setPost_na' is assigned a value but never used.","'a' is defined but never used.","'dirvalue' is assigned a value but never used.","'indirvalue' is assigned a value but never used.","'allsubcatvalue' is assigned a value but never used.","'vv' is already defined.","React Hook useEffect has a missing dependency: 'getTutorial'. Either include it or remove the dependency array.",["4807"],"'kk' is assigned a value but never used.","'parentCategoryName' is assigned a value but never used.","'myPurpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","'del' is assigned a value but never used.","'subCat' is assigned a value but never used.","'setsubCat' is assigned a value but never used.","'digit2' is assigned a value but never used.",["4808"],"'dd' is assigned a value but never used.",["4809"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Recording' is defined but never used.","'CardHeader' is defined but never used.","'tabIndex' is assigned a value but never used.","'setTabIndex' is assigned a value but never used.","'useState' is defined but never used.","'userid' is assigned a value but never used.",["4810"],["4811"],"Block is redundant.","redundantBlock","'getId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRecording'. Either include it or remove the dependency array.",["4812"],["4813"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"4814","text":"4815"},"'deleteCliente' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["4816"],{"range":"4817","text":"4791"},"'useLayoutEffect' is defined but never used.",{"range":"4818","text":"4791"},"'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["4819"],"'subCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'custCate' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'qqno' is assigned a value but never used.","'setQqno' is assigned a value but never used.","'dir' is assigned a value but never used.","'indir' is assigned a value but never used.","'firstDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData', 'getQueryNo', and 'getTeamLeader'. Either include them or remove the dependency array.",["4820"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["4821"],"'errors' is assigned a value but never used.",["4822"],["4823"],"'result' is defined but never used.","'clientDiscussion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["4824"],"'declined2' is assigned a value but never used.",["4825"],"React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["4826"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["4827"],["4828"],["4829"],["4830"],"'declined' is assigned a value but never used.",["4831"],"'store' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'scopeError' is assigned a value but never used.","'wrong' is assigned a value but never used.",["4832"],"'a' is assigned a value but never used.","'email' is assigned a value but never used.","'post_name' is defined but never used.","'teamleader1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["4833"],"'useForm' is defined but never used.","'id' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["4834"],"'defaultSorted' is assigned a value but never used.",["4835"],["4836"],"'Footer' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["4837"],"'OptGroup' is assigned a value but never used.","'status' is assigned a value but never used.","'des' is assigned a value but never used.",["4838"],"no-dupe-keys","Duplicate key 'style'.","ObjectExpression","'setId' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["4839"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["4840"],["4841"],"'ChangeHistoryIcon' is defined but never used.","'cust_id' is assigned a value but never used.",["4842"],{"range":"4843","text":"4791"},"'AssessmentIcon' is defined but never used.",["4844"],{"range":"4845","text":"4791"},["4846"],"'useParams' is defined but never used.","'assignNo' is assigned a value but never used.","'ViewDiscussionToggel' is assigned a value but never used.",["4847"],["4848"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["4849"],"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["4850"],"'Alerts' is defined but never used.","'amount' is assigned a value but never used.","'payment_terms' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'installment_amount' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","'installAmount' is assigned a value but never used.",["4851"],"'Schema' is assigned a value but never used.",["4852"],{"range":"4853","text":"4791"},{"range":"4854","text":"4791"},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'assignment' is assigned a value but never used.","'values' is defined but never used.","'records' is assigned a value but never used.","'ChangeFormateDate' is defined but never used.","'name' is assigned a value but never used.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeedback2'. Either include it or remove the dependency array.",["4855"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["4856"],["4857"],["4858"],"'AccountBalanceIcon' is defined but never used.","'id2' is assigned a value but never used.","'setId2' is assigned a value but never used.","'tds' is assigned a value but never used.","'setTds' is assigned a value but never used.",["4859"],["4860"],"'Records' is defined but never used.","'setCount' is assigned a value but never used.","'ViewDiscussion' is assigned a value but never used.","'setViewDiscussion' is assigned a value but never used.","'copyTitle' is assigned a value but never used.","'copied' is assigned a value but never used.",{"range":"4861","text":"4791"},"'ModalVideo' is defined but never used.","'ReactHlsPlayer' is defined but never used.",["4862"],"'modalBox' is assigned a value but never used.","'canBtn' is assigned a value but never used.",{"range":"4863","text":"4791"},{"range":"4864","text":"4791"},"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'difference' is assigned a value but never used.",{"range":"4865","text":"4791"},"'MyPDF2' is defined but never used.","'baseUrl3' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.","'tlname' is assigned a value but never used.","'nd' is assigned a value but never used.",{"range":"4866","text":"4791"},{"range":"4867","text":"4791"},"'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'tax2' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'status1' is assigned a value but never used.","'item' is assigned a value but never used.","'feedbackNumber' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'services2' is assigned a value but never used.","'disabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4868"],"React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["4869"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', 'props.id', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4870"],["4871"],["4872"],"'Select' is defined but never used.","'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'em' is assigned a value but never used.","'loading' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'setShowVideoIcon' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["4873"],"'msg' is already defined.","'variable' is already defined.","'AdminFilter' is defined but never used.","'assignmentCount' is assigned a value but never used.","'assingmentStatus' is assigned a value but never used.","'viewData' is assigned a value but never used.","'ViewHandler' is assigned a value but never used.","'paymentcount' is assigned a value but never used.",{"range":"4874","text":"4791"},{"range":"4875","text":"4791"},"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["4876"],"'NavLink' is defined but never used.","'IntegratedEditing' is defined but never used.","'owner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["4877"],"'messages' is assigned a value but never used.","'Cookies' is defined but never used.","'viewStyle' is assigned a value but never used.",["4878"],{"range":"4879","text":"4791"},{"range":"4880","text":"4791"},"'RecordVoiceOverIcon' is defined but never used.","'customer_id' is assigned a value but never used.","'customer_secret' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"4881","text":"4882"},"no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"4883","text":"4884"},"'praticipantVar' is already defined.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","'red' is defined but never used.",{"range":"4885","text":"4882"},{"range":"4886","text":"4884"},"no-use-before-define","'resourceId' was used before it was defined.","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'start' is assigned a value but never used.","'fileList' is assigned a value but never used.","'formData2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["4887"],["4888"],["4889"],["4890"],"'FeedbackIcon' is defined but never used.","'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","'setRejected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["4891"],["4892"],["4893"],"'rejected' is assigned a value but never used.",["4894"],"'rightAli' is assigned a value but never used.","'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["4895"],"Unexpected mix of '>' and '==='. Use parentheses to clarify the intended order of operations.",["4896"],["4897"],"'arr' is assigned a value but never used.","'date' is defined but never used.",["4898"],"'showManual' is assigned a value but never used.",["4899"],{"range":"4900","text":"4791"},{"range":"4901","text":"4791"},"'copyFun' is assigned a value but never used.",["4902"],["4903"],["4904"],["4905"],"'myStyle1' is assigned a value but never used.","'myStyle2' is assigned a value but never used.",["4906"],["4907"],["4908"],["4909"],{"range":"4910","text":"4791"},["4911"],["4912"],"'TaxProfessionalFilter' is defined but never used.",["4913"],"'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.",["4914"],["4915"],["4916"],{"range":"4917","text":"4791"},{"range":"4918","text":"4791"},["4919"],["4920"],"'localeData' is defined but never used.",["4921"],["4922"],["4923"],["4924"],"'complete' is assigned a value but never used.",["4925"],"'TeamFilter' is defined but never used.","'ChatHistory' is defined but never used.","'OutlinedInputIcons' is defined but never used.",["4926"],["4927"],{"range":"4928","text":"4791"},{"range":"4929","text":"4791"},["4930"],["4931"],["4932"],"React Hook useEffect has a missing dependency: 'checkAssigned'. Either include it or remove the dependency array.",["4933"],["4934"],"'selectInputRef2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getTeamLeader'. Either include them or remove the dependency array.",["4935"],["4936"],"'options4' is assigned a value but never used.","'taxProfessional' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["4937"],{"range":"4938","text":"4791"},"'setValue' is assigned a value but never used.",["4939"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["4940"],{"range":"4941","text":"4791"},["4942"],{"range":"4943","text":"4791"},{"range":"4944","text":"4791"},["4945"],"'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.",["4946"],{"range":"4947","text":"4791"},["4948"],{"range":"4949","text":"4791"},["4950"],"'$' is defined but never used.",{"range":"4951","text":"4952"},{"range":"4953","text":"4884"},["4954"],["4955"],["4956"],["4957"],"'addPaymentModal' is assigned a value but never used.","'setPaymentModal' is assigned a value but never used.",["4958"],["4959"],["4960"],{"range":"4961","text":"4791"},["4962"],["4963"],["4964"],["4965"],["4966"],["4967"],{"range":"4968","text":"4952"},{"range":"4969","text":"4884"},"'change22' is defined but never used.","'successQuery' is defined but never used.","'sendImg' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","Duplicate key 'root3'.","'CardMedia' is defined but never used.","'scroll' is defined but never used.","'Paper' is defined but never used.","'style' is defined but never used.",{"range":"4970","text":"4791"},{"range":"4971","text":"4791"},"'Content' is defined but never used.","React Hook useEffect has a missing dependency: 'tar'. Either include it or remove the dependency array.",["4972"],"no-global-assign","no-unsafe-negation",{"desc":"4973","fix":"4974"},{"desc":"4973","fix":"4975"},{"desc":"4976","fix":"4977"},{"desc":"4978","fix":"4979"},{"desc":"4980","fix":"4981"},{"desc":"4982","fix":"4983"},{"desc":"4984","fix":"4985"},{"desc":"4986","fix":"4987"},{"desc":"4973","fix":"4988"},{"desc":"4973","fix":"4989"},{"desc":"4990","fix":"4991"},{"desc":"4992","fix":"4993"},{"desc":"4994","fix":"4995"},[18126,18126]," rel=\"noreferrer\"",{"desc":"4996","fix":"4997"},{"desc":"4996","fix":"4998"},{"desc":"4999","fix":"5000"},{"desc":"5001","fix":"5002"},[6549,6549],[7674,7674],[660,660],{"desc":"5003","fix":"5004"},{"desc":"5005","fix":"5006"},{"desc":"5007","fix":"5008"},{"desc":"5009","fix":"5010"},{"desc":"5011","fix":"5012"},{"desc":"5013","fix":"5014"},{"desc":"5001","fix":"5015"},[5635,5635],{"desc":"5016","fix":"5017"},{"desc":"5018","fix":"5019"},{"desc":"5007","fix":"5020"},{"desc":"4990","fix":"5021"},{"desc":"4996","fix":"5022"},{"desc":"5023","fix":"5024"},{"desc":"4992","fix":"5025"},[3946,3954],"\n      .",{"desc":"5026","fix":"5027"},[3200,3200],[6618,6618],{"desc":"5028","fix":"5029"},{"desc":"5030","fix":"5031"},{"desc":"5032","fix":"5033"},{"desc":"5034","fix":"5035"},{"desc":"5028","fix":"5036"},{"desc":"5037","fix":"5038"},{"desc":"4976","fix":"5039"},{"desc":"5040","fix":"5041"},{"desc":"5042","fix":"5043"},{"desc":"5005","fix":"5044"},{"desc":"4999","fix":"5045"},{"desc":"5028","fix":"5046"},{"desc":"5028","fix":"5047"},{"desc":"4994","fix":"5048"},{"desc":"5049","fix":"5050"},{"desc":"5051","fix":"5052"},{"desc":"5051","fix":"5053"},{"desc":"5051","fix":"5054"},{"desc":"5055","fix":"5056"},{"desc":"5037","fix":"5057"},{"desc":"5037","fix":"5058"},{"desc":"5059","fix":"5060"},{"desc":"5037","fix":"5061"},{"desc":"5051","fix":"5062"},[17466,17466],{"desc":"5051","fix":"5063"},[17270,17270],{"desc":"5051","fix":"5064"},{"desc":"5055","fix":"5065"},{"desc":"5055","fix":"5066"},{"desc":"5067","fix":"5068"},{"desc":"5069","fix":"5070"},{"desc":"5069","fix":"5071"},{"desc":"5072","fix":"5073"},[4070,4070],[4585,4585],{"desc":"5074","fix":"5075"},{"desc":"5076","fix":"5077"},{"desc":"5076","fix":"5078"},{"desc":"5076","fix":"5079"},{"desc":"5076","fix":"5080"},{"desc":"5018","fix":"5081"},[7524,7524],{"desc":"5023","fix":"5082"},[2143,2143],[1116,1116],[4634,4634],[10100,10100],[2247,2247],{"desc":"5083","fix":"5084"},{"desc":"5085","fix":"5086"},{"desc":"5087","fix":"5088"},{"desc":"5069","fix":"5089"},{"desc":"5090","fix":"5091"},{"desc":"5092","fix":"5093"},[13576,13576],[13905,13905],{"desc":"5094","fix":"5095"},{"desc":"5096","fix":"5097"},{"desc":"5072","fix":"5098"},[3059,3059],[3577,3577],[3298,3301],"\n .",[11616,11627],"",[4044,4047],[13571,13582],{"desc":"5099","fix":"5100"},{"desc":"5099","fix":"5101"},{"desc":"5099","fix":"5102"},{"desc":"5099","fix":"5103"},{"desc":"5104","fix":"5105"},{"desc":"5104","fix":"5106"},{"desc":"5104","fix":"5107"},{"desc":"5104","fix":"5108"},{"desc":"5109","fix":"5110"},{"desc":"5109","fix":"5111"},{"desc":"5109","fix":"5112"},{"desc":"5109","fix":"5113"},{"desc":"5001","fix":"5114"},[5593,5593],[6362,6362],{"desc":"5023","fix":"5115"},{"desc":"4990","fix":"5116"},{"desc":"5040","fix":"5117"},{"desc":"5037","fix":"5118"},{"desc":"5119","fix":"5120"},{"desc":"4996","fix":"5121"},{"desc":"5028","fix":"5122"},{"desc":"5076","fix":"5123"},[6939,6939],{"desc":"5076","fix":"5124"},{"desc":"5037","fix":"5125"},{"desc":"5037","fix":"5126"},{"desc":"5037","fix":"5127"},{"desc":"5096","fix":"5128"},{"desc":"5072","fix":"5129"},[4141,4141],[4656,4656],{"desc":"5083","fix":"5130"},{"desc":"4999","fix":"5131"},{"desc":"5028","fix":"5132"},{"desc":"4994","fix":"5133"},{"desc":"5028","fix":"5134"},{"desc":"4976","fix":"5135"},{"desc":"5028","fix":"5136"},{"desc":"5076","fix":"5137"},{"desc":"5001","fix":"5138"},[5666,5666],[6466,6466],{"desc":"5023","fix":"5139"},{"desc":"4996","fix":"5140"},{"desc":"5119","fix":"5141"},{"desc":"5142","fix":"5143"},{"desc":"4990","fix":"5144"},{"desc":"5145","fix":"5146"},{"desc":"5032","fix":"5147"},{"desc":"5148","fix":"5149"},[2347,2347],{"desc":"5037","fix":"5150"},{"desc":"5151","fix":"5152"},[12748,12748],{"desc":"5072","fix":"5153"},[4067,4067],[4581,4581],{"desc":"5069","fix":"5154"},{"desc":"5051","fix":"5155"},[16627,16627],{"desc":"5051","fix":"5156"},[17615,17615],{"desc":"5051","fix":"5157"},[5517,5522],"\n   .",[14403,14414],{"desc":"5076","fix":"5158"},{"desc":"5076","fix":"5159"},{"desc":"5059","fix":"5160"},{"desc":"5076","fix":"5161"},{"desc":"5076","fix":"5162"},{"desc":"5055","fix":"5163"},{"desc":"5076","fix":"5164"},[7861,7861],{"desc":"5096","fix":"5165"},{"desc":"5067","fix":"5166"},{"desc":"5055","fix":"5167"},{"desc":"5055","fix":"5168"},{"desc":"5055","fix":"5169"},{"desc":"5085","fix":"5170"},[5515,5520],[14401,14412],[1309,1309],[1699,1699],{"desc":"5171","fix":"5172"},"Update the dependencies array to be: [getTime, load]",{"range":"5173","text":"5174"},{"range":"5175","text":"5174"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"5176","text":"5177"},"Update the dependencies array to be: [userId]",{"range":"5178","text":"5179"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"5180","text":"5181"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"5182","text":"5183"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"5184","text":"5185"},"Update the dependencies array to be: [getProposalDetails]",{"range":"5186","text":"5187"},{"range":"5188","text":"5174"},{"range":"5189","text":"5174"},"Update the dependencies array to be: [getChatting, id]",{"range":"5190","text":"5191"},"Update the dependencies array to be: [item, props.location.obj]",{"range":"5192","text":"5193"},"Update the dependencies array to be: [getQuery]",{"range":"5194","text":"5195"},"Update the dependencies array to be: [getMessage]",{"range":"5196","text":"5197"},{"range":"5198","text":"5197"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"5199","text":"5200"},"Update the dependencies array to be: [paydetails2]",{"range":"5201","text":"5202"},"Update the dependencies array to be: [getQueryData]",{"range":"5203","text":"5204"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"5205","text":"5206"},"Update the dependencies array to be: [assingNo, id]",{"range":"5207","text":"5208"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"5209","text":"5210"},"Update the dependencies array to be: [data5, defSubValue, defValue, showDel]",{"range":"5211","text":"5212"},"Update the dependencies array to be: [getSubCategory, store]",{"range":"5213","text":"5214"},{"range":"5215","text":"5202"},"Update the dependencies array to be: [getTutorial, id]",{"range":"5216","text":"5217"},"Update the dependencies array to be: [getTeamLeader]",{"range":"5218","text":"5219"},{"range":"5220","text":"5208"},{"range":"5221","text":"5191"},{"range":"5222","text":"5197"},"Update the dependencies array to be: [getRecording]",{"range":"5223","text":"5224"},{"range":"5225","text":"5193"},"Update the dependencies array to be: [getData]",{"range":"5226","text":"5227"},"Update the dependencies array to be: [userid]",{"range":"5228","text":"5229"},"Update the dependencies array to be: [getData, getQueryNo, getTeamLeader]",{"range":"5230","text":"5231"},"Update the dependencies array to be: [getTaxProf, taxId]",{"range":"5232","text":"5233"},"Update the dependencies array to be: [getTaxProf]",{"range":"5234","text":"5235"},{"range":"5236","text":"5229"},"Update the dependencies array to be: [getAssignmentList]",{"range":"5237","text":"5238"},{"range":"5239","text":"5177"},"Update the dependencies array to be: [getFeedback]",{"range":"5240","text":"5241"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"5242","text":"5243"},{"range":"5244","text":"5206"},{"range":"5245","text":"5200"},{"range":"5246","text":"5229"},{"range":"5247","text":"5229"},{"range":"5248","text":"5195"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"5249","text":"5250"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"5251","text":"5252"},{"range":"5253","text":"5252"},{"range":"5254","text":"5252"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"5255","text":"5256"},{"range":"5257","text":"5238"},{"range":"5258","text":"5238"},"Update the dependencies array to be: [id, userid]",{"range":"5259","text":"5260"},{"range":"5261","text":"5238"},{"range":"5262","text":"5252"},{"range":"5263","text":"5252"},{"range":"5264","text":"5252"},{"range":"5265","text":"5256"},{"range":"5266","text":"5256"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"5267","text":"5268"},"Update the dependencies array to be: [getHistory, report]",{"range":"5269","text":"5270"},{"range":"5271","text":"5270"},"Update the dependencies array to be: [getData, report]",{"range":"5272","text":"5273"},"Update the dependencies array to be: [adminDashboard, getFeedback2]",{"range":"5274","text":"5275"},"Update the dependencies array to be: [getProposalList]",{"range":"5276","text":"5277"},{"range":"5278","text":"5277"},{"range":"5279","text":"5277"},{"range":"5280","text":"5277"},{"range":"5281","text":"5219"},{"range":"5282","text":"5224"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",{"range":"5283","text":"5284"},"Update the dependencies array to be: [getNotification, qno]",{"range":"5285","text":"5286"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",{"range":"5287","text":"5288"},{"range":"5289","text":"5270"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"5290","text":"5291"},"Update the dependencies array to be: [getData, getUsers]",{"range":"5292","text":"5293"},"Update the dependencies array to be: [allData, getAllQueriesData]",{"range":"5294","text":"5295"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"5296","text":"5297"},{"range":"5298","text":"5273"},"Update the dependencies array to be: [getAssignmentData]",{"range":"5299","text":"5300"},{"range":"5301","text":"5300"},{"range":"5302","text":"5300"},{"range":"5303","text":"5300"},"Update the dependencies array to be: [getProposalData]",{"range":"5304","text":"5305"},{"range":"5306","text":"5305"},{"range":"5307","text":"5305"},{"range":"5308","text":"5305"},"Update the dependencies array to be: [getQueriesData]",{"range":"5309","text":"5310"},{"range":"5311","text":"5310"},{"range":"5312","text":"5310"},{"range":"5313","text":"5310"},{"range":"5314","text":"5202"},{"range":"5315","text":"5224"},{"range":"5316","text":"5191"},{"range":"5317","text":"5241"},{"range":"5318","text":"5238"},"Update the dependencies array to be: [props.location.obj]",{"range":"5319","text":"5320"},{"range":"5321","text":"5197"},{"range":"5322","text":"5229"},{"range":"5323","text":"5277"},{"range":"5324","text":"5277"},{"range":"5325","text":"5238"},{"range":"5326","text":"5238"},{"range":"5327","text":"5238"},{"range":"5328","text":"5297"},{"range":"5329","text":"5273"},{"range":"5330","text":"5284"},{"range":"5331","text":"5200"},{"range":"5332","text":"5229"},{"range":"5333","text":"5195"},{"range":"5334","text":"5229"},{"range":"5335","text":"5177"},{"range":"5336","text":"5229"},{"range":"5337","text":"5277"},{"range":"5338","text":"5202"},{"range":"5339","text":"5224"},{"range":"5340","text":"5197"},{"range":"5341","text":"5320"},"Update the dependencies array to be: [checkAssigned, item]",{"range":"5342","text":"5343"},{"range":"5344","text":"5191"},"Update the dependencies array to be: [getData, getTeamLeader]",{"range":"5345","text":"5346"},{"range":"5347","text":"5233"},"Update the dependencies array to be: [getReport]",{"range":"5348","text":"5349"},{"range":"5350","text":"5238"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"5351","text":"5352"},{"range":"5353","text":"5273"},{"range":"5354","text":"5270"},{"range":"5355","text":"5252"},{"range":"5356","text":"5252"},{"range":"5357","text":"5252"},{"range":"5358","text":"5277"},{"range":"5359","text":"5277"},{"range":"5360","text":"5260"},{"range":"5361","text":"5277"},{"range":"5362","text":"5277"},{"range":"5363","text":"5256"},{"range":"5364","text":"5277"},{"range":"5365","text":"5297"},{"range":"5366","text":"5268"},{"range":"5367","text":"5256"},{"range":"5368","text":"5256"},{"range":"5369","text":"5256"},{"range":"5370","text":"5286"},"Update the dependencies array to be: [tar]",{"range":"5371","text":"5372"},[1647,1653],"[getTime, load]",[2926,2932],[6474,6484],"[assingNo, getQuery, id]",[4005,4007],"[userId]",[1130,1132],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[1114,1116],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[1146,1148],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[1861,1863],"[getProposalDetails]",[1444,1450],[1306,1312],[601,605],"[getChatting, id]",[1605,1611],"[item, props.location.obj]",[2146,2148],"[getQuery]",[671,673],"[getMessage]",[995,997],[808,810],"[getAllPaid, getPaid, getUnpaid]",[1683,1685],"[paydetails2]",[2096,2098],"[getQueryData]",[2755,2764],"[getQuery, queryNo]",[6776,6786],"[assingNo, id]",[3080,3084],"[getTeamLeader, id]",[4121,4130],"[data5, defSubValue, defValue, showDel]",[4186,4193],"[getSubCategory, store]",[1629,1631],[4101,4105],"[getTutorial, id]",[6162,6164],"[getTeamLeader]",[1219,1229],[684,688],[843,845],[1418,1420],"[getRecording]",[1648,1654],[693,695],"[getData]",[5062,5064],"[userid]",[3096,3098],"[getData, getQueryNo, getTeamLeader]",[3393,3400],"[getTaxProf, taxId]",[680,682],"[getTaxProf]",[3081,3083],[1017,1019],"[getAssignmentList]",[6850,6860],[717,719],"[getFeedback]",[2082,2084],"[getQueryData, getTaxProfession]",[2848,2857],[810,812],[2208,2210],[2904,2906],[2315,2317],[895,905],"[assingNo, getAdditionalQuery, getQueryDetails]",[2480,2482],"[getPaymentStatus]",[2510,2512],[2606,2608],[965,967],"[getInCompleteAssingment]",[2467,2469],[2266,2268],[2362,2364],"[id, userid]",[2428,2430],[1877,1879],[1869,1871],[1717,1719],[1150,1152],[943,945],[1125,1127],"[getPendingforAcceptance]",[481,489],"[getHistory, report]",[584,592],[2294,2302],"[getData, report]",[1739,1755],"[adminDashboard, getFeedback2]",[1629,1631],"[getProposalList]",[1630,1632],[1668,1670],[1964,1966],[1345,1347],[1090,1092],[2755,2773],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",[425,430],"[getNotification, qno]",[2553,2571],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",[587,595],[365,375],"[getNotification, tokenKey]",[2262,2264],"[getData, getUsers]",[919,928],"[allData, getAllQueriesData]",[1567,1569],"[getAssignmentNo, getData, getUsers]",[1133,1141],[1784,1786],"[getAssignmentData]",[1654,1656],[1890,1892],[1684,1686],[1835,1837],"[getProposalData]",[1554,1556],[2002,2004],[2175,2177],[1539,1541],"[getQueriesData]",[1267,1269],[1795,1797],[2228,2230],[1586,1588],[1410,1412],[681,685],[717,719],[985,987],[1609,1611],"[props.location.obj]",[1024,1026],[2208,2210],[1661,1663],[1592,1594],[2460,2462],[2532,2534],[2590,2592],[1769,1771],[1223,1231],[2760,2778],[810,812],[5055,5057],[17205,17207],[3093,3095],[5998,6008],[3000,3002],[2049,2051],[1587,1589],[1334,1336],[1024,1026],[1652,1654],[1704,1710],"[checkAssigned, item]",[681,685],[2900,2902],"[getData, getTeamLeader]",[3197,3204],[630,632],"[getReport]",[928,930],[1232,1242],"[assignNo, getDetails]",[2291,2299],[584,592],[1882,1884],[1661,1663],[1603,1605],[1693,1695],[1679,1681],[2335,2337],[1647,1649],[1534,1536],[976,978],[2070,2072],[1863,1865],[1211,1213],[954,956],[659,661],[675,677],[425,430],[720,722],"[tar]"]
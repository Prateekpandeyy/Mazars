[{"D:\\Mazars\\src\\index.js":"1","D:\\Mazars\\src\\reportWebVitals.js":"2","D:\\Mazars\\src\\App.js":"3","D:\\Mazars\\src\\Service\\PublicRouteTP.js":"4","D:\\Mazars\\src\\Service\\PublicRouteTL.js":"5","D:\\Mazars\\src\\Service\\PublicRouteAdmin.js":"6","D:\\Mazars\\src\\components\\PageNotFound\\PageNotFound.js":"7","D:\\Mazars\\src\\components\\LoginForm\\LoginFun.js":"8","D:\\Mazars\\src\\views\\Dashboard\\Dashboard.js":"9","D:\\Mazars\\src\\views\\Login\\Login.js":"10","D:\\Mazars\\src\\views\\MyAssingment\\MyAssingment.js":"11","D:\\Mazars\\src\\views\\ForgetPassword\\ForgetPassword.js":"12","D:\\Mazars\\src\\views\\AssignmentTab\\AssignmentTab.js":"13","D:\\Mazars\\src\\views\\ProposalView\\ProposalView.js":"14","D:\\Mazars\\src\\views\\AddFressAssignment\\AddFreshAssingment.js":"15","D:\\Mazars\\src\\views\\VideoCall\\VideoCall.js":"16","D:\\Mazars\\src\\views\\NewPassword\\NewPassword.js":"17","D:\\Mazars\\src\\views\\MeetingComponent\\MeetingComponent.js":"18","D:\\Mazars\\src\\views\\ChangePassword\\ChangePassword.js":"19","D:\\Mazars\\src\\views\\Schedule\\schedule.js":"20","D:\\Mazars\\src\\views\\ViewNotification\\ViewNotification.js":"21","D:\\Mazars\\src\\views\\SignUpForm\\SignUp.js":"22","D:\\Mazars\\src\\views\\Message\\Message.js":"23","D:\\Mazars\\src\\views\\Feedback\\Feedback.js":"24","D:\\Mazars\\src\\views\\Chatting\\Chatting.js":"25","D:\\Mazars\\src\\views\\FeedbackData\\FeedbackData.js":"26","D:\\Mazars\\src\\views\\ProposalTab\\ProposalTab.js":"27","D:\\Mazars\\src\\views\\EditQuery\\EditQuery.js":"28","D:\\Mazars\\src\\views\\ThankYou\\Thankyou.js":"29","D:\\Mazars\\src\\views\\PaymentGateway.js\\PaymentGateway.js":"30","D:\\Mazars\\src\\views\\QueriesTab\\QueriesTab.js":"31","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentStatus.js":"32","D:\\Mazars\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js":"33","D:\\Mazars\\src\\views\\PaymentStatus\\PayDetails.js":"34","D:\\Mazars\\src\\pages\\Admin\\Start\\Start.js":"35","D:\\Mazars\\src\\pages\\Admin\\Dashboard\\Dashboard.js":"36","D:\\Mazars\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js":"37","D:\\Mazars\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js":"38","D:\\Mazars\\src\\pages\\Admin\\Login\\Login.js":"39","D:\\Mazars\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js":"40","D:\\Mazars\\src\\pages\\Admin\\Proposal\\Proposal.js":"41","D:\\Mazars\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js":"42","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js":"43","D:\\Mazars\\src\\pages\\Admin\\EditTP\\EditTP.js":"44","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js":"45","D:\\Mazars\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js":"46","D:\\Mazars\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js":"47","D:\\Mazars\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js":"48","D:\\Mazars\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js":"49","D:\\Mazars\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js":"50","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\NewPassword.js":"51","D:\\Mazars\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js":"52","D:\\Mazars\\src\\pages\\Admin\\Chatting\\Chatting.js":"53","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Schedule.js":"54","D:\\Mazars\\src\\pages\\Admin\\Recording\\Recording.js":"55","D:\\Mazars\\src\\pages\\Admin\\Message\\Message.js":"56","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Invoice.js":"57","D:\\Mazars\\src\\pages\\Admin\\customer\\Customer.js":"58","D:\\Mazars\\src\\pages\\Admin\\Report\\Report.js":"59","D:\\Mazars\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js":"60","D:\\Mazars\\src\\pages\\TL\\Start\\Start.js":"61","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\index.js":"62","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js":"63","D:\\Mazars\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js":"64","D:\\Mazars\\src\\pages\\Admin\\EditTL\\EditTL.js":"65","D:\\Mazars\\src\\pages\\TL\\AddNew\\AddNew.js":"66","D:\\Mazars\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js":"67","D:\\Mazars\\src\\pages\\TL\\Login\\Login.js":"68","D:\\Mazars\\src\\pages\\TL\\Proposal\\ProposalTab.js":"69","D:\\Mazars\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js":"70","D:\\Mazars\\src\\pages\\TL\\EditTP\\EditTP.js":"71","D:\\Mazars\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js":"72","D:\\Mazars\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js":"73","D:\\Mazars\\src\\pages\\TL\\SendProposal\\SendProposal.js":"74","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\QueriesTab.js":"75","D:\\Mazars\\src\\pages\\TL\\PendingReceived\\PendingReceived.js":"76","D:\\Mazars\\src\\pages\\TL\\Dashboard\\Dashboard.js":"77","D:\\Mazars\\src\\pages\\TL\\EditProposal\\EditProposal.js":"78","D:\\Mazars\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js":"79","D:\\Mazars\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js":"80","D:\\Mazars\\src\\pages\\TL\\ViewNotification\\ViewNotification.js":"81","D:\\Mazars\\src\\pages\\TL\\NewPassword\\NewPassword.js":"82","D:\\Mazars\\src\\pages\\TL\\ViewReport\\ViewReport.js":"83","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js":"84","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js":"85","D:\\Mazars\\src\\views\\PaymentStatus\\PayModal.js":"86","D:\\Mazars\\src\\views\\QueriesTab\\DeclinedQueries.js":"87","D:\\Mazars\\src\\views\\PaymentStatus\\Unpaid.js":"88","D:\\Mazars\\src\\views\\PaymentStatus\\Paid.js":"89","D:\\Mazars\\src\\views\\PaymentStatus\\AllPayment.js":"90","D:\\Mazars\\src\\views\\QueriesTab\\AllQueriesData.js":"91","D:\\Mazars\\src\\config\\config.js":"92","D:\\Mazars\\src\\views\\QueriesTab\\InprogressProposal.js":"93","D:\\Mazars\\src\\views\\QueriesTab\\InprogressAllocation.js":"94","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paid.js":"95","D:\\Mazars\\src\\components\\CategorySelect\\CategorySelect.js":"96","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\AllPayment.js":"97","D:\\Mazars\\src\\pages\\TL\\NewPassword\\ResendOtp.js":"98","D:\\Mazars\\src\\components\\Layout\\Layout.js":"99","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Unpaid.js":"100","D:\\Mazars\\src\\pages\\TL\\EditProposal\\Payment.js":"101","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js":"102","D:\\Mazars\\src\\components\\Footer\\Footer.js":"103","D:\\Mazars\\src\\components\\Common\\Mandatory.js":"104","D:\\Mazars\\src\\common\\common.js":"105","D:\\Mazars\\src\\common\\Alerts.js":"106","D:\\Mazars\\src\\components\\Header\\Header.js":"107","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js":"108","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js":"109","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\AllQuery.js":"110","D:\\Mazars\\src\\pages\\TL\\SendProposal\\ProposalComponent.js":"111","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js":"112","D:\\Mazars\\src\\pages\\TL\\InCompleteData\\InCompleteData.js":"113","D:\\Mazars\\src\\components\\QueryDetails\\QueryDetails.js":"114","D:\\Mazars\\src\\pages\\TL\\CompleteData\\CompleteData.js":"115","D:\\Mazars\\src\\components\\Loader\\Loader.js":"116","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentComponent.js":"117","D:\\Mazars\\src\\views\\AssignmentTab\\DiscardReport.js":"118","D:\\Mazars\\src\\views\\QueriesTab\\AdditionalQueryModal.js":"119","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DiscardReport.js":"120","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js":"121","D:\\Mazars\\src\\components\\Records\\Records.js":"122","D:\\Mazars\\src\\components\\Search-Filter\\CustomerFilter.js":"123","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js":"124","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\ViewAllReport.js":"125","D:\\Mazars\\src\\components\\Search-Filter\\tlFilter.js":"126","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js":"127","D:\\Mazars\\src\\components\\Admin-Footer\\Admin-Footer.js":"128","D:\\Mazars\\src\\components\\Admin-Header\\Admin-Header.js":"129","D:\\Mazars\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js":"130","D:\\Mazars\\src\\pages\\TL\\SendProposal\\Payment.js":"131","D:\\Mazars\\src\\pages\\TL\\Proposal\\AcceptedProposal.js":"132","D:\\Mazars\\src\\pages\\TL\\Proposal\\InprogressProposal.js":"133","D:\\Mazars\\src\\pages\\TL\\Proposal\\DeclinedProposal.js":"134","D:\\Mazars\\src\\pages\\TL\\Login\\VerifyOtpLogin.js":"135","D:\\Mazars\\src\\pages\\TL\\Proposal\\AllProposal.js":"136","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js":"137","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js":"138","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js":"139","D:\\Mazars\\src\\pages\\Admin\\EditTL\\Reset.js":"140","D:\\Mazars\\src\\components\\QueryDetails\\Feedback.js":"141","D:\\Mazars\\src\\components\\QueryDetails\\DraftReports.js":"142","D:\\Mazars\\src\\components\\QueryDetails\\AddAdditionalQuery.js":"143","D:\\Mazars\\src\\components\\QueryDetails\\AssignmentDetails.js":"144","D:\\Mazars\\src\\components\\QueryDetails\\AdditionalQuery.js":"145","D:\\Mazars\\src\\components\\QueryDetails\\BasicQuery.js":"146","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js":"147","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js":"148","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js":"149","D:\\Mazars\\src\\components\\QueryDetails\\ProposalDetails.js":"150","D:\\Mazars\\src\\components\\QueryDetails\\QueryRecording.js":"151","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js":"152","D:\\Mazars\\src\\pages\\Admin\\customer\\CustHistory.js":"153","D:\\Mazars\\src\\components\\Search-Filter\\CustomerListFilter.js":"154","D:\\Mazars\\src\\components\\PendingForAllocation\\History.js":"155","D:\\Mazars\\src\\config\\services\\TaxProffesional.js":"156","D:\\Mazars\\src\\components\\LoadingTime\\LoadingTime.js":"157","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\RejectModal.js":"158","D:\\Mazars\\src\\pages\\TL\\Proposal\\ChatHistory.js":"159","D:\\Mazars\\src\\pages\\TL\\Proposal\\Tds.js":"160","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DiscardReport.js":"161","D:\\Mazars\\src\\components\\Search-Filter\\AdminFilter.js":"162","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js":"163","D:\\Mazars\\src\\config\\http\\http-common.js":"164","D:\\Mazars\\src\\components\\Admin-Header\\NavWrapper.js":"165","D:\\Mazars\\src\\components\\Admin-Header\\CustomerNotification.js":"166","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\History.js":"167","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\History.js":"168","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Generated.js":"169","D:\\Mazars\\src\\pages\\Admin\\Invoice\\CreateInvoice.js":"170","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Demo.js":"171","D:\\Mazars\\src\\components\\Search-Filter\\RecordingFilter.js":"172","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\ResendOtp.js":"173","D:\\Mazars\\src\\components\\PendingForAllocation\\PendingForAllocation.js":"174","D:\\Mazars\\src\\components\\AllQueriesData\\AllQueriesData.js":"175","D:\\Mazars\\src\\components\\PendingForProposals\\PendingForProposals.js":"176","D:\\Mazars\\src\\components\\DeclinedQueries\\DeclinedQueries.js":"177","D:\\Mazars\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js":"178","D:\\Mazars\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js":"179","D:\\Mazars\\src\\pages\\Admin\\Login\\VerifyOtpLogin.js":"180","D:\\Mazars\\src\\components\\Common\\EmailValidation.js":"181","D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js":"182","D:\\Mazars\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js":"183","D:\\Mazars\\src\\pages\\Admin\\meeting\\index.jsx":"184","D:\\Mazars\\src\\views\\EditQuery\\DeleteQuery.js":"185","D:\\Mazars\\src\\views\\ProposalTab\\AcceptedProposal.js":"186","D:\\Mazars\\src\\views\\ProposalTab\\DeclinedProposal.js":"187","D:\\Mazars\\src\\components\\Search-Filter\\InvoiceFilter.js":"188","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Tds.js":"189","D:\\Mazars\\src\\agora.config.js":"190","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx":"191","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\RecordingModal.js":"192","D:\\Mazars\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js":"193","D:\\Mazars\\src\\views\\ProposalTab\\AllProposal.js":"194","D:\\Mazars\\src\\views\\ProposalTab\\InprogressProposal.js":"195","D:\\Mazars\\src\\views\\SignUpForm\\GetOTP.js":"196","D:\\Mazars\\src\\views\\Message\\PaymentModal.js":"197","D:\\Mazars\\src\\views\\SignUpForm\\ResendOtp.js":"198","D:\\Mazars\\src\\views\\SignUpForm\\data.js":"199","D:\\Mazars\\src\\views\\Schedule\\demo.js":"200","D:\\Mazars\\src\\views\\ChangePassword\\ResendOtp.js":"201","D:\\Mazars\\src\\views\\NewPassword\\ResendOtp.js":"202","D:\\Mazars\\src\\views\\AddFressAssignment\\data.js":"203","D:\\Mazars\\src\\components\\InputRoom\\index.js":"204","D:\\Mazars\\src\\views\\SignUpForm\\city.js":"205","D:\\Mazars\\src\\views\\ProposalView\\TermsConditions.js":"206","D:\\Mazars\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js":"207","D:\\Mazars\\src\\views\\AssignmentTab\\AllAssignment.js":"208","D:\\Mazars\\src\\views\\AssignmentTab\\InprogressAssignment.js":"209","D:\\Mazars\\src\\views\\AssignmentTab\\CompletedAssignment.js":"210","D:\\Mazars\\src\\components\\meeting\\index.jsx":"211","D:\\Mazars\\src\\views\\Login\\VerifyOTP.js":"212","D:\\Mazars\\src\\views\\ProposalTab\\ViewComponent.js":"213","D:\\Mazars\\src\\pages\\TP\\Invoice\\Invoice.js":"214","D:\\Mazars\\src\\components\\LoginForm\\LoginForm.js":"215","D:\\Mazars\\src\\Service\\PublicRouteUser.js":"216","D:\\Mazars\\src\\Service\\PrivateRouteTP.js":"217","D:\\Mazars\\src\\Service\\PrivateRouteTL.js":"218","D:\\Mazars\\src\\Service\\PrivateRouteAdmin.js":"219","D:\\Mazars\\src\\Service\\PrivateRouteUser.js":"220","D:\\Mazars\\src\\pages\\TP\\ViewNotification\\ViewNotification.js":"221","D:\\Mazars\\src\\pages\\TP\\Recording\\Recording.js":"222","D:\\Mazars\\src\\pages\\TP\\Report\\Report.js":"223","D:\\Mazars\\src\\pages\\TP\\MeetingComponent\\MeetingComponent.js":"224","D:\\Mazars\\src\\pages\\TP\\FeedbackTab\\FeedbackTab.js":"225","D:\\Mazars\\src\\pages\\TP\\Chatting\\Chatting.js":"226","D:\\Mazars\\src\\pages\\TP\\Message\\Message.js":"227","D:\\Mazars\\src\\pages\\TP\\AddAssingmentStages\\AddAssingmentStages.js":"228","D:\\Mazars\\src\\pages\\TP\\Schedule\\Schedule.js":"229","D:\\Mazars\\src\\pages\\TP\\Dashboard\\Dashboard.js":"230","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\PaymentStatus.js":"231","D:\\Mazars\\src\\pages\\TP\\NewPassword\\NewPassword.js":"232","D:\\Mazars\\src\\pages\\TP\\ChangePassword\\ChangePassword.js":"233","D:\\Mazars\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js":"234","D:\\Mazars\\src\\pages\\TP\\EditProposal\\EditProposal.js":"235","D:\\Mazars\\src\\pages\\TP\\SendProposal\\SendProposal.js":"236","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AssignmentTab.js":"237","D:\\Mazars\\src\\pages\\TP\\Login\\Login.js":"238","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\QueriesTab.js":"239","D:\\Mazars\\src\\pages\\TP\\Proposal\\ProposalTab.js":"240","D:\\Mazars\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js":"241","D:\\Mazars\\src\\pages\\TP\\Start\\Start.js":"242","D:\\Mazars\\src\\pages\\TL\\Proposal\\InvoiceTab.js":"243","D:\\Mazars\\src\\pages\\TL\\Proposal\\Invoice.js":"244","D:\\Mazars\\src\\pages\\TL\\Report\\Report.js":"245","D:\\Mazars\\src\\pages\\TL\\Recording\\Recording.js":"246","D:\\Mazars\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js":"247","D:\\Mazars\\src\\pages\\TL\\Schedule\\Schedule.js":"248","D:\\Mazars\\src\\views\\AssignmentTab\\RejectModal.js":"249","D:\\Mazars\\src\\views\\AssignmentTab\\PaymentModal.js":"250","D:\\Mazars\\src\\views\\AssignmentTab\\ViewAllReport.js":"251","D:\\Mazars\\src\\pages\\TL\\Message\\Message.js":"252","D:\\Mazars\\src\\pages\\TL\\Chatting\\Chatting.js":"253","D:\\Mazars\\src\\components\\AgoraVideoCall\\index.jsx":"254","D:\\Mazars\\src\\pages\\TP\\Proposal\\DeclinedProposal.js":"255","D:\\Mazars\\src\\pages\\TP\\Proposal\\AcceptedProposal.js":"256","D:\\Mazars\\src\\pages\\TP\\Proposal\\InprogressProposal.js":"257","D:\\Mazars\\src\\pages\\TL\\Proposal\\Generated.js":"258","D:\\Mazars\\src\\pages\\TP\\Proposal\\AllProposal.js":"259","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\AllQuery.js":"260","D:\\Mazars\\src\\pages\\TP\\Login\\VerifyOtpLogin.js":"261","D:\\Mazars\\src\\pages\\TP\\EditProposal\\Payment.js":"262","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DeliveryFinalTab.js":"263","D:\\Mazars\\src\\pages\\TP\\SendProposal\\ProposalComponent.js":"264","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AllAssignment.js":"265","D:\\Mazars\\src\\pages\\TP\\NewPassword\\ResendOtp.js":"266","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paid.js":"267","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportTab.js":"268","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Unpaid.js":"269","D:\\Mazars\\src\\pages\\TP\\DeclinedQuery\\DeclinedQuery.js":"270","D:\\Mazars\\src\\pages\\TP\\CompleteData\\CompleteData.js":"271","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\PendingForAcceptence.js":"272","D:\\Mazars\\src\\pages\\TP\\InCompleteData\\InCompleteData.js":"273","D:\\Mazars\\src\\views\\AssignmentTab\\Assignmodal.js":"274","D:\\Mazars\\src\\pages\\TL\\Schedule\\Demo.js":"275","D:\\Mazars\\src\\pages\\TL\\Message\\PaymentModal.js":"276","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\AllPayment.js":"277","D:\\Mazars\\src\\pages\\TL\\meeting\\index.jsx":"278","D:\\Mazars\\src\\pages\\TP\\Schedule\\Demo.js":"279","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DiscardReport.js":"280","D:\\Mazars\\src\\components\\Search-Filter\\tpfilter.js":"281","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\ViewAllReport.js":"282","D:\\Mazars\\src\\pages\\TP\\SendProposal\\Payment.js":"283","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportUpload.js":"284","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\RejectedModal.js":"285","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\RejectedModal.js":"286","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\FinalReportUpload.js":"287","D:\\Mazars\\src\\pages\\TP\\Proposal\\ChatHistory.js":"288","D:\\Mazars\\src\\pages\\TP\\Message\\PaymentModal.js":"289","D:\\Mazars\\src\\pages\\TP\\Invoice\\Generated.js":"290","D:\\Mazars\\src\\pages\\TP\\Invoice\\CreateInvoice.js":"291","D:\\Mazars\\src\\pages\\TP\\meeting\\index.jsx":"292","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\RejectModal.js":"293","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\index.jsx":"294","D:\\Mazars\\src\\pages\\TP\\Invoice\\Tds.js":"295","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\index.jsx":"296","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\RecordingModal.js":"297","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\RecordingModal.js":"298"},{"size":566,"mtime":1636370578245,"results":"299","hashOfConfig":"300"},{"size":375,"mtime":1636370578420,"results":"301","hashOfConfig":"300"},{"size":19237,"mtime":1636446273115,"results":"302","hashOfConfig":"300"},{"size":839,"mtime":1636370660840,"results":"303","hashOfConfig":"300"},{"size":836,"mtime":1636370660839,"results":"304","hashOfConfig":"300"},{"size":815,"mtime":1636370578183,"results":"305","hashOfConfig":"300"},{"size":219,"mtime":1636370578223,"results":"306","hashOfConfig":"300"},{"size":2302,"mtime":1636370661035,"results":"307","hashOfConfig":"300"},{"size":11613,"mtime":1636370661160,"results":"308","hashOfConfig":"300"},{"size":6977,"mtime":1636370661165,"results":"309","hashOfConfig":"300"},{"size":7212,"mtime":1636446273236,"results":"310","hashOfConfig":"300"},{"size":3907,"mtime":1636370661164,"results":"311","hashOfConfig":"300"},{"size":4172,"mtime":1636370661153,"results":"312","hashOfConfig":"300"},{"size":12678,"mtime":1636370661178,"results":"313","hashOfConfig":"300"},{"size":19484,"mtime":1636446273207,"results":"314","hashOfConfig":"300"},{"size":395,"mtime":1636370578655,"results":"315","hashOfConfig":"300"},{"size":9780,"mtime":1636370661168,"results":"316","hashOfConfig":"300"},{"size":321,"mtime":1636370578503,"results":"317","hashOfConfig":"300"},{"size":11252,"mtime":1636370661158,"results":"318","hashOfConfig":"300"},{"size":990,"mtime":1636370661182,"results":"319","hashOfConfig":"300"},{"size":2691,"mtime":1636370661202,"results":"320","hashOfConfig":"300"},{"size":25862,"mtime":1636370661184,"results":"321","hashOfConfig":"300"},{"size":6019,"mtime":1636370661166,"results":"322","hashOfConfig":"300"},{"size":4596,"mtime":1636370661163,"results":"323","hashOfConfig":"300"},{"size":6369,"mtime":1636370661159,"results":"324","hashOfConfig":"300"},{"size":3020,"mtime":1636370661163,"results":"325","hashOfConfig":"300"},{"size":4070,"mtime":1636370661177,"results":"326","hashOfConfig":"300"},{"size":22953,"mtime":1636446273234,"results":"327","hashOfConfig":"300"},{"size":637,"mtime":1636370661201,"results":"328","hashOfConfig":"300"},{"size":15470,"mtime":1636370661169,"results":"329","hashOfConfig":"300"},{"size":4005,"mtime":1636370661181,"results":"330","hashOfConfig":"300"},{"size":2962,"mtime":1636370661173,"results":"331","hashOfConfig":"300"},{"size":1192,"mtime":1636370578520,"results":"332","hashOfConfig":"300"},{"size":8339,"mtime":1636370661171,"results":"333","hashOfConfig":"300"},{"size":460,"mtime":1636370578281,"results":"334","hashOfConfig":"300"},{"size":12896,"mtime":1636370661073,"results":"335","hashOfConfig":"300"},{"size":18555,"mtime":1636370661067,"results":"336","hashOfConfig":"300"},{"size":18920,"mtime":1636370661066,"results":"337","hashOfConfig":"300"},{"size":6724,"mtime":1636370661082,"results":"338","hashOfConfig":"300"},{"size":11775,"mtime":1636370661092,"results":"339","hashOfConfig":"300"},{"size":4790,"mtime":1636370661090,"results":"340","hashOfConfig":"300"},{"size":8560,"mtime":1636446273156,"results":"341","hashOfConfig":"300"},{"size":7518,"mtime":1636446273160,"results":"342","hashOfConfig":"300"},{"size":22830,"mtime":1636446273148,"results":"343","hashOfConfig":"300"},{"size":7048,"mtime":1636446273163,"results":"344","hashOfConfig":"300"},{"size":4423,"mtime":1636370661078,"results":"345","hashOfConfig":"300"},{"size":5841,"mtime":1636370661092,"results":"346","hashOfConfig":"300"},{"size":368,"mtime":1636370661083,"results":"347","hashOfConfig":"300"},{"size":4074,"mtime":1636370661091,"results":"348","hashOfConfig":"300"},{"size":3580,"mtime":1636370661078,"results":"349","hashOfConfig":"300"},{"size":9198,"mtime":1636370661085,"results":"350","hashOfConfig":"300"},{"size":8119,"mtime":1636370661089,"results":"351","hashOfConfig":"300"},{"size":7408,"mtime":1636370661072,"results":"352","hashOfConfig":"300"},{"size":1101,"mtime":1636370661095,"results":"353","hashOfConfig":"300"},{"size":6986,"mtime":1636370661093,"results":"354","hashOfConfig":"300"},{"size":6160,"mtime":1636370661084,"results":"355","hashOfConfig":"300"},{"size":2069,"mtime":1636370661080,"results":"356","hashOfConfig":"300"},{"size":5789,"mtime":1636370661101,"results":"357","hashOfConfig":"300"},{"size":19582,"mtime":1636370661094,"results":"358","hashOfConfig":"300"},{"size":2698,"mtime":1636370661099,"results":"359","hashOfConfig":"300"},{"size":460,"mtime":1636370578356,"results":"360","hashOfConfig":"300"},{"size":3756,"mtime":1636370661072,"results":"361","hashOfConfig":"300"},{"size":3017,"mtime":1636370661088,"results":"362","hashOfConfig":"300"},{"size":4937,"mtime":1636370661104,"results":"363","hashOfConfig":"300"},{"size":23222,"mtime":1636446273146,"results":"364","hashOfConfig":"300"},{"size":3580,"mtime":1636370661103,"results":"365","hashOfConfig":"300"},{"size":20363,"mtime":1636370661103,"results":"366","hashOfConfig":"300"},{"size":6275,"mtime":1636370661119,"results":"367","hashOfConfig":"300"},{"size":4942,"mtime":1636370661132,"results":"368","hashOfConfig":"300"},{"size":4064,"mtime":1636370661117,"results":"369","hashOfConfig":"300"},{"size":3776,"mtime":1636370661117,"results":"370","hashOfConfig":"300"},{"size":11770,"mtime":1636370661136,"results":"371","hashOfConfig":"300"},{"size":7901,"mtime":1636446273165,"results":"372","hashOfConfig":"300"},{"size":517,"mtime":1636370578355,"results":"373","hashOfConfig":"300"},{"size":4782,"mtime":1636370661135,"results":"374","hashOfConfig":"300"},{"size":9990,"mtime":1636370661127,"results":"375","hashOfConfig":"300"},{"size":13060,"mtime":1636370661114,"results":"376","hashOfConfig":"300"},{"size":13778,"mtime":1636370661116,"results":"377","hashOfConfig":"300"},{"size":3528,"mtime":1636370661118,"results":"378","hashOfConfig":"300"},{"size":13915,"mtime":1636370661107,"results":"379","hashOfConfig":"300"},{"size":2862,"mtime":1636370661138,"results":"380","hashOfConfig":"300"},{"size":9348,"mtime":1636370661121,"results":"381","hashOfConfig":"300"},{"size":2959,"mtime":1636370661138,"results":"382","hashOfConfig":"300"},{"size":2950,"mtime":1636370661124,"results":"383","hashOfConfig":"300"},{"size":3409,"mtime":1636370661108,"results":"384","hashOfConfig":"300"},{"size":2999,"mtime":1636370661172,"results":"385","hashOfConfig":"300"},{"size":5446,"mtime":1636370661179,"results":"386","hashOfConfig":"300"},{"size":13526,"mtime":1636446273263,"results":"387","hashOfConfig":"300"},{"size":16645,"mtime":1636446273238,"results":"388","hashOfConfig":"300"},{"size":14334,"mtime":1636446273237,"results":"389","hashOfConfig":"300"},{"size":18648,"mtime":1636370661179,"results":"390","hashOfConfig":"300"},{"size":822,"mtime":1636438870295,"results":"391","hashOfConfig":"300"},{"size":7249,"mtime":1636370661180,"results":"392","hashOfConfig":"300"},{"size":14969,"mtime":1636370661180,"results":"393","hashOfConfig":"300"},{"size":14797,"mtime":1636370661123,"results":"394","hashOfConfig":"300"},{"size":5882,"mtime":1636370660845,"results":"395","hashOfConfig":"300"},{"size":16337,"mtime":1636370661123,"results":"396","hashOfConfig":"300"},{"size":1544,"mtime":1636370661122,"results":"397","hashOfConfig":"300"},{"size":1087,"mtime":1636370660955,"results":"398","hashOfConfig":"300"},{"size":16551,"mtime":1636370661125,"results":"399","hashOfConfig":"300"},{"size":4399,"mtime":1636370661116,"results":"400","hashOfConfig":"300"},{"size":20341,"mtime":1636370661109,"results":"401","hashOfConfig":"300"},{"size":293,"mtime":1636370578218,"results":"402","hashOfConfig":"300"},{"size":308,"mtime":1636370578213,"results":"403","hashOfConfig":"300"},{"size":931,"mtime":1636370578203,"results":"404","hashOfConfig":"300"},{"size":2632,"mtime":1636370578203,"results":"405","hashOfConfig":"300"},{"size":3180,"mtime":1636370660952,"results":"406","hashOfConfig":"300"},{"size":20618,"mtime":1636370661108,"results":"407","hashOfConfig":"300"},{"size":20718,"mtime":1636370661110,"results":"408","hashOfConfig":"300"},{"size":8993,"mtime":1636370661135,"results":"409","hashOfConfig":"300"},{"size":13030,"mtime":1636370661137,"results":"410","hashOfConfig":"300"},{"size":6669,"mtime":1636370661125,"results":"411","hashOfConfig":"300"},{"size":6879,"mtime":1636370661118,"results":"412","hashOfConfig":"300"},{"size":4901,"mtime":1636446273145,"results":"413","hashOfConfig":"300"},{"size":9156,"mtime":1636370661113,"results":"414","hashOfConfig":"300"},{"size":433,"mtime":1636370578221,"results":"415","hashOfConfig":"300"},{"size":3188,"mtime":1636370661172,"results":"416","hashOfConfig":"300"},{"size":2532,"mtime":1636370661155,"results":"417","hashOfConfig":"300"},{"size":3456,"mtime":1636370661178,"results":"418","hashOfConfig":"300"},{"size":2603,"mtime":1636370578297,"results":"419","hashOfConfig":"300"},{"size":2726,"mtime":1636370661124,"results":"420","hashOfConfig":"300"},{"size":455,"mtime":1636370578231,"results":"421","hashOfConfig":"300"},{"size":17902,"mtime":1636370661060,"results":"422","hashOfConfig":"300"},{"size":3402,"mtime":1636370661111,"results":"423","hashOfConfig":"300"},{"size":8734,"mtime":1636370661112,"results":"424","hashOfConfig":"300"},{"size":15040,"mtime":1636370661062,"results":"425","hashOfConfig":"300"},{"size":3270,"mtime":1636370661110,"results":"426","hashOfConfig":"300"},{"size":451,"mtime":1636370578204,"results":"427","hashOfConfig":"300"},{"size":2148,"mtime":1636370660840,"results":"428","hashOfConfig":"300"},{"size":20276,"mtime":1636370660842,"results":"429","hashOfConfig":"300"},{"size":4914,"mtime":1636370578355,"results":"430","hashOfConfig":"300"},{"size":13173,"mtime":1636370661128,"results":"431","hashOfConfig":"300"},{"size":14270,"mtime":1636370661130,"results":"432","hashOfConfig":"300"},{"size":13293,"mtime":1636370661129,"results":"433","hashOfConfig":"300"},{"size":4871,"mtime":1636370661119,"results":"434","hashOfConfig":"300"},{"size":15553,"mtime":1636370661128,"results":"435","hashOfConfig":"300"},{"size":12657,"mtime":1636370661088,"results":"436","hashOfConfig":"300"},{"size":15191,"mtime":1636370661087,"results":"437","hashOfConfig":"300"},{"size":13341,"mtime":1636370661086,"results":"438","hashOfConfig":"300"},{"size":2997,"mtime":1636370661075,"results":"439","hashOfConfig":"300"},{"size":1460,"mtime":1636370661056,"results":"440","hashOfConfig":"300"},{"size":2683,"mtime":1636370661054,"results":"441","hashOfConfig":"300"},{"size":2406,"mtime":1636370661049,"results":"442","hashOfConfig":"300"},{"size":4940,"mtime":1636370661050,"results":"443","hashOfConfig":"300"},{"size":1655,"mtime":1636370578227,"results":"444","hashOfConfig":"300"},{"size":4589,"mtime":1636446273141,"results":"445","hashOfConfig":"300"},{"size":14642,"mtime":1636370661071,"results":"446","hashOfConfig":"300"},{"size":2825,"mtime":1636370661126,"results":"447","hashOfConfig":"300"},{"size":17304,"mtime":1636370661069,"results":"448","hashOfConfig":"300"},{"size":9484,"mtime":1636446273143,"results":"449","hashOfConfig":"300"},{"size":5512,"mtime":1636370661059,"results":"450","hashOfConfig":"300"},{"size":14555,"mtime":1636370661070,"results":"451","hashOfConfig":"300"},{"size":2096,"mtime":1636370661100,"results":"452","hashOfConfig":"300"},{"size":4958,"mtime":1636370661061,"results":"453","hashOfConfig":"300"},{"size":1759,"mtime":1636370661042,"results":"454","hashOfConfig":"300"},{"size":519,"mtime":1636370578240,"results":"455","hashOfConfig":"300"},{"size":759,"mtime":1636370661032,"results":"456","hashOfConfig":"300"},{"size":3128,"mtime":1636370661111,"results":"457","hashOfConfig":"300"},{"size":1712,"mtime":1636370578331,"results":"458","hashOfConfig":"300"},{"size":19516,"mtime":1636446273164,"results":"459","hashOfConfig":"300"},{"size":2569,"mtime":1636370578254,"results":"460","hashOfConfig":"300"},{"size":14590,"mtime":1636370661059,"results":"461","hashOfConfig":"300"},{"size":7408,"mtime":1636370661071,"results":"462","hashOfConfig":"300"},{"size":377,"mtime":1636438876752,"results":"463","hashOfConfig":"300"},{"size":4752,"mtime":1636370660841,"results":"464","hashOfConfig":"300"},{"size":1768,"mtime":1636370660841,"results":"465","hashOfConfig":"300"},{"size":1739,"mtime":1636370661098,"results":"466","hashOfConfig":"300"},{"size":1740,"mtime":1636370661096,"results":"467","hashOfConfig":"300"},{"size":8806,"mtime":1636370661080,"results":"468","hashOfConfig":"300"},{"size":6085,"mtime":1636370661079,"results":"469","hashOfConfig":"300"},{"size":12308,"mtime":1636446273158,"results":"470","hashOfConfig":"300"},{"size":2756,"mtime":1636370661061,"results":"471","hashOfConfig":"300"},{"size":1601,"mtime":1636370661086,"results":"472","hashOfConfig":"300"},{"size":7303,"mtime":1636370661045,"results":"473","hashOfConfig":"300"},{"size":6399,"mtime":1636370660845,"results":"474","hashOfConfig":"300"},{"size":6224,"mtime":1636370661047,"results":"475","hashOfConfig":"300"},{"size":4583,"mtime":1636370660950,"results":"476","hashOfConfig":"300"},{"size":8672,"mtime":1636370661073,"results":"477","hashOfConfig":"300"},{"size":8856,"mtime":1636370661065,"results":"478","hashOfConfig":"300"},{"size":4903,"mtime":1636370661083,"results":"479","hashOfConfig":"300"},{"size":3173,"mtime":1636370660948,"results":"480","hashOfConfig":"300"},{"size":9428,"mtime":1636370661069,"results":"481","hashOfConfig":"300"},{"size":8770,"mtime":1636370661040,"results":"482","hashOfConfig":"300"},{"size":2324,"mtime":1636370661101,"results":"483","hashOfConfig":"300"},{"size":1803,"mtime":1636370661161,"results":"484","hashOfConfig":"300"},{"size":10843,"mtime":1636370661175,"results":"485","hashOfConfig":"300"},{"size":7582,"mtime":1636370661176,"results":"486","hashOfConfig":"300"},{"size":6723,"mtime":1636370661061,"results":"487","hashOfConfig":"300"},{"size":18388,"mtime":1636370661081,"results":"488","hashOfConfig":"300"},{"size":164,"mtime":1636370578185,"results":"489","hashOfConfig":"300"},{"size":47264,"mtime":1636370661068,"results":"490","hashOfConfig":"300"},{"size":7352,"mtime":1636370661067,"results":"491","hashOfConfig":"300"},{"size":2433,"mtime":1636370661100,"results":"492","hashOfConfig":"300"},{"size":14683,"mtime":1636370661175,"results":"493","hashOfConfig":"300"},{"size":15091,"mtime":1636370661176,"results":"494","hashOfConfig":"300"},{"size":1693,"mtime":1636370661183,"results":"495","hashOfConfig":"300"},{"size":2209,"mtime":1636370661166,"results":"496","hashOfConfig":"300"},{"size":2667,"mtime":1636370661183,"results":"497","hashOfConfig":"300"},{"size":343535,"mtime":1636370578654,"results":"498","hashOfConfig":"300"},{"size":6664,"mtime":1636370661182,"results":"499","hashOfConfig":"300"},{"size":1733,"mtime":1636370661159,"results":"500","hashOfConfig":"300"},{"size":1663,"mtime":1636370661168,"results":"501","hashOfConfig":"300"},{"size":491,"mtime":1636370661152,"results":"502","hashOfConfig":"300"},{"size":10539,"mtime":1636370660954,"results":"503","hashOfConfig":"300"},{"size":4841625,"mtime":1636370578642,"results":"504","hashOfConfig":"300"},{"size":823,"mtime":1636370578514,"results":"505","hashOfConfig":"300"},{"size":12133,"mtime":1636446273231,"results":"506","hashOfConfig":"300"},{"size":10306,"mtime":1636446273209,"results":"507","hashOfConfig":"300"},{"size":11112,"mtime":1636446273232,"results":"508","hashOfConfig":"300"},{"size":12324,"mtime":1636446273221,"results":"509","hashOfConfig":"300"},{"size":2115,"mtime":1636370661063,"results":"510","hashOfConfig":"300"},{"size":5143,"mtime":1636370661165,"results":"511","hashOfConfig":"300"},{"size":2432,"mtime":1636370661177,"results":"512","hashOfConfig":"300"},{"size":1978,"mtime":1636370661145,"results":"513","hashOfConfig":"300"},{"size":3469,"mtime":1636370661034,"results":"514","hashOfConfig":"300"},{"size":812,"mtime":1636370578185,"results":"515","hashOfConfig":"300"},{"size":498,"mtime":1636370578183,"results":"516","hashOfConfig":"300"},{"size":493,"mtime":1636370578182,"results":"517","hashOfConfig":"300"},{"size":497,"mtime":1636370578181,"results":"518","hashOfConfig":"300"},{"size":564,"mtime":1636370660839,"results":"519","hashOfConfig":"300"},{"size":2797,"mtime":1636370578418,"results":"520","hashOfConfig":"300"},{"size":7031,"mtime":1636370578406,"results":"521","hashOfConfig":"300"},{"size":11943,"mtime":1636370578407,"results":"522","hashOfConfig":"300"},{"size":402,"mtime":1636370578384,"results":"523","hashOfConfig":"300"},{"size":4598,"mtime":1636370578379,"results":"524","hashOfConfig":"300"},{"size":7381,"mtime":1636370578373,"results":"525","hashOfConfig":"300"},{"size":6828,"mtime":1636370578385,"results":"526","hashOfConfig":"300"},{"size":20347,"mtime":1636370661139,"results":"527","hashOfConfig":"300"},{"size":1087,"mtime":1636370578409,"results":"528","hashOfConfig":"300"},{"size":13214,"mtime":1636370578375,"results":"529","hashOfConfig":"300"},{"size":3008,"mtime":1636370578391,"results":"530","hashOfConfig":"300"},{"size":9574,"mtime":1636370578388,"results":"531","hashOfConfig":"300"},{"size":5345,"mtime":1636370578372,"results":"532","hashOfConfig":"300"},{"size":6973,"mtime":1636446273202,"results":"533","hashOfConfig":"300"},{"size":17531,"mtime":1636370661143,"results":"534","hashOfConfig":"300"},{"size":547,"mtime":1636370578416,"results":"535","hashOfConfig":"300"},{"size":3460,"mtime":1636370578366,"results":"536","hashOfConfig":"300"},{"size":6768,"mtime":1636370661146,"results":"537","hashOfConfig":"300"},{"size":4990,"mtime":1636370578401,"results":"538","hashOfConfig":"300"},{"size":5090,"mtime":1636370578398,"results":"539","hashOfConfig":"300"},{"size":3100,"mtime":1636370578380,"results":"540","hashOfConfig":"300"},{"size":488,"mtime":1636370578417,"results":"541","hashOfConfig":"300"},{"size":2039,"mtime":1636370661131,"results":"542","hashOfConfig":"300"},{"size":7546,"mtime":1636370661131,"results":"543","hashOfConfig":"300"},{"size":12236,"mtime":1636370578351,"results":"544","hashOfConfig":"300"},{"size":6864,"mtime":1636370661137,"results":"545","hashOfConfig":"300"},{"size":358,"mtime":1636370661120,"results":"546","hashOfConfig":"300"},{"size":1089,"mtime":1636370578352,"results":"547","hashOfConfig":"300"},{"size":3170,"mtime":1636370661157,"results":"548","hashOfConfig":"300"},{"size":4661,"mtime":1636370661156,"results":"549","hashOfConfig":"300"},{"size":10374,"mtime":1636370661158,"results":"550","hashOfConfig":"300"},{"size":5894,"mtime":1636370661120,"results":"551","hashOfConfig":"300"},{"size":8120,"mtime":1636370661112,"results":"552","hashOfConfig":"300"},{"size":15994,"mtime":1636370660844,"results":"553","hashOfConfig":"300"},{"size":15190,"mtime":1636370661149,"results":"554","hashOfConfig":"300"},{"size":13185,"mtime":1636370661148,"results":"555","hashOfConfig":"300"},{"size":14268,"mtime":1636370661150,"results":"556","hashOfConfig":"300"},{"size":9858,"mtime":1636370661130,"results":"557","hashOfConfig":"300"},{"size":15075,"mtime":1636370661149,"results":"558","hashOfConfig":"300"},{"size":8874,"mtime":1636370578401,"results":"559","hashOfConfig":"300"},{"size":4872,"mtime":1636370661147,"results":"560","hashOfConfig":"300"},{"size":4513,"mtime":1636370661143,"results":"561","hashOfConfig":"300"},{"size":19680,"mtime":1636370578367,"results":"562","hashOfConfig":"300"},{"size":18168,"mtime":1636370578415,"results":"563","hashOfConfig":"300"},{"size":21087,"mtime":1636370661141,"results":"564","hashOfConfig":"300"},{"size":1694,"mtime":1636370578388,"results":"565","hashOfConfig":"300"},{"size":15168,"mtime":1636370578390,"results":"566","hashOfConfig":"300"},{"size":20568,"mtime":1636370578368,"results":"567","hashOfConfig":"300"},{"size":16416,"mtime":1636370578392,"results":"568","hashOfConfig":"300"},{"size":4256,"mtime":1636370578376,"results":"569","hashOfConfig":"300"},{"size":4569,"mtime":1636370578373,"results":"570","hashOfConfig":"300"},{"size":7132,"mtime":1636370661147,"results":"571","hashOfConfig":"300"},{"size":7066,"mtime":1636370578382,"results":"572","hashOfConfig":"300"},{"size":3625,"mtime":1636370661154,"results":"573","hashOfConfig":"300"},{"size":12949,"mtime":1636370578352,"results":"574","hashOfConfig":"300"},{"size":2204,"mtime":1636370661121,"results":"575","hashOfConfig":"300"},{"size":16079,"mtime":1636370578390,"results":"576","hashOfConfig":"300"},{"size":2264,"mtime":1636370661139,"results":"577","hashOfConfig":"300"},{"size":12882,"mtime":1636370578408,"results":"578","hashOfConfig":"300"},{"size":2607,"mtime":1636370578368,"results":"579","hashOfConfig":"300"},{"size":15030,"mtime":1636370661063,"results":"580","hashOfConfig":"300"},{"size":8873,"mtime":1636370661142,"results":"581","hashOfConfig":"300"},{"size":4915,"mtime":1636370578415,"results":"582","hashOfConfig":"300"},{"size":3362,"mtime":1636370578369,"results":"583","hashOfConfig":"300"},{"size":2825,"mtime":1636370578392,"results":"584","hashOfConfig":"300"},{"size":2924,"mtime":1636370578394,"results":"585","hashOfConfig":"300"},{"size":3466,"mtime":1636370578370,"results":"586","hashOfConfig":"300"},{"size":1767,"mtime":1636370578396,"results":"587","hashOfConfig":"300"},{"size":2304,"mtime":1636370578386,"results":"588","hashOfConfig":"300"},{"size":9114,"mtime":1636370661144,"results":"589","hashOfConfig":"300"},{"size":6754,"mtime":1636370661144,"results":"590","hashOfConfig":"300"},{"size":2333,"mtime":1636370578419,"results":"591","hashOfConfig":"300"},{"size":3270,"mtime":1636370661142,"results":"592","hashOfConfig":"300"},{"size":22494,"mtime":1636370661106,"results":"593","hashOfConfig":"300"},{"size":19627,"mtime":1636446273179,"results":"594","hashOfConfig":"300"},{"size":24177,"mtime":1636370661141,"results":"595","hashOfConfig":"300"},{"size":6400,"mtime":1636370661105,"results":"596","hashOfConfig":"300"},{"size":6647,"mtime":1636370661140,"results":"597","hashOfConfig":"300"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},"zdd4px",{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"600"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"600"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"600"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"600"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"600"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"600"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"600"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"600"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"600"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"600"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"600"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"600"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"600"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"600"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"600"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"600"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"600"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"600"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"600"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"600"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"600"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"600"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"600"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"600"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"691","usedDeprecatedRules":"600"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"600"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"600"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"600"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"600"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"600"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"600"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"600"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"600"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"600"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"600"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"600"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"600"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"600"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"600"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"600"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"600"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"600"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"600"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"758","usedDeprecatedRules":"600"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"600"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"600"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"600"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"600"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"600"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"600"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"600"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"600"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"600"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"600"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"600"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"600"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"600"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"600"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"600"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"600"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"600"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"600"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"821","usedDeprecatedRules":"600"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"600"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"600"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"830","usedDeprecatedRules":"600"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"600"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"600"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"600"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"600"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"600"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"600"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"600"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862","usedDeprecatedRules":"600"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"600"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"600"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"600"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"600"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"600"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"600"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"600"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"600"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"600"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"600"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"600"},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"600"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"600"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"600"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"600"},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"600"},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"600"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"600"},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"600"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"600"},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"600"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"600"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"600"},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"600"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"947","usedDeprecatedRules":"600"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"600"},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"600"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958","usedDeprecatedRules":"600"},{"filePath":"959","messages":"960","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"961","usedDeprecatedRules":"600"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"600"},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"967","usedDeprecatedRules":"600"},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"970","usedDeprecatedRules":"600"},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"973","usedDeprecatedRules":"600"},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"600"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"979","usedDeprecatedRules":"600"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"600"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"600"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"988","usedDeprecatedRules":"600"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"600"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"600"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"997","usedDeprecatedRules":"600"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"600"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1003","usedDeprecatedRules":"600"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1006","usedDeprecatedRules":"600"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"600"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"600"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"600"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1020","messages":"1021","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"600"},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"600"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"600"},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"600"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"600"},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"600"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"600"},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043","usedDeprecatedRules":"600"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"600"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051","usedDeprecatedRules":"600"},{"filePath":"1052","messages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1054","usedDeprecatedRules":"600"},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1057","usedDeprecatedRules":"600"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"600"},{"filePath":"1063","messages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065","usedDeprecatedRules":"600"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"600"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071","usedDeprecatedRules":"600"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1074","usedDeprecatedRules":"600"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077","usedDeprecatedRules":"600"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1082","usedDeprecatedRules":"600"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"600"},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1088","usedDeprecatedRules":"600"},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"600"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"600"},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"600"},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1100","usedDeprecatedRules":"600"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1103","usedDeprecatedRules":"600"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106","usedDeprecatedRules":"600"},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109","usedDeprecatedRules":"600"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1112","usedDeprecatedRules":"600"},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1115","usedDeprecatedRules":"600"},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120","usedDeprecatedRules":"600"},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1123","usedDeprecatedRules":"600"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126","usedDeprecatedRules":"600"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129","usedDeprecatedRules":"600"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132","usedDeprecatedRules":"600"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"600"},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"600"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143","usedDeprecatedRules":"600"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1146","usedDeprecatedRules":"600"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1149","usedDeprecatedRules":"600"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"600"},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"600"},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"600"},{"filePath":"1159","messages":"1160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"600"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1166","usedDeprecatedRules":"600"},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169","usedDeprecatedRules":"600"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"600"},{"filePath":"1175","messages":"1176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"600"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"600"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"600"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"600"},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1201","usedDeprecatedRules":"600"},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1204","messages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"600"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217","usedDeprecatedRules":"600"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1220","usedDeprecatedRules":"600"},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223","usedDeprecatedRules":"600"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226","usedDeprecatedRules":"600"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"600"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"600"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"600"},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"600"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"600"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244","usedDeprecatedRules":"600"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"600"},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"600"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"600"},{"filePath":"1256","messages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"600"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"600"},{"filePath":"1262","messages":"1263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264","usedDeprecatedRules":"600"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1267","usedDeprecatedRules":"600"},{"filePath":"1268","messages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"600"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"600"},{"filePath":"1274","messages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1276","messages":"1277","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"600"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281","usedDeprecatedRules":"600"},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1284","usedDeprecatedRules":"600"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"600"},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"600"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"600"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"600"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"600"},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1302","usedDeprecatedRules":"600"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"600"},{"filePath":"1306","messages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"600"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1311","usedDeprecatedRules":"600"},{"filePath":"1312","messages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1314","usedDeprecatedRules":"600"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1317","usedDeprecatedRules":"600"},{"filePath":"1318","messages":"1319","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1320","usedDeprecatedRules":"600"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1323","usedDeprecatedRules":"600"},{"filePath":"1324","messages":"1325","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1326","usedDeprecatedRules":"600"},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329","usedDeprecatedRules":"600"},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"600"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"600"},{"filePath":"1336","messages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1338","usedDeprecatedRules":"600"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1341","usedDeprecatedRules":"600"},{"filePath":"1342","messages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1344","usedDeprecatedRules":"600"},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"600"},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"600"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1353","usedDeprecatedRules":"600"},{"filePath":"1354","messages":"1355","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1356","usedDeprecatedRules":"600"},{"filePath":"1357","messages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1359","usedDeprecatedRules":"600"},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"600"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"600"},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"600"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"600"},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"600"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"600"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"600"},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"600"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388","usedDeprecatedRules":"600"},{"filePath":"1389","messages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"600"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1394","usedDeprecatedRules":"600"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"600"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400","usedDeprecatedRules":"600"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1403","usedDeprecatedRules":"600"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"600"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"600"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"600"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"600"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1418","usedDeprecatedRules":"600"},{"filePath":"1419","messages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"600"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1426","usedDeprecatedRules":"600"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"600"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1432","messages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434","usedDeprecatedRules":"600"},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"600"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"600"},"D:\\Mazars\\src\\index.js",[],["1441","1442"],"D:\\Mazars\\src\\reportWebVitals.js",[],"D:\\Mazars\\src\\App.js",["1443"],"D:\\Mazars\\src\\Service\\PublicRouteTP.js",["1444"],"import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PublicRoutesTP = ({ component: Component, ...rest }) => {\r\n\r\n\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                const token = window.localStorage.getItem(\"tpkey\");\r\n\r\n                if (token) {\r\n                    return (\r\n                        <>\r\n                            <Redirect to={\"/taxprofessional/dashboard\"} />\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <Component {...props} />\r\n                        </>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PublicRoutesTP;\r\n\r\n\r\n","D:\\Mazars\\src\\Service\\PublicRouteTL.js",["1445"],"import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PublicRoutesTL = ({ component: Component, ...rest }) => {\r\n\r\n  \r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                const token = window.localStorage.getItem(\"tlkey\");\r\n\r\n                if (token) {\r\n                    return (\r\n                        <>\r\n                            <Redirect to={\"/teamleader/dashboard\"} />\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <Component {...props} />\r\n                        </>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PublicRoutesTL;\r\n\r\n\r\n","D:\\Mazars\\src\\Service\\PublicRouteAdmin.js",[],"D:\\Mazars\\src\\components\\PageNotFound\\PageNotFound.js",[],"D:\\Mazars\\src\\components\\LoginForm\\LoginFun.js",["1446","1447"],"import React from 'react';\r\nimport { useState, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../config/config';\r\nimport { useHistory } from 'react-router';\r\nimport { useAlert } from \"react-alert\";\r\nimport Login from '../../pages/Admin/Login/Login';\r\nimport Alerts from '../../common/Alerts';\r\nimport LoginForm from './LoginForm';\r\nconst LoginData = createContext();\r\nconst LoginFun = () => {\r\n  const alert = useAlert();\r\n  let history = useHistory();\r\n    const [email, setEmail] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [uid, setUid] = useState('')\r\n    const [isPasswordShow, setPasswordShow] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    const togglePasssword = () => {\r\n      setPasswordShow(!isPasswordShow)\r\n    };\r\n  \r\n    const onSubmit = (value) => {\r\n    \r\n      setLoading(true)\r\n  \r\n      let formData = new FormData();\r\n      formData.append(\"userid\", value.p_email);\r\n      formData.append(\"password\", value.password);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/login`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n  \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n            setUid(response.data[\"user id\"])\r\n            logout();\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Invalid email or password.\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 600000)\r\n  }\r\n    const handleChange = (e) => {\r\n  \r\n      setEmail(e.target.value);\r\n    };\r\n   \r\n  const valData = { handleChange, onSubmit, togglePasssword, isPasswordShow, email, show, uid, loading, setLoading}\r\n  return(\r\n      <>\r\n      <LoginData.Provider value={valData}>\r\n          <Login />\r\n          \r\n      </LoginData.Provider>\r\n      </>\r\n  )\r\n}\r\nexport default LoginFun;\r\nexport {LoginData}","D:\\Mazars\\src\\views\\Dashboard\\Dashboard.js",["1448","1449","1450","1451","1452","1453","1454","1455","1456"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\nfunction Dashboard() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n\r\n    allassignment: '',\r\n    inprogress: '',\r\n    complete: '',\r\n    customer_declined_Pay: '',\r\n\r\n\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress,\r\n    allassignment, inprogress, complete,\r\n    customer_declined_Pay,\r\n    paid, unpaid, totalpayment,\r\n  } = allQueries;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/totalComplete?uid=${JSON.parse(userId)}`)\r\n        .then((response) => {\r\n\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n\r\n\r\n              allassignment: response.data.result.assignment.allassignment,\r\n              inprogress: response.data.result.assignment.inprogress,\r\n              complete: response.data.result.assignment.complete,\r\n              customer_declined_Pay: response.data.result.assignment.customer_declined_payment,\r\n\r\n\r\n\r\n              totalpayment: response.data.result.payments.totalpayment,\r\n              paid: response.data.result.payments.paid,\r\n              unpaid: response.data.result.payments.unpaid,\r\n\r\n\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n      \r\n        });\r\n    };\r\n\r\n\r\n    getAllQueries();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\"> All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {inprogress_queries != 0 || declined_queries != 0 ? <>\r\n            <table className=\"table table-striped third main_table\">\r\n              <thead className=\"query_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">Completed; Queries</th>\r\n                  <th>{complete_query}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"table_body\">\r\n                <tr>\r\n                  <td className=\"left_side\">Completed; Assignments</td>\r\n                  <td>{complete_query}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {complete_query != 0  || declined_queries != 0 ? <>\r\n\r\n              <table className=\"table table-striped forth main_table\">\r\n                <thead className=\"query_thead\">\r\n                  <tr>\r\n                    <th className=\"left_side\">Declined; Queries</th>\r\n                    <th>{declined_queries}</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody className=\"table_body\">\r\n                  <tr>\r\n                    <td className=\"left_side\">Admin Declined; Queries</td>\r\n                    <td>{admin_declined_query}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"left_side\">Customer Declined; Queries</td>\r\n                    <td>{customer_declined_Query}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                    <td>{customer_declined_proposal}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"left_side\">Customer Declined; Payment</td>\r\n                    <td>{Customer_declined_payment}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </> : \"\"}   </> : \"\"}   </div>\r\n        {allproposal != 0 ? <>\r\n          <div className=\"col-md-3 content_header\">\r\n\r\n            <table className=\"table table-striped fifth main_table\">\r\n              <thead className=\"proposal_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">All Proposals</th>\r\n                  <th>{allproposal}</th>\r\n\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n\r\n            <table className=\"table table-striped sixth main_table\">\r\n              <thead className=\"proposal_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">Inprogress; Proposals</th>\r\n                  <th>{InProgress}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody classNameName=\"table_body\">\r\n                <tr>\r\n                  <td className=\"left_side\">Inprogress; Preparation</td>\r\n                  <td>{inprogress_preparation}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                  <td>{inprogress_acceptance}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table className=\"table table-striped seventh main_table\">\r\n              <thead className=\"proposal_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">Accepted; Proposals </th>\r\n                  <th>{accepted_proposals}</th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n\r\n            <table className=\"table table-striped eight main_table\">\r\n              <thead className=\"proposal_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                  <th>{declined}</th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n          {allassignment != 0 ? <>\r\n            <div className=\"col-md-3 content_header\">\r\n              <table className=\"table table-striped ninth main_table\">\r\n                <thead className=\"assignment_thead\">\r\n                  <tr>\r\n                    <th className=\"left_side\">All Assignments</th>\r\n                    <th>{allassignment}</th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n\r\n              <table className=\"table table-striped tenth main_table\">\r\n                <thead className=\"assignment_thead\">\r\n\r\n                  <tr>\r\n                    <th className=\"left_side\">Inprogress; Assignments</th>\r\n                    <th>{inprogress}</th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n\r\n              <table className=\"table table-striped tenth main_table\">\r\n                <thead className=\"assignment_thead\">\r\n\r\n                  <tr>\r\n                    <th className=\"left_side\">Completed; Assignments</th>\r\n                    <th>{complete}</th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n\r\n              <table className=\"table table-striped tenth main_table\">\r\n                <thead className=\"assignment_thead\">\r\n\r\n                  <tr>\r\n                    <th className=\"left_side\">Customer Declined; Payment</th>\r\n                    <th>{customer_declined_Pay}</th>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n            {totalpayment != 0 ? <>\r\n\r\n              <div className=\"col-md-3 content_header\">\r\n\r\n                <table className=\"table table-striped twelvth main_table\">\r\n                  <thead className=\"payment_thead\">\r\n                    <tr>\r\n                      <th className=\"left_side\">All Payments</th>\r\n                      <th>{totalpayment}</th>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n                <table className=\"table table-striped thirteen main_table\">\r\n                  <thead className=\"payment_thead2\">\r\n                    <tr>\r\n                      <th className=\"left_side\">Paid</th>\r\n                      <th>{paid}</th>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n\r\n                <table className=\"table table-striped thirteen main_table\">\r\n                  <thead className=\"payment_thead2\">\r\n                    <tr>\r\n                      <th className=\"left_side\">Unpaid</th>\r\n                      <th>{unpaid}</th>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n              </div>\r\n            </> : \"\"} </> : \"\"}  </> : \"\"}  </div>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Mazars\\src\\views\\Login\\Login.js",["1457","1458","1459"],"import { useRef, useState, useEffect } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport './style.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport VerifyOTP from \"./VerifyOTP\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nimport LoadingTime from \"../../components/LoadingTime/LoadingTime\";\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n  p_password: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction LoginForm() {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [uid, setUid] = useState('')\r\n  const [time, setTime] = useState('');\r\n  const [load, setLoad] = useState(false);\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n\r\n    if (load) {\r\n      LoadingTime.timer2(setTime, setDisabled)\r\n    }\r\n\r\n  }\r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setShow(true)\r\n          setLoad(true)\r\n          setUid(response.data.user_id)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(response.data.result)\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setEmail(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header noSign=\"noSign\" />\r\n      <h1 style={{ \"textAlign\": \"center\", \"margin\": \"55px 0 30px 0\" }}>\r\n        Would you like to post a query\r\n      </h1>\r\n\r\n\r\n      <div className=\"StartPage\">\r\n        <div className=\"mainContent\">\r\n\r\n          <div className=\"signIn\">\r\n            <div className=\"signBtn\">\r\n              <div className=\"boxOverlay\">\r\n                <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#fff\" }}>\r\n                  For new customers\r\n                </Typography>\r\n                <button className=\"btn btn-success\">\r\n                  <Link className=\"SignUpLink\"\r\n                    to={{\r\n                      pathname: \"/customer/signup\",\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"signUp\">\r\n            <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#2b345f\" }}>\r\n              For existing customers\r\n            </Typography>\r\n            {\r\n              show ? <div className=\"customForm\">\r\n\r\n                <VerifyOTP email={email} uid={uid} time={time} setLoad={setLoad}\r\n                  setDisabled={setDisabled} disabled={disabled} setLoading={setLoading}\r\n                  loading={loading} />\r\n              </div>\r\n                :\r\n                <div className=\"customForm\">\r\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"signInForm\" autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"form-label\">Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group passForm \">\r\n                      <label className=\"form-label\">Password <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_password,\r\n                        })}\r\n                        name=\"p_password\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      \r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon-login`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", margin: \"0 0 30px 0\", justifyContent: \"flex-end\" }}>\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/customer/forget-password\",\r\n                          email: `${email}`,\r\n                        }}\r\n                      >\r\n                        Forgot Password\r\n                      </Link>\r\n                    </div>\r\n\r\n                    {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-success\" type=\"submit\">\r\n                          Send OTP\r\n                        </button>\r\n                    }\r\n\r\n                  </form>\r\n                </div>\r\n            }\r\n            <Mandatory />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n","D:\\Mazars\\src\\views\\MyAssingment\\MyAssingment.js",["1460","1461"],"D:\\Mazars\\src\\views\\ForgetPassword\\ForgetPassword.js",["1462","1463","1464","1465"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n});\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"p\", \"forgot\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\r\n          props.history.push(`/customer/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n       \r\n          Alerts.ErrorNormal(\"Invalid email.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"undefined\") {\r\n      \r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n\r\n         \r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n                {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Get OTP\r\n                      </button>\r\n                       <Link to=\"/\" style={{ \"margin\": \"10px\" }}>\r\n                       <button type=\"submit\" className=\"btn btn-secondary\">\r\n                         Cancel\r\n                       </button>\r\n                     </Link>\r\n                     </>\r\n                    }\r\n                \r\n               \r\n              </form>\r\n          \r\n          <Mandatory />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\AssignmentTab.js",["1466","1467","1468","1469","1470"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport InprogressAssignment from \"./InprogressAssignment\";\r\nimport CompletedAssignment from \"./CompletedAssignment\";\r\nimport CustomerDeclinedPayment from \"./CustomerDeclinedPayment\";\r\n\r\n\r\n\r\nfunction AssignmentTab(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allassignment, setAllAssignment] = useState(\"\");\r\n  const [inprogressAssignmentCount, setInprogressAssignmentCount] = useState(\"\");\r\n  const [completeAssignment, setCompleteAssignment] = useState(\"\");\r\n  const [declinedAssignment, setDeclinedAssignment] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllAssignment();\r\n    getInprogressAssignment();\r\n    getCompletedAssignment();\r\n    getCustomerDeclinedPayment();\r\n  }, []);\r\n\r\n\r\n  const getAllAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        setAllAssignment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getInprogressAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`)\r\n      .then((response) => {\r\n       \r\n        if (response.data.code === 1) {\r\n          setInprogressAssignmentCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n  const getCompletedAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setCompleteAssignment(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getCustomerDeclinedPayment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`)\r\n      .then((response) => {\r\n     \r\n        if (response.data.code === 1) {\r\n          setDeclinedAssignment(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignment ({allassignment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Assignments ({inprogressAssignmentCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Completed; Assignments ({completeAssignment})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Customer Declined; Payment ({declinedAssignment})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <CompletedAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <CustomerDeclinedPayment />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\ProposalView\\ProposalView.js",["1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport TermsConditions from \"./TermsConditions\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\n\r\nfunction ProposalView(props) {\r\n  const { handleSubmit, register } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [queryStatus, setQueryStatus] = useState(null);\r\n  const [custcheckError, setCheckerror] = useState(null);\r\n  const [valueCheckBox, setValueCheckBox] = useState(false);\r\n\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    proposal_date: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const { amount, proposal_date,\r\n    name, description,\r\n    amount_type, amount_fixed, amount_hourly,\r\n    payment_terms,\r\n    no_of_installment,\r\n    installment_amount,\r\n    due_date,\r\n  } = diaplayProposal\r\n\r\n\r\n  useEffect(() => {\r\n    getProposalDetails();\r\n  }, []);\r\n\r\n  const getProposalDetails = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/getQueryDetails?id=${id}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n        \r\n\r\n          if (res.data.result[0].query_status) {\r\n            setQueryStatus(res.data.result[0].query_status);\r\n          }\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              name: res.data.proposal_queries[0].tlname,\r\n              description: res.data.proposal_queries[0].description,\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n            });\r\n          }\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const readTerms = () => {\r\n \r\n    setPaymentModal(!addPaymentModal);\r\n  };\r\n\r\n\r\n  const updateCheckbox = ({ checked }) => {\r\n    setValueCheckBox(checked)\r\n    setPaymentModal(checked);\r\n    setCheckerror(\"\")\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n\r\n    if (valueCheckBox === false) {\r\n     \r\n      setCheckerror(\"Please , You have to select\")\r\n    }\r\n    else {\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n      formData.append(\"id\", id);\r\n      formData.append(\"status\", 5);\r\n      formData.append(\"terms_condition\", Number(value.p_terms_condition));\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/ProposalAccept`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var variable = \"Proposal accepted successfully.\"\r\n            Alerts.SuccessNormal(variable)\r\n            history.push({\r\n              pathname: `/customer/proposal`,\r\n              index: 0,\r\n            });\r\n          } if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n   \r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  //rejected\r\n  const rejected = (id) => {\r\n   \r\n    if (valueCheckBox === false) {\r\n   \r\n      setCheckerror(\"Please , You have to select\")\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Are you sure to reject proposal?\",\r\n        // text: \"Want to reject proposal ?\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, rejected it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          deleteCliente(id);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // delete data\r\n  const deleteCliente = (key) => {\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", key);\r\n    formData.append(\"status\", 6);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/ProposalAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Swal.fire(\"Rejected!\", \"Proposal rejected successfully.\", \"success\");\r\n          history.push({\r\n            pathname: `/customer/proposal`,\r\n            index: 0,\r\n          });\r\n        } else {\r\n          setLoading(false)\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\r\n            </Col>\r\n            <Col\r\n              md=\"4\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            ></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(proposal_date)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{amount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Scope of Work</th>\r\n                <td>{description}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Amount</th>\r\n                <td>\r\n                  <tr>\r\n                    <th>Amount Type</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\r\n                    <td>\r\n                      {\r\n                        amount_type == \"fixed\" ?\r\n                          amount\r\n                          :\r\n                          amount_type == \"hourly\" ?\r\n                            amount_hourly\r\n                            :\r\n                            amount_type == \"mixed\" ?\r\n                              <div>\r\n                                <p>Fixed : {amount}</p>\r\n                                <p>Hourly : {amount_hourly}</p>\r\n                              </div>\r\n                              :\r\n                              \"\"\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">Payment Terms</th>\r\n                {\r\n                  payment_terms == \"lumpsum\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Payment Type</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\r\n                        <td>\r\n                          {CommonServices.removeTime(due_date)}\r\n                        </td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    payment_terms == \"installment\" ?\r\n                      <td>\r\n                        <tr>\r\n                          <th>Payment Type</th>\r\n                          <th>No of Installments</th>\r\n                          <th>Installment Amount</th>\r\n                          <th>Due Dates</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>{payment_terms}</td>\r\n                          <td>{no_of_installment}</td>\r\n                          <td>{installAmount(installment_amount)}</td>\r\n                          <td>{installAmount(due_date)}</td>\r\n                        </tr>\r\n                      </td>\r\n                      :\r\n                      \"\"\r\n                }\r\n\r\n\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposal Status</th>\r\n                <td>\r\n                  {queryStatus == \"4\" && \"Inprogress\"}\r\n                  {queryStatus == \"6\" && \"Declined\"}\r\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n\r\n          </table>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    id=\"terms_condition\"\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"p_terms_condition\"\r\n                    ref={register}\r\n                    onChange={(e) => updateCheckbox(e.target)}\r\n                  />\r\n                  <label\r\n                    htmlFor=\"terms_condition\"\r\n                    className=\"form-check-label\"\r\n                    title=\"Read\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    Engagement Letter\r\n                  </label>\r\n                  <p className=\"declined\">{custcheckError}</p>\r\n                </div>\r\n                <br />\r\n\r\n                {\r\n                  loading ?\r\n                    <Loader />\r\n                    :\r\n                    <>\r\n                      <div className=\"form-check\">\r\n                        {\r\n                          valueCheckBox ?\r\n                            <div>\r\n                              <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Accept\r\n                              </button>\r\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => rejected(id)}>\r\n                                Reject\r\n                              </button>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                              <button type=\"submit\" className=\"btn btn-primary\" disabled>\r\n                                Accept\r\n                              </button>\r\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" disabled>\r\n                                Reject\r\n                              </button>\r\n                            </div>\r\n                        }\r\n                      </div>\r\n                    </>\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n\r\n\r\n        </CardBody>\r\n\r\n        <TermsConditions\r\n          readTerms={readTerms}\r\n          addPaymentModal={addPaymentModal}\r\n          id={id}\r\n        />\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProposalView;\r\n","D:\\Mazars\\src\\views\\AddFressAssignment\\AddFreshAssingment.js",["1486","1487","1488","1489","1490","1491","1492"],"D:\\Mazars\\src\\views\\VideoCall\\VideoCall.js",["1493","1494"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Index from \"../../components/InputRoom/index\";\r\n\r\nfunction VideoCall() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n        <Index />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default VideoCall;\r\n","D:\\Mazars\\src\\views\\NewPassword\\NewPassword.js",["1495","1496","1497","1498","1499","1500"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n  const getTime = () => {\r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n      }\r\n      setLoad(false)\r\n      timer(180);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n   \r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password reset successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          \r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime}\r\n                setLoad={setLoad} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/customer/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\Mazars\\src\\views\\MeetingComponent\\MeetingComponent.js",["1501","1502"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Meeting from \"../../components/meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    \r\n      <Meeting />\r\n   \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;\r\n","D:\\Mazars\\src\\views\\ChangePassword\\ChangePassword.js",["1503","1504","1505"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ChangePassword(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [show, setShow] = useState(false);\r\n  const [display, setDisplay] = useState(false);\r\n  const [time, setTime] = useState('')\r\n  const [load, setLoad] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n  const getTime = () => {\r\n\r\n\r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n      }\r\n      timer(180);\r\n    }\r\n  }\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    setEmail(value.p_email)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userId));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n\r\n    if (display) {\r\n      let formData = new FormData();\r\n      formData.append(\"email\", value.p_email);\r\n      formData.append(\"uid\", JSON.parse(userId));\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/regenrateotp`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setLoad(true)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Please enter correct details\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        ShowError.LoadingError(setLoading)\r\n        });\r\n      return false\r\n    }\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/passChange`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(\"/customer/dashboard\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        \r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n\r\n  //setotp\r\n  const setOtp = () => {\r\n    setDisplay(false)\r\n  }\r\n\r\n  //get OTP\r\n  const getOtp = () => {\r\n    setDisplay(true)\r\n  }\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter email id\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"p_password\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"UPassword should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {\r\n                show ?\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_otp,\r\n                        })}\r\n                        name=\"p_otp\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter your OTP\"\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      {\r\n                        disabled ? null\r\n                          :\r\n                          <small class=\"text-center\">\r\n                            Note: OTP is valid for {time} seconds.\r\n                          </small>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  : null\r\n              }\r\n\r\n              {\r\n                loading ?\r\n                  <div class=\"col-md-12\">\r\n                    <Spinner color=\"primary\" />\r\n                  </div>\r\n                  :\r\n                  <div class=\"col-md-6\">\r\n                    {\r\n                      show ?\r\n                        <div>\r\n                          {\r\n                            disabled ? null\r\n                              :\r\n                              <>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\r\n                                <Cancel />\r\n                              </>\r\n                          }\r\n                        </div>\r\n                        :\r\n                        <>\r\n                          <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\r\n                          <Cancel />\r\n                        </>\r\n                    }\r\n                  </div>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\r\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <Mandatory />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\Mazars\\src\\views\\Schedule\\schedule.js",["1506","1507","1508","1509","1510","1511","1512"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Demo from \"./demo\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst thankyour = () => {\r\n  Swal.fire({\r\n    \"title\" : \"Scuuess\",\r\n    html : `<h1>Thank you </h1>`,\r\n    icon : \"success\"\r\n  })\r\n}\r\nfunction Schedule() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n        <Row>\r\n            <Col md=\"7\">\r\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\r\n            </Col>\r\n            <Col md=\"5\"></Col>\r\n          </Row>\r\n      \r\n         \r\n        </CardHeader>\r\n    \r\n      <Demo />\r\n      \r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","D:\\Mazars\\src\\views\\ViewNotification\\ViewNotification.js",["1513","1514","1515","1516","1517"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\views\\SignUpForm\\SignUp.js",["1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { professionName, country, states } from './data';\r\nimport { cities } from './city';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport GetOTP from \"./GetOTP\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport EmailValidation from \"../../components/Common/EmailValidation\";\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n  const phone2 = useRef(null)\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, getValues } = useForm();\r\n\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const [load, setLoad] = useState(false);\r\n  const [store, setStore] = useState(0);\r\n  const [password, setPassword] = useState(false);\r\n  const [passError, setpassError] = useState()\r\n  const [repassword, setRepassword] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [changeNum, setChangeNum] = useState(false)\r\n  const [State, setState] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  const [countryCode, setCountryCode] = useState('')\r\n  const [showPlus, setShowPlus] = useState(false)\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [countryName, setCountryName] = useState(null)\r\n  const [stateName, setStateName] = useState(null)\r\n\r\n  const [countryId, setCountryId] = useState(null)\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [zipCode, setZipCode] = useState('')\r\n  const [zipError, setZipError] = useState(null)\r\n\r\n  const [wEmail, setWemail] = useState();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [valiOtp, setvaliOtp] = useState()\r\n  const [emailError, setEmailError] = useState(null)\r\n  const [phoneError, setPhoneError] = useState(null)\r\n  const [zipError1, setZipError1] = useState(null);\r\n  const [subm, setSub] = useState(false)\r\nconst [email2, setEmail2] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //Css\r\n  const CountryNumStyle = {\r\n    \"display\": \"flex\",\r\n    \"width\": \"76px\",\r\n    \"textAlign\": \"center\"\r\n  }\r\n  // cusSub\r\n  const cusSub = {\r\n    \"display\": \"flex\",\r\n    \"alignItems\": \"center\"\r\n  }\r\n  // Toggle Password\r\n  const togglePasssword = () => {\r\n    setPassword(!password)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setRepassword(!repassword)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n    \r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n        // setDisplay(false)\r\n      }\r\n      timer(180);\r\n    }\r\n  }\r\n\r\n  //get country\r\n  const getcountry = (key) => {\r\n    setCountryName(key)\r\n    setShowPlus(true)\r\n    setPhone(\"\")\r\n    setIndNumError(\"\")\r\n    setNumAvail(\"\")\r\n    // setInvalid(\"\")\r\n    if (key == 101) {\r\n      setCountryId(key)\r\n    }\r\n    else {\r\n      setCountryId(\"\")\r\n    }\r\n\r\n    var arrayState = []\r\n    states.filter((data) => {\r\n      if (data.country_id == key) {\r\n        arrayState.push(data)\r\n      }\r\n    });\r\n    setState(arrayState)\r\n\r\n    country.filter((data) => {\r\n      if (key == data.id) {\r\n        setCountryCode(data.phoneCode)\r\n        setCountryName(data.name)\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  //get city\r\n  const getCity = (key) => {\r\n    states.filter((p) => {\r\n      if (p.id == key) {\r\n        setStateName(p.name)\r\n      }\r\n    });\r\n\r\n    var arrayCity = []\r\n    cities.filter((data) => {\r\n      if (data.state_id === key) {\r\n        arrayCity.push(data)\r\n      }\r\n    });\r\n    setCity(arrayCity)\r\n  }\r\n\r\n\r\n\r\n\r\n  //phone onchange\r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n      setPhoneError(true)\r\n    }\r\n    else {\r\n      setPhoneError(false)\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  //phone validaation with api\r\n  const phoneValidation = () => {\r\n    setPhoneError(false)\r\n    \r\n    if (countryId && phone.length > 10) {\r\n   \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 value should be enter\")\r\n      setPhoneError(true)\r\n    }\r\n    else if (countryId && phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 value should be enter\")\r\n      setPhoneError(true)\r\n    }\r\n    else if (!countryId && phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setPhoneError(true)\r\n      setIndNumError(\"Maximum 15 value should be enter\")\r\n    }\r\n\r\n    else {\r\n      setPhoneError(false)\r\n      setIndNumError(\"\")\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"phone\", phone);\r\n      formData.append(\"type\", 2);\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/validateregistration`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            // setValiphone(response.data.result)\r\n            \r\n            setPhoneError(false)\r\n            setNumExist('')\r\n            setNumAvail(response.data.result);\r\n\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setPhoneError(true)\r\n            \r\n            setNumAvail('')\r\n            setNumExist(response.data.result)\r\n\r\n         \r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //zip oncahnge\r\n  const zipValue = (e) => {\r\n   \r\n    if (isNaN(e.target.value)) {\r\n\r\n      setZipError(\"Please enter number only\")\r\n      setZipError1(true)\r\n      e.target.value = \"\"\r\n    }\r\n    else if (e.target.value.length == 0) {\r\n      setZipError1(true)\r\n    }\r\n    else {\r\n      setZipCode(e.target.value)\r\n      setZipError(\"\")\r\n      setZipError1(false)\r\n    }\r\n  }\r\n\r\n\r\n  // onblur\r\n  const zipVali2 = (e) => {\r\n\r\n    if (countryId && zipCode && zipCode.length < 6) {\r\n      setZipError1(true)\r\n      setZipError(\"Minumum 6 digit should be there\")\r\n\r\n    }\r\n\r\n    else if (countryId && zipCode && zipCode.length > 6) {\r\n      setZipError1(true)\r\n      setZipError(\"Maximum 6 digit allowed\")\r\n    \r\n    }\r\n    else {\r\n      setZipError1(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const otpVali = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      setvaliOtp(\"Please enter number only\")\r\n      e.target.value = \"\"\r\n    }\r\n    else {\r\n      setvaliOtp(\"\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"email\", email2);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"occupation\", value.p_profession);\r\n    formData.append(\"city\", value.p_city)\r\n    formData.append(\"pincode\", value.p_zipCode);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_otp);\r\n    formData.append(\"country\", countryName);\r\n    formData.append(\"state\", stateName);\r\n    formData.append(\"stdcode\", countryCode);\r\n    formData.append(\"gstin_no\", value.p_gstIn);\r\n\r\n    if (display === true && subm === false) {\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n      formData.append(\"email\", email2);\r\n      formData.append(\"phone\", phone);\r\n      formData.append(\"p\", \"registration\");\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/forgototp`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setLoad(true)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Error\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n\r\n    }\r\n    else if (emailError === false && phoneError === false && zipError1 === false && subm === true) {\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/signup`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var variable = \"Signup successfully.\"\r\n            Alerts.SuccessNormal(variable)\r\n            localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\r\n            localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\r\n            props.history.push(\"/customer/select-category\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          \r\n            setLoad(false);\r\n            Alerts.ErrorNormal(\"Incorrect OTP , please try again.\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  //setotp\r\n  const setOtp = () => {\r\n\r\n    setSub(true)\r\n  }\r\n\r\n  //get OTP\r\n  const getOtp = () => {\r\n    if (emailError === true || phoneError === true || zipError1 === true) {\r\n      setDisplay(false)\r\n    }\r\n    else {\r\n      setDisplay(true)\r\n    }\r\n  }\r\n\r\n// getEmailValue \r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Customer Register</h2>\r\n          </div>\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_name\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Name\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                     <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail2} />\r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\r\n                      <br />\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_profession,\r\n                        })}\r\n                        name=\"p_profession\"\r\n                        aria-label=\"Default select example\"\r\n                        ref={register({ required: true })}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {professionName.map((p, index) => (\r\n                          <option key={index} value={p.city}>\r\n                            {p.city}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        id=\"state\"\r\n                        name=\"p_country\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_country,\r\n                        })}\r\n                        ref={register({ required: true })}\r\n                        onChange={(e) => getcountry(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {country.map((p) => (\r\n                          <option key={p.id} value={p.id}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">State<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        id=\"state\"\r\n                        name=\"p_state\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_state,\r\n                        })}\r\n                        ref={register({ required: true })}\r\n                        onChange={(e) => getCity(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {State.map((p) => (\r\n                          <option key={p.id} value={p.id}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">City<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_city,\r\n                        })}\r\n                        name=\"p_city\"\r\n                        ref={register({ required: true })}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {city.map((p, index) => (\r\n                          <option key={index} value={p.city}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\r\n                      <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\r\n                        <select\r\n                          name=\"p_code\"\r\n                          disabled={true}\r\n                          ref={register({ required: true })}\r\n                        >\r\n                          <option>\r\n                            {showPlus ? \"+\" + countryCode : null}\r\n                          </option>\r\n                        </select>\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_phone || phoneError === true || indNumError,\r\n                          })}\r\n                          name=\"p_phone\"\r\n                          value={phone}\r\n\r\n                          ref={register({ required: true })}\r\n                          placeholder=\"Mobile number\"\r\n                          onChange={(e) => phoneHandler(e)}\r\n                          onBlur={phoneValidation}\r\n                        />\r\n\r\n                      </div>\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_zipCode || zipError1 === true || zipError,\r\n                        })}\r\n                        name=\"p_zipCode\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Zipcode\"\r\n                        onChange={(e) => zipValue(e)}\r\n                        onBlur={zipVali2}\r\n                      />\r\n                    </div>\r\n                    <p className=\"declined\">{zipError}</p>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">GST IN</label>\r\n                      <input\r\n                        type=\"text\"\r\n                       className=\"form-control\"\r\n                        name=\"p_gstIn\"\r\n                        ref={register}\r\n                        placeholder=\"Enter GST Code\"\r\n                       \r\n                      />\r\n                    </div>\r\n                    <p className=\"declined\">{zipError}</p>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={password ? \"text\" : \"password\"}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_password || passError,\r\n                        })}\r\n                        name=\"p_password\"\r\n                        placeholder=\"Enter Your Password\"\r\n                        ref={register({\r\n                          required: true,\r\n                          pattern: {\r\n                            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                            message:\r\n                              \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                          },\r\n                        })}\r\n\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      <i\r\n                        className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.p_password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={repassword ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_confirm_password,\r\n                        })}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"p_confirm_password\"\r\n                        ref={register({\r\n                          required: true,\r\n                          validate: (value) =>\r\n                            value === getValues(\"p_password\") ||\r\n                            \"password doesn 't match\",\r\n                        })}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      <i\r\n                        className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword2}\r\n                      />\r\n                      {errors.p_confirm_password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_confirm_password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    show ?\r\n                      <div class=\"col-md-6\">\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_otp,\r\n                            })}\r\n                            name=\"p_otp\"\r\n                            ref={register({ required: true })}\r\n                            onChange={otpVali}\r\n                            placeholder=\"Enter your OTP\"\r\n                            autocomplete=\"off\"\r\n                          />\r\n                          <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\r\n                          {\r\n                            disabled ? null\r\n                              :\r\n                              <small class=\"text-center\">\r\n                                Note: OTP is valid for {time} seconds.\r\n                              </small>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      : null\r\n                  }\r\n                  {\r\n                    loading ?\r\n                      <div class=\"col-md-12\" style={cusSub}>\r\n                        <Spinner color=\"primary\" />\r\n                      </div>\r\n                      :\r\n                      <div class=\"col-md-6\" style={cusSub}>\r\n                        {\r\n                          show ?\r\n                            <div>\r\n                              {\r\n                                disabled ? null\r\n                                  :\r\n                                  <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\r\n                              }\r\n                            </div>\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\r\n                        }\r\n                      </div>\r\n                  }\r\n                </div>\r\n              </form>\r\n\r\n              {\r\n                disabled ?\r\n                  <ResendOtp setDisabled={setDisabled} disabled={disabled} getTime={getTime}\r\n                    email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\r\n                    wEmail={wEmail} zipError={zipError} passError={passError}\r\n                    setLoading={setLoading} loading={loading}\r\n                    display={display}\r\n                    emailError={emailError}\r\n                    phoneError={phoneError} zipError1={zipError1} />\r\n                  :\r\n                  null\r\n              }\r\n              <Mandatory />\r\n            </div>\r\n          </>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Mazars\\src\\views\\Message\\Message.js",["1539","1540","1541","1542","1543","1544","1545"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Message(props) {\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    let history = useHistory();\r\n    const paymentHandler = (key) => {\r\n      \r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}\r\n                &type_list=all`\r\n            )\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                   \r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n          \r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        \r\n {\r\n    text: \"Date\",\r\n    dataField: \"setdate\",\r\n    sort: true,\r\n    headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n    },\r\n\r\n},\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",      \r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n\r\n                                    :\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\"\r\n                                        }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n               \r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    // data={data}\r\n                    // getProposalData={getAssignmentData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\views\\Feedback\\Feedback.js",["1546","1547"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_feedback: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Feedback() {\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [loading, setLoading] = useState(false);\r\n \r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"feedback\", value.p_feedback);\r\n    formData.append(\"user_id\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostUserFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          reset();\r\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\r\n          history.push({\r\n            pathname: `/customer/queries`,\r\n            index: 0,\r\n          });\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <ArrowBackIcon />\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Feedback</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n         \r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={id}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Feedback</label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_feedback,\r\n                          })}\r\n                          placeholder=\"Feedback text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_feedback\"\r\n                        ></textarea>\r\n                        {errors.p_feedback && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_feedback.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                       \r\n                  {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                         Submit\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","D:\\Mazars\\src\\views\\Chatting\\Chatting.js",["1548","1549","1550","1551","1552"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const [loading, setLoading] = useState(false);\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n  useEffect(() => {\r\n    \r\n    const dataItem = props.location.obj\r\n \r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataCust\");\r\n    var data2 = JSON.parse(myData)\r\n   \r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          reset();\r\n          var variable = \"Message sent successfully. \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n         \r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.message_type,\r\n                            })}\r\n                            name=\"message_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n\r\n                        {errors.message_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.message_type.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      \r\n                  {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                         Send\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n         \r\n        </CardBody>\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\views\\FeedbackData\\FeedbackData.js",["1553","1554","1555","1556","1557"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction FeedbackData(props) {\r\n\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n          \r\n        },\r\n\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Feedback\",\r\n            dataField: \"feedback\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"150px\" };\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default FeedbackData;\r\n       ","D:\\Mazars\\src\\views\\ProposalTab\\ProposalTab.js",["1558","1559","1560","1561","1562"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction Proposal(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllProposal();\r\n    getInprogressProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n\r\n  const getAllProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n\r\n        setAllProposalCount(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getInprogressProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n      .then((response) => {\r\n      \r\n        if (response.data.code === 1) {\r\n          setInprogressProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n  const getAcceptedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAcceptedProposalCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n      .then((response) => {\r\n        \r\n        if (response.data.code === 1) {\r\n          setDeclinedProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({inprogressProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedProposal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\EditQuery\\EditQuery.js",["1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573"],"D:\\Mazars\\src\\views\\ThankYou\\Thankyou.js",[],"D:\\Mazars\\src\\views\\PaymentGateway.js\\PaymentGateway.js",["1574","1575","1576"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../config/config\";\r\nfunction PaymentGateway(){\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    const info = {\r\n      \"state\" : \"Haryana\",\r\n      \"email\" : \"singhnishantrana@gmail.com\", \r\n      \"gender\" : \"\", \r\n      \"dob\" : \"01-11-1990\",\r\n      \"city\" : \"Gurugoan\",\r\n      \"pincode\" : \"122017\", \r\n      \"status\" : \"1\",\r\n      \"first_name\" : \"Nishant Rana\",\r\n      \"last_name\" : \"\",\r\n      \"address_line_1\" : \"A-22, A Block\",\r\n      \"address_line_2\" : \"Sector 109\",\r\n      \"plan_name\" : \"TPIN_100Mbps_Combo\"\r\n    }\r\n    const billdes = {\r\n      // \"HSN_SAC_code\": \"11040\",\r\n        \"Desc\": \"Bill for Mazars\",\r\n        \"Qty\": \"1\",\r\n        \"UoM\": \"NA\",\r\n        \"Rate\": \"11620.0\",\r\n        \"Total\": \"1.0\",\r\n        \"Discount\": \"0\",\r\n        \"Delivery_Charges\": \"0\",\r\n        \"Net_Tax_Val\": \"0\",\r\n        \"CGST_Rate\": \"0\",\r\n        \"CGST_Amount\": \"0\",\r\n        \"SGST_Rate\": \"0\",\r\n        \"SGST_Amount\": \"0\",\r\n        \"IGST_Rate\": \"0\",\r\n        \"IGST_Amount\": \"0\",\r\n        \"Total_Amount\": \"1.0\"\r\n    }\r\n    const onSubmit = (value) => {\r\n\r\n \r\n    let formData = new FormData()\r\n    formData.append(\"token\", \"09f3b52d937b320e929ad45153ef745d\");\r\n    formData.append(\"timestamp\", \"09-09-2021 13:52:02\");\r\n    formData.append(\"mobile\", \"9818685050\");\r\n    formData.append(\"type\", \"F\");\r\n    formData.append(\"userInfo\" , JSON.stringify(info));\r\n    formData.append(\"billDescription\", JSON.stringify(billdes));\r\n    formData.append(\"ekycStatus\", 0);\r\n    formData.append(\"public_key\", \"791E14FF-6243-4A73-A6E1\");\r\n    formData.append(\"Bill_no\", \"11189974221\");\r\n    formData.append(\"Balance\", \"100\");\r\n    formData.append(\"Bill_due_date\",  \"24-09-2021\");\r\n    formData.append(\"user_id\", \"9818685050\");\r\n    formData.append(\"merchant_id\", \"T10012\");\r\n    formData.append(\"agent_id\", \"8595923172\");\r\n    formData.append(\"caf_number\", \"\");\r\n\r\n  \r\n    var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  \"token\": \"09f3b52d937b320e929ad45153ef745d\",\r\n  \"timestamp\": \"09-09-2021 13:52:02\",\r\n  \"mobile\": \"7703954008\",\r\n  \"type\": \"F\",\r\n  \"userInfo\": {\r\n    \"state\": \"Haryana\",\r\n    \"email\": \"na@gmail.com\",\r\n    \"gender\": \"\",\r\n    \"dob\": \"\",\r\n    \"city\": \"Gurgaon\",\r\n    \"pincode\": \"122002\",\r\n    \"status\": \"1\",\r\n    \"first_name\": \"Test\",\r\n    \"last_name\": \"Test\",\r\n    \"address_line_1\": \"Test, Tower - A, Ground Floor\",\r\n    \"address_line_2\": \"DLF Phase I\",\r\n    \"plan_name\": \"20 Mbps free\"\r\n  },\r\n  \"billDescription\": {\r\n    \"HSN_SAC_code\": \"15684\",\r\n    \"Desc\": \"20 Mbps free\",\r\n    \"Qty\": \"1\",\r\n    \"UoM\": \"NA\",\r\n    \"Rate\": \"10.0\",\r\n    \"Total\": \"10.0\",\r\n    \"Discount\": \"0\",\r\n    \"Delivery_Charges\": \"0\",\r\n    \"Net_Tax_Val\": \"0\",\r\n    \"CGST_Rate\": \"0\",\r\n    \"CGST_Amount\": \"0\",\r\n    \"SGST_Rate\": \"0\",\r\n    \"SGST_Amount\": \"0\",\r\n    \"IGST_Rate\": \"0\",\r\n    \"IGST_Amount\": \"0\",\r\n    \"Total_Amount\": \"10.0\"\r\n  },\r\n  \"ekycStatus\": \"1\",\r\n  \"public_key\": \"791E14FF-6243-4A73-A6E1\",\r\n  \"Bill_no\": \"15293997\",\r\n  \"Balance\": \"10.0\",\r\n  \"Bill_due_date\": \"20-09-2021\",\r\n  \"user_id\": \"7703954008\",\r\n  \"merchant_id\": \"T10001\",\r\n  \"agent_id\": \"8689003344\",\r\n  \"caf_number\": \"TP-EC-44882\"\r\n});\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"https://pay.mobilpay.in/index.php/getUserBillData\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n    }\r\n      return(\r\n        <div className=\"container\">\r\n\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Customer Register</h2>\r\n          </div>\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Mobile<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_mobile\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Mobile Number\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_mobile,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_type\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_type,\r\n                        })}\r\n                        \r\n                        placeholder=\"Enter type\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n                    </div>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">User Information<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_userInfo\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter User Information\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_userInfo,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Description<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_billDescription\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_billDescription,\r\n                        })}\r\n                        \r\n                        placeholder=\"Enter Your Description\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n                    </div>\r\n                  </div>\r\n               </div>\r\n\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Ekyc Status<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_ekycStatus ,\r\n                        })}\r\n                        name=\"p_zipCode\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Public Key<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_publicKey ,\r\n                        })}\r\n                        name=\"p_publicKey\"\r\n                        placeholder=\"Enter Public Key\"\r\n                        ref={register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Number<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.bill_no,\r\n                        })}\r\n                        \r\n                        placeholder=\"Bill Number\"\r\n                        name=\"bill_no\"\r\n                        ref={register}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                      <div class=\"col-md-6\">\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Balance<span className=\"declined\">*</span></label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.balance,\r\n                            })}\r\n                            name=\"balance\"\r\n                            ref={register({ required: true })}\r\n                           \r\n                            placeholder=\"Enter Amount\"\r\n                            autocomplete=\"off\"\r\n                          />\r\n                         \r\n                        </div>\r\n                      </div>\r\n              </div>\r\n              <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Due Date<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.bill_dueDate ,\r\n                        })}\r\n                        name=\"bill_dueDate\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Due Date\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.user_id ,\r\n                        })}\r\n                        name=\"user_id\"\r\n                        placeholder=\"Enter your user id\"\r\n                        ref={register}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Agent Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.agent_id ,\r\n                        })}\r\n                        name=\"agent_id\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Merchant Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.merchant_id ,\r\n                        })}\r\n                        name=\"merchant_id\"\r\n                        placeholder=\"Enter Public Key\"\r\n                        ref={register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">CAF Number<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.caf_number ,\r\n                        })}\r\n                        name=\"caf_number\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.email ,\r\n                        })}\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        ref = {register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">DOB<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.dob ,\r\n                        })}\r\n                        name=\"dob\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Date of Birth\"/>\r\n                    </div> \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary justify\">Submit</button>\r\n                  </div>\r\n             </div>\r\n              </form>\r\n    \r\n              </div>\r\n          </>\r\n    \r\n        </div>\r\n    \r\n      </div>\r\n      )\r\n   \r\n}\r\nexport default PaymentGateway;","D:\\Mazars\\src\\views\\QueriesTab\\QueriesTab.js",["1577","1578","1579","1580","1581","1582"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllQueriesData from \"./AllQueriesData\";\r\nimport InprogressAllocation from \"./InprogressAllocation\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport DeclinedQueries from \"./DeclinedQueries\";\r\n\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\r\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAllQueriesCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Completed; Queries ({inprogressProposal})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentStatus.js",["1583","1584","1585","1586"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\nimport AllPayment from \"./AllPayment\";\r\n\r\n\r\n\r\nfunction PaymentStatus(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n      \r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n      \r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n      \r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js",["1587","1588","1589"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\r\n\r\nfunction SelectCategoryPage() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SelectCategoryPage;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PayDetails.js",["1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { baseUrl2, baseUrl3 } from \"../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PayModal from \"./PayModal\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst PayDetails = () => {\r\n    let history = useHistory();\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const { id } = useParams();\r\n    const [paymentDetail, setPaymentDetail] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState()\r\n    const [showTable, setShowTable] = useState(null);\r\n    const paydetails2 = () => {\r\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\r\n.then((res) => {\r\n    if(res.data.code === 1){\r\n       \r\n        setPaymentDetail(res.data.payment_detail)\r\n        //console.log(res.data.payment_detail.length)\r\n       // setShowTable(res.data.payment_detail[0].invoice_generated)\r\n       if(res.data.payment_detail.length > 0){\r\n           setShowTable(true)\r\n       }\r\n       else {\r\n           setShowTable(false)\r\n       }\r\n    }\r\n   \r\n})\r\n    }\r\n    useEffect(() => {\r\n        paydetails2()\r\n    }, [])\r\n const openModal = (key) => {\r\n   if(key){\r\n       setModalData(key)\r\n   \r\n   }\r\nsetModal(!modal)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Q.No\",\r\n            \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"installment_no\",\r\n            text: \"Installment No\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"80px\" };\r\n            },\r\n           \r\n           \r\n        },\r\n        {\r\n            dataField: \"billno\",\r\n            text: \"Invoice No\",\r\n           \r\n            \r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.invoice_generated == \"0\" ? \"\" : \r\n                    <p>{row.billno}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"due_date\",\r\n            text: \"Due Date\",\r\n           sort : true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n       \r\n        {\r\n            dataField: \"invoice_amount\",\r\n            text: \"Invoice Amount\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField : \"tds_amount\",\r\n            text : \"Tds Deducted\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.tds_amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField : \"amount\",\r\n            text : \"Amount Paid\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter: function (cell,row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        \r\n        {\r\n            dataField: \"invoice\",\r\n            text: \"Invoice\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                return(\r\n                   <>\r\n                   {row.invoice_generated == \"1\" ? \r\n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\r\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\r\n                   </>\r\n                )\r\n            },\r\n           \r\n        },\r\n        \r\n       \r\n       \r\n        {\r\n            dataField: \"\",\r\n            text: \"Pay\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n           \r\n           formatter: function dateFormat(cell, row){\r\n           \r\n               return(\r\n                <>\r\n                {row.invoice_generated == \"1\" ? \r\n              <>\r\n              {row.is_paid == \"0\" ? \r\n                <i\r\n                class=\"fa fa-mail-forward\"\r\n                style={{\r\n                    fontSize: \"14px\",\r\n                    cursor: \"pointer\",\r\n                    color: \"blue\"\r\n                }}\r\n                onClick={() => openModal(row)}\r\n            ></i> :   <>\r\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url}>Payment receipt</a> \r\n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\r\n            </>}\r\n              </>\r\n               : \"\"}\r\n                </>\r\n                  \r\n                   \r\n               )\r\n           }\r\n        },\r\n           \r\n      ];\r\n    \r\n      const Container = styled.div `\r\n      dispaly : flex;\r\n      width : 100%;\r\n      height : 100%;\r\n      justify-content : center;\r\n      align-items : center;\r\n      color: red`\r\nreturn(\r\n   <>\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n    {paymentDetail === undefined ? \"\" : \r\n  <Card>\r\n      <CardHeader>\r\n         <Row>\r\n         <Col md=\"8\">\r\n              <h4>Payment Details</h4>\r\n              </Col>\r\n      <Col md=\"4\">\r\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n         </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n   {showTable == true ? \r\n  \r\n  <BootstrapTable\r\n  bootstrap4\r\n  keyField=\"id\"\r\n  data={paymentDetail}\r\n  columns={columns}\r\n  classes=\"table-responsive\"\r\n/>  : \r\n<Container>\r\n    <p>Invoice not generated</p>\r\n    </Container>}\r\n<PayModal \r\nshowModal = {modal}\r\nmodalToggle = {openModal}\r\nmodalData = {modalData}/>\r\n</CardBody>\r\n</Card>}\r\n</Layout>                  \r\n   </>\r\n)\r\n}\r\nexport default PayDetails;","D:\\Mazars\\src\\pages\\Admin\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\Admin\\Dashboard\\Dashboard.js",["1610"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index1.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/totalComplete`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount`)\r\n        .then((response) => {\r\n         \r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount`)\r\n        .then((response) => {\r\n        \r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table mb-1\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table mb-1\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table mb-1\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table mb-1\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\"> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table mb-1\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table mb-1\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table mb-1\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table mb-1\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table mb-1\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table mb-1\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table mb-1\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table mb-1\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table mb-1\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{unpaid + paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table mb-1\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table mb-1\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js",["1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n\r\n});\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [emailPost, setEmailPost] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [valiEmailPost, setValiemailPost] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [invalidPost, setInvalidPost] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [wEmailPost, setWemailPost] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [display, setDisplay] = useState(false);\r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  const [dd, setDd] = useState({\r\n    direct: [],\r\n    indirect: [],\r\n  });\r\n\r\n  var kk = []\r\n  var vv = []\r\n\r\n\r\n\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n          \r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  // OnSubmit Function\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n   \r\n    var categeryList = []\r\n    var categeryName = []\r\n    var categeryName = []\r\n    var kk = []\r\n    var parentCategoryName = []\r\n  \r\n    subData.map((i) => {\r\n   \r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n    categoryData.map((i) => {\r\n      kk.push(i.value)\r\n      parentCategoryName.push(i.label)\r\n    })\r\n   \r\n    if (custCate.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n    }\r\n    else if (subData.length < 1) {\r\n\r\n      setError2(\"Please select at least one value\")\r\n    }\r\n    else if (invalid || wEmail || indNumError || posError.exits) {\r\n      setDisplay(false)\r\n    }\r\n\r\n    else {\r\n      setDisplay(true)\r\n      setLoading(true)\r\n    \r\n      let formData = new FormData();\r\n\r\n      formData.append(\"personal_email\", value.p_email);\r\n      formData.append(\"name\", value.p_name);\r\n      formData.append(\"phone\", value.p_phone);\r\n      formData.append(\"type\", \"tl\");\r\n      formData.append(\"cat_id\", categeryList)\r\n      formData.append(\"post_name\", value.post_name)\r\n      formData.append(\"email\", email)\r\n      formData.append(\"pcat_id\", kk)\r\n      formData.append(\"allpcat_id\", parentCategoryName)\r\n      formData.append(\"allcat_id\", JSON.stringify(dd))\r\n\r\n\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/AddTeamLead`,\r\n        data: formData,\r\n      })\r\n\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Swal.fire({\r\n              \"title\": \"Success\",\r\n              \"html\": \"Team Leader created successfully.\",\r\n              \"icon\": \"success\"\r\n            })\r\n\r\n            history.goBack();\r\n          }\r\n          if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n\r\n  };\r\n  var allData1 = {}\r\n  var dir = []\r\n  var indir = []\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n  \r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n  \r\n    e.map((i) => {\r\n\r\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\r\n    })\r\n    // allData1 = e.map(v => ({\r\n    //   \"direct Tax\" : dir,\r\n    //   \"indirect Tax\" : indir\r\n    // }))\r\n    setDd({\r\n      direct: dir,\r\n      indirect: indir\r\n    })\r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n\r\n    setCategoryData(v)\r\n    setNn((oldData) => {\r\n      return [...oldData, mcategory]\r\n    })\r\n    setError(\"\")\r\n    setCustcate(v)\r\n    v.map((val) => {\r\n      vv.push(val.value)\r\n      setmcategory(val.value);\r\n      setmcatname((oldData) => {\r\n        return [...oldData, val.label]\r\n      })\r\n      setStore(val.value)\r\n    })\r\n\r\n\r\n    if (vv.length > 0) {\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n       \r\n      }\r\n      else if (vv.includes(\"1\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n\r\n  }\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n\r\n    }\r\n  }\r\n\r\n  //eamil onchange\r\n  const emailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  \r\n    if (e.target.value.length < 1) {\r\n      setWemail(\"\")\r\n    }\r\n  };\r\n\r\n\r\n  //email validaation with api\r\n  const emailValidation = (key) => {\r\n\r\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (email.match(validRegex)) {\r\n      setWemail(\"\");\r\n      let formData = new FormData();\r\n      formData.append(\"email\", email);\r\n      formData.append(\"type\", 1);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/validateregistration`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setValiemail(response.data.result)\r\n            setInvalid('')\r\n          } else if (response.data.code === 0) {\r\n            setInvalid(response.data.result)\r\n            setValiemail('')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n    else {\r\n      setWemail(\"invalid email\")\r\n    }\r\n\r\n  }\r\n \r\n  const checktlPost = (e) => {\r\n  setPostName(e.target.value)\r\n  let a = e.target.value;\r\n  let formData = new FormData();\r\n  formData.append(\"tlpost\", a)\r\n\r\n  axios({\r\n    method: \"POST\",\r\n    url : `${baseUrl}/tl/validateTLPost`,\r\n    data: formData,\r\n  })\r\n  .then(function (res) {\r\n    if(res.data.code === 1){\r\n      setposError({\r\n        available : \"Post aviable\"\r\n      })\r\n    }\r\n    else{\r\n      setposError({\r\n        exits : \"Post already exits\"\r\n      })\r\n    }\r\n  })\r\n  }\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Add New Team Leader</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                    <label>Teamleader Post Name <span className=\"declined\">*</span></label>\r\n                      \r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name || posError.exits,\r\n                        })}\r\n                        onBlur={(e) => checktlPost(e)}\r\n                        name=\"post_name\"\r\n                        ref={register}\r\n                      />\r\n                    {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                    <label>Teamleader Post Email <span className=\"declined\">*</span></label>\r\n                    \r\n                   \r\n                    <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail} \r\n                        name=\"teamleader\"/>\r\n                        \r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      } \r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone Number <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone ,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                        onChange={(e) => phoneHandler(e)}\r\n                         onBlur={phoneValidation}\r\n                      />\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <label>Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        // onChange={(e) => emailHandler(e)}\r\n                        // onBlur={emailValidation}\r\n                      />\r\n                      {/* {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      } */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        onChange={category}>\r\n                      </Select>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Sub Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        onChange={subCategory}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button> }\r\n              </form>\r\n            </div>\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\">\r\n\r\n            </div>\r\n\r\n            <Mandatory />\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js",["1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  // p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n\r\n});\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [display, setDisplay] = useState(false);\r\n  const [teamleader, setTeamLeader] = useState([]);\r\n  const [tl, setTl] = useState([])\r\n  const [post1, setPost1] = useState([])\r\n  const [post_na, setPost_na] = useState()\r\n  const [tpEmail, setTpEmail] = useState('')\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [email2, setEmail2] = useState([]);\r\n  \r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  var kk = []\r\n  var vv = []\r\n  var post_name;\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n  const teamleader1 = teamleader.map(v => (\r\n  {\r\n      \"value\": v.id,\r\n      \"label\": v.name\r\n    }))\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setTeamLeader(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  // OnSubmit Function\r\n  const onSubmit = (value) => {\r\n\r\n    var categeryList = []\r\n    var categeryName = []\r\n    var categeryName = []\r\n    var kk = []\r\n\r\n    var parentCategoryName = []\r\n    subData.map((i) => {\r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n   \r\n    if (custCate.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n    }\r\n    else if (subData.length < 1) {\r\n\r\n      setError2(\"Please select at least one value\")\r\n    }\r\n    else if (invalid || wEmail || indNumError) {\r\n      setDisplay(false)\r\n    }\r\n\r\n    else {\r\n\r\n      setLoading(true)\r\n    \r\n      let formData = new FormData();\r\n      formData.append(\"personal_email\", value.personal_email)\r\n      formData.append(\"name\", value.p_name);\r\n      formData.append(\"phone\", value.p_phone);\r\n      formData.append(\"tp_id\", tl);\r\n      formData.append(\"email\", email2);\r\n      formData.append(\"post_name\", value.post_name)\r\n      formData.append(\"cat_id\", categeryList);\r\n      formData.append(\"pcat_id\", categoryData.value);\r\n      formData.append(\"allpcat_id\", categoryData.label)\r\n      formData.append(\"allcat_id\", categeryName)\r\n      formData.append(\"type\", \"tp\");\r\n      formData.append(\"tlpost\", post_na)\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tp/AddTaxProfessional`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n    \r\n           \r\n\r\n            Swal.fire({\r\n              \"title\": \"success\",\r\n              \"html\": \"Tax Professional Created Successfully\",\r\n              \"icon\": \"success\"\r\n            })\r\n \r\n            history.goBack();\r\n            \r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    };\r\n  }\r\n\r\n\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n\r\n    setCategoryData(v)\r\n    setNn((oldData) => {\r\n      return [...oldData, mcategory]\r\n    })\r\n    setError(\"\")\r\n    setCustcate(v)\r\n    setStore(v.value)\r\n    vv.push(v.value);\r\n    setmcategory(v.value)\r\n    setmcatname((oldData) => {\r\n      return [...oldData, v.label]\r\n    })\r\n\r\n\r\n    if (vv.length > 0) {\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n\r\n      }\r\n      else if (vv.includes(\"1\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n\r\n  }\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n    \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n\r\n    }\r\n  }\r\n\r\n \r\n  // Tl Function \r\n  const tlFun = (e) => {\r\n    var a;\r\n \r\n    teamleader.filter((p) => {\r\n\r\n      if (p.id == e) {\r\n      \r\n        setTpEmail(p.email)\r\n        setTl(p.id)\r\n        setPost_na(p.post_name)\r\n        a = p.post_name\r\n       \r\n      }\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  const checktlPost = (e) => {\r\n    setPostName(e.target.value)\r\n    let a = e.target.value;\r\n    let formData = new FormData();\r\n    formData.append(\"tlpost\", a)\r\n  \r\n    axios({\r\n      method: \"POST\",\r\n      url : `${baseUrl}/tl/validateTLPost`,\r\n      data: formData,\r\n    })\r\n    .then(function (res) {\r\n      if(res.data.code === 1){\r\n        setposError({\r\n          available : \"Post aviable\"\r\n        })\r\n      }\r\n      else{\r\n        setposError({\r\n          exits : \"Post already exits\"\r\n        })\r\n      }\r\n    })\r\n    }\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Add New Tax Professionals</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Teamleader post name <span className=\"declined\">*</span></label>\r\n\r\n                      <select\r\n                        name=\"p_teamleader\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_teamleader,\r\n                        })}\r\n                        onChange={(e) => tlFun(e.target.value)}\r\n                        ref={register}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {teamleader.map((p) =>\r\n                        (\r\n\r\n                          <option key={p.Id} value={p.id}>\r\n                            {p.post_name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.p_teamleader && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_teamleader.message}\r\n                        </div>\r\n                      )}\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"post_email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_email,\r\n                        })}\r\n                        disabled\r\n                        defaultValue={tpEmail}\r\n                       \r\n                        ref={register}\r\n\r\n                      />\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>TP post name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"post_name\"\r\n                        onBlur={(e) => checktlPost(e)}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_name,\r\n                        })}\r\n                        ref={register}\r\n                      />\r\n {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n\r\n\r\n                      <label> TP post email <span className=\"declined\">*</span></label>\r\n                      \r\n                       <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail2}\r\n                        name = \"taxprofessional\" />\r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n\r\n\r\n                      <label> Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"personal_email\"\r\n                        ref={register}\r\n\r\n\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_email,\r\n                        })}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone Number <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                        onChange={(e) => phoneHandler(e)}\r\n                        onBlur={phoneValidation}\r\n                      />\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Category <span className=\"declined\">*</span></label>\r\n                      <Select options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n                        onChange={category}>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Sub Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        onChange={subCategory}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n\r\n                      </Select>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button> }\r\n              </form>\r\n            </div>\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\">\r\n            </div>\r\n\r\n            <Mandatory />\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\nexport default AddNew;","D:\\Mazars\\src\\pages\\Admin\\Login\\Login.js",["1660","1661"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  let history = useHistory()\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"userid\", value.p_email);\r\n      formData.append(\"password\", value.password);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/login`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          setShow(true)\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\r\n            \"icon\" : \"success\"\r\n          })\r\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data[\"user id\"])\r\n          logout()\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 36000000)\r\n  }\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div class=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid}\r\n              loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div class=\"form\">\r\n              <div class=\"heading\">\r\n                <h2>ADMIN LOGIN</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/admin/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nexport default Login;","D:\\Mazars\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js",["1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"\"),\r\n  p_expdeldate: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryAssingment(props) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\r\n  const [teamID, setTeamID] = useState(null);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [query, setQuery] = useState(true);\r\n\r\n  const [expectedDate, setExpectedDate] = useState(\"\");\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId } = queryData;\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    getTaxLeader();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setTaxLeaderDisplay(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n        });\r\n        // expectedDeliveryDate(res.data.result[0].Timelines);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setTeamID(e.target.value);\r\n    var value = taxLeaderDisplay.filter(function (item) {\r\n      return item.id == e.target.value;\r\n    });\r\n    \r\n    setTeamName(value[0].name);\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    setLoading(true)\r\n  \r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"who\", teamID);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"type\", \"admin\");\r\n    formData.append(\"types\", \"tl\");\r\n    formData.append(\"name\", teamName);\r\n    formData.append(\"timeline\", value.p_timelines);\r\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\r\n    formData.append(\"assignNo\", queryNo);\r\n    formData.append(\"customer_id\", custId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddQueryAssignment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Query assigned successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          getQuery();\r\n          props.history.push({\r\n            pathname: `/admin/queriestab`,\r\n            index: 1,\r\n          });\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const expectedDeliveryDate = (key) => {\r\n  \r\n\r\n    const d = new Date();\r\n\r\n    if (key == \"Urgent, (4-5 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 432000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\r\n\r\n     \r\n      setExpectedDate(new_date);\r\n    } else if (key == \"Regular (10-12 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 1296000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n     \r\n      setExpectedDate(new_date);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/queriestab`,\r\n                  index: 1,\r\n                }}\r\n              >\r\n                <button class=\"btn btn-success ml-3\">\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th scope=\"col\">Query No.</th>\r\n                            <th scope=\"col\">Team Leaders<span className=\"declined\">*</span></th>\r\n                            <th scope=\"col\">Expected Timeline</th>\r\n                            <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {query ? (\r\n                            <tr>\r\n                              <th scope=\"row\">{queryNo}</th>\r\n                              <td>\r\n                                <select\r\n                                  className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_taxprof,\r\n                                  })}\r\n                                  name=\"p_taxprof\"\r\n                                  ref={register}\r\n                                  onChange={(e) => handleChange(e)}\r\n                                >\r\n                                  <option value=\"\">-select-</option>\r\n                                  {taxLeaderDisplay.map((p, index) => (\r\n                                    <option key={index} value={p.id}>\r\n                                      {p.postname}\r\n                                    </option>\r\n                                  ))}\r\n                                </select>\r\n                                {errors.p_taxprof && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.p_taxprof.message}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_timelines\"\r\n                                  value={timelines}\r\n                                  class=\"form-control\"\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  ref={register}\r\n                                  name=\"p_expdeldate\"\r\n                                  className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_expdeldate,\r\n                                  })}\r\n                                  min={item}\r\n                                />\r\n                                {errors.p_expdeldate && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.p_expdeldate.message}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n\r\n                              <td>\r\n                                <button type=\"submit\" class=\"btn btn-success\">\r\n                                  Assign\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <tr>\r\n                              <th scope=\"row\">{queryNo}</th>\r\n                              <td>\r\n                                <select class=\"form-control w-75 p-0\" disabled>\r\n                                  <option>{hideQuery.name}</option>\r\n                                </select>\r\n                              </td>\r\n\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_timelines\"\r\n                                  class=\"form-control\"\r\n                                  value={hideQuery.timeline}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_expdeldate\"\r\n                                  class=\"form-control\"\r\n                                  value={hideQuery.expdeliverydate}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <button class=\"btn btn-success\" disabled>\r\n                                  Assigned\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </form>\r\n                    <Mandatory />\r\n\r\n                  </div>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n","D:\\Mazars\\src\\pages\\Admin\\Proposal\\Proposal.js",["1678","1679","1680","1681"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\r\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\r\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\r\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\r\n\r\nfunction Proposal(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setAllProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getAcceptedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setAcceptedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getDeclinedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setDeclinedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getPendingForAcceptence = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setPendingProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    getAllProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n    getPendingForAcceptence();\r\n  }, []);\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Customer Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposalComponent />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAcceptence />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedPropoal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n// const allProposal = (data) => {\r\n//   setAllProposalCount(data);\r\n// };\r\n\r\n// const pendingProposal = (data) => {\r\n//   setPendingProposalCount(data);\r\n// };\r\n\r\n// const acceptedProposal = (data) => {\r\n//   setAcceptedProposalCount(data);\r\n// };\r\n\r\n// const declinedProposal = (data) => {\r\n//   setDeclinedProposalCount(data);\r\n// };\r\n","D:\\Mazars\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js",["1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692"],"D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js",["1693","1694","1695","1696","1697","1698"],"D:\\Mazars\\src\\pages\\Admin\\EditTP\\EditTP.js",["1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753"],"D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js",["1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765"],"D:\\Mazars\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js",["1766","1767","1768","1769","1770"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import FeedbackService from \"../../../config/services/QueryDetails\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n  const [feedbackNumber, setfeedbackNumber] = useState();\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, [userid]);\r\n\r\n  const getFeedback = () => {\r\n    axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setFeedBackData(res.data.result);\r\n       if(res.data.result != undefined){\r\n         setfeedbackNumber(res.data.result.length)\r\n       }\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n     \r\n    },\r\n\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return <>{row.assign_no}</>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      dataField: \"feedback\",\r\n   \r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.admin_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                   \r\n                    title=\"unread\"\r\n                  >\r\n                    <p  onClick={() => readNotification(row.id)}>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"admin\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n       \r\n          getFeedback();\r\n          history.push(\"/admin/feedback\")\r\n        }\r\n    \r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid} feedbackNumber = {feedbackNumber}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js",["1771","1772","1773","1774","1775","1776","1777","1778"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n    p_notes: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryRejection(props) {\r\n    const { id } = useParams();\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm({\r\n        resolver: yupResolver(Schema),\r\n    });\r\n\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const onSubmit = (value) => {\r\n      \r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", id);\r\n        formData.append(\"notes\", value.p_notes);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/admin/setAdminreject`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n               \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"Query declined successfully.\")\r\n                    props.history.push({\r\n                        pathname: `/admin/queriestab`,\r\n                        index: 1,\r\n                    });\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"4\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/admin/queriestab`,\r\n                                    index: 1,\r\n                                }}\r\n                            >\r\n                                <button class=\"btn btn-success ml-3\">\r\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                                    Go Back\r\n                                </button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <h2>Decline Query</h2>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                {\r\n                    loading ?\r\n                        <Loader />\r\n                        :\r\n                        <>\r\n                            <CardHeader>\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                                    <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label>Notes<span className=\"declined\">*</span></label>\r\n                                                        <textarea\r\n                                                            className={classNames(\"form-control\", {\r\n                                                                \"is-invalid\": errors.p_notes,\r\n                                                            })}\r\n                                                            id=\"textarea\"\r\n                                                            rows=\"6\"\r\n                                                            name=\"p_notes\"\r\n                                                            ref={register}\r\n                                                        ></textarea>\r\n                                                        {errors.p_notes && (\r\n                                                            <div className=\"invalid-feedback\">\r\n                                                                {errors.p_notes.message}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                                </div>\r\n                                <Mandatory />\r\n                            </CardHeader>\r\n                        </>\r\n                }\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default QueryRejection;\r\n","D:\\Mazars\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js",["1779","1780","1781","1782"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id} />\r\n   \r\n   \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js",["1783","1784","1785","1786","1787"],"import React, { useState, useEffect, useLayoutEffect , createContext} from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\r\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\r\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\r\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nfunction QueriesTab(props) {\r\n  \r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [allData, setAllData] = useState()\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setAllQueriesCount(res.data.result.length);\r\n        setAllData(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setPendingProposalCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n    \r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Allocation ({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData allData={allData}/>\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForProposals />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n     \r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js",["1788","1789","1790","1791","1792"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          props.history.push(`/admin/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n\r\n    \r\n    if (item == \"null\") {\r\n     \r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n\r\n          {\r\n            loading ?\r\n              <div class=\"col-md-12\">\r\n                <Spinner color=\"primary\" />\r\n              </div>\r\n              :\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Get OTP\r\n                </button>\r\n                <Link to=\"/admin/login\" style={{ \"margin\": \"10px\" }}>\r\n                  <button type=\"submit\" className=\"btn btn-secondary\">\r\n                    Cancel\r\n                  </button>\r\n                </Link>\r\n                <Mandatory />\r\n              </form>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\NewPassword.js",["1793","1794","1795","1796"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from \"../../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/admin/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    ref={register({ required: true })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  {disabled === false ? \r\n                  <small class=\"text-center\">\r\n                  Note: OTP is valid for {time} seconds.\r\n                </small> : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled}\r\n              setTime={setTime}  loading = {loading} getTime={LoadingTime.timer2} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js",["1797","1798","1799","1800","1801","1802"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl2 } from '../../../config/config';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n    };\r\n\r\n    getSubmittedAssingment();\r\n    getQuery();\r\n  }, [assingNo]);\r\n\r\n \r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n     \r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n    \r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Action</th>\r\n                    <td>\r\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\r\n                        <Link to={`/admin/queryassing/${p.id}`}>\r\n                        <i class=\"fa fa-share\"></i>\r\n                      </Link>\r\n                      ) : (                  \r\n                       null\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                 \r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","D:\\Mazars\\src\\pages\\Admin\\Chatting\\Chatting.js",["1803","1804","1805","1806","1807"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n  p_to: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n \r\n\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { query_id, query_No, routes } = data\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataAdmin\");\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n    formData.append(\"to\", value.p_to);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully. \"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.message_type,\r\n                            })}\r\n                            name=\"message_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.message_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.message_type.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>To<span className=\"declined\">*</span></label>\r\n                        <select\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_to,\r\n                          })}\r\n                          name=\"p_to\"\r\n                          ref={register}\r\n                          style={{ height: \"33px\" }}\r\n                        >\r\n                          <option value=\"\">--select--</option>\r\n                          <option value=\"customer\">Customer</option>\r\n                          <option value=\"tl\">Team Leader</option>\r\n                          <option value=\"both\">Both</option>\r\n                        </select>\r\n                        {errors.p_to && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_to.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Schedule.js",["1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n      backgroundColor: \"grey\",\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"blue\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n  \r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\pages\\Admin\\Recording\\Recording.js",["1823","1824","1825","1826","1827","1828","1829"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport ReactHlsPlayer from 'react-hls-player'\r\nimport { VideoLibraryRounded } from \"@material-ui/icons\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { padEnd } from \"lodash\";\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const openModal = (videoContent) => {\r\n      \r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\n    const videoIcon = {\r\n        display : \"flex\", \r\n        justifyContent : \"space-around\", \r\n        alignItems : \"center\"\r\n    }\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"absolute\",\r\n        top : \"10%\",\r\n        left : \"0%\",\r\n        botttom: \"0%\", \r\n        right: \"0%\",\r\n       \r\n        width : \"100%\", \r\n        height: \"auto\"\r\n    }\r\nconst canBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"10px\",\r\n    left: \"90%\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\", \r\n    color : \"red\"\r\n}\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_id\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        \r\n\r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                <>\r\n                                <p style={videoIcon}>\r\n                                <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n     <>\r\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n           <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                <RecordingFilter\r\n                       setData={setFeedBackData}\r\n                    //    getData={getInCompleteAssingment}\r\n                       SearchQuery=\"SearchQuery\"\r\n                      setRecords={setRecords}\r\n                       records={records} \r\n                       userid = {userid}\r\n                       getRecording = {getRecording}\r\n                    /> \r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n\r\n            </Card>\r\n          \r\n           </div>\r\n            \r\n           {isOpen === true ?\r\n          \r\n                 \r\n                 <div style={modalBox}>\r\n                 <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\r\n                \r\n       \r\n          <div style={{margin: \"50px 0 0 0\"}}>\r\n          <ReactPlayer\r\n            url={videoid}\r\n            controls={true}\r\n            playing={true}\r\n            width='100%'\r\n            height='100%'\r\n           />\r\n              </div>\r\n            \r\n           </div>\r\n         : \"\"}\r\n         </Layout>\r\n           </>\r\n\r\n    );\r\n}\r\n\r\nexport default Recording;","D:\\Mazars\\src\\pages\\Admin\\Message\\Message.js",["1830","1831","1832","1833","1834","1835","1836","1837"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useHistory } from \"react-router\";\r\n// import PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction Message(props) {\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\nconst history = useHistory();\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=all`\r\n            )\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        <Link to={`/admin/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\", justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n        \r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n              \r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n{/* <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                                class=\"btn btn-primary\"\r\n                            // onClick={() => paymentHandler()}\r\n                            >\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting`,\r\n                                        obj: props.location.obj\r\n                                    }}\r\n\r\n                                >\r\n                                    Add Message\r\n                                </Link>\r\n                            </div>\r\n                        </Col> */}","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Invoice.js",["1838","1839","1840","1841","1842","1843"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CreateInvoice from \"./CreateInvoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <CreateInvoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\pages\\Admin\\customer\\Customer.js",["1844","1845","1846","1847","1848","1849","1850","1851","1852","1853"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport CustomerListFilter from \"../../../components/Search-Filter/CustomerListFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\nimport History from \"./CustHistory\";\r\n\r\nfunction Customer() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tpCount, setTpCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [myPurpose, setPurpose] = useState([])\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  var digit2 = [];\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, []);\r\n\r\n  const getCustomer = () => {\r\n    axios.get(`${baseUrl}/admin/getAllList`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n        setTpCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n    if(typeof(key) == \"object\") {\r\n    \r\n    }\r\n    else{\r\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"application/vnd.github.cloak-preview\",\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          \r\n          setHistory(response.result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n    \r\n   \r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n        dataField: \"email\",\r\n        text: \"Email\",\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\", cursor: \"pointer\" };\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"phone\",\r\n        text: \"Mobile No\",\r\n       \r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n        },\r\n      },\r\n      {\r\n        dataField: \"occupation\",\r\n        text: \"Occupation\",\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n        },\r\n      },\r\n    {\r\n      dataField: \"country\",\r\n      text: \"Country\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"state\",\r\n      text: \"State\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"city\",\r\n      text: \"City\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n       return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date of Registration\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    \r\n  \r\n   \r\n    {\r\n      dataField: \"\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n           \r\n            <i\r\n              className=\"fa fa-eye\"\r\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" , color : \"green\"}}\r\n              onClick={() => show(row.id)}\r\n            ></i>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n   \r\n  ];\r\n\r\n  //check\r\n  const show = (key) => {\r\n \r\n    setModal(!modal);\r\n\r\n   if(typeof(key) == \"object\") {\r\n    \r\n   }\r\n   else{\r\n    {\r\n      axios.\r\n      get(`${baseUrl}/customers/totalComplete?uid=${key}`)\r\n        \r\n        .then((response) => {\r\n         \r\n         if(response.data.code === 1){\r\n        \r\n           setHistory(response.data.result)\r\n         }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n   }\r\n   \r\n  \r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n  \r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getCustomer();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <CardTitle tag=\"h4\">Customer ({tpCount})</CardTitle>\r\n            </Col>\r\n           <Col md=\"6\">\r\n           \r\n           </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <CustomerListFilter\r\n        setData={setData}\r\n        searchQuery = \"SearchQuery\"\r\n        setRecords={setTpCount}\r\n         records={tpCount} \r\n         getCustomer = {getCustomer} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <History history={history} toggle={toggle} modal={modal} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\Report\\Report.js",["1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useState , useEffect} from 'react';\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\nimport { useHistory } from 'react-router';\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n  \r\n  \r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [subData, subCategeryData] = useState([])\r\n    const [custCate, setCustcate] = useState([])\r\n    const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [custCate2, setCustcate2] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [taxId, setTaxId] = useState();\r\n  const [teamleader44, setTeamleader44] = useState() \r\n  const [taxprofessional44, setTaxprofessional44] = useState()\r\n  const [custData, setcustData] = useState();\r\n  var kk = []\r\n  var pp = []\r\n  var vv = []\r\n  var allData1 = {}\r\n  var dir = []\r\n  var indir = []\r\n  const [dd, setDd] = useState();\r\nconst history = useHistory()\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n       \r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n    getData();\r\n\r\n  }, []);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n    \r\n      var dd = []\r\n      if (res.data.code === 1) {\r\n        pp.push(res.data.result)\r\n        setData((res.data.result));\r\n       \r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, [taxId]);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${taxId}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setData2(res.data.result);\r\n         \r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n    .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\r\n      .then((res) => {\r\n       \r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setcustData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\nconst mapAppointmentData = ((appiontmentData) => ({\r\n\"label\" : appiontmentData.id,\r\n\"value\" : appiontmentData.id\r\n}))\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n  const options3 = data.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.name\r\n    }))\r\n    const options4 = data2.map(d => (\r\n      {\r\n        \"value\": d.id,\r\n        \"label\": d.name\r\n      }))\r\n\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n        formData.append(\"teamleader\", teamleader44);\r\n        formData.append(\"taxprofessional\", taxprofessional44);\r\n        formData.append(\"category\", mcatname);\r\n        formData.append(\"subCategory\", dd);\r\n        formData.append(\"q_no\", value.qno);\r\n        formData.append(\"date_query\", value.dataQuery);\r\n        formData.append(\"cust_id\", value.cust_id);\r\n        formData.append(\"basic_category\", value.basicCategory);\r\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\r\n        formData.append(\"assessment\", value.assessment);\r\n        formData.append(\"purpose\", value.purpose_p);\r\n        formData.append(\"p_format\", value.p_format);\r\n        formData.append(\"t_requested\", value.t_requested);\r\n        formData.append(\"spc_que\", value.spc_que);\r\n        formData.append(\"date_allocation\", value.doa);\r\n        formData.append(\"teamleader\", value.tl_name);\r\n        formData.append(\"taxprofessional\", value.tp_name);\r\n        formData.append(\"date_proposal\", value.dateProposal);\r\n        formData.append(\"proposed_amount\", value.proposedAmount);\r\n        formData.append(\"payment_terms\", value.paymentTerms);\r\n        formData.append(\"proposal_status\", value.proposal_status);\r\n        formData.append(\"accepted_amount\", value.acceptedAmount);\r\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\r\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\r\n        // formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\r\n        formData.append(\"amount_overdue\", value.amount_overdue);\r\n        formData.append(\"payment_declined\", value.declinedDate);\r\n        formData.append(\"assignment_number\", value.assignNumber);\r\n        formData.append(\"assign_date\", value.assignDate);\r\n        formData.append(\"proposed_completion_date\", value.completionDate);\r\n        formData.append(\"assignment_status\", value.assignStatus);\r\n        formData.append(\"date_complation\", value.completionQuery);\r\n        formData.append(\"assign_time\", value.assignTime);\r\n        formData.append(\"payment_recived_date\", value.receiptDate);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/report/generateReport`,\r\n     data : formData\r\n\r\n   })\r\n   .then(function (response) {\r\n  window.location.assign(`${baseUrl}/report/generateReport`)\r\n   })\r\n   .catch((error) => {\r\n  \r\n   });\r\n    }\r\n\r\n    // Category \r\n    const category2 = (v) => {\r\nlet cc = []\r\n      setCategoryData(v)\r\n      setNn((oldData) => {\r\n        return [...oldData, mcategory]\r\n      })\r\n      setError(\"\")\r\n      setCustcate(v)\r\n      v.map((val) => {\r\n        vv.push(val.value)\r\n        cc.push(val.value)\r\n        setmcategory(val.value);\r\n       \r\n        setStore(val.value)\r\n      })\r\n  \r\n  setmcatname(cc)\r\n      if (vv.length > 0) {\r\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n       \r\n        }\r\n        else if (vv.includes(\"1\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value < 9) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n        else if (vv.includes(\"2\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value > 8) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n      }\r\n  \r\n      else if (vv.length === 0) {\r\n        subCategeryData(\"\")\r\n      }\r\n  \r\n    }\r\n\r\n    // Sub Category Function \r\n    const subCategory22 = (e) => {\r\n  \r\n      subCategeryData(e)\r\n      setCustcate2(e)\r\n      setError2(\"\")\r\n     \r\n      e.map((i) => {\r\n  \r\n        i.value < 8 ? dir.push(i.value) : indir.push(i.value)\r\n      })\r\n     \r\n      setDd([dir, indir])\r\n    }\r\n  const teamLeader = (a) => {\r\n let tk = []\r\n    a.map((i) => {\r\n    \r\n      setTaxId(i.value) \r\n     tk.push(i.value)\r\n    })\r\n    setTeamleader44(tk)\r\n  \r\n  }\r\n  const taxProfessional = (e) => {\r\n    let kk2 = []\r\n    e.map((i) => {\r\n      \r\n      kk2.push(i.value)\r\n    })\r\n    setTaxprofessional44(kk2)\r\n  }\r\n    return (\r\n        <>\r\n          <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n          <div className=\"adminForm\">\r\n          <Typography variant=\"h4\">Admin Report</Typography>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n            defaultValue={item}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">Customer Id</label>\r\n         <Select isMulti options={custData}>\r\n\r\n         </Select>\r\n        </div>\r\n          </div>\r\n    \r\n   </div> \r\n   <div className=\"row\">\r\n   <div className=\"col-md-3\">\r\n\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Teamleader</label>\r\n<Select  isMulti={true}\r\noptions={options3}\r\nonChange= {(e) =>teamLeader(e)}/>\r\n</div>\r\n</div>\r\n\r\n<div className=\"col-md-3\">\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Taxprofessional</label>\r\n<Select isMulti = {true} \r\n options={options4} onChange={(e) => taxProfessional(e)}/>\r\n\r\n</div>\r\n</div>\r\n       <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        onChange={category2}>\r\n                      </Select>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        onChange={subCategory22}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n                      </Select>\r\n            </div>\r\n   </div>\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n           <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Query Date </label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Customer Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assessment\">Assignment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose_p\" id=\"purpose_p\"></input>\r\n<label htmlFor=\"purpose_p\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"p_format\" id=\"p_format\"></input>\r\n<label htmlFor=\"p_format\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n{/* <span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span> */}\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assignment</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\r\n<label htmlFor=\"assignNumber\">Assignment Number</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n            </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js",["1872","1873","1874","1875","1876"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                 {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\TL\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\index.js",["1877","1878","1879"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\nimport AssignmentComponent from \"./AllAssignment\";\r\nimport DraftReport from \"./DraftReport\";\r\nimport FinalReport from \"./FinalReport\";\r\n\r\nfunction AssignmentTab(props) {\r\n \r\n\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n    const [draft, setDraft] = useState(\"\");\r\n    const [final, setFinal] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        CountAllAssignment();\r\n        CountDraftReport();\r\n        CountFinalReport();\r\n    }, []);\r\n\r\n\r\n    const CountAllAssignment = (data) => {\r\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n         \r\n            if (res.data.code === 1) {\r\n                setAllAssignmentCount(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountDraftReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n          ;\r\n            if (res.data.code === 1) {\r\n                setDraft(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountFinalReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n          ;\r\n            if (res.data.code === 1) {\r\n                setFinal(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Assignments ({allAssignmentCount})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Draft Reports  ({draft})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                        Inprogress; Delivery of Final Reports ({final})\r\n                        </Tab>\r\n\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AssignmentComponent />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <DraftReport />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <FinalReport />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js",["1880","1881","1882"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Paid from \"./Paid\";\r\nimport Unpaid from \"./Unpaid\";\r\n\r\n\r\n\r\n\r\nfunction PaymentStatus(props) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setAllPayment(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?status=1`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setPaid(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?status=2`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setUnpaid(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n","D:\\Mazars\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js",["1883","1884","1885","1886"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nfunction AddTeamProf() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, []);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setData(res.data.result);\r\n          setCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      dataField: \"post_name\",\r\n      text: \"TP post name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"email\",\r\n      text: \"TP post email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name of TP\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"personal_email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Mobile No\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      // dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit2 = [];\r\n        digit2 = row.allpcat_id.split(\",\")\r\n       \r\n        return(\r\n          <>\r\n          \r\n          {\r\n             digit2.map((e) => {\r\n             return(\r\n               <>\r\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \r\n               </>\r\n             ) \r\n           })\r\n          }\r\n           </>\r\n        )\r\n      }\r\n    },\r\n   \r\n   \r\n    {\r\n      \r\n     \r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit = [];\r\n         \r\n        digit = row.allcat_id.split(\",\")\r\n      \r\n      \r\n        return(\r\n          <>\r\n          \r\n         {\r\n            digit.map((e) => {\r\n            return(\r\n              <>\r\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \r\n              </>\r\n            ) \r\n          })\r\n         }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n   \r\n  ]\r\n  // delete data\r\n  const del = (id) => {\r\n    \r\n\r\n    axios\r\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\r\n      .then(function (response) {\r\n                alert.success(\"successfully deleted \");\r\n        getTaxProf();\r\n      })\r\n      .catch((error) => {\r\n              });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          {/* <Table responsive=\"sm\" bordered>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">S.No</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone No.</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((p, i) => (\r\n                <tr>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{p.name}</td>\r\n                  <td>{p.email}</td>\r\n                  <td>{p.phone}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table> */}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddTeamProf;\r\n","D:\\Mazars\\src\\pages\\Admin\\EditTL\\EditTL.js",["1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934"],"D:\\Mazars\\src\\pages\\TL\\AddNew\\AddNew.js",["1935","1936","1937"],"import React from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import './index.css'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\"; \r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required name\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_phone: yup\r\n//   .string()\r\n//   .required(\"required phone no\")\r\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\r\n//   .min(10, \"Must be exactly 10 digits\")\r\n//   .max(20, \"max 20 digits\"),\r\n// });\r\n\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AddTaxProfessional`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n           \r\n        if (response.data.code === 1) {\r\n          alert.success(\"TP created  !\");\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Add New Tax Professionals</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>   \r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      ref={register}\r\n                    />\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                    ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n","D:\\Mazars\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js",["1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { result } from \"lodash\";\r\n\r\nfunction AddAssingmentStages() {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [assignmentStages, setAssignmentstages] = useState([]);\r\n  const [clientDiscussion, setClientDiscussion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n       \r\n\r\n        if (res.data.code === 1) {\r\n            setAssignmentstages(res.data.result);\r\n          reset(res.data.result[0]);\r\n          setClientDiscussion(res.data.result[0].client_discussion)\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n   \r\n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\r\n    {    \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is due,Do you still want to process to complete this query !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.value === true) {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n    \r\n        formData.append(\"q_id\", id);\r\n        formData.append(\"user_id\", JSON.parse(userid));\r\n        formData.append(\"stage_1_status\", value.client_discussion);\r\n        formData.append(\"stage_2_status\", value.draft_report);\r\n        formData.append(\"stage_3_status\", value.final_discussion);\r\n        formData.append(\"stage_4_status\", value.delivery_report);\r\n        formData.append(\"stage_5_status\", value.other_stage);\r\n    \r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/postAssignmentStages`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n           \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n              getAssignmentList();\r\n              history.push(\"/teamleader/assignment\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            \r\n          });\r\n      }\r\n      else{\r\n\r\n        history.push(\"/teamleader/assignment\");\r\n       return false;\r\n      }\r\n    });\r\n\treturn false;\r\n    }\r\n    else{\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n  \r\n      formData.append(\"q_id\", id);\r\n      formData.append(\"user_id\", JSON.parse(userid));\r\n      formData.append(\"stage_1_status\", value.client_discussion);\r\n      formData.append(\"stage_2_status\", value.draft_report);\r\n      formData.append(\"stage_3_status\", value.final_discussion);\r\n      formData.append(\"stage_4_status\", value.delivery_report);\r\n      formData.append(\"stage_5_status\", value.other_stage);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/postAssignmentStages`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n            getAssignmentList();\r\n            history.push(\"/teamleader/assignment\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Assignment Stages</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            {assignmentStages.map((p, i) => (\r\n              <>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\" ? (\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-8\">\r\n                      <br />\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Client Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.client_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Draft Report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.draft_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Final Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.final_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Delivery of report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.delivery_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Awaiting Completion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.other_stage}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn btn-primary\"\r\n                            disabled\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Client Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"client_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={{\r\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\r\n                                  clients:`${clientDiscussion}`,\r\n                                }}\r\n                              >\r\n                                View Details\r\n                              </Link>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Draft Report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"draft_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        {/* <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={`/teamleader/view-report/${p.assign_no}`}\r\n                              >\r\n                                View Report\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Final Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"final_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Delivery of report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"delivery_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Awaiting Completion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"other_stage\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-group\">\r\n                        {\r\n                          loading ?\r\n                            <Spinner color=\"primary\" />\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                              Submit\r\n                            </button>\r\n                        }\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddAssingmentStages;\r\n","D:\\Mazars\\src\\pages\\TL\\Login\\Login.js",["1953","1954","1955"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"\")\r\n});\r\n\r\nfunction Login(props) {\r\n  let history = useHistory()\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n         \r\n          logout();\r\n          setShow(true)\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data.user_id)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    \r\n    setEmail(e.target.value);\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 36000000)\r\n  }\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid} loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div className=\"form\">\r\n              <div className=\"heading\">\r\n                <h2>MTL Login</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password</label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        autocomplete=\"off\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/teamleader/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\ProposalTab.js",["1956","1957","1958","1959","1960"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction ProposalTab(props) {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n    const [allProposal, setAllProposal] = useState(\"\");\r\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\r\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const AllProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAllProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const InprogressProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setInprogressProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const AcceptedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAcceptedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const DeclinedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setDeclinedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        AllProposal();\r\n        InprogressProposal();\r\n        AcceptedProposal();\r\n        DeclinedProposal();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Proposals ({allProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Proposals ({inprogressProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                            Accepted; Proposals ({acceptedProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n                            Customer Declined; Proposals ({declinedProposal})\r\n                        </Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AllProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <InprogressProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <AcceptedProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <DeclinedProposal />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js",["1961","1962","1963","1964","1965"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\nconst history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setFeedBackData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n    \r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n    \r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.tl_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          // alert.success(\"successfully read!\");\r\n          getFeedback()\r\n          history.push(\"/teamleader/feedback\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\TL\\EditTP\\EditTP.js",["1966","1967"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction EditTP() {\r\n  const { id } = useParams();\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const { name, email, phone } = user;\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n\r\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setUser({\r\n            name: res.data.result[0].name,\r\n            email: res.data.result[0].email,\r\n            phone: res.data.result[0].phone,\r\n          });\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"id\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/updateTP`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(\"TL updated  !\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Edit Tax Professional</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      defaultValue={name}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                      defaultValue={email}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      defaultValue={phone}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTP;\r\n","D:\\Mazars\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js",["1968","1969","1970","1971","1972","1973","1974","1975","1976"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport CommonServices from \"../../../common/common\"\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"\"),\r\n  p_expdeldate: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryAssingment() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\r\n  const [taxID, setTaxID] = useState(null);\r\n  const [teamName, setTeamName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const [query, setQuery] = useState(true);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n    expect_dd: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId, expect_dd } = queryData;\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    getTaxProfession();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxProfession = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setTaxProfessionDisplay(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n          expect_dd: CommonServices.changeFormateDate(res.data.result[0].Exp_Delivery_Date),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          // setHideQuery(res.data.meta);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setTaxID(e.target.value)\r\n    var value = taxProfessionDisplay.filter(function (item) {\r\n      return item.id == e.target.value\r\n    })\r\n  \r\n    setTeamName(value[0].name)\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"who\", taxID);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"types\", \"tp\");\r\n    formData.append(\"name\", teamName);\r\n    formData.append(\"timeline\", value.p_timelines);\r\n    formData.append(\"expdeliverydate\", expdeliverydate);\r\n    formData.append(\"assignNo\", queryNo);\r\n    formData.append(\"customer_id\", custId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddQueryAssignment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Query assigned successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n         \r\n          getQuery();\r\n          reset();\r\n          history.push('/teamleader/queriestab')\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/teamleader/queriestab`,\r\n                  index: 0,\r\n                }}\r\n              >\r\n                <button\r\n                  class=\"btn btn-success ml-3\"\r\n                >\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        {\r\n          loading ?\r\n            <Loader />\r\n            :\r\n            <>\r\n              <CardHeader>\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <table class=\"table\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Query No.</th>\r\n                              <th scope=\"col\">Tax Professional<span className=\"declined\">*</span></th>\r\n                              <th scope=\"col\">Expected Timeline</th>\r\n                              <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\r\n                              <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {query ? (\r\n                              <tr>\r\n                                <th scope=\"row\">{queryNo}</th>\r\n                                <td>\r\n                                  <select\r\n                                    className={classNames(\"form-control\", {\r\n                                      \"is-invalid\": errors.p_taxprof,\r\n                                    })}\r\n                                    name=\"p_taxprof\"\r\n                                    ref={register}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                  >\r\n                                    <option value=\"\">--select--</option>\r\n                                    {taxProfessionDisplay.map((p, index) => (\r\n                                      <option key={index} value={p.id}>\r\n                                        { p.tl_post_name + \"-\"   + p.name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </select>\r\n                                  {errors.p_taxprof && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                      {errors.p_taxprof.message}\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_timelines\"\r\n                                    value={timelines}\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_expdeldate\"\r\n                                    className={classNames(\"form-control\", {\r\n                                      \"is-invalid\": errors.p_expdeldate,\r\n                                    })}\r\n                                    value={expect_dd}\r\n                                    min={item}\r\n                                  />\r\n                                  {errors.p_expdeldate && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                      {errors.p_expdeldate.message}\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <button type=\"submit\" class=\"btn btn-success\">\r\n                                    Assign\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              <tr>\r\n                                <th scope=\"row\">{queryNo}</th>\r\n                                <td>\r\n                                  <select class=\"form-control w-75 p-0\" disabled>\r\n                                    <option>{hideQuery.name}</option>\r\n                                  </select>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_timelines\"\r\n                                    value={hideQuery.timeline}\r\n                                    disabled\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    ref={register}\r\n                                    name=\"p_expdeldate\"\r\n                                    value={hideQuery.expdeliverydate}\r\n                                    disabled\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <button class=\"btn btn-success\" disabled>\r\n                                    Assigned\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </form>\r\n                      <Mandatory />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n            </>\r\n        }\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n\r\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n","D:\\Mazars\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js",["1977","1978","1979","1980","1981"],"D:\\Mazars\\src\\pages\\TL\\SendProposal\\SendProposal.js",["1982","1983"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ProposalComponent from \"./ProposalComponent\";\r\n\r\n\r\nfunction SendProposal() {\r\n    const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <ProposalComponent id={id}/>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendProposal;\r\n","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\QueriesTab.js",["1984","1985","1986","1987","1988","1989"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\r\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\r\nimport CompleteData from \"../CompleteData/CompleteData\";\r\nimport AllQuery from \"./AllQuery\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  const [allQuery, setAllQuery] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const AllQuery = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setAllQuery(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getPendindForAccepttence = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setPendingForAcceptence(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n      axios\r\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const Declined = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setDeclined(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getPendindForAccepttence();\r\n    getIncomplete();\r\n    getComplete();\r\n    AllQuery();\r\n    Declined()\r\n  }, []);\r\n\r\n  const updateTab = (key) => {\r\n    setTabIndex(key)\r\n  }\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Query ({allQuery})\r\n            </Tab>\r\n           \r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries ({incomplete})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Pending For Acceptence ({pendindForAccepttence})\r\n            </Tab>\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n            Pending for assignment ({complete})\r\n            </Tab>\r\n            \r\n          </TabList>\r\n\r\n\r\n          <TabPanel>\r\n            <AllQuery\r\n            />\r\n          </TabPanel>\r\n         \r\n          <TabPanel>\r\n            <InCompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <PendingForAcceptence\r\n              updateTab={updateTab}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <CompleteData\r\n            />\r\n          </TabPanel>\r\n         \r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n  // const CountPendingForAcceptence = (data) => {\r\n  //   setPendingForAcceptence(data);\r\n  // };\r\n\r\n  // const CountIncomplete = (data) => {\r\n  //   setIncomplete(data);\r\n  // };\r\n\r\n  // const CountComplete = (data) => {\r\n  //   setComplete(data);\r\n  // };","D:\\Mazars\\src\\pages\\TL\\PendingReceived\\PendingReceived.js",["1990","1991","1992","1993","1994"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl , baseUrl2} from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getQueryDetails();\r\n    getAdditionalQuery();\r\n  }, [assingNo]);\r\n\r\n  const getQueryDetails = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setSubmitData(res.data.result);\r\n        setDisplaySpecific(res.data.additional_queries);\r\n        setAssingmentNo(res.data.result[0].assign_no);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getAdditionalQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const acceptHandler = (key) => {\r\n    \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query accepted\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n    \r\n      });\r\n  };\r\n\r\n  const rejectHandler = (key) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query rejected\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n    \r\n      });\r\n  };\r\n\r\n \r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n      \r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <th scope=\"row\">Accept / Reject</th>\r\n                    <td>\r\n                    <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"#6967ce\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        id=\"div1\"\r\n                      >\r\n                        <div\r\n                          id=\"accept\"\r\n                          title=\"Accept Assignment\"\r\n                          onClick={() => acceptHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\r\n                        </div>\r\n                        <div\r\n                          id=\"reject\"\r\n                          title=\"Reject Assignment\"\r\n                          onClick={() => rejectHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","D:\\Mazars\\src\\pages\\TL\\Dashboard\\Dashboard.js",["1995","1996","1997","1998","1999"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid,\r\n    totalpayment } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n        \r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n         \r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n              totalpayment: response.data.result.totalpayment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n\r\n\r\n  var todaysDate = new Date();\r\n \r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n\r\n      <div className=\"row\">\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              {/* <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\"> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr> */}\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{totalpayment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\EditProposal\\EditProposal.js",["2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction EditComponent() {\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const[clearValue, setClearValue] = useState(true)\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    fixed_amount: \"\",\r\n    payable: \"\",\r\n    description: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    payment : \"\"\r\n  });\r\n\r\n\r\n  const { query, name, description, fixed_amount,\r\n    due_date, installment_amount } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          fixed_amount: res.data.result.amount,\r\n          description: res.data.result.description,\r\n          installment_amount: res.data.result.installment_amount,\r\n          due_date: res.data.result.due_date,\r\n          payment : res.data.result.installment_amount\r\n        });\r\n\r\n        var payment_terms = res.data.result.payment_terms\r\n        var no_of_installment = res.data.result.no_of_installment\r\n\r\n        const data1 = {\r\n          label: payment_terms,\r\n          value: payment_terms,\r\n        }\r\n\r\n        const data2 = {\r\n          label: no_of_installment,\r\n          value: no_of_installment,\r\n        }\r\n\r\n        setPayment(data1);\r\n        setInstallment(data2);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n\r\n    if (payment.length < 1) {\r\n     \r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n          } else if (amount && date) {\r\n\r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n             \r\n              for (let i = 0; i < a; i++) {\r\n\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n\r\n              } else {\r\n               \r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tl/updateProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n\r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      var variable = \"Proposal Updated Successfully \"\r\n                      Alerts.SuccessNormal(variable)\r\n                      history.push(\"/teamleader/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                  \r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n\r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/updateProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n         \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal Updated Successfully \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/teamleader/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n          \r\n          });\r\n      }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter digit only\");\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n   \r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1.slice(0, installment.value));\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n   \r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n\r\n    setDate(array2.slice(0, installment.value));\r\n   \r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n\r\n    setInstallment(key)\r\n    setClearValue(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    defaultValue={fixed_amount}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    defaultValue={description}\r\n                    ref={register({ required: true })}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    onChange={setPayment}\r\n                    value={payment}\r\n                    options={paymentsTerms}\r\n                  />\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date,\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      defaultValue={due_date}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(e => installmentHandler(e))}\r\n                        value={installment}\r\n                        options={noInstallments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    installment_amount && due_date &&\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      installment_amount={installment_amount}\r\n                      due_date={due_date}\r\n                      getQuery={getQuery}\r\n                      item={item}\r\n                      clearValue={clearValue}\r\n                    />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditComponent;\r\n\r\nconst paymentsTerms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst noInstallments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js",["2026","2027","2028","2029"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n});\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          props.history.push(`/teamleader/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n     \r\n    } else {\r\n      return item\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          {\r\n            loading ?\r\n              <div class=\"col-md-12\">\r\n                <Spinner color=\"primary\" />\r\n              </div>\r\n              :\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Get OTP\r\n                </button>\r\n                <Link to=\"/teamleader/login\" style={{ \"margin\": \"10px\" }}>\r\n                  <button type=\"submit\" className=\"btn btn-secondary\">\r\n                    Cancel\r\n                  </button>\r\n                </Link>\r\n\r\n                <Mandatory />\r\n              </form>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js",["2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction AssignmentForm(props) {\r\n\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [assignNo, setAssignNo] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [store, setStore] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setAssignNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [assignNo]);\r\n\r\n  const getDetails = (value) => {\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    let formData = new FormData();\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n    formData.append(\"notes\", value.p_notes);\r\n    formData.append(\"receive_sent_date\", value.p_date);\r\n    formData.append(\"notes_type\", value.p_type);\r\n    formData.append(\"type_info\", value.p_info);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n    formData.append(\"send_received\", item);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/addAssignmentStages`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(<Msg />);\r\n          getDetails();\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>success</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Client Discussion Information</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          {props.location.clients == \"completed\" ? (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                        disabled\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {store == \"email\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {store == \"phone\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {store == \"other\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Notes info</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <h4>List</h4>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Documents</th>\r\n                  <th scope=\"row\">Titles</th>\r\n                  <th scope=\"row\">Notes type</th>\r\n                  <th scope=\"row\">Notes Info</th>\r\n                  <th scope=\"row\">Date</th>\r\n                  <th scope=\"row\">send/Received</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                      <td>{p.notes}</td>\r\n                      <td>{p.notes_type}</td>\r\n                      <td>{p.type_info}</td>\r\n                      <td>{p.receive_sent_date}</td>\r\n                      <td>{p.send_received}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentForm;\r\n","D:\\Mazars\\src\\pages\\TL\\ViewNotification\\ViewNotification.js",["2042","2043","2044","2045","2046"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n;\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            {/* <thead>\r\n              <tr>\r\n                <th scope=\"col\">Titles</th>\r\n                <th scope=\"col\">Data</th>\r\n              </tr>\r\n            </thead> */}\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\TL\\NewPassword\\NewPassword.js",["2047","2048","2049","2050","2051"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, []);\r\n\r\n\r\n  const getTime = () => {\r\n    var timerOn = true;\r\n    function timer(remaining) {\r\n      var s = remaining % 60;\r\n      s = s < 10 ? '0' + s : s;\r\n      setTime(remaining)\r\n      remaining -= 1;\r\n      if (remaining >= 0 && timerOn) {\r\n        setTimeout(function () {\r\n          timer(remaining);\r\n        }, 1000);\r\n        return;\r\n      }\r\n      setDisabled(true)\r\n    }\r\n    timer(180);\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/teamleader/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}","D:\\Mazars\\src\\pages\\TL\\ViewReport\\ViewReport.js",["2052","2053","2054","2055","2056","2057"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nfunction ViewReport() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getReport();\r\n  }, []);\r\n\r\n  const getReport = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>ViewReport</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Report</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js",["2058","2059","2060","2061"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n       \r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n       \r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n       \r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js",["2062","2063","2064","2065"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport DraftReportTab from \"./DraftReportTab\";\r\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n  const [draft, setDraft] = useState(\"\");\r\n  const [final, setFinal] = useState();\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const AllAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setAllAssignmentCount(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getDraftReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setDraft(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getFinalReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setFinal(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    AllAssignment();\r\n    getDraftReports();\r\n    getFinalReports();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignments ({allAssignmentCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Draft Reports ({draft})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Delivery of Final ({final})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DraftReportTab />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeliveryFinalTab />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PayModal.js",["2066","2067"],"\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nconst PayModal = (props) => {\r\n    const userid = window.localStorage.getItem(\"userid\")\r\n    const [payValue, setpayValue] = useState()\r\n    const [tdsRate, setTdsRate] = useState();\r\n    const [tdsAmount, setTdsAmount] = useState()\r\n    \r\n \r\n    useEffect(() => {\r\n       if(props.modalData){\r\n           setTdsRate(props.modalData.tds_rate)\r\n           setTdsAmount(props.modalData.tds_amount)\r\n           setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(props.modalData.tds_amount))\r\n\r\n   \r\n    }\r\n    }, [props.modalData])\r\n   \r\n    const payFun = (e) => {\r\n  \r\n         \r\n        let formData = new FormData();\r\n        formData.append(\"id\", props.modalData.id);\r\n        formData.append(\"cid\", JSON.parse(userid));\r\n        formData.append(\"tds_rate\", tdsRate);\r\n        formData.append(\"tds_amount\", tdsAmount)\r\n       \r\n        axios({\r\n            method :\"POST\", \r\n            url : `${baseUrl}/customers/payCall`,\r\n            data : formData\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n             \r\n                window.location.assign(res.data.result)\r\n            }\r\n        })\r\n       \r\n       \r\n    }\r\n    const inVal = (e) => {\r\n        let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\r\n      \r\n        setTdsRate(e.target.value)\r\n        let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\r\nsetTdsAmount(Number((e.target.value * tdAmount) / 100).toFixed(0))\r\nlet b = Number((e.target.value * tdAmount) / 100).toFixed(0)\r\n\r\nsetpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\r\n    }\r\nreturn(\r\n    <Modal isOpen={props.showModal} toggle={props.modalToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n    <ModalHeader toggle={props.modalToggle}> Payment</ModalHeader>\r\n    <ModalBody style={{display :\"flex\", flexDirection :\"column\", overflow : \"wrap\"}}>\r\n\r\n{props.modalData === undefined ? \"\" :\r\n<table className=\"table\">\r\n    \r\n    <tbody className=\"tbody\">\r\n\r\n<tr>\r\n    <td>Invoice Amount</td>\r\n    <td></td>\r\n    <td>{parseInt(props.modalData.invoice_amount)}</td>\r\n</tr>\r\n<tr>\r\n    <td>TDS</td>\r\n    <td style={{display :\"flex\"}}><input type=\"text\"  style={{display : \"flex\", width: \"50px\"}} defaultValue={props.modalData.tds_rate} onChange= {(val) => inVal(val)}/> % </td>\r\n    <td>{tdsAmount}</td>\r\n</tr>\r\n<tr>\r\n    <td>Payable Amount</td>\r\n   <td></td>\r\n   <td>{payValue}</td>\r\n</tr>\r\n    </tbody>\r\n    </table> }\r\n\r\n<ModalFooter>\r\n    <button onClick={() => payFun()} className=\"btn btn-success\">Pay Now</button>\r\n</ModalFooter>\r\n    </ModalBody>\r\n  </Modal>\r\n)\r\n}\r\nexport default PayModal;","D:\\Mazars\\src\\views\\QueriesTab\\DeclinedQueries.js",["2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport CommonServices from \"../../common/common\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\n\r\n\r\nfunction DeclinedQueries() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n   \r\n\r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\"\r\n                ? null\r\n                :\r\n                row.status_code >= \"1\" ?\r\n                  CommonServices.removeTime(row.exp_delivery_date)\r\n                  :\r\n                  null\r\n            }\r\n          </>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n      }\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\Unpaid.js",["2086","2087","2088","2089","2090","2091","2092","2093","2094","2095"],"D:\\Mazars\\src\\views\\PaymentStatus\\Paid.js",["2096","2097","2098","2099","2100","2101","2102","2103"],"D:\\Mazars\\src\\views\\PaymentStatus\\AllPayment.js",["2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114"],"D:\\Mazars\\src\\views\\QueriesTab\\AllQueriesData.js",["2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport { date } from \"yup\";\r\n\r\n\r\n\r\nfunction AllQueriesData() {\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n   \r\n    const [queriesCount, setCountQueries] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const [additionalQuery, setAdditionalQuery] = useState(false);\r\n \r\n    const additionalHandler = (key) => {\r\n        setAdditionalQuery(!additionalQuery);\r\n        setAssignNo(key)\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQueriesData();\r\n    }, []);\r\n\r\n   \r\n    const getQueriesData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                    setCountQueries(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n           \r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queries\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n                                        {row.status_message}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.status_message}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.status_message}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected / Actual Delivery Date\",\r\n            dataField: \"exp_delivery_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n           \r\n                return (\r\n                  \r\n                    <>\r\n                        {\r\n                            row.status == \"Declined Query\"\r\n                                ? null\r\n                                :\r\n                                row.status_code != \"3\" && row.status_code > \"1\" ?\r\n                                    CommonServices.removeTime(row.exp_delivery_date)\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n                var curDate = moment().format(\"YYYY-MM-DD\")\r\n             \r\n               \r\n              \r\n                \r\n             \r\n                return (\r\n                    <>\r\n                        {   \r\n                            row.status == \"Declined Query\" ?\r\n                            <>\r\n                            {dateMnsFive > curDate === true ?\r\n                                <div title=\"Send Feedback\"\r\n                                style={{\r\n                                    cursor: \"pointer\",\r\n                                }}>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                        obj: {\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <FeedbackIcon />\r\n                                </Link>\r\n                            </div> : \"\"} \r\n                            </>\r\n                                :\r\n                                <div>\r\n                    {\r\n                        row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <div title=\"Update Query\">\r\n                                    <Link to={`/customer/edit-query/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"Delete Query\">\r\n                                    <i\r\n                                        className=\"fa fa-trash\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n\r\n                                        }}\r\n                                        onClick={() => del(row.id)}\r\n                                    ></i>\r\n                                </div>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.id}&type=4`,\r\n                                            obj: {\r\n                                                message_type: \"4\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.id,\r\n                                                routes: `/customer/queries`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                            </div> :\r\n                            null\r\n                    }\r\n\r\n                    {\r\n                        row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                            \r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                {dateMnsFive > curDate === true ?\r\n                                <div title=\"Send Feedback\"\r\n                                style={{\r\n                                    cursor: \"pointer\",\r\n                                }}>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                        obj: {\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <FeedbackIcon />\r\n                                </Link>\r\n                            </div> : \"\"}\r\n                                {\r\n                                    row.delivery_report == \"completed\" ? null :\r\n                                        <div title=\"Upload Additional Documents\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={() => additionalHandler(row.assign_no)}\r\n                                        >\r\n                                            <PublishIcon color=\"secondary\" />\r\n                                        </div>\r\n                                }\r\n                                {row.status_code == \"10\" ? null \r\n                                : \r\n                                <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting/${row.id}&type=4`,\r\n                                        obj: {\r\n                                            message_type: \"4\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.id,\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n}\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n\r\n        }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    //check\r\n    const del = (id) => {\r\n \r\n\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Want to delete query ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, deleted it!\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteCliente = (id) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"id\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/deleteQuery`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n                    getQueriesData();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Swal.fire(\"Oops...\", \"Query not deleted \", \"error\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n               \r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <Link to=\"/customer/select-category\" class=\"btn btn-primary\">\r\n                                    Fresh Query\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setQuery}\r\n                        getData={getQueriesData}\r\n                        id={userId}\r\n                        query=\"query\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    {\r\n                        loading ?\r\n                            <Loader />\r\n                            :\r\n                            <>\r\n                                <BootstrapTable\r\n                                    bootstrap4\r\n                                    keyField=\"id\"\r\n                                    data={query}\r\n                                    columns={columns}\r\n                                    rowIndex\r\n                                />\r\n                            </>\r\n                    }\r\n\r\n                    <AdditionalQueryModal\r\n                        additionalHandler={additionalHandler}\r\n                        additionalQuery={additionalQuery}\r\n                        assignNo={assignNo}\r\n                        getQueriesData={getQueriesData}\r\n                    />\r\n\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getQueriesData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllQueriesData;\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\config\\config.js",[],"D:\\Mazars\\src\\views\\QueriesTab\\InprogressProposal.js",["2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport CommonServices from \"../../common/common\";\r\nimport moment from \"moment\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nfunction InprogressProposal() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div className=\"completed\">\r\n              {row.status}\r\n            \r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n\r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\"\r\n                ? null\r\n                :\r\n                row.status_code >= \"1\" ?\r\n                  CommonServices.removeTime(row.exp_delivery_date)\r\n                  :\r\n                  null\r\n            }\r\n          </>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n        var curDate = moment().format(\"YYYY-MM-DD\")\r\n     \r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\" ?\r\n                null\r\n                :\r\n                <div>\r\n                 \r\n\r\n                                {\r\n                                    row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                                      \r\n                                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                            {dateMnsFive > curDate === true ?\r\n                                            <div title=\"Send Feedback\"\r\n                                            style={{\r\n                                                cursor: \"pointer\",\r\n                                            }}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/customer/feedback/${row.assign_no}`,\r\n                                                    obj: {\r\n                                                        routes: `/customer/queries`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <FeedbackIcon />\r\n                                            </Link>\r\n                                        </div> : \"\"}\r\n                                      \r\n                    \r\n                    \r\n                    {/* <div title=\"View Discussion Message\">\r\n                      <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                          fontSize: 16,\r\n                          cursor: \"pointer\",\r\n                          color: \"orange\"\r\n                        }}\r\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                      ></i>\r\n                    </div> */}\r\n                  </div>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n\r\n        }\r\n      </>\r\n    );\r\n  },\r\n},\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressQueryProposal=\"InprogressQueryProposal\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\InprogressAllocation.js",["2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport CommonServices from \"../../common/common\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\nfunction InprogressAllocation() {\r\n\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [additionalQuery, setAdditionalQuery] = useState(false);\r\n  const additionalHandler = (key) => {\r\n    setAdditionalQuery(!additionalQuery);\r\n    setAssignNo(key)\r\n  };\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n           \r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.id}`,\r\n                index: 1,\r\n                routes: \"queries\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <div>\r\n                    {row.status}/\r\n                    <p className=\"inprogress\">\r\n                      {row.status_message}\r\n                    </p>\r\n                  </div>\r\n                  :\r\n                  row.status == \"Inprogress; Allocation\" ?\r\n                    <p>\r\n                      {row.status}\r\n                    </p>\r\n                    :\r\n                    row.status == \"Inprogress; Proposals\" ?\r\n                      <p>\r\n                        {row.status}\r\n                      </p>\r\n                      :\r\n                      row.status == \"Inprogress; Assignments\" ?\r\n                        <p>\r\n                          {row.status}\r\n                        </p>\r\n                        :\r\n                        null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected / Actual Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n         \r\n     \r\n          return (\r\n            \r\n              <>\r\n                  {\r\n                      row.status == \"Declined Query\"\r\n                          ? null\r\n                          :\r\n                          row.status_code != \"3\" && row.status_code > \"1\" ?\r\n                              CommonServices.removeTime(row.exp_delivery_date)\r\n                              :\r\n                              null\r\n                  }\r\n              </>\r\n          )\r\n      },\r\n  },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n        var curDate = moment().format(\"YYYY-MM-DD\")\r\n     \r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\" ?\r\n                null\r\n                :\r\n                <div>\r\n                  {\r\n                    row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                        <div title=\"Update Query\">\r\n                          <Link to={`/customer/edit-query/${row.id}`}>\r\n                            <i\r\n                              className=\"fa fa-edit\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div title=\"Delete Query\">\r\n                          <i\r\n                            className=\"fa fa-trash\"\r\n                            style={{\r\n                              fontSize: 16,\r\n                              cursor: \"pointer\",\r\n\r\n                            }}\r\n                            onClick={() => del(row.id)}\r\n                          ></i>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}&type=4`,\r\n                              obj: {\r\n                                message_type: \"4\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/queries`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                color: \"blue\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                        <div title=\"View Discussion Message\">\r\n                                                    <i\r\n                                                        class=\"fa fa-comments-o\"\r\n                                                        style={{\r\n                                                            fontSize: 16,\r\n                                                            cursor: \"pointer\",\r\n                                                            color: \"orange\"\r\n                                                        }}\r\n                                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                                    ></i>\r\n                                                </div>\r\n\r\n                      </div> :\r\n                      null\r\n                  }\r\n\r\n                                    {\r\n                                        row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                                          \r\n                                          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                                {dateMnsFive > curDate === true ?\r\n                                                <div title=\"Send Feedback\"\r\n                                                style={{\r\n                                                    cursor: \"pointer\",\r\n                                                }}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                                        obj: {\r\n                                                            routes: `/customer/queries`\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <FeedbackIcon />\r\n                                                </Link>\r\n                                            </div> : \"\"}\r\n                                          \r\n                        {\r\n                          row.delivery_report == \"completed\" ? null :\r\n                            <div title=\"Upload Additional Documents\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={() => additionalHandler(row.assign_no)}\r\n                            >\r\n                              <PublishIcon color=\"secondary\" />\r\n                            </div>\r\n                        }\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}&type=4`,\r\n                              obj: {\r\n                                message_type: \"4\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/queries`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                color: \"blue\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                          <i\r\n                            class=\"fa fa-comments-o\"\r\n                            style={{\r\n                              fontSize: 16,\r\n                              cursor: \"pointer\",\r\n                              color: \"orange\"\r\n                            }}\r\n                            onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      null\r\n                  }\r\n                </div>\r\n\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n   \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete query ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, deleted it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n          getQueriesData();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressAllocation=\"InprogressAllocation\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <AdditionalQueryModal\r\n            additionalHandler={additionalHandler}\r\n            additionalQuery={additionalQuery}\r\n            assignNo={assignNo}\r\n            getQueriesData={getQueriesData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getQueriesData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressAllocation;\r\n\r\n\r\nconst arr = [\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n\r\n  { name: \"nitin\", add: \"noida\" },\r\n]","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paid.js",["2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const rejectHandler = (key) => {\r\n      \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=2`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n  \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n            \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n          \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 2, \r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n          \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                            <div title=\"Payment History\"\r\n                                onClick={() => toggle(row.assign_id)}\r\n                                style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                            >\r\n                               <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                onClick={() => toggle(row.assign_id)}></i>\r\n                            </div>\r\n                            <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                        obj: {\r\n                                            message_type: \"5\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.assign_id,\r\n                                            routes: `/teamleader/proposal`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 18,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    row.paid_status == \"0\" ?\r\n                                        <div title=\"Payment decline\"\r\n                                            onClick={() => rejectHandler(row)}\r\n                                            style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                        >\r\n                                            <PaymentIcon />\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n      \r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>             \r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Paid=\"Paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n<DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\components\\CategorySelect\\CategorySelect.js",["2191","2192"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/bootstrap.min.css\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport mazars from \"../../assets/images/mazars-logo.png\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_tax: yup.string().required(\"\"),\r\n  p_tax2: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction CategorySelect({ addfreshbtn, startbtn }, props) {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    if (store2 && store) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n      setModal(!modal);\r\n    } else {\r\n      // alert(\"please select category and subcategory\")\r\n    }\r\n  };\r\n  const validation = () => {\r\n    toggle()\r\n  }\r\n  const validation2 = () => {\r\n    toggle2()\r\n  }\r\n\r\n  const toggle2 = () => {\r\n    if (store2 && store) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n      history.push(\"/customer/addFresh\");\r\n    }\r\n  };\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(store.length != -1){\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n     }\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\r\n      >\r\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-group\">\r\n              <label>Category <span className=\"declined\">*</span></label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"p_tax\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_tax,\r\n                })}\r\n                ref={register}\r\n                onChange={(e) => setStore(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Category--</option>\r\n                {tax.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Sub Category <span className=\"declined\">*</span></label>\r\n              <select\r\n                name=\"p_tax2\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_tax2,\r\n                })}\r\n                ref={register}\r\n                onChange={(e) => setStore2(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Sub-Category--</option>\r\n                {tax2.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax2 && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax2.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n\r\n              {startbtn && (\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary  btn-block\"\r\n                  onClick={e => validation()} //\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n\r\n              {addfreshbtn && (\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary  btn-block\"\r\n                  onClick={e => validation2()} //\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n\r\n          </form>\r\n\r\n\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>\r\n              <img\r\n                src={mazars}\r\n                style={{ height: \"auto\", width: \"25%\" }}\r\n                alt=\"\"\r\n              />\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n              <div class=\"modal-body\">\r\n                <h4>Would you like to post a Query ?</h4>\r\n              </div>\r\n            </ModalBody>\r\n\r\n            <div class=\"modal-footer m-auto\">\r\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\r\n                Yes\r\n              </Link>\r\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\r\n                No\r\n              </Link>\r\n            </div>\r\n          </Modal>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <Mandatory />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategorySelect;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\AllPayment.js",["2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [addPaymentModal, setPaymentModal] = useState(false); \r\n\r\n\r\n    // Use State end\r\n    //Global veriable\r\n    var rowStyle2 = {}\r\n\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\r\n        \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n   \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                       {row.paid_status === \"2\" ? \r\n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                           <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                       </div>\r\n                       \r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>\r\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                           <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                       </div>\r\n                       <div title=\"Send Message\">\r\n                           <Link\r\n                               to={{\r\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                   obj: {\r\n                                       message_type: \"5\",\r\n                                       query_No: row.assign_no,\r\n                                       query_id: row.assign_id,\r\n                                       routes: `/teamleader/proposal`\r\n                                   }\r\n                               }}\r\n                           >\r\n                               <i\r\n                                   class=\"fa fa-comments-o\"\r\n                                   style={{\r\n                                       fontSize: 18,\r\n                                       cursor: \"pointer\",\r\n                                       color: \"blue\"\r\n                                   }}\r\n                               ></i>\r\n                           </Link>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               row.paid_status == \"0\" ?\r\n                                   <div title=\"Payment decline\"\r\n                                       onClick={() => rejectHandler(row)}\r\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                   >\r\n                                       <PaymentIcon />\r\n                                   </div>\r\n                                   : null\r\n                           }\r\n                       </div>\r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={payment}\r\n            columns={columns}\r\n            \r\n            classes = \"table-responsive\"\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TL\\NewPassword\\ResendOtp.js",["2207","2208"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setDisabled, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\components\\Layout\\Layout.js",["2209"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\r\nimport Header from \"../Admin-Header/Admin-Header\";\r\nimport Footer from \"../Admin-Footer/Admin-Footer\";\r\n\r\n\r\n\r\nfunction Layout(props) {\r\n\r\n  const {\r\n    custDashboard, adminDashboard, TLDashboard,\r\n    TPDashboard,\r\n    custUserId, adminUserId, TLuserId, TPuserId, feedbackNumber } = props\r\n    \r\n  return (\r\n    <>\r\n      <Header\r\n        custUserId={custUserId}\r\n        adminUserId={adminUserId}\r\n        TLuserId={TLuserId}\r\n        TPuserId={TPuserId}\r\n        feedbackNumber = {feedbackNumber}\r\n      />\r\n\r\n      <Sidebar\r\n        custDashboard={custDashboard}\r\n        adminDashboard={adminDashboard}\r\n        TLDashboard={TLDashboard}\r\n        TPDashboard={TPDashboard}\r\n        feedbackNumber = {feedbackNumber}\r\n      />\r\n\r\n      <div class=\"app-content content\" style={{ marginTop: \"75px\" }}>\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"content-body\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Unpaid.js",["2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport moment from 'moment';\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n\r\n    // UseState end \r\n    // Global veriable \r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n    \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=1`).then((res) => {\r\n            \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n       \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       {row.paid_status === \"2\" ? \r\n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                           <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                       </div>\r\n                      \r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>\r\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                           <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                       </div>\r\n                       <div title=\"Send Message\">\r\n                           <Link\r\n                               to={{\r\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                   obj: {\r\n                                       message_type: \"5\",\r\n                                       query_No: row.assign_no,\r\n                                       query_id: row.assign_id,\r\n                                       routes: `/teamleader/proposal`\r\n                                   }\r\n                               }}\r\n                           >\r\n                               <i\r\n                                   class=\"fa fa-comments-o\"\r\n                                   style={{\r\n                                       fontSize: 18,\r\n                                       cursor: \"pointer\",\r\n                                       color: \"blue\"\r\n                                   }}\r\n                               ></i>\r\n                           </Link>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               row.paid_status == \"0\" ?\r\n                                   <div title=\"Payment decline\"\r\n                                       onClick={() => rejectHandler(row)}\r\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                   >\r\n                                       <PaymentIcon />\r\n                                   </div>\r\n                                   : null\r\n                           }\r\n                       </div>\r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>}                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Unpaid=\"Unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        rowStyle = {rowStyle2}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TL\\EditProposal\\Payment.js",["2224","2225","2226","2227"],"import React from \"react\";\r\n\r\n\r\nexport default class YourComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n\r\n    amount = this.props.installment_amount\r\n    installment_amount = this.amount.split(',');\r\n    temp = this.installment_amount\r\n    tamp2;\r\n    handleChange1(i, e) {\r\n        const { value } = e.target\r\n        this.temp[i] = value\r\n\r\n    \r\n        this.setState({\r\n            values: {\r\n              ...this.temp.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n    }\r\n\r\n\r\n    due_date = this.props.due_date;\r\n     installment_due_dates = this.due_date.split(',')\r\n    installmentDueDate = this.installment_due_dates;\r\n\r\n    handleChange2(i, e) {\r\n        const { value } = e.target\r\n        this.installmentDueDate[i] = value\r\n\r\n        this.setState({\r\n            dates: {\r\n              ...this.installmentDueDate.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: false });\r\n        \r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n\r\n        this.props.paymentAmount(installment_amount);\r\n       this.props.paymentDate(due_date)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n        var fieldsArray = [];\r\n\r\n\r\n        for (var i = 0; i < this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    {this.props.clearValue == true ? \r\n                   <div class=\"col-md-6 my-2\">\r\n                       \r\n                   <input\r\n                       type=\"text\"\r\n                       className=\"form-control\"\r\n                       name={this.state.values[i]}\r\n                       onChange={this.handleChange1.bind(this, i)}\r\n                      defaultValue={installment_amount[i]}\r\n                   />\r\n               </div> :   \"\"\r\n}\r\n{this.props.clearValue == false ? \r\n    <div class=\"col-md-6 my-2\">\r\n                       \r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           name={this.state.values[i]}\r\n                           onChange={this.handleChange1.bind(this, i)}\r\n                           defaultValue=\"\"\r\n                       />\r\n                   </div> : \"\"}\r\n          {this.props.clearValue == true ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue={due_date[i]}\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}  \r\n       {this.props.clearValue == false ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue= \"\"\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}         \r\n                   \r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js",["2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport moment from \"moment\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n\r\n    const [item] = useState(current_date);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [fianlModal, setFianlModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    var rowStyle2 = {}\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n       \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n       \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n       \r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n       \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n       \r\n        setStatus(value);\r\n    };\r\n    const uploadFinalReport = (id) => {\r\n       \r\n        setFianlModal(!fianlModal);\r\n        setFinalId(id);\r\n      };\r\n// view report \r\nconst ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                index : 2,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                   {row.paid_status == \"2\" ? null : \r\n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n                    <i class=\"fa fa-tasks\"></i>\r\n                  </Link> }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\", width: \"90px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n               {\r\n                 row.paid_status == \"2\" ? \r\n               \"\" : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    \r\n      {\r\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n      \r\n      <div title=\"upload Pdf\">\r\n       <p\r\n         style={{ cursor: \"pointer\", color: \"red\" }}\r\n         onClick={() => uploadFinalReport(row)}\r\n       >\r\n       \r\n             <div>\r\n               <i\r\n                 class=\"fa fa-upload\"\r\n                 style={{ fontSize: \"16px\" }}\r\n               ></i>\r\n               final\r\n             </div>\r\n          \r\n       </p>\r\n      </div> : null\r\n      }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/teamleader/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/teamleader/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n    ];\r\n\r\n\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n       \r\n    \r\n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n        else if(row.paid_status != \"2\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n    \r\n    const onSubmit = (data) => {\r\n      \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=${status}&stages_status=${data.p_status\r\n                }&pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowStyle={ rowStyle2 }\r\n                        rowIndex\r\n                    />\r\n <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                     <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\components\\Footer\\Footer.js",[],"D:\\Mazars\\src\\components\\Common\\Mandatory.js",[],"D:\\Mazars\\src\\common\\common.js",["2250","2251"],"//change date format\r\n\r\nconst changeFormateDate = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//remove time with date\r\nconst removeTime = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//removeDATE with TIME\r\nconst removeDate = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  } else {\r\n    var split = oldDate.split(\" \");\r\n    var a = split[0];\r\n    var b = split[1];\r\n    return b;\r\n  }\r\n};\r\n\r\n\r\n//capitalizeFirstLetter\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nexport default {\r\n  changeFormateDate,\r\n  removeTime,\r\n  removeDate,\r\n  capitalizeFirstLetter\r\n};\r\n\r\n// var updatedate = oldDate.split(\" \")[0];\r\n// var updatedate = oldDate.slice(0, 10);\r\n","D:\\Mazars\\src\\common\\Alerts.js",["2252"],"import Swal from \"sweetalert2\";\r\n\r\n// SuccessLogin\r\nconst SuccessLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            'Login Successfully',\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Oops...\",\r\n            \"Error : Incorrect Email OR Password\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorOTP = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            \"Oops...\",\r\n            ` ${variable} </br> `,\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// Success\r\nconst SuccessMsg = (variable, key) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable ? variable : \"\"} </br> </br>\r\n             ${key.faill ? key.faill : \"\"} </br></br> \r\n              ${key.success ? key.success : \"\"}`,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// Success\r\nconst SuccessReport = (message) => {\r\n    if (message.invalid) {\r\n        Swal.fire(\r\n            \"Error\",\r\n            `${message.invalid}`,\r\n            \"error\"\r\n        )\r\n    } else if (message.faill && message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.faill} <br/><br/> \r\n            ${message.success}`,\r\n            'success'\r\n        )\r\n    } else if (message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.success}`,\r\n            'success'\r\n        )\r\n    }\r\n    else if (message.faill) {\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${message.faill} <br/>`,\r\n            'error'\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorDelete = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n// ErrorLogin\r\nconst ErrorEdit = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// SuccessNormal\r\nconst SuccessNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable} </br> `,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorNormal\r\nconst ErrorNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${variable} </br> `,\r\n            'error'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    SuccessLogin,\r\n    ErrorLogin,\r\n    SuccessMsg,\r\n    SuccessNormal,\r\n    SuccessReport,\r\n    ErrorDelete,\r\n    ErrorEdit,\r\n    ErrorNormal,\r\n    ErrorOTP,\r\n};\r\n\r\n\r\n\r\n\r\n// Swal.fire(`oops : ${response.data.result}`)","D:\\Mazars\\src\\components\\Header\\Header.js",["2253"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport \"../../assets/css/style.css\";\r\nimport mazars from \"../../assets/images/mazars-logo.png\";\r\n\r\nfunction Header({ id, cust_sign, admin, mtl, mtp, noSign, loginOTP }) {\r\n  let history = useHistory();\r\n\r\n  const custLogout = () => {\r\n    localStorage.removeItem(\"userid\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"uid\");\r\n    localStorage.removeItem(\"category\");\r\n    history.push(\"/customer/signin\");\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <div class=\"header\">\r\n        {id && (\r\n          <div>\r\n            <Link to=\"/customer/questionnaire-page\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {cust_sign && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {noSign && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n\r\n        {loginOTP && (\r\n          <div>\r\n            <img src={mazars} class=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\r\n          </div>\r\n        )}\r\n\r\n        {admin && (\r\n          <div>\r\n            <Link to=\"/admin/start\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {mtl && (\r\n          <div>\r\n            <Link to=\"/teamleader/start\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {mtp && (\r\n          <div>\r\n            <Link to=\"/taxprofessional/start\">\r\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          {id && (\r\n            <ul class=\"menu\">\r\n              <li style={{ color: \"#fff\" }}>{id}</li>\r\n              <li onClick={custLogout} style={{ color: \"#fff\" }}>\r\n                <i class=\"fa fa-sign-out\">logout</i>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {cust_sign && (\r\n            <div>\r\n              <ul class=\"menu\">\r\n                <li>\r\n                  <Link to=\"/\">Signin</Link>\r\n                </li>             \r\n              </ul>\r\n            </div>\r\n          )}\r\n         \r\n          {admin && (\r\n            <ul class=\"menu\">\r\n              <li>\r\n                <Link to=\"/admin/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {mtl && (\r\n            <ul class=\"menu\">\r\n              <li>\r\n                <Link to=\"/teamleader/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {mtp && (\r\n            <ul class=\"menu\">\r\n              <li>\r\n                <Link to=\"/taxprofessional/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n {/* <li>\r\n                  <Link to=\"/customer/signup\">SignUp</Link>\r\n                </li> */}","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js",["2254","2255","2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [count, setCount] = useState(\"\");\r\n  const [assignment, setAssignment] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [finalId, setFinalId] = useState(\"\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n\r\n  const [item] = useState(current_date);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  const [dataItem, setDataItem] = useState({});\r\n\r\n  const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  var rowStyle2 = {}\r\n  const ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n  \r\n  \r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAssignment(res.data.result);\r\n          setCount(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData != undefined){\r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    \r\n    setStatus(value);\r\n  };\r\n\r\n\r\n  //columns\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.q_id}`,\r\n                index : 0,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n            {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected date of delivery\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Actual date of delivery\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Assignment Stage\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              title=\"Add Assignment stages\"\r\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n            >\r\n             {row.paid_status == \"2\" ? null : \r\n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n              <i class=\"fa fa-tasks\"></i>\r\n            </Link> }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"90px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n         {\r\n           row.paid_status == \"2\" ? \"\" : \r\n           <div\r\n           style={{\r\n             display: \"flex\",\r\n             justifyContent: \"space-between\",\r\n           }}\r\n         >\r\n           \r\n           \r\n              {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n            {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n{\r\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n\r\n<div title=\"upload Pdf\">\r\n <p\r\n   style={{ cursor: \"pointer\", color: \"red\" }}\r\n   onClick={() => uploadFinalReport(row)}\r\n >\r\n \r\n       <div>\r\n         <i\r\n           class=\"fa fa-upload\"\r\n           style={{ fontSize: \"16px\" }}\r\n         ></i>\r\n         final\r\n       </div>\r\n    \r\n </p>\r\n</div> : null\r\n}\r\n          \r\n\r\n           <div title=\"View Discussion Message\">\r\n             <i\r\n               class=\"fa fa-comments-o\"\r\n               style={{\r\n                 fontSize: 16,\r\n                 cursor: \"pointer\",\r\n                 color: \"orange\"\r\n               }}\r\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n             ></i>\r\n           </div>\r\n           <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/teamleader/chatting/${row.q_id}`,\r\n                 obj: {\r\n                   message_type: \"3\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.q_id,\r\n                   routes: `/teamleader/assignment`\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n\r\n         </div>\r\n         }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n  // draft modal\r\n  const [draftModal, setDraftModal] = useState(false);\r\n  const uploadDraftReport = (id) => {\r\n    \r\n    setDraftModal(!draftModal);\r\n    setId(id);\r\n  };\r\n\r\n\r\n  // final modal\r\n  const [fianlModal, setFianlModal] = useState(false);\r\n  const uploadFinalReport = (id) => {\r\n    \r\n    setFianlModal(!fianlModal);\r\n    setFinalId(id);\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n  \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&assignment_status=${status}&stages_status=${data.p_status\r\n        }&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignment(res.data.result);\r\n            setRecords(res.data.result.length);\r\n\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Pending</option>\r\n                  <option value=\"2\">Complete</option>\r\n                  <option value=\"3\">Payment Decline</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Draft report</div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of report\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Completed</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n              }\r\n\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignment}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n\r\n          <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n          />\r\n\r\n          <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n          />\r\n\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentList}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js",["2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n   \r\n    const [item] = useState(current_date);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [draftModal, setDraftModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    var rowStyle2 = {}\r\n    const uploadDraftReport = (id) => {\r\n    \r\n      setDraftModal(!draftModal);\r\n      setId(id);\r\n    };\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n       \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n        \r\n        setStatus(value);\r\n    };\r\n// view report \r\nconst ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n// row Style \r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                index : 1,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                   {row.paid_status == \"2\" ? null : \r\n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n                    <i class=\"fa fa-tasks\"></i>\r\n                  </Link> }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\", width: \"90px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n               {\r\n                 row.paid_status == \"2\" ? \r\n                \"\" : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                  {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/teamleader/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/teamleader/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n    ];\r\n\r\n\r\n    const onSubmit = (data) => {\r\n      \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=\"Draft_Report\"&stages_status=1\r\n               &pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowStyle={ rowStyle2 }\r\n                        rowIndex\r\n                    />\r\n  <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n          />\r\n <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\AllQuery.js",["2320","2321","2322","2323","2324","2325","2326","2327","2328","2329"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllQuery() {\r\n\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const [incompleteData, setInCompleteData] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInCompleteAssingment();\r\n    }, []);\r\n\r\n    const getInCompleteAssingment = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setInCompleteData(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n              \r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queriestab\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"\tExp. Delivery Date\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                      {row.status_code == \"1\" ? null :\r\n                      \r\n                      <div\r\n                      style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"green\",\r\n                      }}\r\n                  >\r\n                     \r\n\r\n                      {row.status == \"Declined Query\" ? null :\r\n                      <div title=\"Send Message\">\r\n                      <Link\r\n                          to={{\r\n                              pathname: `/teamleader/chatting/${row.id}`,\r\n                              obj: {\r\n                                  message_type: \"4\",\r\n                                  query_No: row.assign_no,\r\n                                  query_id: row.id,\r\n                                  routes: `/teamleader/proposal`\r\n                              }\r\n                          }}\r\n                      >\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  marginLeft: \"8px\",\r\n                                  color: \"blue\"\r\n                              }}\r\n                          ></i>\r\n                      </Link>\r\n                  </div>}\r\n\r\n                      <div title=\"View Discussion Message\">\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  color: \"orange\"\r\n                              }}\r\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                      </div>\r\n                  </div>\r\n}                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setInCompleteData}\r\n                        getData={getInCompleteAssingment}\r\n                        AllQuery=\"AllQuery\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={incompleteData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getInCompleteAssingment}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuery;\r\n","D:\\Mazars\\src\\pages\\TL\\SendProposal\\ProposalComponent.js",["2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const [paymentError, setpaymentError] = useState();\r\n\r\n  const [date, setDate] = useState();\r\n  const [amount, setAmount] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n    \r\n    // var arrAmount = []\r\n    // var arrDate = []\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", assignId);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n    if (payment.length < 1) {\r\n     \r\n      setpaymentError(\"Please select at lease one\")\r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        \r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n            \r\n          } else if (amount && date) {\r\n            \r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n                // arrAmount.push(amount[i])\r\n                // arrDate.push(date[i])\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n               \r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                \r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n              \r\n              } else {\r\n               \r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tl/uploadProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n               \r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      Alerts.SuccessNormal(\"Proposal sent successfully.\")\r\n                      history.push(\"/teamleader/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                   \r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n     \r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/uploadProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n          \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal sent successfully. \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/teamleader/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n          \r\n          });\r\n      }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n   \r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n  \r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter number only.\");\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n    setTotalAmount(e.target.value);\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n   \r\n    setInstallment(key)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div>\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    className=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Proposal Description\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    className=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    className={paymentError ? \"customError\" : \"\"}\r\n                    onChange={(e) => {\r\n                      setPayment(e)\r\n                      setpaymentError(\"\")\r\n                    }}\r\n                    options={payment_terms}\r\n                  />\r\n\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        onChange={(e => installmentHandler(e))}\r\n                        options={no_installments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      totalAmount={totalAmount}\r\n                      min={item}\r\n                      item={item}\r\n                    />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\n\r\nconst payment_terms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst no_installments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js",["2353"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    id: \"\",\r\n    allocation_id: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      id: key.id,\r\n      allocation_id: key.allocation_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingforAcceptance();\r\n  }, []);\r\n\r\n  const getPendingforAcceptance = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setPendingData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n         \r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.query_created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Accept / Reject\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                color: \"#6967ce\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              id=\"div1\"\r\n            >\r\n              <div\r\n                id=\"accept\"\r\n                title=\"Accept Assignment\"\r\n                onClick={() => acceptHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-check\"\r\n                  style={{ color: \"green\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n              <div\r\n                id=\"reject\"\r\n                title=\"Reject Assignment\"\r\n                // onClick={() => rejectHandler(row)}\r\n                onClick={() => rejectHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-times\"\r\n                  style={{ color: \"red\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const acceptHandler = (key) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\r\n          getPendingforAcceptance();\r\n          updateTab(3);\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setPendingData}\r\n            getData={getPendingforAcceptance}\r\n            pendingForAcceptence=\"pendingForAcceptence\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Spinner color=\"primary\" />\r\n              :\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={pendingData}\r\n                columns={columns}\r\n                rowIndex\r\n              />\r\n          }\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getPendingforAcceptance={getPendingforAcceptance}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\InCompleteData\\InCompleteData.js",["2354","2355","2356","2357","2358","2359","2360","2361","2362"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction InCompleteData({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function(cell, row){\r\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n       // console.log(\"row\", row.due_date.split(\"-\").reverse().join(\"-\"))\r\n        return(\r\n           \r\n            <>\r\n      {dueDate}\r\n            </>\r\n        )\r\n    }\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Acutal Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {row.status_code == \"1\" ? null :\r\n            <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              color: \"green\",\r\n            }}\r\n          >\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/teamleader/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/teamleader/proposal`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n\r\n            <div title=\"View Discussion Message\">\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"orange\"\r\n                }}\r\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n              ></i>\r\n            </div>\r\n          </div>}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            InprogressQuery=\"InprogressQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getInCompleteAssingment}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InCompleteData;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\QueryDetails.js",["2363","2364","2365","2366","2367","2368","2369"],"D:\\Mazars\\src\\pages\\TL\\CompleteData\\CompleteData.js",["2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport History from \"../../../components/PendingForAllocation/History\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nfunction CompletedQuery() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\nconst hist = useHistory();\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n \r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const ViewDiscussionToggel = (key) => {\r\n      setViewDiscussion(!ViewDiscussion);\r\n      setAssignNo(key)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n  const toggle = (key) => {\r\n  \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n     \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function(cell, row){\r\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n     \r\n        return(\r\n           \r\n            <>\r\n      {dueDate}\r\n            </>\r\n        )\r\n    }\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 3,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n          return (\r\n              <>\r\n                  <div>\r\n                      {row.status}/\r\n                      {\r\n                          row.status == \"Inprogress Query\" ?\r\n                              <p className=\"inprogress\">\r\n\r\n                                  {row.statusdescription}\r\n                              </p>\r\n                              :\r\n                              row.status == \"Declined Query\" ?\r\n                                  <p className=\"declined\">\r\n\r\n                                      {row.statusdescription}\r\n                                  </p> :\r\n                                  row.status == \"Completed Query\" ?\r\n                                      <p className=\"completed\">\r\n\r\n                                          {row.statusdescription}\r\n                                      </p> : \r\n                                      null\r\n                                  \r\n                                    \r\n                      }\r\n                  </div>\r\n              </>\r\n          );\r\n      },\r\n  },\r\n  \r\n  {\r\n    text: \"Action\",\r\n    dataField: \"\",\r\n    headerStyle: () => {\r\n      return { fontSize: \"12px\" };\r\n    },\r\n    formatter: function (cell, row) {\r\n      return (\r\n        <>\r\n          {row.statuscode === \"0\" || row.statuscode === \"3\"? (\r\n           \r\n           <i onClick ={() => assignConfirm(row.id, row.assign_no)} class=\"fa fa-share\" style={{color : \"blue\", cursor : \"pointer\"}}></i>\r\n          ) : (\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              {/* <div title=\"Assign to\">\r\n               \r\n\r\n              </div>\r\n              <div title=\"Decline Query\">\r\n                <Link\r\n                  to={`/teamleader/query_rejection/${row.id}`}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-trash\"\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n  <p style={{ color: \"green\", fontSize: \"10px\" }}>\r\n\r\n Allocated to {row.tname} on\r\n<p>{row.allocation_time}</p>\r\n</p>\r\n              {/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/teamleader/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"4\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/teamleader/queriestab`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n\r\n            </div>\r\n\r\n\r\n\r\n          )}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    text: \"History\",\r\n    dataField: \"\",\r\n    headerStyle: () => {\r\n      return { fontSize: \"12px\" };\r\n    },\r\n    formatter: function (cell, row) {\r\n      return (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-info btn-sm\"\r\n            onClick={() => toggle(row.id)}\r\n          >\r\n            History\r\n          </button>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  ];\r\n\r\n\r\n\r\n  const  assignConfirm = (id, assign_number) => {\r\n \r\n   \r\nSwal.fire({\r\n  title: \"Are you sure?\",\r\n   text: `do you want to assign ${assign_number} to taxprofessional`,\r\n        type: 'warning',\r\n        showCloseButton:true,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '\"#3085d6\"',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, assign it!',\r\n        cancelButtonText: 'No'\r\n    }).then(function(result){\r\n        if(result.value){\r\n          hist.push(`/teamleader/queryassing/${id}`)\r\n        }else if(result.dismiss == 'cancel'){\r\n          \r\n           axios.get(`${baseUrl}/tl/workby?uid=${JSON.parse(userid)}&qid=${id}`).then((res) => {\r\n                   if(res.data.code === 1){\r\n                     hist.push(`/teamleader/proposal`)\r\n                   \r\n                   }\r\n                 })\r\n        }\r\n\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n            <History history={history} toggle={toggle} modal={modal} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompletedQuery;\r\n","D:\\Mazars\\src\\components\\Loader\\Loader.js",[],"D:\\Mazars\\src\\views\\PaymentStatus\\PaymentComponent.js",["2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396","2397"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  pay,\r\n  getPaymentStatus,\r\n  pay3\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  const { assign_id, amount, accepted_amount, paid_amount,\r\n    payment_terms, no_of_installment, installment_amount,\r\n    due_date, amount_type, amount_fixed, amount_hourly\r\n  } = pay;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", assign_id);\r\n    formData.append(\"status\", 8);\r\n    formData.append(\"amount\", value.p_amount);\r\n\r\n  \r\n    axios.get(`${baseUrl}/admin/getPaymentDetail?id=${assign_id}`)\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n         \r\n          window.location.href= (`${response.data.payment_detail[0].paymenturl}`)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\nif(addPaymentModal === true){\r\n  var kk = pay.installment_amount.split(\",\")\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal}  toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\r\n        {\r\n          loading ?\r\n            <Loader />\r\n            :\r\n            <>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <tr>\r\n                    <th>Paid Amount</th>\r\n                    <th>Due Date</th>\r\n                    <th>Pay</th>\r\n                  </tr>\r\n                  {kk?.map((i, e) => (\r\n                    <tr>\r\n                    <td>{i == \"0\" ? pay.amount : i }</td>\r\n                    <td> {CommonServices.removeTime(due_date)}</td>\r\n                    <td><form onSubmit={handleSubmit(onSubmit)}>\r\n                  {+accepted_amount == +paid_amount ? <p>paid</p> : (\r\n                   <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Pay\r\n                   </button>\r\n                    \r\n                \r\n                  )}\r\n                </form></td>\r\n                  </tr>\r\n                 ))}\r\n                 \r\n                \r\n                </table>\r\n                \r\n              </ModalBody>\r\n            </>\r\n        }\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\DiscardReport.js",["2398","2399","2400","2401","2402"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n\r\n  const getHistory = () => {\r\n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\views\\QueriesTab\\AdditionalQueryModal.js",["2403","2404"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nfunction AdditionalQueryModal({\r\n  additionalQuery,\r\n  additionalHandler,\r\n  assignNo,\r\n  getQueriesData,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"upload[]\", file);\r\n      }\r\n    }\r\n    formData.append(\"assign_no\", assignNo);\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          additionalHandler();\r\n          getQueriesData();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ShowError.LoadingError(setLoading)\r\n       });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\r\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalQueryModal;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DiscardReport.js",["2405","2406","2407","2408","2409","2410","2411"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  \r\n  const getHistory = () => {\r\n   \r\n  if(report != undefined && report.length != 0){\r\n   \r\n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js",["2412","2413","2414","2415"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  assignNo,\r\n  getPaymentStatus,\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"notes\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/declinePayment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Marked as customer declined payment.\")\r\n          getPaymentStatus();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\components\\Records\\Records.js",[],"D:\\Mazars\\src\\components\\Search-Filter\\CustomerFilter.js",["2416","2417","2418","2419","2420","2421","2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nfunction CustomerFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const { records,\r\n    setRecords, setData, getData, id,\r\n    query,\r\n    InprogressAllocation,\r\n    InprogressQueryProposal,\r\n    DeclinedQuery,\r\n\r\n    proposal,\r\n    inprogressProposal,\r\n    acceptedProposal,\r\n    declinedProposal,\r\n    allPayment,\r\n    paid,\r\n    unpaid,\r\n    assignment } = props;\r\n\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\nconst [loading, setLoading] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData != undefined){\r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n\r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n  setLoading(true)\r\n\r\n    if (query == \"query\") {\r\n\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (InprogressAllocation == \"InprogressAllocation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?uid=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}&status=${data.p_status}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (proposal == \"proposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (inprogressProposal == \"inprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=3pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (assignment == \"assignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (allPayment == \"allPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n    if (unpaid == \"unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n    if (paid == \"paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n      \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  {query == \"query\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressAllocation == \"InprogressAllocation\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Customer Declined; Queries</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {proposal == \"proposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {inprogressProposal == \"inprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {allPayment == \"allPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {assignment == \"assignment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress</option>\r\n                      <option value=\"2\">Completed</option>\r\n                      <option value=\"3\">Payment Declined</option>\r\n                    </select>\r\n                  )}\r\n\r\n                </div>\r\n\r\n               \r\n                {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                        Search\r\n                      </button>\r\n                    }\r\n                <Reset />\r\n\r\n               \r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerFilter;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js",["2438","2439","2440","2441"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.p_final;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"final_report[]\", file);\r\n      }\r\n    }\r\n\r\n\r\n    formData.append(\"id\", id.id);\r\n    formData.append(\"q_id\", id.q_id);\r\n    axios\r\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n   \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          getAssignmentList();\r\n          uploadFinalReport();\r\n          \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\r\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_final\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n // formData.append(\"final_report\", value.p_final[0]);","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\ViewAllReport.js",["2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"./DiscardReport\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    // setDocData(report)\r\n  }\r\n\r\n\r\n  //check\r\n  const toggleDiscard = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to discard ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, discarded it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 2);\r\n    formData.append(\"docid\", id.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          getData()\r\n          Alerts.SuccessNormal(\"Discarded Successfully\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                     \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                 <br>\r\n                 </br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\r\n                    <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\r\n                                    <i\r\n                                      class=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          class=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          class=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\tlFilter.js",["2460","2461","2462","2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475","2476","2477","2478","2479"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction TeamFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    AllQuery,\r\n   \r\n    InprogressQuery,\r\n    DeclinedQuery,\r\n    pendingForAcceptence,\r\n    completeAssignment,\r\n    AllProposal,\r\n    InprogressProposal,\r\n    proposal,\r\n    assignment,\r\n    AllPayment,\r\n    Unpaid,\r\n    Paid\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData.length != 0){\r\n      \r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n\r\n\r\n    if (AllQuery == \"AllQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\r\n     \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQuery == \"InprogressQuery\") {\r\n\r\n     \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllProposal == \"AllProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressProposal == \"InprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if(proposal == \"proposal\"){\r\n      axios\r\n      .get(\r\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=3&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setData(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Unpaid == \"Unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Paid == \"Paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n\r\n                  {AllQuery == \"AllQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Queries</option>\r\n                      <option value=\"2\">Completed; Queries</option>\r\n                      <option value=\"3\">Declined; Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressQuery == \"InprogressQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      onChange={(e) => setStatus1(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllProposal == \"AllProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Proposals</option>\r\n                      <option value=\"2\">Accepted; Proposals</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressProposal == \"InprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\">Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamFilter;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js",["2480","2481","2482","2483"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_draft;\r\n   \r\n\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"draft_report[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"id\", id);\r\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then(response => {\r\n    \r\n      if (response.data.code === 1) {\r\n        setLoading(false)\r\n        var message = response.data.message\r\n        if (message.invalid) {\r\n          Swal.fire({\r\n            title: 'Error !',\r\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n          })\r\n        } else if (message.faill && message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n            icon: 'success',\r\n          })\r\n        } else if (message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p>${message.success}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        else if (message.faill) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        getAssignmentList();\r\n        uploadDraftReport();\r\n      } else if (response.data.code === 0) {\r\n        setLoading(false)\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\r\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_draft\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n\r\n","D:\\Mazars\\src\\components\\Admin-Footer\\Admin-Footer.js",[],"D:\\Mazars\\src\\components\\Admin-Header\\Admin-Header.js",["2484","2485"],"import React from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NavWrapper from \"./NavWrapper\";\r\n\r\n\r\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId , feedbackNumber}) {\r\n  let history = useHistory();\r\n\r\n  const custLogout = () => {\r\n    localStorage.removeItem(\"userid\");\r\n    localStorage.removeItem(\"custEmail\");\r\n    localStorage.removeItem(\"category\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const adminLogout = () => {\r\n    localStorage.removeItem(\"adminkey\");\r\n    localStorage.removeItem(\"adminEmail\");\r\n    history.push(\"/admin/login\");\r\n  };\r\n\r\n  const tlLogout = () => {\r\n    localStorage.removeItem(\"tlkey\");\r\n    localStorage.removeItem(\"tlEmail\");\r\n    history.push(\"/teamleader/login\");\r\n  };\r\n\r\n  const tpLogout = () => {\r\n    localStorage.removeItem(\"tpkey\");\r\n    history.push(\"/taxprofessional/login\");\r\n  };\r\n\r\n  const nm = window.localStorage.getItem(\"name\");\r\n \r\n  var name = JSON.parse(nm);\r\n  \r\n\r\n\r\n  const CustEmail = window.localStorage.getItem(\"custEmail\");\r\n  const adminEmail = window.localStorage.getItem(\"adminEmail\");\r\n  const tlEmail = window.localStorage.getItem(\"tlEmail\");\r\n  const tpEmail = window.localStorage.getItem(\"tpEmail\")\r\n \r\n  \r\n  return (\r\n    <div>\r\n      <nav\r\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\r\n        sty\r\n      >\r\n        {custUserId && (\r\n          <NavWrapper \r\n         \r\n          color=\"#5E96AE\" logout={custLogout}\r\n            name=\"customer\" email={CustEmail}\r\n          />\r\n        )}\r\n\r\n        {adminUserId && (\r\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\r\n            name=\"admin\" email={adminEmail}\r\n            feedbackNumber= {feedbackNumber}\r\n          />\r\n        )}\r\n\r\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout}\r\n          name=\"teamleader\" email={tlEmail}\r\n        />}\r\n\r\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout}\r\n          name=\"taxprofessional\" email={tpEmail}\r\n        />}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n","D:\\Mazars\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js",["2486","2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505"],"import { NavLink } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport StarBorder from '@mui/icons-material/StarBorder';\r\nimport './list.css';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard , feedbackNumber}) {\r\n  const [toggleState, setToggleState] = useState(false);\r\n  const [feedbackNumber2, setfeedbackNumber2] = useState();\r\n  const [feedbackNumbertl, setfeedbackNumbertl] = useState();\r\n  const [feedbackNumbertp, setfeedbackNumbertp] = useState();\r\n  const [open, setOpen] = useState(false)\r\n  const tlkey= window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\");\r\n  const adminkey = window.localStorage.getItem(\"adminkey\")\r\n  const toggleTab = (index) => {\r\n  \r\n    setToggleState(index);\r\n  };\r\nconst feedNumber = {\r\n  fontSize: \"10.5px\",\r\n  height: \"15px\",\r\n  backgroundColor: \"green\",\r\n  color: \"white\",\r\n  display: \"inline-block\",\r\n  margin: \"0px 0px 20px 0px\",\r\n  padding: \"9px 10px\",\r\n    borderRadius: \"50%\"\r\n}\r\n\r\nuseEffect(() => {\r\n  getFeedback2();\r\n}, [adminDashboard])\r\nconst getFeedback2 = () => {\r\n  if(adminDashboard != undefined){\r\n    axios.get(`${baseUrl}/customers/getFeedback?uid=${JSON.parse(adminkey)}&&type=total`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n       \r\n       if(res.data.result != undefined){\r\n         setfeedbackNumber2(res.data.result[0].total)\r\n       \r\n       }\r\n      }\r\n    });\r\n  }\r\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n    setOpen(true)\r\n  }\r\n\r\n};\r\nconst getFeedbacktl = () => {\r\n if(TLDashboard != undefined){\r\n  axios\r\n  .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(tlkey)}&&type=total`)\r\n  .then((res) => {\r\n\r\n    if(res.data.result != undefined){\r\n      setfeedbackNumbertl(res.data.result[0].total)\r\n    \r\n    }\r\n  });\r\n }\r\n if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n  setOpen(true)\r\n}\r\n};\r\nuseState(() => {\r\n  getFeedbacktl();\r\n}, [TLDashboard])\r\n\r\nconst getFeedbacktp = () => {\r\n  if(TPDashboard != undefined){\r\n    axios\r\n    .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(tpkey)}&&type=total`)\r\n    .then((res) => {\r\n\r\n      if(res.data.result != undefined){\r\n        setfeedbackNumbertp(res.data.result[0].total)\r\n      \r\n      }\r\n    });\r\n  }\r\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n    setOpen(true)\r\n  }\r\n};\r\nuseState(() => {\r\n  getFeedbacktp();\r\n}, [TPDashboard])\r\n\r\nconst handleClick = () => {\r\n\r\n  setOpen(!open);\r\n};\r\n  return (\r\n    <>\r\n      <div\r\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\r\n        data-scroll-to-active=\"true\"\r\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\r\n      >\r\n        <div class=\"navbar-header\">\r\n          <ul class=\"nav navbar-nav flex-row\">\r\n            <li class=\"nav-item mr-auto\">\r\n              <a class=\"navbar-brand\" href=\"questionnaire.html\">\r\n                <img\r\n                  class=\"brand-logo\"\r\n                  alt=\"Chameleon admin logo\"\r\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\r\n                />\r\n                <h3 class=\"brand-text\">Mazars</h3>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item d-md-none\">\r\n              <a class=\"nav-link close-navbar\">\r\n                <i class=\"fa fa-times\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"main-menu-content\">\r\n          {custDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"nav-item active\">\r\n                <NavLink to={\"/customer/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\r\n                <NavLink to={\"/customer/queries\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/schedule\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/feedback-data\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Feedback\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n            </ul>\r\n          )}\r\n\r\n          {adminDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/adinvoice\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                 \r\n              <ListItemButton  onMouseEnter={() => handleClick()}>\r\n        \r\n      <span className=\"listStyle\">\r\n      <ListItemIcon>\r\n          <ScheduleIcon />\r\n        </ListItemIcon>\r\n\r\n\r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n                </span>\r\n\r\n      \r\n       \r\n      </ListItemButton>\r\n\r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/admin/schedule\"}>\r\n                  \r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/admin/recording\"}>\r\n                  \r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n\r\n            \r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/teamleaders\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Team Leaders\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/taxprofessionals\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Tax Professionals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n               <li class =\"nav-item\">\r\n                 <NavLink to={\"/admin/customers\"}>\r\n                   <i class=\"fa fa-users\"></i>\r\n                   <span class=\"menu-title\" data-i18n=\"\">\r\n                   Customers\r\n                  </span>\r\n                 </NavLink>\r\n               </li>\r\n               <li class =\"nav-item\">\r\n                 <NavLink to={\"/admin/reports\"}>\r\n                   <i class=\"fa fa-users\"></i>\r\n                   <span class=\"menu-title\" data-i18n=\"\">\r\n                   Report\r\n                  </span>\r\n                 </NavLink>\r\n               </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/feedback\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                 Feedback <sup style={feedNumber}>{feedbackNumber2}</sup> \r\n          \r\n                  </span>\r\n                  {/* Feedback  <span class=\"badge\">{feedbackNumber2}</span> */}\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {TLDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"active nav-item\">\r\n                <NavLink to={\"/teamleader/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/tlinvoice\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                 \r\n              <ListItemButton onMouseEnter={() => handleClick()}>\r\n        \r\n        <span className=\"listStyle\">\r\n        <ListItemIcon>\r\n            <ScheduleIcon />\r\n          </ListItemIcon>\r\n  \r\n  \r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </span>\r\n  \r\n        \r\n         \r\n        </ListItemButton>\r\n  \r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/teamleader/schedule\"}>\r\n                 \r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/teamleader/recording\"}>\r\n                 \r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/reports\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Reports\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/addteamprof\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    View T.P\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/feedback\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                  Feedback <sup style={feedNumber}>{feedbackNumbertl}</sup>\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              \r\n            \r\n            </ul>\r\n          )}\r\n\r\n          {TPDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/dashboard\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/tpinvoice\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                 \r\n              <ListItemButton onMouseEnter={() => handleClick()}>\r\n        \r\n        <span className=\"listStyle\">\r\n        <ListItemIcon>\r\n            <ScheduleIcon />\r\n          </ListItemIcon>\r\n  \r\n  \r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </span>\r\n  \r\n        \r\n         \r\n        </ListItemButton>\r\n  \r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/taxprofessional/schedule\"}>\r\n                 \r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/taxprofessional/recording\"}>\r\n\r\n                <span class=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/reports\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Reports\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/feedback\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                  Feedback <sup style={feedNumber}>{feedbackNumbertp}</sup> \r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <div class=\"navigation-background\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Mazars\\src\\pages\\TL\\SendProposal\\Payment.js",["2506","2507"],"import { values } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport default class Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        if (isNaN(e.target.value)) {\r\n            this.setState({ error: \"Please insert only digit\" })\r\n        }\r\n        else {\r\n            this.setState({ error: \"\" })\r\n        }\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n\r\n    }\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 1; i <= this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                        />\r\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            min={this.props.item}\r\n                        />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// import React from \"react\";\r\n\r\n// export default class Payment extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],\r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         if (isNaN(e.target.value)) {\r\n//             this.setState({ error: \"Please insert only digit\" })\r\n//         }\r\n//         else {\r\n//             this.setState({ error: \"\" })\r\n//         }\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n\r\n//     }\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 1; i <= this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                         />\r\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n//                     </div>\r\n\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             min={this.props.item}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n//             );\r\n//         }\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\AcceptedProposal.js",["2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n    \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 2,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n\r\n                            {\r\n                                row.status == \"Accepted; Proposal\" ?\r\n                                    <p className=\"completed\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\InprogressProposal.js",["2521","2522","2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533","2534"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n       setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n            .then((res) => {\r\n          \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 1,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" &&  row.work_by != \"0\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                           \r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        InprogressProposal=\"InprogressProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\DeclinedProposal.js",["2535","2536","2537","2538","2539","2540","2541","2542","2543","2544","2545","2546","2547"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n         \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 3,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Customer Declined; Proposal\" ?\r\n                                    <p className=\"declined\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n<div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Login\\VerifyOtpLogin.js",["2548"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n\r\n\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n\r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"tlkey\", JSON.stringify(response.data.user_id));\r\n          localStorage.setItem(\"tlEmail\", JSON.stringify(response.data.name));\r\n          history.push(\"/teamleader/dashboard\");\r\n        } else {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"uid\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\AllProposal.js",["2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\n\r\n\r\n\r\nfunction AllProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState(null);\r\n    const [id2, setId2] = useState(null)\r\n    const [tds, setTds] = useState(false)\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const chatHandler = (key) => {\r\n         setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n   const addTdsToggle = (key) => {\r\n     \r\n       setTdsForm(!tdsForm)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n      \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 0,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n                                            {row.status}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.status}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\r\n                            <>\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                  \r\n                                </div>\r\n                              \r\n                                </>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        AllProposal=\"AllProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProposal;\r\n\r\n\r\n\r\n\r\n{/* <div>\r\n                                {row.revised_text && (\r\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\r\n                                            onClick={() => chatHandler(row)}\r\n                                        ></i>\r\n                                    </div>\r\n                                )}\r\n                            </div> */}","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js",["2570","2571","2572","2573","2574","2575"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction Unpaid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    \r\n    const toggle = (key) => {\r\n       \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 2,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n<div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n    <i\r\n        class=\"fa fa-credit-card\"\r\n        style={{ color: \"green\", fontSize: \"16px\" }}\r\n        onClick={() => toggle(row.assign_id)}\r\n    ></i>\r\n</div>\r\n\r\n\r\n<div title=\"View Discussion Message\">\r\n    <i\r\n        class=\"fa fa-comments-o\"\r\n        style={{\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            color: \"orange\"\r\n        }}\r\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n    ></i>\r\n</div>\r\n\r\n\r\n\r\n                            <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"5\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/admin/paymentstatus`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        paid=\"paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                        rowIndex\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Unpaid;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js",["2576","2577","2578","2579","2580","2581","2582","2583"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction Paid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=1`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    \r\n    const toggle = (key) => {\r\n     \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.paid_status == \"2\" ? \r\n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n                         <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                             <i\r\n                                 class=\"fa fa-credit-card\"\r\n                                 style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                 onClick={() => toggle(row.assign_id)}\r\n                             ></i>\r\n                         </div>\r\n \r\n \r\n                         <div title=\"View Discussion Message\">\r\n                             <i\r\n                                 class=\"fa fa-comments-o\"\r\n                                 style={{\r\n                                     fontSize: 16,\r\n                                     cursor: \"pointer\",\r\n                                     color: \"orange\"\r\n                                 }}\r\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                             ></i>\r\n                         </div>\r\n \r\n \r\n                         <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/admin/chatting/${row.id}`,\r\n                 obj: {\r\n                   message_type: \"5\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.id,\r\n                   routes: `/admin/paymentstatus`\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n \r\n                     </div> :\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"Send Message\">\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/chatting/${row.id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.id,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n\r\n                    </div> }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        unpaid=\"unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                        rowIndex\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paid;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js",["2584","2585","2586","2587","2588","2589","2590"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\r\n            \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n               \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Amount Outstanding\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"Send Message\">\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/chatting/${row.id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.id,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n\r\n                    </div> \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                        rowIndex\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\pages\\Admin\\EditTL\\Reset.js",["2591","2592"],"import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select, Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nfunction Reset() {\r\n  \r\n  const { Option } = Select;\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n\r\n\r\n\r\n  const handleChange = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\r\n      \r\n        setValue(res.data.result[0]);    \r\n      });\r\n    };\r\n\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n \r\n  const data1 = value.name;\r\n  const data2 = value.email;\r\n  const data3 = value.phone;\r\n  const data4 = value.parent_id;\r\n  const data5 = value.cat_name;\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [store2]);\r\n\r\n  const onFinish = (values) => {\r\n   \r\n\r\n  \r\n  };\r\n\r\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\r\n  else\r\n    return (\r\n      <>\r\n        <div class=\"container\">\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              username: `${data1}`,\r\n              email: `${data2}`,\r\n              phone: `${data3}`,\r\n              category: `${data4}`,\r\n              sub_category: `${data5}`,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item label=\"Username\" name=\"username\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"email \">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"category\" label=\"Category\">\r\n              <Select onChange={handleChange}>\r\n                <Option value=\"1\">Direct</Option>\r\n                <Option value=\"2\">InDirect</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\r\n              <Select>\r\n                <Option value=\"\">--Select Sub-Category--</Option>\r\n                {tax2.map((p, index) => (\r\n                  <Option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"phone\" label=\"phone\">\r\n              <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Form>\r\n\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n\r\n","D:\\Mazars\\src\\components\\QueryDetails\\Feedback.js",["2593"],"import React, { useState } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction Feedback({ feedback }) {\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <p\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                }}\r\n            >\r\n                Feedback\r\n            </p>\r\n            <table class=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: \"80px\" }}>S.No</th>\r\n                        <th style={{ width: \"200px\" }}>Date</th>\r\n                        <th>Feedback</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        feedback.map((p, i) => (\r\n                            <tr>\r\n                                <td>{i + 1}</td>\r\n                                <td style={{ display: \"flex\" }}>\r\n                                    <p>{CommonServices.removeTime(p.created)}</p>\r\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\r\n                                </td>\r\n                                <td>{p.feedback}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feedback;","D:\\Mazars\\src\\components\\QueryDetails\\DraftReports.js",["2594","2595"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction DraftReports({ id }) {\r\n\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAssignmentData();\r\n    }, []);\r\n\r\n    const getAssignmentData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\r\n            )\r\n            .then((res) => {\r\n                if (res) {\r\n                  \r\n                    setAssignmentDisplay(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        color: \"black\",\r\n                        fontSize: \"18px\",\r\n                    }}\r\n                >\r\n                    Draft Reports\r\n                </p>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n                            <th scope=\"col\">Data</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Draft Reports</th>\r\n                            <td>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Name</th>\r\n                                </tr>\r\n                                {assignmentDisplay.map((p, i) => (\r\n                                    <tr>\r\n                                        <td>{CommonServices.removeTime(p.date)}</td>\r\n                                        <td>\r\n                                            <a\r\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {p.name}\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DraftReports;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AddAdditionalQuery.js",["2596","2597"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\r\n\r\n \r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"File uploaded successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          getQuery();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\r\n        <ModalHeader toggle={addHandler}>\r\n          UPLOAD DOCUMENTS\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    onClick={addHandler}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddAdditionalQuery;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AssignmentDetails.js",["2598","2599","2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614","2615","2616","2617","2618"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { ReportUrl } from \"../../config/config\";\r\n\r\nfunction AssignmentDetails({ p, submitData, customerQuery , diaplayAssignment, diaplayProposal, reports, assingNo }) {\r\n\r\n  const {\r\n    assignment_number,\r\n    assignment_date,\r\n    date_of_delivery,\r\n  } = diaplayAssignment;\r\n\r\n  const { cust_accept_date } = diaplayProposal;\r\n\r\n  const timeTaken = (a, b) => {\r\n    var date2 = CommonServices.removeTime(a);\r\n    var date1 = CommonServices.removeTime(b);\r\n\r\n  \r\n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\r\n   \r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Assignment Details\r\n        </p>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Number</th>\r\n              <td>{assignment_number}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Date</th>\r\n              <td>{CommonServices.removeTime(assignment_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposed Date of Completion</th>\r\n              <td>\r\n                {p.query_status >= 9 ? (\r\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n            {/* {p.query_status >= 9 ? ( */}\r\n            <tr>\r\n              <th scope=\"row\">Assignment Status</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Assignment Stage</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>Client Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Draft Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Final Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Delivery of Final Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Awaiting Completion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td>\r\n                </tr>\r\n              </td>\r\n            </tr>\r\n            {/* ) : null} */}\r\n            <tr>\r\n              <th scope=\"row\">Time taken to complete the assignment</th>\r\n              <td>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\"\r\n                  ? CommonServices.removeTime(p.final_date)\r\n                  : null}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Reports</th>\r\n              <td>\r\n                {\r\n                  reports.map((p, i) => (\r\n                    \r\n                    <div>\r\n                      {customerQuery == \"customerQuery\" && submitData[0].paid_status == \"2\" ? null :\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <a\r\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> {p.document}\r\n                          </a>\r\n                        </td>\r\n                        <td style={{ marginLeft: \"15px\", color: \"green\" }}>\r\n                          {p.stages_type == 2 && p.revise_report == null && \"Draft Report\" || p.stages_type == 3 && p.revise_report == null && \"Final Report\" || p.revise_report != null && \"Reviewed Report\"}\r\n                        </td>\r\n                        <td>\r\n                          {p.status == \"3\"\r\n                            ?\r\n                            <p className=\"declined\">Discarded</p>\r\n                            : null}\r\n                        </td>\r\n                      </tr> }\r\n                    </div>\r\n                  ))\r\n                }\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentDetails;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AdditionalQuery.js",["2619","2620"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction AdditionalQuery({ displayQuery }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          ADDITIONAL QUERIES\r\n        </p>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                Additional Queries\r\n              </th> */}\r\n              <th scope=\"col\">Date Submission</th>\r\n              <th scope=\"col\">Documents</th>\r\n            </tr>\r\n          </thead>\r\n          {displayQuery.map((p, i) => (\r\n            <tbody>\r\n              <tr key={i}>\r\n                {/* <td>{p.additional_queries}</td> */}\r\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\r\n                <td>\r\n                  {p.upload_doc == \"\" ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <p style={{ display: \"flex\" }}>\r\n                      <a\r\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <i class=\"fa fa-photo\"></i>\r\n                      </a>\r\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\r\n                    </p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdditionalQuery;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\BasicQuery.js",["2621","2622","2623","2624"],"D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js",["2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction FinalReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [reportModal, setReportModal] = useState(false);\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [report, setReport] = useState();\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  var rowStyle2 = {}\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    \r\n    setStatus(value);\r\n  };\r\n // View Report \r\n \r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 2,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex \r\n           \r\n          />\r\n  <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalReport;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js",["2642","2643","2644"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  pay,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { id, allocation_id } = pay;\r\n\r\n  \r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", id);\r\n    formData.append(\"allocation_id\", allocation_id);\r\n    formData.append(\"reject_reason\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js",["2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\nfunction AssignmentComponent() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n   var rowStyle2 = {}\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n  const [assignNo, setAssignNo] = useState(null);\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  const [viewData, setViewData] = useState({});\r\n  const [viewModal, setViewModal] = useState(false);\r\n  const ViewHandler = (key) => {\r\n  \r\n    setViewModal(!viewModal);\r\n    setViewData(key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n  \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n  \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n  \r\n    setStatus(value);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n        \r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 0,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n \r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Inprogress</option>\r\n                  <option value=\"2\">Completed</option>\r\n                  <option value=\"3\">Payment Declined</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Draft reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of Final Reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n\r\n              }\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentComponent;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\ProposalDetails.js",["2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675","2676","2677"],"D:\\Mazars\\src\\components\\QueryDetails\\QueryRecording.js",["2678","2679","2680","2681","2682","2683"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport ReactHlsPlayer from 'react-hls-player'\r\nimport ReactPlayer from 'react-player';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction QueryRecording(assingNo) {\r\n    // const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getRecording();\r\n    }, []);\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"absolute\",\r\n        top : \"10%\",\r\n        left : \"0%\",\r\n        botttom: \"0%\", \r\n        right: \"0%\",\r\n       \r\n        width : \"100%\", \r\n        height: \"auto\"\r\n    }\r\nconst canBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"10px\",\r\n    left: \"90%\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\",\r\n    color : \"red\"\r\n}\r\n\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?assign_id=${assingNo.assingNo}`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                }\r\n            });\r\n    };\r\n   \r\n   \r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_id\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <i\r\n                                className=\"material-icons\"\r\n                                style={{\r\n                                    cursor: \"pointer\",\r\n                                    color: \"red\",\r\n                                    fontSize: \"25px\",\r\n                                }}\r\n                                onClick={() => openModal(row.file)}\r\n                            >\r\n                                play_circle_outline\r\n                            </i>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n  \r\n   \r\n    return (\r\n     \r\n           <div>\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n            {isOpen === true ?\r\n          \r\n                 \r\n          <div style={modalBox}>\r\n          <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\r\n         {/* <ReactHlsPlayer\r\n     src={videoid}    autoPlay={false}\r\n     controls={true}\r\n     width=\"100%\"\r\n     height=\"100%\"\r\n     hlsConfig={{\r\n         maxLoadingDelay: 4,\r\n         minAutoBitrate: 0,\r\n         lowLatencyMode: true,\r\n       }}\r\n   /> */}\r\n\r\n   <div style={{margin: \"50px 0 0 0\"}}>\r\n   <ReactPlayer\r\n     url={videoid}\r\n     controls={true}\r\n     playing={true}\r\n     width='100%'\r\n     height='100%'\r\n    />\r\n       </div>\r\n     \r\n    </div>\r\n  : \"\"}\r\n           \r\n           </div>\r\n\r\n    );\r\n}\r\n\r\nexport default QueryRecording;","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js",["2684","2685","2686","2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction DraftReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [report, setReport] = useState();\r\nvar rowStyle2 = {}\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n   \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n   \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n   \r\n    setStatus(value);\r\n  };\r\n  // view report\r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return (\r\n          <>\r\n           \r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 1,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n    \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n\r\n\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n  <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\customer\\CustHistory.js",["2701","2702","2703","2704","2705","2706","2707","2708","2709"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction CustHistory({ history, toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n  \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Customer Details</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            {/* <thead>\r\n              <tr>\r\n               \r\n                <th scope=\"row\">Query Raised</th>\r\n                <th scope=\"row\">Query Completed</th>\r\n                \r\n                <th scope=\"row\">Query Inprogress</th>\r\n                <th scope=\"row\">Query Declined</th>\r\n              </tr>\r\n            </thead> */}\r\n\r\n            {history != undefined \r\n              ? \r\n                  <tbody>\r\n                      <tr>\r\n                      <th scope=\"row\">Query Raised</th>\r\n                      <td>{history.total}</td>\r\n                      </tr>\r\n                      <tr>\r\n                      <th scope=\"row\">Query Completed</th>\r\n                     <td>{history.inprogress_queries}</td>\r\n                     </tr>\r\n                     <tr>\r\n                     <th scope=\"row\">Query Inprogress</th>\r\n                     <td>{history.complete_query}</td>\r\n                     </tr>\r\n                     <tr>\r\n                     <th scope=\"row\">Query Declined</th>\r\n                     <td>{history.declined_queries}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                \r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustHistory;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\CustomerListFilter.js",["2710","2711","2712","2713","2714","2715","2716"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction CustomerListFilter(props) {\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n\r\n  const { setData, searchQuery, setRecords, records, getCustomer  } = props;\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n  \r\n  const resetData = () => {\r\n   \r\n    reset();\r\n   getCustomer();\r\n  };\r\n\r\n  \r\n\r\n  \r\n  const onSubmit = (data) => {\r\n\r\nif(searchQuery == \"SearchQuery\")\r\naxios\r\n.get(\r\n  `${baseUrl}/admin/getAllList?&name=${data.name}&country=${data.country}&state=${data.state}&city=${data.city2\r\n  }&email=${data.email}&occupation=${data.occupation}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n)\r\n.then((res) => {\r\n\r\n  if (res.data.code === 1) {\r\n    if (res.data.result) {\r\n      setData(res.data.result);\r\n    setRecords(res.data.result.length)\r\n    }\r\n  }\r\n});     \r\n};\r\n\r\n  return (\r\n    <>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12 d-flex\">\r\n        <div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n          <div className=\"row my-3\">\r\n        <div class=\"col-sm-3\">\r\n            \r\n          <input \r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          ref={register}\r\n          />\r\n      </div>\r\n      <div class=\"col-sm-3\">\r\n            \r\n            <input \r\n            placeholder=\"Country\"\r\n            type=\"country\"\r\n            name=\"country\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n            />\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n            \r\n            <input \r\n            placeholder=\"City\"\r\n            type=\"text\"\r\n            name=\"city2\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n            />\r\n        </div>\r\n              <div class=\"col-sm-3\">\r\n                  \r\n                  <input \r\n                  placeholder=\"State\"\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  className=\"form-control\"\r\n                  ref={register}/>\r\n              </div>\r\n             \r\n              \r\n          \r\n          </div>\r\n          <div class=\"row my-3\">\r\n          <div class=\"col-sm-3\">\r\n                \r\n                <input \r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                ref={register}/>\r\n            </div>\r\n            <div class=\"col-sm-3\">\r\n              \r\n              <input \r\n              placeholder=\"Occupation\"\r\n              type=\"text\"\r\n              name=\"occupation\"\r\n              className=\"form-control\"\r\n              ref={register}/>\r\n          </div>\r\n          <div class=\"form-inline\">\r\n             \r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">From</label>\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateFrom\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                 max={item}\r\n               />\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">To</label>\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateTo\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                 defaultValue={item}\r\n                 max={item}\r\n               />\r\n             </div>\r\n</div>\r\n          </div>\r\n             \r\n              <div class=\"row my-3\">\r\n             \r\n             <div class=\"col-sm-6\">\r\n             <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n              <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n        <div class=\"form-group d-inline-block\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n             </div>\r\n              \r\n              </div>\r\n \r\n           \r\n\r\n           \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default CustomerListFilter;\r\n","D:\\Mazars\\src\\components\\PendingForAllocation\\History.js",["2717","2718","2719","2720","2721","2722","2723","2724"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history,toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n\r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Query No</th>\r\n                <th scope=\"row\">Status</th>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <th scope=\"row\">Notes</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.assign_no}</td>\r\n                      <td>{p.status}</td>\r\n                      <td>{p.date_of_allocation}</td>\r\n                      <td>{p.notes}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\config\\services\\TaxProffesional.js",["2725"],"import http from \"../http/http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/tp/getTaxProfessional\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/tutorials\", data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\r\n};\r\n\r\nconst editTL = (id) => {\r\n  return http.get(`/tl/getTeamLeader?id=212`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  remove,\r\n  editTL\r\n};\r\n","D:\\Mazars\\src\\components\\LoadingTime\\LoadingTime.js",["2726","2727"],"import Swal from \"sweetalert2\";\r\n const LoadingError = (setLoading) => {\r\nsetTimeout(() =>{\r\n    setLoading(false)\r\n    Swal.fire({\r\n        title : \"error\",\r\n        html : \"Something went wrong, Please try again\",\r\n        icon : \"error\"\r\n    })\r\n}, 30000)\r\n}\r\n\r\nvar timerOn = true;\r\nconst timer2 = (setTime, setDisabled) => {\r\n    function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n       \r\n      }\r\n      timer(180);\r\n}\r\nexport default {\r\n    LoadingError, timer2\r\n  };","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\RejectModal.js",["2728","2729","2730"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  nestedModal,\r\n  toggleNested,\r\n  dataItem,\r\n  docData,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", docData.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          toggleNested();\r\n          getData();\r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\r\n        <ModalHeader>Discussion</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\ChatHistory.js",["2731","2732"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\r\n  const [notification, setNotification] = useState([]);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getNotification();\r\n  }, [qno]);\r\n\r\n  const getNotification = () => {\r\n   if(qno != null){\r\n    axios\r\n    .get(\r\n      `${baseUrl}/customers/getNotification?id=${JSON.parse(\r\n        userId\r\n      )}&type=2&q_no=${qno}`\r\n    )\r\n    .then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setNotification(res.data.result);\r\n      }\r\n    });\r\n   }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\r\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Message</th>\r\n                <th scope=\"row\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            {notification.length > 0\r\n              ? notification.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.message}</td>\r\n                      <td>{p.setdate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHistory;\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\Tds.js",["2733","2734","2735","2736","2737","2738","2739","2740","2741","2742"],"D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DiscardReport.js",["2743","2744","2745","2746","2747"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  \r\n\r\n  const getHistory = () => {\r\n   \r\n      axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setData(res.data.result);\r\n        }\r\n      });\r\n   \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\components\\Search-Filter\\AdminFilter.js",["2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction AdminFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    acceptedProposal,\r\n    pendingAcceptedProposal,\r\n    declinedProposal,\r\n    declinedQueries,\r\n    pendingForProposal,\r\n    pendingAlloation,\r\n    allQueries,\r\n    assignment,\r\n    allProposal,\r\n    AllPayment,\r\n    paid,\r\n    unpaid,\r\n  } = props;\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n   \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setTax2([])\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n   \r\n\r\n\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedQueries == \"declinedQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingForProposal == \"pendingForProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allQueries == \"allQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAlloation == \"pendingAlloation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (unpaid == \"unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (paid == \"paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allProposal == \"allProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  {allQueries == \"allQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingForProposal == \"pendingForProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Preparation</option>\r\n                      <option value=\"2\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {allProposal == \"allProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Customer Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {declinedQueries == \"declinedQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Customer Declined; Queries</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n\r\n                {/* <div class=\"form-group mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div> */}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminFilter;\r\n\r\n\r\n   ","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js",["2769","2770","2771","2772","2773","2774","2775","2776","2777","2778","2779","2780","2781","2782","2783","2784","2785","2786"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport DiscardReport from \"./DiscardReport\";\r\nimport './modalSty.css';\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n  }\r\nconst viewStyle = {\r\n  display: \"block\",\r\n    width: \"100%\",\r\n    border: \"1px solid black\"\r\n}\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n               \r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr class=\"modalTable\">\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                    <td class=\"table2\">\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                    \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    </td>\r\n                  \r\n                   \r\n\r\n                    <td>\r\n                  <p>    {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                  \r\n                  <br>\r\n                  </br> \r\n                  {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }</td>\r\n                  <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\r\n                                    <i\r\n                                      class=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          class=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          // onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          class=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          // onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\config\\http\\http-common.js",[],"D:\\Mazars\\src\\components\\Admin-Header\\NavWrapper.js",["2787","2788","2789","2790","2791","2792","2793","2794","2795","2796"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CustomerNotification from \"./CustomerNotification\";\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport './index.css'\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction NavWrapper(props) {\r\n  const { color, logout, name, email, feedbackNumber} = props;\r\n\r\n  const history = useHistory();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const adminkey = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\")\r\n\r\n\r\n  return (\r\n    <>\r\n      <div class=\"navbar-wrapper\">\r\n        <div class=\"navbar-container\" style={{ background: color }}>\r\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\r\n            <ul class=\"nav navbar-nav mr-auto float-left\">\r\n              <li class=\"nav-item d-block d-md-none\">\r\n                <a\r\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\r\n                  href=\"#\"\r\n                >\r\n                  <i class=\"fa fa-bars\"></i>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"nav-item dropdown navbar-search\">\r\n                <ul class=\"dropdown-menu\">\r\n                  <li class=\"arrow_box\">\r\n                    <form>\r\n                      <div class=\"input-group search-box\">\r\n                        <div class=\"position-relative has-icon-right full-width\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search here...\"\r\n                          />\r\n                          <div class=\"form-control-position navbar-search-close\">\r\n                            <i class=\"fa fa-times\"> </i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              <li>\r\n                <h4 class=\"brand-text text-white\">{name == \"customer\" ? CommonServices.capitalizeFirstLetter(\"client\") : CommonServices.capitalizeFirstLetter(name)}: {JSON.parse(email)} </h4>\r\n              </li>\r\n             \r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav float-right\">\r\n\r\n              {name == \"customer\" && (\r\n                <CustomerNotification tokenKey={userId} name={name} />\r\n              )}\r\n\r\n              {name == \"admin\" && (\r\n                <CustomerNotification tokenKey={adminkey} name={name} />\r\n              )}\r\n\r\n              {name == \"teamleader\" && (\r\n                <CustomerNotification tokenKey={tlkey} name={name} />\r\n              )}\r\n               {name == \"taxprofessional\" && (\r\n                <CustomerNotification tokenKey={tpkey} name={name} />\r\n              )}\r\n\r\n\r\n              <li class=\"dropdown dropdown-user nav-item\">\r\n                <a\r\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\r\n                  href=\"#\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <span class=\"avatar avatar-online\">\r\n                    <img\r\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <i style={{ paddingLeft: \"6px\" }}></i>\r\n                  </span>\r\n                </a>\r\n\r\n                <div class=\"dropdown-menu dropdown-menu-right\">\r\n                  <div class=\"arrow_box_right\">\r\n\r\n                    {name == \"customer\" && (\r\n                      <Link to=\"/customer/change-password\">\r\n                        <div class=\"dropdown-item\"\r\n                          style={{ cursor: \"pointer\" }}>\r\n                          <VpnKeyIcon />\r\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\r\n                        </div>\r\n                      </Link>\r\n                    )}\r\n\r\n                    <div\r\n                      class=\"dropdown-item\"\r\n                      onClick={logout}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <LockOpenIcon />\r\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavWrapper;\r\n\r\n\r\n","D:\\Mazars\\src\\components\\Admin-Header\\CustomerNotification.js",["2797","2798","2799"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction CustomerNotification({ tokenKey, name }) {\r\n\r\n\r\n\r\n   \r\n    const [countNotification, setCountNotification] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n        getNotification();\r\n       \r\n    }, [tokenKey]);\r\n   \r\n    const getNotification = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                   \r\n                   if(res.data.result[0] != undefined){\r\n                    setCountNotification(res.data.result[0].total);\r\n                   }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\r\n                <li class=\"dropdown dropdown-notification nav-item\">\r\n                    {countNotification ? (\r\n                     \r\n                           \r\n                                <a href=\"#\" class=\"notification\">\r\n                                <Link to ={`/${name}/message`} style={{color : \"white\"}}>Inbox</Link>\r\n                                    <span class=\"badge\">{countNotification}</span>\r\n                                    \r\n                                </a>\r\n                           \r\n                         \r\n                           \r\n                                \r\n                        \r\n                    ) : null}\r\n                </li>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default CustomerNotification;\r\n","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\History.js",["2800","2801","2802","2803","2804","2805","2806","2807"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history, toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n   \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">From</th>\r\n                <th scope=\"row\">To</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Email</th>\r\n                <th scope=\"row\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.from_date}</td>\r\n                      <td>{p.to_date}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.personal_email}</td>\r\n                      <td>{p.phone}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\History.js",["2808","2809","2810","2811","2812","2813","2814","2815"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history,toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n   \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">From</th>\r\n                <th scope=\"row\">To</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Email</th>\r\n                <th scope=\"row\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                      <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.from_date}</td>\r\n                      <td>{p.to_date}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.personal_email}</td>\r\n                      <td>{p.phone}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Generated.js",["2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832","2833"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport Records from \"../../../components/Records/Records\";\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    \r\n \r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.id}`,\r\n                                index : 0,\r\n                                routes: \"adinvoice\",\r\n                                \r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"invoice_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                             \r\n                        </div>\r\n                      \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n      \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"admingenerated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                    />\r\n\r\n                   \r\n                  \r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\Admin\\Invoice\\CreateInvoice.js",["2834","2835","2836","2837"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nconst CreateInvoice = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [proposal, setProposal] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    const [records, setRecords] = useState([]);\r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.id}`,\r\n                                index : 1,\r\n                                routes: \"adinvoice\",\r\n                                \r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        \r\n       \r\n       \r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     invoice = \"admincreate\" \r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default CreateInvoice;","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Demo.js",["2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850"],"D:\\Mazars\\src\\components\\Search-Filter\\RecordingFilter.js",["2851","2852","2853","2854","2855","2856","2857","2858","2859","2860"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction RecordingFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getRecording,\r\n    SearchQuery,\r\n   userid,\r\n  \r\n \r\n  } = props;\r\n  // const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n \r\n\r\n  \r\n \r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n   getRecording();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n \r\nif(SearchQuery == \"SearchQuery\") {\r\n  \r\n    axios\r\n        .get(\r\n          `${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}&assign_id=${data.queryNo}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n}\r\n\r\n   \r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n          \r\n             <input\r\n                    type=\"text\"\r\n                    name=\"queryNo\"\r\n                    ref={register}\r\n                    className=\"form-select form-control\"\r\n                    \r\n                  />\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecordingFilter;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\ResendOtp.js",["2861","2862"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setTime, setDisabled, loading, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/admin/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime(setTime, setDisabled);\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n             \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n{loading === true ? \"\" :\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n            </div>}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\components\\PendingForAllocation\\PendingForAllocation.js",["2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport History from \"./History\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingAllocation({ CountPendingForAllocation }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n       \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPendingForAllocation();\r\n  }, []);\r\n\r\n  const getPendingForAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        // CountPendingForAllocation(res.data.result.length);\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n         \r\n          <>\r\n            {row.is_assigned === \"1\" ? (\r\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\r\n                Allocated to {row.tname} on\r\n                <p>{row.allocation_time}</p>\r\n              </p>\r\n            ) : (\r\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                <div title=\"Assign to\">\r\n                  <Link\r\n                    to={`/admin/queryassing/${row.id}`}\r\n                  >\r\n                    <i class=\"fa fa-share\"></i>\r\n                  </Link>\r\n\r\n                </div>\r\n                <div title=\"Decline Query\">\r\n                  <Link\r\n                    to={`/admin/query_rejection/${row.id}`}\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-trash\"\r\n                    ></i>\r\n                  </Link>\r\n                </div>\r\n\r\n                {/* <div title=\"Send Message\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/admin/chatting/${row.id}`,\r\n                      obj: {\r\n                        message_type: \"4\",\r\n                        query_No: row.assign_no,\r\n                        query_id: row.id,\r\n                        routes: `/admin/queriestab`\r\n                      }\r\n                    }}\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-comments-o\"\r\n                      style={{\r\n                        fontSize: 16,\r\n                        cursor: \"pointer\",\r\n                        marginLeft: \"8px\",\r\n                        color: \"blue\"\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </div> */}\r\n\r\n              </div>\r\n\r\n\r\n\r\n            )}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForAllocation}\r\n            pendingAlloation=\"pendingAlloation\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n          <History history={history} toggle={toggle} modal={modal} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingAllocation;\r\n","D:\\Mazars\\src\\components\\AllQueriesData\\AllQueriesData.js",["2878","2879","2880","2881","2882","2883","2884","2885"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\r\nimport { DataValue } from \"../../pages/Admin/QueriesTab/QueriesTab\";\r\n\r\n\r\nfunction AllQueriesData(props) {\r\n\r\n  const [allQueriesData, setAllQueriesData] = useState([])\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getAllQueriesData();\r\n  }, [props.allData]);\r\n\r\n  const getAllQueriesData = () => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n       // setAllQueriesData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n    setAllQueriesData(props.allData)\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n\r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"85px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n           {row.status == \"Declined Query\"  ? null : \r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/admin/queriestab`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n\r\n            <div title=\"View Discussion Message\">\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"orange\"\r\n                }}\r\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n              ></i>\r\n            </div>\r\n          </div>\r\n}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n   \r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setAllQueriesData}\r\n            getData={getAllQueriesData}\r\n            allQueries=\"allQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n         {allQueriesData != undefined ? \r\n          <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={allQueriesData}\r\n          columns={columns}\r\n          rowIndex\r\n          wrapperClasses=\"table-responsive\"\r\n        /> : \"\"}\r\n\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAllQueriesData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllQueriesData;\r\n","D:\\Mazars\\src\\components\\PendingForProposals\\PendingForProposals.js",["2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingForProposals({ CountPendingProposal }) {\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const [nonpendingData, setNonPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n     \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingForProposals();\r\n  }, []);\r\n\r\n  const getPendingForProposals = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setNonPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // CountPendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n          \r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tname\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setNonPendingData}\r\n            getData={getPendingForProposals}\r\n            pendingForProposal=\"pendingForProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={nonpendingData}\r\n            columns={columns}\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>History</ModalHeader>\r\n            <ModalBody>\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"row\">S.No</th>\r\n                    <th scope=\"row\">Name</th>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <th scope=\"row\">Status</th>\r\n                    <th scope=\"row\">Date of Allocation</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {history.length > 0\r\n                  ? history.map((p, i) => (\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{p.name}</td>\r\n                        <td>{p.assign_no}</td>\r\n                        <td>{p.status}</td>\r\n                        <td>{p.date_of_allocation}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ))\r\n                  : null}\r\n              </table>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggle}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForProposals;\r\n","D:\\Mazars\\src\\components\\DeclinedQueries\\DeclinedQueries.js",["2899","2900","2901","2902","2903","2904","2905","2906","2907","2908"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\nfunction DeclinedQueries({ CountPendingForPayment }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPendingForPayment();\r\n  }, []);\r\n\r\n  const getPendingForPayment = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n\r\n        // CountPendingForPayment(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n     \r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 3,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                    <p className=\"completed\">\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForPayment}\r\n            declinedQueries=\"declinedQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n        <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;\r\n","D:\\Mazars\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js",["2909","2910","2911","2912","2913","2914","2915","2916"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\nfunction DeclinedProposal({ declinedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // declinedProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 3,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Declined of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Customer Declined; Proposal\" ?\r\n                  <p className=\"declined\">\r\n                    {row.status}\r\n                  </p> :\r\n                  null\r\n              }\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('en-US')\r\n         var x = row.ProposedAmount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p>{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getDeclinedProposal}\r\n            declinedProposal=\"declinedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getDeclinedProposal}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","D:\\Mazars\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js",["2917","2918","2919","2920","2921","2922","2923","2924","2925"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AcceptedProposal({ acceptedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAcceptedProposal();\r\n  }, []);\r\n  const getAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\r\n   \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n           <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 2,\r\n                routes: \"proposal\",\r\n              }}\r\n            >{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n\r\n              {\r\n                row.status == \"Accepted; Proposal\" ?\r\n                  <p className=\"completed\">\r\n                    {row.status}\r\n                  </p> :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('en-US')\r\n         var x = row.ProposedAmount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p>{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('en-US')\r\n         var x = row.accepted_amount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p>{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getAcceptedProposal}\r\n            acceptedProposal=\"acceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAcceptedProposal}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","D:\\Mazars\\src\\pages\\Admin\\Login\\VerifyOtpLogin.js",["2926"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n  \r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n   LoadingTime.timer2(setTime, setDisabled)\r\n  \r\n   \r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n  \r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n\r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"adminkey\", JSON.stringify(response.data[\"user id\"]));\r\n          localStorage.setItem(\"adminEmail\", JSON.stringify(response.data.name));\r\n          history.push(\"/admin/dashboard\");\r\n\r\n        } else {\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          setLoading(false)\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(!num)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"uid\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\components\\Common\\EmailValidation.js",["2927","2928","2929","2930"],"import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { Spinner } from \"reactstrap\"\r\nconst EmailValidation = (props) => {\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\nconst [email, setEmail] = useState([])\r\n   \r\n    const emailHandler = (e) => {\r\n      setEmail(e.target.value);\r\n      props.setEmail2(e.target.value)\r\n        if (e.target.value.length < 1) {\r\n          props.setWemail(\"\")\r\n        }\r\n      };\r\n\r\n      const emailValidation = (key) => {\r\n\r\n        var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email.length > 0 && email.match(validRegex)) {\r\n          props.setWemail(\"\");\r\n          props.setEmailError(false)\r\n          let formData = new FormData();\r\n          formData.append(\"email\", email);\r\n          formData.append(\"type\", 1);\r\n    if(props.name === \"teamleader\" || props.name ==\"taxprofessional\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/validateregistration`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n             \r\n        if (response.data.code === 1) {\r\n          props.setValiemail(response.data.result)\r\n          props.setInvalid('')\r\n          props.setEmailError(false)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          props.setInvalid(response.data.result)\r\n          props.setValiemail('')\r\n          props.setEmailError(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n    }\r\n    else{\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/validateregistration`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n             \r\n        if (response.data.code === 1) {\r\n          props.setValiemail(response.data.result)\r\n          props.setInvalid('')\r\n          props.setEmailError(false)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          props.setInvalid(response.data.result)\r\n          props.setValiemail('')\r\n          props.setEmailError(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n    }\r\n        \r\n          \r\n        }\r\n        else {\r\n          props.setEmailError(true)\r\n          props.setWemail(\"invalid email\")\r\n        }\r\n    \r\n      }\r\n    \r\nreturn(\r\n    \r\n    <>\r\n    <input\r\n                        type=\"text\"\r\n                        name=\"p_email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email || props.emailError === true || props.wEmail || props.invalid,\r\n                        })}\r\n                        onChange={(e) => emailHandler(e)}\r\n                        onBlur={(e) => emailValidation(e)}\r\n                        placeholder=\"Enter Your Password\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n    </>\r\n)\r\n}\r\nexport default EmailValidation;","D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js",["2931","2932","2933","2934","2935","2936","2937","2938","2939","2940"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport ViewComponent from \"../ViewProposal/ViewComponent\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AllProposalComponent({ allProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [viewData, setViewData] = useState({});\r\n  const [viewModal, setViewModal] = useState(false);\r\n  const ViewHandler = (key) => {\r\n   \r\n    setViewModal(!viewModal);\r\n    setViewData(key);\r\n  };\r\n\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProposalData();\r\n  }, []);\r\n\r\n  const getProposalData = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 0,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance / decline of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <div>\r\n                    {row.status}/\r\n                    <p className=\"inprogress\">\r\n                      {row.statusdescription}\r\n                    </p>\r\n                  </div>\r\n                  :\r\n                  row.status == \"Customer Declined; Proposal\" ?\r\n                    <p className=\"declined\">\r\n                      {row.status}\r\n                    </p> :\r\n                    row.status == \"Accepted; Proposal\" ?\r\n                      <p className=\"completed\">\r\n                        {row.status}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n       var nfObject = new Intl.NumberFormat('en-US')\r\n        var x = row.ProposedAmount;\r\n        console.log(nfObject.format(x))\r\n        return(\r\n          <p>{nfObject.format(x)}</p>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getProposalData}\r\n            allProposal=\"allProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n\r\n          <ViewComponent\r\n            ViewHandler={ViewHandler}\r\n            viewModal={viewModal}\r\n            viewData={viewData}\r\n            getProposalData={getProposalData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getProposalData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllProposalComponent;\r\n","D:\\Mazars\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js",["2941","2942","2943","2944","2945","2946","2947","2948"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction PendingForAcceptence({ pendingProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPendingAcceptedProposal();\r\n  }, []);\r\n\r\n  const getPendingAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // pendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 1,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('en-US')\r\n         var x = row.ProposedAmount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p>{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n\r\n              {row.statuscode > \"3\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getPendingAcceptedProposal}\r\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getPendingAcceptedProposal}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n","D:\\Mazars\\src\\pages\\Admin\\meeting\\index.jsx",[],"D:\\Mazars\\src\\views\\EditQuery\\DeleteQuery.js",["2949","2950","2951"],"import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction DeleteQuery({ id, setLoading }) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Want to delete query ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, deleted it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n          history.push(\"/customer/queries\");\r\n        } else {\r\n          setLoading(false)\r\n          Swal.fire(\"Oops...\", \"Query not deleted\", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteQuery;\r\n\r\n{\r\n  /* <i\r\n        className=\"fa fa-trash\"\r\n        style={{\r\n          fontSize: 16,\r\n          cursor: \"pointer\",\r\n        }}\r\n        \r\n      ></i> */\r\n}\r\n","D:\\Mazars\\src\\views\\ProposalTab\\AcceptedProposal.js",["2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964","2965"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div className=\"completed\">\r\n                            {row.status}\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\r\n\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        acceptedProposal=\"acceptedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","D:\\Mazars\\src\\views\\ProposalTab\\DeclinedProposal.js",["2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n// import ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div className=\"declined\">\r\n                            {row.status}\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        declinedProposal=\"declinedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    {/* <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    /> */}\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\InvoiceFilter.js",["2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst InvoiceFilter = (props) => {\r\n\r\n   const { handleSubmit, register, errors, reset } = useForm();\r\n   var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n  \r\n  const onSubmit = (data) => {\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"qno\", data.query_no);\r\n    formData.append(\"from\", data.p_dateFrom);\r\n    formData.append(\"to\", data.p_dateTo);\r\n    formData.append(\"installment_no\", data.installment_no)\r\n    formData.append(\"status\", data.opt)\r\n    if(props.invoice == \"generated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"create\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=0&ststus=${data.opt}`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n       props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"tpcreate\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=0`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n       props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if(props.invoice == \"tpgenerated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if(props.invoice == \"admingenerated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"admincreate\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=0`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    } \r\n    \r\n  }\r\n  const resetData = () => {\r\n    reset();\r\n    props.getData()\r\n  }\r\n    return(\r\n       <>\r\n      \r\n        <form onSubmit={handleSubmit(onSubmit)}> \r\n           <div className=\"row\">\r\n               <div className=\"col-md-3\">\r\n               <input   \r\n            type = \"text\"\r\n            name=\"query_no\"\r\n            ref={register}\r\n            placeholder=\"Enter Query Number\" \r\n            className=\"form-control\"/>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                  <select\r\n                   ref={register}\r\n                    className=\"form-select form-control\"\r\n                    style={{ height: \"33px\" }}\r\n                    name=\"installment_no\">\r\n                      <option value=\"\">Please select installment</option>\r\n                     <option value=\"1\">1</option>\r\n                     <option value=\"2\">2</option>\r\n                     <option value=\"3\">3</option>\r\n                     <option value=\"4\">4</option>\r\n                     <option value=\"5\">5</option>\r\n                     <option value=\"6\">6</option>\r\n                  </select>\r\n                       </div>\r\n                  <div className=\"col-md-7\">\r\n                  <div class=\"form-inline\">\r\n             \r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">From</label>\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateFrom\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n               \r\n               />\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">To</label>\r\n             </div>\r\n\r\n             <div class=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateTo\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                defaultValue={item}\r\n               \r\n               />\r\n             </div>\r\n</div>\r\n                    </div>    \r\n                        \r\n                \r\n                      \r\n           </div>\r\n          <div className=\"mt-3\">\r\n        \r\n           <div class=\"form-group mx-sm-1  mb-2\">\r\n         <div className=\"row\">\r\n      {props.invoice ==\"tpcreate\" || props.invoice == \"admincreate\" || props.invoice == \"create\" ? \"\" :\r\n        <div className=\"col-md-2\">\r\n        <select name=\"opt\" className=\"form-select form-control\" ref={register}  style={{ height: \"33px\" }}>\r\n        <option value=\"\">Select </option>\r\n           <option value=\"0\">Unpaid</option>\r\n           <option value=\"1\">Paid</option>\r\n           <option value=\"2\">Declined</option>\r\n           </select>\r\n          </div> }\r\n           <div className=\"col-md-3\">\r\n         \r\n          <button className=\"btn btn-success\" type=\"submit\"  style={{ height: \"33px\" }}>Search</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={() => resetData()}  style={{ height: \"33px\" }}>Reset</button>\r\n            </div>\r\n        \r\n                 <div className=\"col-md-4\">\r\n                 <span style={{display : \"flex\"}}>\r\n                 <label className=\"form-select form-control\"\r\n                  >Total Records : {props.records}</label>\r\n                 </span>\r\n                   </div>\r\n           </div>\r\n                </div>\r\n          </div>\r\n         \r\n        </form>\r\n       </>\r\n    )\r\n\r\n}\r\nexport default InvoiceFilter;","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Tds.js",["2990","2991","2992","2993","2994","2995","2996"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router\";\r\nimport { parseInt } from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Tds (props)  {\r\n  const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const f2 = useRef(null);\r\n    const [sac33, setSac] = useState([])\r\n    const [services2, setServices2] = useState();\r\n    const [services, setServices] = useState();\r\n    const [cgetTotal, setCgstTotal] = useState()\r\n    const [sgetTotal, setSgstTotal] = useState()\r\n    const [igetTotal, setIgstTotal] = useState()\r\n    const [gst, setGst] = useState()\r\n    const [tds2, setTds] = useState()\r\n    const [grandTotal, setgrandTotal] = useState();\r\n   const [total, setTotal] = useState()\r\n   const [pocketExp, setPocketExp] = useState()\r\n   const [cgetRate, setCgetRate] = useState()\r\n   const [igetRate, setIgetRate] = useState();\r\n   const [sgetRate, setSgetRate] = useState();\r\n   const [basicAmount, setBasicAmount] = useState()\r\n   const [billNo, setBillNo] = useState();\r\n   const [gstNum , setGstNum] = useState();\r\n   const [disabled, setDisabled] = useState(false)\r\n  \r\n\r\nvar tdsRate = 10;\r\nconst percent = {\r\n  display : \"flex\", \r\n  justifyContent : \"space-between\",\r\n  flexDirection : \"row\",\r\n  alignItems : \"center\"\r\n}\r\n  const getServices = () => {\r\n    axios.get(`${baseUrl}/tl/getServices`)\r\n    .then((res) => {\r\n\r\n      if(res.data.code === 1){\r\n        setServices(res.data.result);\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getServices();\r\n  }, [])\r\n  useEffect(() => {\r\n    if(props.generated == \"edited\"){\r\n    getDataild();\r\n    }\r\n    else {\r\n      setCgetRate(18);\r\n      setIgetRate(0);\r\n      setSgetRate(0)\r\n      setGstNum(props.gstNo);\r\n    setBillNo(props.billNo +\"/\" + props.id)\r\n    setBasicAmount(props.paidAmount)\r\n    setPocketExp(0)\r\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\r\n    setIgstTotal(parseInt(0));\r\n    setSgstTotal(parseInt(0))\r\n    setGst(parseInt(props.paidAmount * 18 / 100))\r\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\r\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\r\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\r\n    }\r\n  }, [props.paidAmount])\r\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\r\n\r\nconst getDataild = () => {\r\n  axios\r\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\r\n.then((res) => {\r\n\r\nif(res.data.payment_detail){\r\n  res.data.payment_detail.map((i) => {\r\n   \r\n     setGstNum(i.gstin_no)\r\n setBillNo(i.billno)\r\n\r\n setBasicAmount(parseInt(i.paid_amount))\r\n setPocketExp(parseInt(i.opt_expenses));\r\n setCgstTotal(parseInt(i.cgst_amount));\r\n setIgstTotal(parseInt(i.igst_amount));\r\n setSgstTotal(parseInt(i.sgst_amount));\r\n setCgetRate(parseInt(i.cgst_rate));\r\n setIgetRate(parseInt(i.igst_rate));\r\n setSgetRate(parseInt(i.sgst_rate));\r\nsetTds(parseInt(i.tds_amount))\r\n setgrandTotal(parseInt(i.payable_amount))\r\n setTotal(parseInt(i.invoice_amount))\r\n setGst(parseInt(i.gst));\r\n setDisabled(true);\r\n  })\r\n}\r\n\r\n})\r\n}\r\n  // Cgst Tax function\r\nconst cgstFun = (e) => {\r\n  setCgetRate(e.target.value);\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = parseInt(a * e.target.value / 100)\r\n   setCgstTotal(parseInt(cget));\r\n   setGst(parseInt(cget + igetTotal + sgetTotal))\r\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\r\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\r\n\r\n}\r\n// Sgst tax function\r\nconst sgstFun = (e) => {\r\n  setSgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = parseInt(a * e.target.value / 100)\r\n        setSgstTotal(parseInt(cget))\r\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\r\n        setGst(parseInt(cget + igetTotal + cgetTotal))\r\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\r\n }\r\n// Igst tax function\r\n const igstFun = (e) => {\r\n   setIgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n      let cget = parseInt(a * e.target.value / 100) \r\n         setIgstTotal(cget) \r\n         setGst(parseInt(cget + sgetTotal + cgetTotal));\r\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\r\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\r\n        \r\n }\r\n // Tds function\r\n const tdsFun = (e) => {\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = (a * e.target.value / 100)\r\n      setTds(cget)\r\n    setgrandTotal(parseInt(total) - parseInt(cget))    \r\n } \r\n\r\n // Pocket Function\r\n const pocketExpFun = (e) => {\r\n  setPocketExp(e.target.value)\r\n  let a = parseInt(e.target.value) + parseInt(basicAmount);\r\n  if(e.target.value > 0){\r\n    setCgstTotal(a * cgetRate / 100);\r\n   setSgstTotal(a * sgetRate / 100);\r\n   setIgstTotal(a * igetRate / 100);\r\n   // })\r\n setGst((oldData) => {\r\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\r\n })\r\n  setTotal((oldData) => {\r\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\r\n  })\r\n  }\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(a * tdsRate / 100))\r\n  })\r\n}\r\n\r\nconst basicFun = (e) => {\r\n  let a = parseInt(e.target.value) + parseInt(pocketExp);\r\n  setBasicAmount(e.target.value);\r\n  if(e.target.value > 0){\r\n    setCgstTotal(a * cgetRate / 100);\r\n   setSgstTotal(a * sgetRate / 100);\r\n   setIgstTotal(a * igetRate / 100);\r\n setGst((oldData) => {\r\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\r\n })\r\n  setTotal((oldData) => {\r\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\r\n  })\r\n  }\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(a * tdsRate / 100))\r\n  })\r\n}\r\n    const onSubmit= (value) => {\r\n      \r\n        let formData = new FormData();\r\n       formData.append(\"tl_id\", JSON.parse(userid));\r\n         formData.append(\"id\", props.id)\r\n         formData.append(\"qno\", props.report)\r\n         formData.append(\"description\", services2);\r\n         formData.append(\"serviceCode\", sac33);\r\n        formData.append(\"basic_amount\", basicAmount);\r\n        formData.append(\"cgst_rate\", cgetRate);\r\n        formData.append(\"opt_expenses\", pocketExp);\r\n        formData.append(\"cgst_total\", cgetTotal)\r\n        formData.append(\"sgst_rate\", sgetRate);\r\n       \r\n        formData.append(\"sgst_total\", sgetTotal)\r\n        formData.append(\"igst_rate\", igetRate);\r\n      \r\n        formData.append(\"igst_total\", igetTotal)\r\n        formData.append(\"total\", total);\r\n        formData.append(\"tds_rate\", tdsRate);\r\n        formData.append(\"gst\", gst);\r\n        formData.append(\"tds_total\", tds2)\r\n        formData.append(\"netpaid_amount\", grandTotal)\r\n        formData.append(\"gstin_no\", gstNum);\r\n        formData.append(\"bill_no\", billNo)\r\n        axios({\r\n            method : \"POST\",\r\n            data : formData,\r\n            url : `${baseUrl}/tl/generateInvoive`\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n              Swal.fire({\r\n                title : \"success\", \r\n                html : \"Invoice generated successfully\",\r\n                icon : \"success\"\r\n              })\r\n                history.push(\"/admin/adinvoice\")\r\n            }\r\n          \r\n        })\r\n      \r\n    }\r\n  const serviceFun = (e) => {\r\n    \r\n   services.map((k) => {\r\n    \r\nif(k.id == e) {\r\nsetSac(k.sac)\r\nsetServices2(k.service)\r\n}\r\n   })\r\n     \r\n  }\r\n\r\n  \r\n    return(\r\n      \r\n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \r\n        \r\n        </ModalHeader>\r\n        <ModalBody>\r\n    \r\n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\r\n    <div className=\"container gutter-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>GSTIN</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"gst_in\"\r\n         value={gstNum}\r\n         onChange= {(e) => setGstNum(e.target.value)}\r\n         className=\"form-control\"\r\n          />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n          <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>Invoice No</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"bill_no\"\r\n         value={billNo}\r\n         disabled = {disabled}\r\n         className=\"form-control\"\r\n         onChange= {(e) => (setBillNo(e.target.value) + \"/id\")}\r\n          />\r\n            </div>\r\n          </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"row my-2\">\r\n              {services === undefined ? \"\" : \r\n              <div className=\"col-md-6\">\r\n              <label>Descirption <span className=\"declined\">*</span></label>\r\n          <select \r\n           ref={register({ required: true })}\r\n           name=\"description\"\r\n        style={{height : \"33.5px\"}}\r\n          onChange = {(e) => serviceFun(e.target.value)}\r\n          className={classNames(\"form-control\", {\r\n            \"is-invalid\": errors.p_name,\r\n          })}>\r\n              <option value=\"\">--select--</option>\r\n          {services.map((i) => (\r\n               <option value={i.id} key={i.id} className=\"form-control\"> {i.service}</option>\r\n          ))}\r\n            </select>\r\n              </div>}\r\n                  <div className=\"col-md-6\">\r\n                  <label>Basic Amount</label>\r\n                    <input \r\n                    type=\"text\"\r\n\r\n                    name=\"basic_amount\"\r\n                    ref={register({required : true})}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Amount\" \r\n                    onChange= {(e) => basicFun(e)}\r\n                  value={basicAmount}/>\r\n                    </div> \r\n            </div>\r\n           <div className=\"row my-2\">\r\n             <div className=\"col-md-6\">\r\n               <h5>Out of Pocket Expenses</h5>\r\n               </div>\r\n               <div className=\"col-md-6\">\r\n               <input \r\n                    type=\"text\"\r\n                    name=\"pocket_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    onChange={(e) => pocketExpFun(e)}\r\n                    value={pocketExp}\r\n                    placeholder=\"Pocket Amount\"  />\r\n               </div>\r\n             </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4\">\r\n              <h4>CGST</h4>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\" style={percent}>\r\n              <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    \r\n                    placeholder=\"Rate\"\r\n                    value={cgetRate}\r\n                    name=\"cgst_rate\"\r\n                    onChange= {(e) => cgstFun(e)} /> %\r\n                \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"0\" \r\n                    disabled \r\n                    name=\"cgst_total\"\r\n                    value = {Math.round(cgetTotal)}/>\r\n                  </div>\r\n                 </div>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                  <h4>SGST/UTGST </h4>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-6\" style={percent}>\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_rate\"\r\n                    placeholder=\"Rate\" \r\n                   value = {sgetRate}\r\n                    onChange= {(e) => sgstFun(e)}/> %\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_total\" \r\n                    disabled\r\n                    value={Number(sgetTotal).toFixed(0)}/>\r\n                          </div>\r\n                  </div>\r\n            \r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n              <h4>IGST</h4>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-6\" style={percent}>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    placeholder=\"Rate\"\r\n                    ref={register}\r\n                    name=\"igst_rate\"\r\n                   value={igetRate}\r\n                    onChange= {(e) => igstFun(e)} /> %\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-6\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    name=\"igst_total\"\r\n                    disabled\r\n                    ref={register}\r\n                    value={Number(igetTotal).toFixed(0)} />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n                \r\n          <hr/>\r\n          \r\n            <div className=\"row my-2\">\r\n                <div className=\"col-md-4\">\r\n                  <h4>Total GST</h4>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"total\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(gst)} />\r\n                            </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row my-2\">\r\n                <div className=\"col-md-8\">\r\n                  <h4>Total Invoice Amount</h4>\r\n                    </div>\r\n                   \r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"totalAmount\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Number(total).toFixed(0)} />\r\n                            </div>\r\n                </div>\r\n           \r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4 my-1\">\r\n              <h4>TDS </h4>\r\n                  </div>\r\n                <div className=\"col-md-4 my-1\">\r\n               <div className = \"row\">\r\n                \r\n                   <div className=\"col-md-6\"  style={percent}>\r\n                   <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                   \r\n                    placeholder=\"Rate\"\r\n                    name=\"tds_rate\"\r\n                    defaultValue={tdsRate}\r\n                    ref={register}\r\n                    onChange= {(e) => tdsFun(e)} /> %\r\n                     </div>\r\n                     <div className=\"col-md-6\">\r\n                   </div>\r\n                 </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                    value={Number(tds2).toFixed(0)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-6 my-1\">\r\n              <h4>Net Payable Amount</h4>\r\n                  </div>\r\n                  <div className=\"col-md-2 my-1\"></div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                  value={Number(grandTotal).toFixed(0)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n        <ModalFooter>\r\n       \r\n             <>\r\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\r\n          \r\n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \r\n             </>\r\n        </ModalFooter>\r\n          </div>\r\n        </form>\r\n       \r\n           \r\n      \r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n}\r\nexport default Tds;","D:\\Mazars\\src\\agora.config.js",[],"D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx",["2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017"],"// import React from \"react\";\r\n// import { merge } from \"lodash\";\r\n// import AgoraRTC from \"agora-rtc-sdk\";\r\n// import MicNoneIcon from '@material-ui/icons/MicNone';\r\n// import MicOffIcon from '@material-ui/icons/MicOff';\r\n// import axios from \"axios\";\r\n// import { baseUrl } from \"../../../config/config\";\r\n// import \"./canvas.css\";\r\n// import \"../../../assets/fonts/css/icons.css\";\r\n// import {\r\n//   Modal,\r\n//   ModalTitle,\r\n//   ModalHeader,\r\n//   ModalBody,\r\n//   ModalFooter,\r\n//   Button,\r\n// } from \"reactstrap\";\r\n// import RecordingModal from \"./RecordingModal\";\r\n// import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n// import { green ,red} from '@material-ui/core/colors';\r\n// import { Redirect } from \"react-router\";\r\n// import recImg from \"../../../loader.gif\";\r\n// const tile_canvas = {\r\n//   \"1\": [\"span 12/span 24\"],\r\n//   \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n//   \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n//   \"4\": [\r\n//     \"span 6/span 12\",\r\n//     \"span 6/span 12\",\r\n//     \"span 6/span 12\",\r\n//     \"span 6/span 12/7/13\",\r\n//   ],\r\n//   \"5\": [\r\n//     \"span 3/span 4/13/9\",\r\n//     \"span 3/span 4/13/13\",\r\n//     \"span 3/span 4/13/17\",\r\n//     \"span 3/span 4/13/21\",\r\n//     \"span 9/span 16/10/21\",\r\n//   ],\r\n//   \"6\": [\r\n//     \"span 3/span 4/13/7\",\r\n//     \"span 3/span 4/13/11\",\r\n//     \"span 3/span 4/13/15\",\r\n//     \"span 3/span 4/13/19\",\r\n//     \"span 3/span 4/13/23\",\r\n//     \"span 9/span 16/10/21\",\r\n//   ],\r\n//   \"7\": [\r\n//     \"span 3/span 4/13/5\",\r\n//     \"span 3/span 4/13/9\",\r\n//     \"span 3/span 4/13/13\",\r\n//     \"span 3/span 4/13/17\",\r\n//     \"span 3/span 4/13/21\",\r\n//     \"span 3/span 4/13/25\",\r\n//     \"span 9/span 16/10/21\",\r\n//   ],\r\n// };\r\n\r\n// /**\r\n//  * @prop appId uid\r\n//  * @prop transcode attendeeMode videoProfile channel baseMode\r\n//  */\r\n\r\n\r\n// class AgoraCanvas extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.client = {};\r\n//     this.localStream = {};\r\n//     this.shareClient = {};\r\n//     this.shareStream = {};\r\n//     this.state = {\r\n//       displayMode: \"pip\",\r\n//       streamList: [],\r\n//       readyState: false,\r\n//       stateSharing: false,\r\n//       resID: '',\r\n//       showModal: false,\r\n//       recordDisplay: false,\r\n//       data: {},\r\n//       item:{},\r\n//       articleId : [],\r\n//       articleId2 : [],\r\n//       showRecBtn : false,\r\n//       showButton : '',\r\n//       clickDisable : false\r\n//     };\r\n\r\n//     this.toggleModal = this.toggleModal.bind(this);\r\n//     this.startRecording = this.startRecording.bind(this);\r\n//   }\r\n\r\n \r\n//   allrecording = [];\r\n//   teamKey = window.localStorage.getItem(\"adminkey\");\r\n//   uid = Math.floor((Math.random() * 10000) + 1);\r\n//   channelName = this.props.channel\r\n//   tempArray = []\r\n//  vendor = 1\r\n//  region = 14;\r\n//  bucket = \"vride-multitvm\";\r\n//  accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n//  secretKey = \"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\";\r\n// allrecording;\r\n\r\n//   componentWillMount() {\r\n//     let $ = this.props;\r\n//     // init AgoraRTC local client\r\n//     this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n//     this.client.init($.appId, () => {\r\n     \r\n//       this.subscribeStreamEvents();\r\n\r\n//       this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n//         this.state.uid = uid;\r\n       \r\n//         // create local stream\r\n//         // It is not recommended to setState in function addStream\r\n//         this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n//         this.localStream.init(\r\n//           () => {\r\n//             if ($.attendeeMode !== \"audience\") {\r\n//               this.addStream(this.localStream, true);\r\n//               this.client.publish(this.localStream, (err) => {\r\n              \r\n//               });\r\n//             }\r\n//             this.setState({ readyState: true });\r\n//           },\r\n//           (err) => {\r\n           \r\n//             this.setState({ readyState: true });\r\n//           }\r\n//         );\r\n//       });\r\n//     });\r\n//   }\r\n \r\n//   componentDidMount() {\r\n//     // add listener to control btn group\r\n//     let canvas = document.querySelector(\"#ag-canvas\");\r\n//     let btnGroup = document.querySelector(\".ag-btn-group\");\r\n//     canvas.addEventListener(\"mousemove\", () => {\r\n//       if (global._toolbarToggle) {\r\n//         clearTimeout(global._toolbarToggle);\r\n//       }\r\n//       btnGroup.classList.add(\"active\");\r\n//       global._toolbarToggle = setTimeout(function () {\r\n//         btnGroup.classList.remove(\"active\");\r\n//       }, 2000);\r\n//     });\r\n//     this.getSchedulerData()\r\n//     this.accuire();\r\n//     // this.accuire()\r\n//   }\r\n// schdrularName;\r\n\r\n//   getSchedulerData =() =>{\r\n   \r\n\r\n//     axios\r\n//             .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n//             .then((res) => {\r\n                \r\n           \r\n               \r\n//                 if (res.data.code === 1) {\r\n//                   this.setState({\r\n//                     item:res.data.result.items[0],\r\n//                    showButton : res.data.result.items[0].owner_id\r\n//                   })  \r\n                        \r\n//                 }\r\n//             });\r\n//   }\r\n\r\n\r\n//   componentDidUpdate() {\r\n//     // rerendering\r\n//     let canvas = document.querySelector(\"#ag-canvas\");\r\n//     // pip mode (can only use when less than 4 people in channel)\r\n//     if (this.state.displayMode === \"pip\") {\r\n//       let no = this.state.streamList.length;\r\n//       if (no > 4) {\r\n//         this.setState({ displayMode: \"tile\" });\r\n//         return;\r\n//       }\r\n//       this.state.streamList.map((item, index) => {\r\n//         let id = item.getId();\r\n//         let dom = document.querySelector(\"#ag-item-\" + id);\r\n//         if (!dom) {\r\n//           dom = document.createElement(\"section\");\r\n//           dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n//           dom.setAttribute(\"class\", \"ag-item\");\r\n         \r\n//           canvas.appendChild(dom);\r\n//           item.play(\"ag-item-\" + id);\r\n//         }\r\n//         if (index === no - 1) {\r\n//           dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n//         } else {\r\n//           dom.setAttribute(\r\n//             \"style\",\r\n//             `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n//                     z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n//           );\r\n//         }\r\n\r\n//         item.player.resize && item.player.resize();\r\n//       });\r\n//     }\r\n//     // tile mode\r\n//     else if (this.state.displayMode === \"tile\") {\r\n//       let no = this.state.streamList.length;\r\n//       this.state.streamList.map((item, index) => {\r\n//         let id = item.getId();\r\n//         let dom = document.querySelector(\"#ag-item-\" + id);\r\n//         if (!dom) {\r\n//           dom = document.createElement(\"section\");\r\n//           dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n//           dom.setAttribute(\"class\", \"ag-item\");\r\n//           canvas.appendChild(dom);\r\n//           item.play(\"ag-item-\" + id);\r\n//         }\r\n//         dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n//         item.player.resize && item.player.resize();\r\n//       });\r\n//     }\r\n//     // screen share mode (tbd)\r\n//     else if (this.state.displayMode === \"share\") {\r\n//     }\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     this.client && this.client.unpublish(this.localStream);\r\n//     this.localStream && this.localStream.close();\r\n//     if (this.state.stateSharing) {\r\n//       this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n//       this.shareStream && this.shareStream.close();\r\n//     }\r\n//     this.client &&\r\n//       this.client.leave(\r\n//         () => {\r\n         \r\n//         },\r\n//         () => {\r\n         \r\n//         }\r\n//       );\r\n//   }\r\n\r\n//   streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n//     let defaultConfig = {\r\n//       streamID: uid,\r\n//       audio: true,\r\n//       video: true,\r\n//       screen: false,\r\n//     };\r\n\r\n//     switch (attendeeMode) {\r\n//       case \"audio-only\":\r\n//         defaultConfig.video = false;\r\n//         break;\r\n//       case \"audience\":\r\n//         defaultConfig.video = false;\r\n//         defaultConfig.audio = false;\r\n//         break;\r\n//       default:\r\n//       case \"video\":\r\n//         break;\r\n//     }\r\n\r\n//     let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n//     stream.setVideoProfile(videoProfile);\r\n//     return stream;\r\n//   };\r\n\r\n//   subscribeStreamEvents = () => {\r\n//     let rt = this;\r\n//     rt.client.on(\"stream-added\", function (evt) {\r\n//       let stream = evt.stream;\r\n     \r\n//       rt.client.subscribe(stream, function (err) {\r\n      \r\n//       });\r\n//     });\r\n\r\n//     rt.client.on(\"peer-leave\", function (evt) {\r\n     \r\n//       rt.removeStream(evt.uid);\r\n//     });\r\n\r\n//     rt.client.on(\"stream-subscribed\", function (evt) {\r\n//       let stream = evt.stream;\r\n     \r\n//       rt.addStream(stream);\r\n//     });\r\n\r\n//     rt.client.on(\"stream-removed\", function (evt) {\r\n//       let stream = evt.stream;\r\n     \r\n//       rt.removeStream(stream.getId());\r\n//     });\r\n//   };\r\n\r\n//   removeStream = (uid) => {\r\n//     this.state.streamList.map((item, index) => {\r\n//       if (item.getId() === uid) {\r\n//         item.close();\r\n//         let element = document.querySelector(\"#ag-item-\" + uid);\r\n//         if (element) {\r\n//           element.parentNode.removeChild(element);\r\n//         }\r\n//         let tempList = [...this.state.streamList];\r\n//         tempList.splice(index, 1);\r\n//         this.setState({\r\n//           streamList: tempList,\r\n//         });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   addStream = (stream, push = false) => {\r\n//     let repeatition = this.state.streamList.some((item) => {\r\n//       return item.getId() === stream.getId();\r\n//     });\r\n//     if (repeatition) {\r\n//       return;\r\n//     }\r\n//     if (push) {\r\n//       this.setState({\r\n//         streamList: this.state.streamList.concat([stream]),\r\n//       });\r\n//     } else {\r\n//       this.setState({\r\n//         streamList: [stream].concat(this.state.streamList),\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   handleCamera = (e) => {\r\n//     e.currentTarget.classList.toggle(\"off\");\r\n//     this.localStream.isVideoOn()\r\n//       ? this.localStream.disableVideo()\r\n//       : this.localStream.enableVideo();\r\n//   };\r\n\r\n//   handleMic = (e) => {\r\n//     e.currentTarget.classList.toggle(\"off\");\r\n//     this.localStream.isAudioOn()\r\n//       ? this.localStream.disableAudio()\r\n//       : this.localStream.enableAudio();\r\n//   };\r\n\r\n//   switchDisplay = (e) => {\r\n//     if (\r\n//       e.currentTarget.classList.contains(\"disabled\") ||\r\n//       this.state.streamList.length <= 1\r\n//     ) {\r\n//       return;\r\n//     }\r\n//     if (this.state.displayMode === \"pip\") {\r\n//       this.setState({ displayMode: \"tile\" });\r\n//     } else if (this.state.displayMode === \"tile\") {\r\n//       this.setState({ displayMode: \"pip\" });\r\n//     } else if (this.state.displayMode === \"share\") {\r\n//       // do nothing or alert, tbd\r\n//     } else {\r\n//       console.error(\"Display Mode can only be tile/pip/share\");\r\n//     }\r\n//   };\r\n\r\n//   hideRemote = (e) => {\r\n//     if (\r\n//       e.currentTarget.classList.contains(\"disabled\") ||\r\n//       this.state.streamList.length <= 1\r\n//     ) {\r\n//       return;\r\n//     }\r\n//     let list;\r\n//     let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n//     list = Array.from(\r\n//       document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n//     );\r\n//     list.map((item) => {\r\n//       if (item.style.display !== \"none\") {\r\n//         item.style.display = \"none\";\r\n//       } else {\r\n//         item.style.display = \"block\";\r\n//       }\r\n//     });\r\n//   };\r\n\r\n\r\n//   handleExit = async() => {\r\n//    if(this.state.clickDisable === false){\r\n//      this.setState({clickDisable : true})\r\n//     var resourceId = localStorage.getItem(\"resourceId\");\r\n//     var sid = localStorage.getItem(\"sid\");\r\n  \r\n//     var data = JSON.stringify({\r\n//       \"cname\":this.channelName,\r\n//       \"uid\":JSON.stringify(this.uid),\r\n//       \"clientRequest\":{ }});\r\n//     axios({\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"content-type\": \"application/json;charset=utf-8\",\r\n//         \"authorization\": \"Basic \"+this.encodedString,\r\n//         \"cache-control\": \"no-cache\",\r\n//       },\r\n//       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n//       data: data,\r\n//     })\r\n//     .then(response => {\r\n      \r\n//       this.tempArray.push(response.data.serverResponse.fileList)\r\n//       this.setState({showRecBtn : true})\r\n\r\n//     })\r\n//         .catch((error) => {\r\n       \r\n//       });\r\n   \r\n//    }\r\n\r\n    \r\n//   }\r\n//   sharingScreen = (e) => {\r\n//     if (this.state.stateSharing) {\r\n//       this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n//       this.shareStream && this.shareStream.close();\r\n//       this.state.stateSharing = false;\r\n//     } else {\r\n//       this.state.stateSharing = true;\r\n//       let $ = this.props;\r\n//       // init AgoraRTC local client\r\n//       this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n//       this.shareClient.init($.appId, () => {\r\n      \r\n\r\n//         this.subscribeStreamEvents();\r\n//         this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n//           this.state.uid = uid;\r\n         \r\n//           // create local stream\r\n//           // It is not recommended to setState in function addStream\r\n          \r\n//           this.shareStream = this.streamInitSharing(\r\n//             uid,\r\n//             $.attendeeMode,\r\n//             $.videoProfile\r\n//           );\r\n//           this.shareStream.init(\r\n//             () => {\r\n//               if ($.attendeeMode !== \"audience\") {\r\n//                 this.addStream(this.shareStream, true);\r\n//                 this.shareClient.publish(this.shareStream, (err) => {\r\n                  \r\n//                 });\r\n//               }\r\n//               this.setState({ readyState: true });\r\n//             },\r\n//             (err) => {\r\n             \r\n//               this.setState({ readyState: true });\r\n//             }\r\n//           );\r\n//         });\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n//     let defaultConfig = {\r\n//       streamID: uid,\r\n//       audio: true,\r\n//       video: false,\r\n//       screen: true,\r\n//     };\r\n \r\n//     switch (attendeeMode) {\r\n//       case \"audio-only\":\r\n//         defaultConfig.video = false;\r\n//         break;\r\n//       case \"audience\":\r\n//         defaultConfig.video = false;\r\n//         defaultConfig.audio = false;\r\n//         break;\r\n//       default:\r\n//       case \"video\":\r\n//         break;\r\n//     }\r\n   \r\n//     let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n//     stream.setVideoProfile(videoProfile);\r\n//     return stream;\r\n//   };\r\n\r\n\r\n//   CreateS3Folder = (uid) =>{\r\n   \r\n//     axios\r\n//             .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n//             .then((res) => {\r\n                 \r\n//             });\r\n//   }\r\n\r\n\r\n// encodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n\r\n\r\n\r\n// sleep(ms) {\r\n//   return new Promise(resolve => setTimeout(resolve, ms));\r\n// }\r\n\r\n// //get recording status\r\n//  async GetRecordingStatus(json){\r\n    \r\n\r\n//     await this.sleep(3000); \r\n//     var resourceId = json.data.resourceId;\r\n//     var sid = json.data.sid;\r\n\r\n//     localStorage.setItem(\"resourceId\", resourceId);\r\n//     localStorage.setItem(\"sid\", sid);\r\n\r\n//     fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         \"content-type\": \"application/json;charset=utf-8\",\r\n//         \"authorization\": \"Basic \"+this.encodedString,\r\n//         \"cache-control\": \"no-cache\",\r\n//       },\r\n//   })\r\n//       .then((res) => res.json())\r\n//       .then((response) => {\r\n         \r\n//           this.setState({\r\n//             data:response,\r\n//             recordDisplay:!this.state.recordDisplay\r\n//           })\r\n//           setTimeout(() => {\r\n//             this.setState({clickDisable : false})\r\n//           }, 1000)\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }\r\n\r\n\r\n\r\n// //start recording\r\n// async startRecording(key){\r\n\r\n//     var resourceId = key.data.resourceId \r\n    \r\n//     this.CreateS3Folder(JSON.stringify(this.uid));\r\n\r\n//     var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n \r\n\r\n//   await axios({\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"content-type\": \"application/json;charset=utf-8\",\r\n//         \"authorization\": \"Basic \"+this.encodedString,\r\n//         \"cache-control\": \"no-cache\",\r\n//       },\r\n//       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n//       data: data,    \r\n//     })\r\n//     .then(json => this.GetRecordingStatus(json)) \r\n//       .catch((error) => {\r\n       \r\n//       });\r\n//   };\r\n\r\n\r\n//   //recording  acquire\r\n//    accuire = () =>{\r\n   \r\n//     var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n\r\n//     axios({\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"content-type\": \"application/json;charset=utf-8\",\r\n//         \"authorization\": \"Basic \"+this.encodedString,\r\n//         \"cache-control\": \"no-cache\",\r\n//       },\r\n//       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n//       data: data,\r\n//     })\r\n//       .then(json => \r\n//         this.startRecording(json)) \r\n    \r\n//       .catch((error) => {\r\n       \r\n//       });\r\n//   };\r\n// // Start recording button\r\n//   recStart = () => {\r\n//     this.localStream.enableAudio();\r\n//     this.localStream.enableVideo();\r\n//     this.accuire();\r\n//     this.setState({ showRecBtn: false  });\r\n    \r\n//   }\r\n\r\n//   //toggelStop\r\n//   toggleModal = (key) =>{\r\n  \r\n//   this.setState({\r\n//     showModal: !this.state.showModal,\r\n//     recordDisplay:false\r\n//   })\r\n// }\r\n\r\n\r\n//  //stop recording \r\n//  stopRecording = () => {\r\n//   if(this.state.showRecBtn === true){\r\n  \r\n// return(\r\n//   this.toggleModal(\"stop\"),\r\n// this.localStream.disableVideo()\r\n// )\r\n//   }\r\n  \r\n//   else if(this.state.showButton == JSON.parse(this.teamKey)){\r\n \r\n//     if(resourceId === undefined){\r\n//       var resourceId = localStorage.getItem(\"resourceId\");\r\n//     var sid = localStorage.getItem(\"sid\");\r\n//     }\r\n\r\n//   var data = JSON.stringify({\r\n//     \"cname\":this.channelName,\r\n//     \"uid\":JSON.stringify(this.uid),\r\n//     \"clientRequest\":{ }});\r\n//   axios({\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"content-type\": \"application/json;charset=utf-8\",\r\n//       \"authorization\": \"Basic \"+this.encodedString,\r\n//       \"cache-control\": \"no-cache\",\r\n//     },\r\n//     url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n//     data: data,\r\n//   })\r\n//   .then(json => \r\n//     this.toggleModal(json) ,\r\n//      this.setState({showRecBtn : true}),\r\n//     this.localStream.disableAudio(),\r\n//     this.localStream.disableVideo()\r\n    \r\n//     ) \r\n  \r\n//     .catch((error) => {\r\n      \r\n//     });\r\n// }\r\n// else{\r\n  \r\n//   window.location.hash = \"/admin/schedule\";\r\n// }\r\n  \r\n// };\r\n\r\n\r\n//   render() {\r\n\r\n    \r\n//     const style = {\r\n//       display: \"grid\",\r\n//       gridGap: \"50px 26px\",\r\n//       alignItems: \"center\",\r\n//       justifyItems: \"center\",\r\n//       gridTemplateRows: \"repeat(12, auto)\",\r\n//       gridTemplateColumns: \"repeat(24, auto)\",\r\n//     };\r\n    \r\n//     const videoControlBtn =\r\n//       this.props.attendeeMode === \"video\" ? (\r\n//         <span\r\n//           onClick={this.handleCamera}\r\n//           className=\"ag-btn videoControlBtn\"\r\n//           title=\"Enable/Disable Video\"\r\n//         >\r\n//           <i className=\"ag-icon ag-icon-camera\"></i>\r\n//           <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n//         </span>\r\n//       ) : (\r\n//         \"\"\r\n//       );\r\n\r\n\r\n//     const audioControlBtn =\r\n//       this.props.attendeeMode !== \"audience\" ? (\r\n//         <span\r\n//           onClick={this.handleMic}\r\n//           className=\"ag-btn audioControlBtn\"\r\n//           title=\"Enable/Disable Audio\"\r\n//         >\r\n//           <i className=\"ag-icon ag-icon-mic\"></i>\r\n//           <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n//         </span>\r\n//       ) : (\r\n//         \"\"\r\n//       );\r\n\r\n//     const switchDisplayBtn = (\r\n//       <span\r\n//         onClick={this.switchDisplay}\r\n//         className={\r\n//           this.state.streamList.length > 4\r\n//             ? \"ag-btn displayModeBtn disabled\"\r\n//             : \"ag-btn displayModeBtn\"\r\n//         }\r\n//         title=\"Switch Display Mode\"\r\n//       >\r\n//         <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n//       </span>\r\n//     );\r\n\r\n//     const hideRemoteBtn = (\r\n//       <span\r\n//         className={\r\n//           this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n//             ? \"ag-btn disableRemoteBtn disabled\"\r\n//             : \"ag-btn disableRemoteBtn\"\r\n//         }\r\n//         onClick={this.hideRemote}\r\n//         title=\"Hide Remote Stream\"\r\n//       >\r\n//         <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n//       </span>\r\n//     );\r\n\r\n//     const exitBtn = (\r\n//       <span\r\n//       onClick={this.stopRecording}\r\n//              className={\r\n//           this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n//         }\r\n//         title=\"Exit\"\r\n//       >\r\n       \r\n//      <i className=\"ag-icon ag-icon-leave\"></i> \r\n//       </span>\r\n//     );\r\n\r\n// //recording btn on\r\n\r\n//     const recordingBtn = (\r\n//       <span\r\n//         onClick={this.recStart}\r\n//         className={\r\n//           this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n//         }\r\n//         title=\"Record On\"\r\n//       >{\r\n//         this.state.showRecBtn === true ?\r\n      \r\n//         <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n//       </span>\r\n//     );\r\n\r\n\r\n// //recording btn off\r\n// const recordingBtnOff = (\r\n//   <span\r\n//   onClick={this.handleExit}\r\n\r\n    \r\n//     className={\r\n//       this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n//     }\r\n//     title=\"Record Off\"\r\n//   >\r\n//      {\r\n//       this.state.showButton == JSON.parse(this.teamKey) ?\r\n    \r\n//      <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n//     }\r\n            \r\n//   </span>\r\n// );\r\n\r\n//     return (\r\n//       <>\r\n//       <div id=\"ag-canvas\" style={style}>   \r\n//         <div className=\"ag-btn-group\">\r\n\r\n//         <RecordingModal \r\n//         isOpen={this.state.showModal}\r\n//          toggle={this.toggleModal}\r\n//          data={this.state.data}\r\n//          item={this.state.item}\r\n//          allrecording = {this.tempArray}\r\n//          />\r\n                \r\n//           {exitBtn}\r\n//           {videoControlBtn}\r\n//           {audioControlBtn}\r\n//           {\r\n//             <span\r\n//               onClick={this.sharingScreen}\r\n//               className=\"ag-btn shareScreenBtn\"\r\n//               title=\"Share/unShare Screen\"\r\n//             >\r\n//               <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n//             </span>\r\n//           }\r\n//           {switchDisplayBtn}\r\n//           {hideRemoteBtn}\r\n\r\n//           {\r\n//              this.state.showRecBtn === true ? recordingBtn : null\r\n//           }\r\n\r\n//           {\r\n//              this.state.showRecBtn === false ? recordingBtnOff : null\r\n//           }\r\n//         </div>\r\n//       </div>\r\n//         </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default AgoraCanvas;\r\nimport React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport MicNoneIcon from '@material-ui/icons/MicNone';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport {\r\n  Modal,\r\n  ModalTitle,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport RecordingModal from \"./RecordingModal\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green ,red} from '@material-ui/core/colors';\r\nimport recImg from \"../../../loader.gif\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      resID: '',\r\n      showModal: false,\r\n      recordDisplay: false,\r\n      data: {},\r\n      item:{},\r\n      articleId : [],\r\n      articleId2 : [],\r\n      showRecBtn : false,\r\n      showButton : '',\r\n      clickDisable : false\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  // userId = window.localStorage.getItem(\"tlkey\");\r\n  allrecording = [];\r\n  teamKey = window.localStorage.getItem(\"adminkey\");\r\n  uid = Math.floor((Math.random() * 10000) + 1);\r\n  channelName = this.props.channel\r\n  tempArray = []\r\n vendor = 1\r\n region = 14;\r\n bucket = \"vride-multitvm\";\r\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n secretKey = \"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\";\r\nallrecording;\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n     \r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n       \r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n               \r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n          \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n \r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.getSchedulerData()\r\n    this.accuire();\r\n    // this.accuire()\r\n  }\r\nschdrularName;\r\n\r\n  getSchedulerData =() =>{\r\n       axios\r\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n            .then((res) => {\r\n                       \r\n                if (res.data.code === 1) {\r\n                  this.setState({\r\n                    item:res.data.result.items[0],\r\n                   showButton : res.data.result.items[0].owner_id\r\n                  })  \r\n                        \r\n                }\r\n            });\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          \r\n        },\r\n        () => {\r\n                  }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      \r\n      rt.client.subscribe(stream, function (err) {\r\n        \r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n     \r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n    \r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };  \r\n  \r\n  handleExit = async() => {\r\n    if(this.state.clickDisable === false){\r\n      this.setState({clickDisable : true})\r\n     var resourceId = localStorage.getItem(\"resourceId\");\r\n     var sid = localStorage.getItem(\"sid\");\r\n   \r\n     var data = JSON.stringify({\r\n       \"cname\":this.channelName,\r\n       \"uid\":JSON.stringify(this.uid),\r\n       \"clientRequest\":{ }});\r\n     axios({\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"application/json;charset=utf-8\",\r\n         \"authorization\": \"Basic \"+this.encodedString,\r\n         \"cache-control\": \"no-cache\",\r\n       },\r\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n       data: data,\r\n     })\r\n     .then(response => {\r\n       \r\n       this.tempArray.push(response.data.serverResponse.fileList)\r\n       this.setState({showRecBtn : true})\r\n     })\r\n         .catch((error) => {\r\n        \r\n       });\r\n    \r\n    }\r\n \r\n     \r\n   }\r\n \r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n     \r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n         \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                 \r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n            \r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n \r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n   \r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  CreateS3Folder = (uid) =>{\r\n   \r\n    axios\r\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n            .then((res) => {\r\n                \r\n            });\r\n  }\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n\r\n\r\n\r\nsleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n//get recording status\r\nasync GetRecordingStatus(json){\r\n    \r\n\r\n  await this.sleep(3000); \r\n  var resourceId = json.data.resourceId;\r\n  var sid = json.data.sid;\r\n\r\n  localStorage.setItem(\"resourceId\", resourceId);\r\n  localStorage.setItem(\"sid\", sid);\r\n\r\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n})\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n       \r\n        this.setState({\r\n          data:response,\r\n          recordDisplay:!this.state.recordDisplay\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({clickDisable : false})\r\n        }, 1000)\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n\r\n\r\n//start recording\r\nasync startRecording(key){\r\n   \r\n    var resourceId = key.data.resourceId \r\n    \r\n    this.CreateS3Folder(JSON.stringify(this.uid));\r\n\r\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n \r\n\r\n  await axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n      data: data,    \r\n    })\r\n    .then(json => this.GetRecordingStatus(json)) \r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n\r\n  //recording  acquire\r\n  accuire = () =>{\r\n   \r\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      data: data,\r\n    })\r\n      .then(json => \r\n        this.startRecording(json)) \r\n       \r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n// Start recording button\r\n  recStart = () => {\r\n    this.localStream.enableAudio();\r\n    this.localStream.enableVideo();\r\n    this.accuire();\r\n    this.setState({ showRecBtn: false  });\r\n    \r\n  }\r\n\r\n  //toggelStop\r\n  toggleModal = (key) =>{\r\n  \r\n  this.setState({\r\n    showModal: !this.state.showModal,\r\n    recordDisplay:false\r\n  })\r\n}\r\n\r\n\r\n //stop recording \r\n stopRecording = () => {\r\n  if(this.state.showRecBtn === true){\r\n    return(this.toggleModal(\"stop\"),\r\n    this.localStream.disableVideo(),\r\nthis.localStream.disableAudio())\r\n\r\n  }\r\n  \r\n  else if(this.state.showButton == JSON.parse(this.teamKey)){\r\n \r\n    if(resourceId === undefined){\r\n      var resourceId = localStorage.getItem(\"resourceId\");\r\n    var sid = localStorage.getItem(\"sid\");\r\n    }\r\n\r\n  var data = JSON.stringify({\r\n    \"cname\":this.channelName,\r\n    \"uid\":JSON.stringify(this.uid),\r\n    \"clientRequest\":{ }});\r\n  axios({\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n    data: data,\r\n  })\r\n  .then(json => \r\n    \r\n    this.toggleModal(json) ,\r\n     this.setState({showRecBtn : true}),\r\n     this.localStream.disableVideo(),\r\nthis.localStream.disableAudio(),\r\n    ) \r\n    .catch((error) => {\r\n      \r\n    });\r\n}\r\nelse{\r\n  \r\n  window.location.hash = \"/teamleader/schedule\";\r\n}\r\n  \r\n};\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n      onClick={this.stopRecording}\r\n             className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n       \r\n     <i className=\"ag-icon ag-icon-leave\"></i> \r\n      </span>\r\n    );\r\n\r\n//recording btn on\r\n\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recStart}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record On\"\r\n      >{\r\n        this.state.showRecBtn === true ?\r\n      \r\n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n      </span>\r\n    );\r\n\r\n\r\n//recording btn off\r\nconst recordingBtnOff = (\r\n  <span\r\n  onClick={this.handleExit}\r\n\r\n    \r\n    className={\r\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    }\r\n    title=\"Record Off\"\r\n  >\r\n     {\r\n      this.state.showButton == JSON.parse(this.teamKey) ?\r\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\r\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n    }\r\n            \r\n  </span>\r\n);\r\n\r\n\r\n    return (\r\n      <>\r\n      <div id=\"ag-canvas\" style={style}>   \r\n        <div className=\"ag-btn-group\">\r\n\r\n        <RecordingModal \r\n        isOpen={this.state.showModal}\r\n         toggle={this.toggleModal}\r\n         data={this.state.data}\r\n         item={this.state.item}\r\n         allrecording = {this.tempArray}\r\n         />\r\n                \r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n\r\n          {\r\n             this.state.showRecBtn === true ? recordingBtn : null\r\n          }\r\n\r\n          {\r\n             this.state.showRecBtn === false ? recordingBtnOff : null\r\n          }\r\n        </div>\r\n      </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\RecordingModal.js",["3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028","3029"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction RecordingModal({\r\n    isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording\r\n}) {\r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n \r\n\r\n    const { assign_no, id, username, start } = item\r\n  \r\n\r\n    //submit\r\n    const onSubmit = (value) => {\r\n        var serverResponse = data.serverResponse.fileList\r\n        var completeRecording;\r\n        if(allrecording === undefined || allrecording.length === 0){\r\n            completeRecording =  serverResponse;\r\n        }\r\n        else if(allrecording != undefined || allrecording.length > 0){\r\n            completeRecording = allrecording + \",\" + serverResponse;\r\n        }\r\n        else{\r\n            completeRecording = serverResponse;\r\n        }\r\n                const { fileList } = serverResponse\r\n              \r\n        let formData2 = new FormData();\r\n                let formData = new FormData();\r\n                formData.append(\"uid\", JSON.parse(userId));\r\n                formData.append(\"fileList\", completeRecording);\r\n                formData.append(\"message_type\", value.msg_type);\r\n                formData.append(\"message\", value.p_message);\r\n                formData.append(\"assign_id\", assign_no);\r\n                formData.append(\"participants\", username);\r\n                formData.append(\"schedule_id\", id);\r\n        \r\n        \r\n\r\naxios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    toggle()\r\n                    history.push('/admin/schedule');\r\n                    // reset();\r\n                    // setLoading(false)\r\n                    // var variable = \"Message sent successfully.\"\r\n                    // Alerts.SuccessNormal(variable)\r\n                    // props.history.push(routes);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n               \r\n            });\r\n    };\r\n    const exitBtn2 = () => {\r\n        history.push('/admin/schedule');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\r\n                <ModalHeader toggle={toggle}>\r\n                    Form\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div class=\"col-md-10\">\r\n                                <div class=\"form-group\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button>\r\n                                <button type=\"submit\" className=\"btn btn-primary mx-3\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;\r\n\r\n\r\n{/* <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n        \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal > */}\r\n{/* <ModalFooter>\r\n                    Modal footer\r\n                </ModalFooter> */}","D:\\Mazars\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js",["3030","3031","3032","3033","3034","3035"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","D:\\Mazars\\src\\views\\ProposalTab\\AllProposal.js",["3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052","3053","3054"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport ViewComponent from \"./ViewComponent\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction ProposalTab() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [viewData, setViewData] = useState({});\r\n    const [viewModal, setViewModal] = useState(false);\r\n    const ViewHandler = (key) => {\r\n\r\n        setViewModal(!viewModal);\r\n        setViewData(key);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Declined; Proposal\" ?\r\n                                        <div>\r\n                                            <p className=\"declined\">\r\n                                                {row.status}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                <p className=\"completed\">\r\n                                                    {row.status}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\" }}>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {\r\n                                        row.statuscode > 6 ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"View EL\">\r\n                                                <a\r\n                                                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <i\r\n                                                        class=\"fa fa-eye\"\r\n                                                        style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                                    />\r\n                                                </a>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        row.statuscode == 4\r\n                                            ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"Dicision on Proposal\">\r\n                                                <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                    <i\r\n                                                        class=\"fa fa-share\"\r\n                                                        style={{\r\n                                                            color: \"blue\",\r\n                                                            fontSize: \"13px\",\r\n                                                        }}\r\n                                                    ></i>\r\n                                                </Link>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        proposal=\"proposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <ViewComponent\r\n                        ViewHandler={ViewHandler}\r\n                        viewModal={viewModal}\r\n                        viewData={viewData}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n{/* <div style={{ cursor: \"pointer\" }} title=\"Rejected\">\r\n                                            <i\r\n                                                class=\"fa fa-times\"\r\n                                                style={{ color: \"red\", fontSize: \"16px\" }}\r\n                                                onClick={() => rejected(row.q_id)}\r\n                                            ></i>\r\n                                        </div> */}\r\n//   {row.negotiated_amount === \"0\" &&\r\n// row.accepted_amount === \"0\"","D:\\Mazars\\src\\views\\ProposalTab\\InprogressProposal.js",["3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n            \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\"completed\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\" }}>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {\r\n                                        row.statuscode > 6 ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"View EL\">\r\n                                                <a\r\n                                                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <i\r\n                                                        class=\"fa fa-eye\"\r\n                                                        style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                                    />\r\n                                                </a>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        row.statuscode == 4\r\n                                            ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"Proposal Accepted/Rejected\">\r\n                                                <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                    <i\r\n                                                        class=\"fa fa-share\"\r\n                                                        style={{\r\n                                                            color: \"blue\",\r\n                                                            fontSize: \"13px\",\r\n                                                        }}\r\n                                                    ></i>\r\n                                                </Link>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    //rejected\r\n    const rejected = (id) => {\r\n     \r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to reject proposal?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, rejected it!\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    // delete data\r\n    const deleteCliente = (key) => {\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", key);\r\n        formData.append(\"status\", 6);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/ProposalAccept`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                \r\n                if (response.data.code === 1) {\r\n                    setRejected(false);\r\n                    Swal.fire(\"Rejected!\", \"Proposal rejected successfully.\", \"success\");\r\n                    getProposalData();\r\n                } else {\r\n                    Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        inprogressProposal=\"inprogressProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","D:\\Mazars\\src\\views\\SignUpForm\\GetOTP.js",["3070","3071","3072","3073","3074","3075","3076","3077","3078"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\n\r\nfunction GetOTP({ email, phone, setShow }) {\r\n\r\n    //get OTP\r\n    const getOtp = () => {\r\n\r\n\r\n\r\n        if (email && phone) {\r\n            let formData = new FormData();\r\n            formData.append(\"email\", email);\r\n            formData.append(\"phone\", phone);\r\n            formData.append(\"p\", \"registration\");\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${baseUrl}/customers/forgototp`,\r\n                data: formData,\r\n            })\r\n                .then(function (response) {\r\n                  \r\n                    if (response.data.code === 1) {\r\n                        // setLoad(true)\r\n                        setShow(true)\r\n                        Alerts.SuccessNormal(\"OTP sent to your email address.\")\r\n                    } else if (response.data.code === 0) {\r\n                        Alerts.ErrorNormal(\"Error.\")\r\n\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                   \r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-success\" onClick={() => getOtp()}>Get OTP</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetOTP;","D:\\Mazars\\src\\views\\Message\\PaymentModal.js",["3079","3080","3081","3082"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\views\\SignUpForm\\ResendOtp.js",["3083","3084"],"\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction ResendOtp({ invalid, wEmail, disabled, indNumError, zipError, passError, email,\r\n    phone, setDisabled, getTime, setLoad, loading, emailError, phoneError, zipError1, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        if (emailError === true || phoneError === true || zipError1 === true)  {\r\n           return false\r\n              }\r\n              else {\r\n                setLoading(true)\r\n                let formData = new FormData();\r\n                formData.append(\"email\", value.p_email);\r\n                formData.append(\"phone\", phone);\r\n                formData.append(\"p\", \"registration\");\r\n        \r\n                if (invalid || wEmail || indNumError || zipError || passError) {\r\n                    \r\n                    setLoad(false)\r\n                }\r\n                else {\r\n                    \r\n                    axios({\r\n                        method: \"POST\",\r\n                        url: `${baseUrl}/customers/forgototp`,\r\n                        data: formData,\r\n                    })\r\n                        .then(function (response) {\r\n                            \r\n                            if (response.data.code === 1) {\r\n                                Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n                                setDisabled(false)\r\n                                getTime();\r\n                                setLoad(true)\r\n                                setLoading(false)\r\n                            } if (response.data.code === 0) {\r\n                                setLoading(false)\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                           \r\n                        });\r\n                    }\r\n                   }\r\n     \r\n        \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                \r\n                {\r\n                      disabled ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <div style={{ paddingTop: \"10px\" }}>\r\n                        <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                    </div>\r\n                    }\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;\r\n\r\n\r\n","D:\\Mazars\\src\\views\\SignUpForm\\data.js",[],"D:\\Mazars\\src\\views\\Schedule\\demo.js",["3085","3086","3087","3088","3089","3090","3091","3092","3093","3094"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  ViewState,\r\n  EditingState,\r\n  IntegratedEditing,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  DayView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  TodayButton,\r\n  Resources,\r\n  EditRecurrenceMenu,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [owner, setOwner] = useState([]);\r\n\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n     \r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    assign_no: appointment.assign_no,\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getAllQuery?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          \r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n       \r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n   \r\n  ];\r\n\r\n\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n   \r\n  };\r\n\r\n\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <Appointments.Appointment {...restProps}>\r\n      <div style={{ display: \"flex\" }}>\r\n      <i\r\n            class=\"fa fa-video-camera\"\r\n            onClick={() => handleJoin(data.question_id)}\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n        <div>{children}</div>\r\n        <div\r\n         \r\n        >\r\n          \r\n        </div>\r\n      </div>\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n  \r\n    Cookies.set(\"channel\", id);\r\n    Cookies.set(\"baseMode\", baseMode);\r\n    Cookies.set(\"transcode\", transcode);\r\n    Cookies.set(\"attendeeMode\", attendeeMode);\r\n    Cookies.set(\"videoProfile\", videoProfile);\r\n    history.push(\"/customer/meeting\");\r\n  };\r\n\r\n\r\n  const messages = {\r\n    moreInformationLabel: \"\"\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n   \r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Scheduler data={data} height={550}>\r\n        <ViewState\r\n          defaultCurrentDate={currentDate}\r\n          defaultCurrentViewName=\"Week\"\r\n        />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <EditRecurrenceMenu />\r\n        <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n        <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n        <Appointments appointmentComponent={myAppointment} />\r\n\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <ViewSwitcher />\r\n        <AppointmentTooltip showOpenButton />\r\n\r\n\r\n        <AppointmentForm\r\n          basicLayoutComponent={BasicLayout}\r\n          textEditorComponent={TextEditor}\r\n          booleanEditorComponent={BooleanEditor}\r\n          readOnly\r\n        />\r\n\r\n        <Resources\r\n          data={resources}\r\n          mainResourceName=\"username\"\r\n        />\r\n\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n\r\n","D:\\Mazars\\src\\views\\ChangePassword\\ResendOtp.js",["3095","3096"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ResendOtp({ email, setDisabled, getTime, setLoad, setLoading, loading }) {\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/regenrateotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n\r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                    setLoad(true)\r\n                } if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              ShowError.LoadingError(setLoading)\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\views\\NewPassword\\ResendOtp.js",["3097","3098"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ResendOtp({ id, setDisabled, getTime, setLoad, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n        formData.append(\"p\", \"forgot\");\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n            \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\r\n                    setDisabled(false)\r\n                    setLoad(true)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              ShowError.LoadingError(setLoading)\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\views\\AddFressAssignment\\data.js",[],"D:\\Mazars\\src\\components\\InputRoom\\index.js",["3099","3100","3101","3102","3103"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nimport \"../../assets/fonts/css/icons.css\";\r\n// import Validator from \"../../utils/Validator\";\r\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\r\nimport \"./index.css\";\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channel: \"\",\r\n      baseMode: \"avc\",\r\n      transcode: \"interop\",\r\n      attendeeMode: \"video\",\r\n      videoProfile: \"480p_4\",\r\n    };\r\n  }\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"wrapper index\">\r\n        <div className=\"ag-header\"></div>\r\n        <div className=\"ag-main\">\r\n          <section className=\"login-wrapper\">\r\n            <div className=\"login-header\"></div>\r\n\r\n            {/* <div className=\"login-body\">\r\n              <div className=\"columns\">\r\n                <div className=\"column is-12\">\r\n                  <InputChannel\r\n                    onChange={this.handleChannel}\r\n                    placeholder=\"Input a room name here\"\r\n                  ></InputChannel>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"columns\">\r\n                <div className=\"column\">\r\n                  <div id=\"attendeeMode\" className=\"control\">\r\n                    <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"video\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                        defaultChecked\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Video Call : join with video call\r\n                      </span>\r\n                    </label>\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className=\"login-footer\">\r\n              <a\r\n                // onClick={this.handleJoin}\r\n                className=\"ag-rounded button is-info\"\r\n              >\r\n                Join\r\n              </a>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n// class InputChannel extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       state: \"\",\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (e) => {\r\n//     this.props.onChange(e.target.value);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"channel-wrapper control has-icons-left\">\r\n//         <input\r\n//           onInput={this.handleChange}\r\n//           id=\"channel\"\r\n//           className={\"ag-rounded input \" + this.state.state}\r\n//           type=\"text\"\r\n//           placeholder={this.props.placeholder}\r\n//         />\r\n\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n{\r\n  /* <span className=\"validate-icon\">{validateIcon}</span> */\r\n}\r\n// let validateIcon = \"\";\r\n// switch (this.state.state) {\r\n//   default:\r\n//   case \"\":\r\n//     validateIcon = \"\";\r\n//     break;\r\n//   case \"is-success\":\r\n//     validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\r\n//     break;\r\n//   case \"is-danger\":\r\n//     validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\r\n//     break;\r\n// }\r\n{\r\n  /* <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"audio-only\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-img audio\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Audio-only : join with audio call\r\n                      </span>\r\n                    </label>\r\n                    <br />\r\n                    <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"audience\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-img audience\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Audience : join as an audience\r\n                      </span>\r\n                    </label> */\r\n}\r\n{\r\n  /* <div className=\"columns\">\r\n                <div className=\"column is-7\">\r\n                  <BaseOptions\r\n                    onChange={(val) => this.setState({ baseMode: val })}\r\n                  ></BaseOptions>\r\n                </div>\r\n                <div className=\"column is-5\">\r\n                  <AdvancedOptions\r\n                    onRadioChange={(val) => this.setState({ transcode: val })}\r\n                    onSelectChange={(val) =>\r\n                      this.setState({ videoProfile: val })\r\n                    }\r\n                  ></AdvancedOptions>\r\n                </div>\r\n              </div> */\r\n}\r\n// class BaseOptions extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this._options = [\r\n//       {\r\n//         label: \"Agora Video Call\",\r\n//         value: \"avc\",\r\n//         content: \"One to one and group calls\",\r\n//       },\r\n//       {\r\n//         label: \"Agora Live\",\r\n//         value: \"al\",\r\n//         content:\r\n//           \"Enabling real-time interactions between the host and the audience\",\r\n//       },\r\n//     ];\r\n//     this.state = {\r\n//       active: false,\r\n//       message: \"Agora Video Call\",\r\n//     };\r\n//   }\r\n\r\n//   handleSelect = (item) => {\r\n//     let msg = item.label;\r\n//     let val = item.value;\r\n//     this.setState({\r\n//       message: msg,\r\n//       active: false,\r\n//     });\r\n//     this.props.onChange(val);\r\n//   };\r\n\r\n//   render() {\r\n//     const options = this._options.map((item, index) => {\r\n//       return (\r\n//         <div\r\n//           className=\"dropdown-item\"\r\n//           key={index}\r\n//           onClick={(e) => this.handleSelect(item, e)}\r\n//         >\r\n//           <p>{item.label}</p>\r\n//           <hr />\r\n//           <p>{item.content}</p>\r\n//         </div>\r\n//       );\r\n//     });\r\n\r\n//     return (\r\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\r\n//         <div\r\n//           className=\"dropdown-trigger\"\r\n//           onClick={() => this.setState({ active: !this.state.active })}\r\n//         >\r\n//           <a\r\n//             id=\"baseMode\"\r\n//             className=\"ag-rounded button\"\r\n//             aria-haspopup=\"true\"\r\n//             aria-controls=\"baseModeOptions\"\r\n//           >\r\n//             <span id=\"baseOptionLabel\">{this.state.message}</span>\r\n//             <span className=\"icon is-small\">\r\n//               <i className=\"ag-icon ag-icon-arrow-down\" aria-hidden=\"true\"></i>\r\n//             </span>\r\n//           </a>\r\n//         </div>\r\n//         <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\r\n//           <div className=\"dropdown-content\">{options}</div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class AdvancedOptions extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       active: false,\r\n//     };\r\n//   }\r\n\r\n//   handleRadio = (e) => {\r\n//     this.props.onRadioChange(e.target.value);\r\n//   };\r\n\r\n//   handleSelect = (e) => {\r\n//     this.props.onSelectChange(e.target.value);\r\n//   };\r\n\r\n//   render() {\r\n//     const options = Object.entries(RESOLUTION_ARR).map((item, index) => {\r\n//       return (\r\n//         <option key={index} value={item[0].split(\",\")[0]}>\r\n//           {item[1][0]}x {item[1][1]}, {item[1][2]}fps, {item[1][3]}kbps\r\n//         </option>\r\n//       );\r\n//     });\r\n//     return (\r\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\r\n//         <div\r\n//           className=\"dropdown-trigger\"\r\n//           onClick={() => this.setState({ active: !this.state.active })}\r\n//         >\r\n//           <a\r\n//             id=\"advancedProfile\"\r\n//             className=\"ag-rounded button\"\r\n//             aria-haspopup=\"true\"\r\n//             aria-controls=\"advancedOptions\"\r\n//           >\r\n//             <span>Advanced</span>\r\n//           </a>\r\n//         </div>\r\n//         <div className=\"dropdown-menu\" id=\"advancedOptions\" role=\"menu\">\r\n//           <div className=\"dropdown-content\">\r\n//             <div className=\"dropdown-item\">\r\n//               <div className=\"control\">\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"\"\r\n//                     type=\"radio\"\r\n//                     name=\"transcode\"\r\n//                     onChange={this.handleRadio}\r\n//                   />\r\n//                   <span>VP8-only</span>\r\n//                 </label>\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"interop\"\r\n//                     type=\"radio\"\r\n//                     defaultChecked\r\n//                     onChange={this.handleRadio}\r\n//                     name=\"transcode\"\r\n//                   />\r\n//                   <span>VP8 &amp; H264</span>\r\n//                 </label>\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"h264_interop\"\r\n//                     type=\"radio\"\r\n//                     onChange={this.handleRadio}\r\n//                     name=\"transcode\"\r\n//                   />\r\n//                   <span>H264-only</span>\r\n//                 </label>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"dropdown-item\">\r\n//               <div className=\"select is-rounded\">\r\n//                 <select\r\n//                   onChange={this.handleSelect}\r\n//                   defaultValue=\"480p_4\"\r\n//                   id=\"videoProfile\"\r\n//                   className=\"ag-rounded is-clipped\"\r\n//                 >\r\n//                   {options}\r\n//                 </select>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","D:\\Mazars\\src\\views\\SignUpForm\\city.js",[],"D:\\Mazars\\src\\views\\ProposalView\\TermsConditions.js",["3104","3105","3106"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  readTerms,\r\n  id\r\n}) {\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\r\n        <ModalHeader toggle={readTerms}>Engagement Letter</ModalHeader>\r\n        <ModalBody>\r\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${id}&viewpdf=1`}\r\n            height=\"100%\" width=\"100%\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={readTerms}>Ok</Button>\r\n        </ModalFooter>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js",["3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126"],"D:\\Mazars\\src\\views\\AssignmentTab\\AllAssignment.js",["3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153"],"D:\\Mazars\\src\\views\\AssignmentTab\\InprogressAssignment.js",["3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173"],"D:\\Mazars\\src\\views\\AssignmentTab\\CompletedAssignment.js",["3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192"],"D:\\Mazars\\src\\components\\meeting\\index.jsx",[],"D:\\Mazars\\src\\views\\Login\\VerifyOTP.js",["3193","3194"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nconst Schema = yup.object().shape({\r\n    p_otp: yup.string().required(\"mandatory\"),\r\n});\r\n\r\n\r\nfunction VerifyOTP({ email, uid, time, setLoad,\r\n    setDisabled, disabled, loading, setLoading }) {\r\n    const { handleSubmit, register, errors, reset } = useForm({\r\n        resolver: yupResolver(Schema),\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [setText, noSetText] = useState()\r\n\r\n\r\n    const validOtp = (e) => {\r\n        if (isNaN(e.target.value)) {\r\n            e.target.value = \"\"\r\n            noSetText(\"Please enter number only.\")\r\n        }\r\n    }\r\n\r\n    const onSubmit = (value) => {\r\n\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"otp\", value.p_otp);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/verifyloginotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n               \r\n\r\n                if (response.data.code == 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessLogin(\"Logged in successfully.\")\r\n                    localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\r\n                    localStorage.setItem(\"custEmail\", JSON.stringify(response.data.name));\r\n                    history.push(\"customer/dashboard\");\r\n                } else {\r\n                    Alerts.ErrorNormal(\"Incorrect OTP\") \r\n                    setLoading(false)\r\n                    reset();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ShowError.LoadingError(setLoading)\r\n            });\r\n    }\r\n\r\n\r\n    const resendOtp = () => {\r\n        setLoading(true)\r\n        noSetText(\" \")\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"uid\", uid);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/regenrateotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"An OTP has been sent to your registered email address.\")\r\n                    setLoad(true)\r\n                    setDisabled(false)\r\n                }\r\n                else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ShowError.LoadingError(setLoading)\r\n            });\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                {\r\n                    disabled ?\r\n                        null\r\n                        :\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Enter Your OTP <span className=\"declined\">*</span></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_otp,\r\n                                })}\r\n                                name=\"p_otp\"\r\n                                ref={register({ required: true })}\r\n                                placeholder=\"Enter your OTP\"\r\n                                onChange={(e) => validOtp(e)}\r\n                            />\r\n                            <p className=\"declinedmsg\">{setText ? setText : \"\"}</p>\r\n                            <small class=\"text-center\">\r\n                                Note: OTP is valid for {time} seconds.\r\n                            </small>\r\n\r\n                        </div>\r\n                }\r\n\r\n                {\r\n                    loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <div className=\"form-group\">\r\n                            {\r\n                                disabled ?\r\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                                    :\r\n                                    <button type=\"submit\" className=\"btn btn-success\">\r\n                                        Login\r\n                                    </button>\r\n                            }\r\n                        </div>\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VerifyOTP;\r\n","D:\\Mazars\\src\\views\\ProposalTab\\ViewComponent.js",["3195","3196","3197","3198","3199","3200"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","D:\\Mazars\\src\\pages\\TP\\Invoice\\Invoice.js",["3201","3202","3203","3204"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport CreateInvoice from \"./CreateInvoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <CreateInvoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\components\\LoginForm\\LoginForm.js",["3205"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Mandatory from \"../Common/Mandatory\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport { useContext } from \"react\";\r\nimport { LoginData } from \"./LoginFun\";\r\nimport { Link } from \"react-router-dom\";\r\nconst LoginForm = (props) => {\r\n    const data3 = useContext(LoginData)\r\n    const Schema = yup.object().shape({\r\n        p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n        password: yup\r\n          .string()\r\n          .required(\"\")\r\n         \r\n      });\r\n      \r\n   \r\n    const { handleSubmit, register, reset, errors } = useForm({\r\n        resolver: yupResolver(Schema),\r\n      });\r\n \r\nreturn(\r\n    <div class=\"form\">\r\n    <div class=\"heading\">\r\n      <h2>ADMIN LOGIN</h2>\r\n    </div>\r\n    <form onSubmit={handleSubmit(data3.onSubmit)} autoComplete=\"off\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              className={classNames(\"form-control\", {\r\n                \"is-invalid\": errors.p_email,\r\n              })}\r\n              name=\"p_email\"\r\n              ref={register}\r\n              placeholder=\"Enter Email\"\r\n              autocomplete=\"off\"\r\n              onChange={(e) => data3.handleChange(e)}\r\n            />\r\n            {errors.p_email && (\r\n              <div className=\"invalid-feedback\">\r\n                {errors.p_email.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n            <input\r\n              type={data3.isPasswordShow ? \"text\" : \"password\"}\r\n              className={classNames(\"form-control\", {\r\n                \"is-invalid\": errors.password,\r\n              })}\r\n              name=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              ref={register}\r\n              onCopy={(e) => {\r\n                e.preventDefault();\r\n                return false\r\n              }}\r\n              onPaste={(e) => {\r\n                e.preventDefault();\r\n                return false\r\n              }}\r\n            />\r\n            <i\r\n              className={`fa ${data3.isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n              onClick={data3.togglePasssword}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback\">\r\n                {errors.password.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        data3.loading ?\r\n          <div class=\"col-md-12\">\r\n            <Spinner color=\"primary\" />\r\n          </div>\r\n          :\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n      }\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n        <Link\r\n          to={{\r\n            pathname: \"/admin/forget-password\",\r\n            email: `${data3.email}`,\r\n          }}\r\n        >\r\n          Forgot Password\r\n        </Link>\r\n      </div>\r\n\r\n      <Mandatory />\r\n    </form>\r\n  </div>\r\n\r\n)\r\n}\r\nexport default LoginForm;","D:\\Mazars\\src\\Service\\PublicRouteUser.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteTP.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteTL.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteAdmin.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteUser.js",[],"D:\\Mazars\\src\\pages\\TP\\ViewNotification\\ViewNotification.js",["3206","3207","3208","3209","3210"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  console.log(\"data-\", data);\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n           \r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\TP\\Recording\\Recording.js",["3211","3212","3213","3214","3215","3216"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport ReactHlsPlayer from 'react-hls-player'\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\n\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n    const videoIcon = {\r\n        display : \"flex\", \r\n        justifyContent : \"space-around\", \r\n        alignItems : \"center\"\r\n    }\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"absolute\",\r\n        top : \"10%\",\r\n        left : \"0%\",\r\n        botttom: \"0%\", \r\n        right: \"0%\",\r\n       \r\n        width : \"100%\", \r\n        height: \"auto\"\r\n    }\r\nconst canBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"10px\",\r\n    left: \"90%\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\", \r\n    color : \"red\"\r\n}\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_id\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        \r\n\r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                <>\r\n                                <p style={videoIcon}>\r\n                                <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n            <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                 <Card>\r\n                 <CardHeader>\r\n                     <Row>\r\n                         <Col md=\"7\">\r\n                             <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                         </Col>\r\n                         <Col md=\"5\"></Col>\r\n                     </Row>\r\n                 </CardHeader>\r\n                 <CardBody>\r\n                 <RecordingFilter\r\n                        setData={setFeedBackData}\r\n                     //    getData={getInCompleteAssingment}\r\n                        SearchQuery=\"SearchQuery\"\r\n                       setRecords={setRecords}\r\n                        records={records} \r\n                        userid = {userid}\r\n                        getRecording = {getRecording}\r\n                     /> \r\n                     <BootstrapTable\r\n                         bootstrap4\r\n                         keyField=\"id\"\r\n                         data={feedbackData}\r\n                         columns={columns}\r\n                         rowIndex\r\n                     />\r\n                 </CardBody>\r\n \r\n             </Card>\r\n           \r\n            </div>\r\n             \r\n            {isOpen === true ?\r\n           \r\n                  \r\n                  <div style={modalBox}>\r\n                  <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\r\n                 \r\n        \r\n           <div style={{margin: \"50px 0 0 0\"}}>\r\n           <ReactPlayer\r\n             url={videoid}\r\n             controls={true}\r\n             playing={true}\r\n             width='100%'\r\n             height='100%'\r\n            />\r\n               </div>\r\n             \r\n            </div>\r\n          : \"\"}\r\n          </Layout>\r\n            </>\r\n \r\n     );\r\n }\r\n export default Recording;","D:\\Mazars\\src\\pages\\TP\\Report\\Report.js",["3217"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\n\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n    const [item] = useState(current_date);\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n      \r\n        // formData.append(\"category\",);\r\n        // formData.append(\"subCategory\");\r\n        formData.append(\"q_no\", value.qno);\r\n        formData.append(\"date_query\", value.dateQuery);\r\n        formData.append(\"cust_id\", value.cust_id);\r\n        formData.append(\"basic_category\", value.basicCategory);\r\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\r\n        formData.append(\"assessment\", value.assessment);\r\n        formData.append(\"purpose\", value.purpose);\r\n        formData.append(\"p_format\", value.p_format);\r\n        formData.append(\"t_requested\", value.t_requester);\r\n        formData.append(\"spc_que\", value.spc_que);\r\n        formData.append(\"date_allocation\", value.doa);\r\n        \r\n        formData.append(\"date_proposal\", value.dateProposal);\r\n        formData.append(\"proposed_amount\", value.proposedAmount);\r\n        formData.append(\"payment_terms\", value.paymentTerms);\r\n        formData.append(\"proposal_status\", value.proposal_status);\r\n        formData.append(\"accepted_amount\", value.acceptedAmount);\r\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\r\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\r\n        formData.append(\"amount_overdue\", value.amount_overdue);\r\n        formData.append(\"payment_declined\", value.declinedDate);\r\n        formData.append(\"assignment_number\", value.assignNumber);\r\n        formData.append(\"assign_date\", value.assignDate);\r\n        formData.append(\"proposed_completion_date\", value.completionDate);\r\n        formData.append(\"assignment_status\", value.assignStatus);\r\n        formData.append(\"date_complation\", value.completionQuery);\r\n        formData.append(\"assign_time\", value.assignTime);\r\n        formData.append(\"payment_recived_date\", value.receiptDate);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/reports`,\r\n     data : formData\r\n\r\n   })\r\n    }\r\n    return (\r\n        <>\r\n          <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n          <div className=\"adminForm\">\r\n          <Typography variant=\"h4\">Taxprofessional Report</Typography>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti = {true} />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti={true} />\r\n            </div>\r\n   </div> \r\n  \r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Data Query</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Customer Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\r\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\r\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assignment</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\r\n<label htmlFor=\"assignNumber\">Assignment Number</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n            </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n   \r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\pages\\TP\\MeetingComponent\\MeetingComponent.js",["3218","3219","3220","3221"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  console.log(\"ppp\", props.match.params.id)\r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id} />\r\n  \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\TP\\FeedbackTab\\FeedbackTab.js",["3222","3223","3224","3225","3226"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\nconst history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setFeedBackData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n      // formatter: function nameFormatter(cell, row) {\r\n      //   console.log(row);\r\n      //   return (\r\n      //     <>\r\n      //       <div style={{ display: \"flex\" }}>\r\n      //         <p>{CommonServices.removeTime(row.created)}</p>\r\n      //         <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\r\n      //       </div>\r\n      //     </>\r\n      //   );\r\n      // },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.tp_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n    console.log(\"call\", id)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response)\r\n        if (response.data.code === 1) {\r\n          // alert.success(\"successfully read!\");\r\n          getFeedback()\r\n          history.push(\"/taxprofessional/feedback\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\TP\\Chatting\\Chatting.js",["3227","3228","3229","3230","3231","3232"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n  msg_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", props)\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataTL\");\r\n\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.msg_type);\r\n    formData.append(\"message\", value.p_message);\r\n   \r\n    formData.append(\"sst\", \"tp\")\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.msg_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.msg_type.message}\r\n                          </div>\r\n                        )}\r\n\r\n                      </div>\r\n                      {/* <div class=\"form-group\">\r\n                        <label>To<span className=\"declined\">*</span></label>\r\n                        <select\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_to,\r\n                          })}\r\n                          name=\"p_to\"\r\n                          ref={register}\r\n                          style={{ height: \"33px\" }}\r\n                        >\r\n                          <option value=\"\">--select--</option>\r\n                          <option value=\"customer\">Customer</option>\r\n                          <option value=\"tl\">Team Leader</option>\r\n                          <option value=\"both\">Both</option>\r\n                        </select>\r\n                        {errors.p_to && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_to.message}\r\n                          </div>\r\n                        )}\r\n                      </div> */}\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\pages\\TP\\Message\\Message.js",["3233","3234","3235","3236","3237","3238","3239"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\nfunction Message(props) {\r\n    console.log(\"props\", props.location.obj)\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"tpkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\nconst history = useHistory();\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n        console.log(\"key\", key);\r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        // {\r\n        //     text: \"Date\",\r\n        //     sort: true,\r\n        //     headerStyle: () => {\r\n        //         return { fontSize: \"12px\", width: \"50px\" };\r\n        //     },\r\n        //     formatter: function nameFormatter(cell, row) {\r\n        //         console.log(row);\r\n        //         return (\r\n        //             <>\r\n        //                 <div style={{ display: \"flex\" }}>\r\n        //                     <p>{CommonServices.removeTime(row.setdate)}</p>\r\n        //                     <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\r\n        //                 </div>\r\n        //             </>\r\n        //         );\r\n        //     },\r\n        // },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\r\n                        {row.assign_no}\r\n                        {/* </Link> */}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/taxprofessional/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\", justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n        console.log(\"call\", id)\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                console.log(\"delete-\", response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\pages\\TP\\AddAssingmentStages\\AddAssingmentStages.js",["3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nfunction AddAssingmentStages() {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [assignmentStages, setAssignmentstages] = useState([]);\r\n  const [clientDiscussion, setClientDiscussion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setAssignmentstages(res.data.result);\r\n          reset(res.data.result[0]);\r\n          setClientDiscussion(res.data.result[0].client_discussion)\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\r\n    {    \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is due,Do you still want to process to complete this query !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.value === true) {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append(\"q_id\", id);\r\n        formData.append(\"user_id\", JSON.parse(userid));\r\n        formData.append(\"stage_1_status\", value.client_discussion);\r\n        formData.append(\"stage_2_status\", value.draft_report);\r\n        formData.append(\"stage_3_status\", value.final_discussion);\r\n        formData.append(\"stage_4_status\", value.delivery_report);\r\n        formData.append(\"stage_5_status\", value.other_stage);\r\n    \r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/postAssignmentStages`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n          \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n              getAssignmentList();\r\n              history.push(\"/taxprofessional/assignment\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n        \r\n          });\r\n     \r\n      }\r\n      else{\r\n        history.push(\"/taxprofessional/assignment\");\r\n        return false\r\n      }\r\n    });\r\n\treturn false;\r\n    }\r\n    else{\r\n      setLoading(true)\r\n\r\n      let formData = new FormData();\r\n  \r\n      formData.append(\"q_id\", id);\r\n      formData.append(\"user_id\", JSON.parse(userid));\r\n      formData.append(\"stage_1_status\", value.client_discussion);\r\n      formData.append(\"stage_2_status\", value.draft_report);\r\n      formData.append(\"stage_3_status\", value.final_discussion);\r\n      formData.append(\"stage_4_status\", value.delivery_report);\r\n      formData.append(\"stage_5_status\", value.other_stage);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/postAssignmentStages`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n            getAssignmentList();\r\n            history.push(\"/taxprofessional/assignment\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    \r\n    }\r\n     \r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Assignment Stages</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            {assignmentStages.map((p, i) => (\r\n              <>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\" ? (\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-8\">\r\n                      <br />\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Client Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.client_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Draft Report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.draft_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Final Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.final_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Delivery of report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.delivery_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Awaiting Completion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.other_stage}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn btn-primary\"\r\n                            disabled\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Client Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"client_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={{\r\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\r\n                                  clients:`${clientDiscussion}`,\r\n                                }}\r\n                              >\r\n                                View Details\r\n                              </Link>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Draft Report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"draft_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        {/* <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={`/teamleader/view-report/${p.assign_no}`}\r\n                              >\r\n                                View Report\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Final Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"final_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Delivery of report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"delivery_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Awaiting Completion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"other_stage\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-group\">\r\n                        {\r\n                          loading ?\r\n                            <Spinner color=\"primary\" />\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                              Submit\r\n                            </button>\r\n                        }\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddAssingmentStages;\r\n","D:\\Mazars\\src\\pages\\TP\\Schedule\\Schedule.js",["3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n      backgroundColor: \"grey\",\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"blue\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n  \r\n    return (\r\n      <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\pages\\TP\\Dashboard\\Dashboard.js",["3269","3270","3271"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid,\r\n    totalpayment } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/tp/totalComplete?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n              totalpayment: response.data.result.totalpayment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n\r\n\r\n  var todaysDate = new Date();\r\n  console.log(todaysDate);\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n\r\n      <div className=\"row\">\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              {/* <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\"> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr> */}\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{totalpayment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\PaymentStatus.js",["3272","3273","3274","3275"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\NewPassword\\NewPassword.js",["3276","3277","3278","3279","3280","3281"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { localeData } from \"moment\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [load, setLoad] = useState(true);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n    var timerOn = true;\r\n    function timer(remaining) {\r\n      var s = remaining % 60;\r\n      s = s < 10 ? '0' + s : s;\r\n      setTime(remaining)\r\n      remaining -= 1;\r\n      if (remaining >= 0 && timerOn) {\r\n        setTimeout(function () {\r\n          timer(remaining);\r\n        }, 1000);\r\n        return;\r\n      }\r\n      setDisabled(true)\r\n    }\r\n    setLoad(false)\r\n    timer(180);\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/taxprofessional/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id}  setLoad={setLoad} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}","D:\\Mazars\\src\\pages\\TP\\ChangePassword\\ChangePassword.js",["3282","3283","3284","3285","3286","3287","3288","3289"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import \"../../assets/css/style.css\";\r\n// import \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_password: yup.string().required(\"required password\"),\r\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n\r\nfunction ChangePassword(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const alert = useAlert();\r\n  // const { handleSubmit, register, reset, errors } = useForm({\r\n  //   resolver: yupResolver(Schema),\r\n  // });\r\n\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"rpassword\", value.confirm_password);\r\n\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/customers/passChange`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       alert.success(\"change password successfully!\");\r\n    //       reset();\r\n    //     } else if (response.data.code === 0) {\r\n    //       console.log(response.data.result);\r\n\r\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n    //       reset();\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter email id\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}{\" \"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","D:\\Mazars\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js",["3290","3291"],"D:\\Mazars\\src\\pages\\TP\\EditProposal\\EditProposal.js",["3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction EditComponent() {\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const[clearValue, setClearValue] = useState(true)\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  \r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    fixed_amount: \"\",\r\n    payable: \"\",\r\n    description: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n\r\n  const { query, name, description, fixed_amount,\r\n    due_date, installment_amount } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          fixed_amount: res.data.result.amount,\r\n          description: res.data.result.description,\r\n          installment_amount: res.data.result.installment_amount,\r\n          due_date: res.data.result.due_date,\r\n        });\r\n\r\n        var payment_terms = res.data.result.payment_terms\r\n        var no_of_installment = res.data.result.no_of_installment\r\n\r\n        const data1 = {\r\n          label: payment_terms,\r\n          value: payment_terms,\r\n        }\r\n\r\n        const data2 = {\r\n          label: no_of_installment,\r\n          value: no_of_installment,\r\n        }\r\n\r\n        // console.log(\"data1\", data1)\r\n        setPayment(data1);\r\n        setInstallment(data2);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n \r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n\r\n    if (payment.length < 1) {\r\n      console.log(\"please select payments terms --\")\r\n      // setpaymentError(\"Please select at lease one\")\r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n          } else if (amount && date) {\r\n            console.log(\"all deatils ** here --\")\r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n                console.log(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n              } else {\r\n                console.log(\"call else fine api for installment\")\r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tp/updateProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n                    console.log(\"res-\", response);\r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      var variable = \"Proposal Updated Successfully \"\r\n                      Alerts.SuccessNormal(variable)\r\n                      history.push(\"/taxprofessional/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    console.log(\"erroror - \", error);\r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n        console.log(\"call api for lumshum\",)\r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tp/updateProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n            console.log(\"res-\", response);\r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal Updated Successfully \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/taxprofessional/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"erroror - \", error);\r\n          });\r\n      }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter digit only\");\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n    console.log(\"paymentAmount\", data)\r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n    console.log(\"paymentDate\", data)\r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n    console.log(\"key\", key)\r\n    setInstallment(key)\r\n    setClearValue(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    defaultValue={fixed_amount}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    defaultValue={description}\r\n                    ref={register({ required: true })}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    onChange={setPayment}\r\n                    value={payment}\r\n                    options={paymentsTerms}\r\n                  />\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date,\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      defaultValue={due_date}\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(e => installmentHandler(e))}\r\n                        value={installment}\r\n                        options={noInstallments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    installment_amount && due_date &&\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      installment_amount={installment_amount}\r\n                      due_date={due_date}\r\n                      getQuery={getQuery}\r\n\r\n                      item={item}\r\n\r\n                    \r\n                      clearValue={clearValue}\r\n\r\n                    />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditComponent;\r\n\r\nconst paymentsTerms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst noInstallments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n\r\n\r\n   // var lumsum = value.p_inst_date\r\n    // setDate(lumsum)\r\n\r\n    // let formData = new FormData();\r\n    // formData.append(\"assign_no\", value.p_assingment);\r\n    // formData.append(\"name\", value.p_name);\r\n    // formData.append(\"type\", \"tl\");\r\n    // formData.append(\"id\", JSON.parse(userid));\r\n    // formData.append(\"description\", value.description);\r\n    // formData.append(\"customer_id\", custId);\r\n    // formData.append(\"assign_id\", id);\r\n    // formData.append(\"amount_type\", \"fixed\");\r\n    // formData.append(\"amount\", value.p_fixed);\r\n    // formData.append(\"installment_amount\", amount);\r\n    // formData.append(\"payment_terms\", payment.value);\r\n    // formData.append(\"no_of_installment\", installment.value);\r\n\r\n    // payment.label == \"lumpsum\" ?\r\n    //   formData.append(\"due_date\", lumsum) :\r\n    //   payment.label == \"installment\" ?\r\n    //     formData.append(\"due_date\", date) :\r\n    //     formData.append(\"due_date\", \"\")\r\n\r\n\r\n    // if (payment.value == \"installment\") {\r\n    //   if (amount) {\r\n    //     console.log(\"amount --\", amount)\r\n\r\n    //     if (installment.value > 0) {\r\n    //       console.log(\"installment** --\")\r\n    //       var a = Number(installment.value)\r\n    //       for (let i = 0; i < a; i++) {\r\n    //         if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n    //           console.log(\"amount --1\", amount[i])\r\n    //           Alerts.ErrorNormal(`please insert all fields.`)\r\n    //           return false\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   if (amount) {\r\n    //     var sum = amount.reduce(myFunction)\r\n    //     function myFunction(total, value) {\r\n    //       return Number(total) + Number(value);\r\n    //     }\r\n    //   }\r\n    //   if (value.p_fixed != sum) {\r\n    //     Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n    //   }\r\n    //   else {\r\n    //     axios({\r\n    //       method: \"POST\",\r\n    //       url: `${baseUrl}/tl/updateProposal`,\r\n    //       data: formData,\r\n    //     })\r\n    //       .then(function (response) {\r\n    //         console.log(\"res-\", response);\r\n    //         if (response.data.code === 1) {\r\n    //           reset();\r\n    //           var variable = \"Proposal Successfully Sent \"\r\n    //           Alerts.SuccessNormal(variable)\r\n    //           history.push(\"/teamleader/proposal\");\r\n    //         }\r\n    //       })\r\n    //       .catch((error) => {\r\n    //         console.log(\"erroror - \", error);\r\n    //       });\r\n    //   }\r\n\r\n    // }\r\n    // else {\r\n    //   axios({\r\n    //     method: \"POST\",\r\n    //     url: `${baseUrl}/tl/updateProposal`,\r\n    //     data: formData,\r\n    //   })\r\n    //     .then(function (response) {\r\n    //       console.log(\"res-\", response);\r\n    // if (response.data.code === 1) {\r\n    //   var variable = \"Proposal Updated Successfully \"\r\n    //   Alerts.SuccessNormal(variable)\r\n    //   history.push(\"/teamleader/proposal\");\r\n    // }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(\"erroror - \", error);\r\n    //     });\r\n    // }","D:\\Mazars\\src\\pages\\TP\\SendProposal\\SendProposal.js",["3318","3319"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ProposalComponent from \"./ProposalComponent\";\r\n\r\n\r\nfunction SendProposal() {\r\n    const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  console.log(\"userid\", userid)\r\n  return (\r\n    <>\r\n   <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n        <ProposalComponent id={id}/>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendProposal;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AssignmentTab.js",["3320","3321","3322","3323"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport DraftReportTab from \"./DraftReportTab\";\r\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n  const [draft, setDraft] = useState(\"\");\r\n  const [final, setFinal] = useState();\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const AllAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setAllAssignmentCount(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getDraftReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setDraft(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getFinalReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setFinal(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    AllAssignment();\r\n    getDraftReports();\r\n    getFinalReports();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignments ({allAssignmentCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Draft Reports ({draft})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Delivery of Final ({final})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DraftReportTab />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeliveryFinalTab />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Login\\Login.js",["3324","3325"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  let history = useHistory()\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tp\");\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          setShow(true)\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\r\n            \"icon\" : \"success\"\r\n          })\r\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data[\"user id\"])\r\n          logout()\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/taxprofessional/login\");\r\n    }, 36000000)\r\n  }\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div class=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid}\r\n              loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div class=\"form\">\r\n              <div class=\"heading\">\r\n                <h2>TAX PROFESSIONAL LOGIN</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/taxprofessional/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nexport default Login;","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\QueriesTab.js",["3326","3327","3328","3329","3330","3331"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\r\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\r\nimport CompleteData from \"../CompleteData/CompleteData\";\r\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\r\nimport AllQuery from \"./AllQuery\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  \r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  const [allQuery, setAllQuery] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const AllQuery = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setAllQuery(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getPendindForAccepttence = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setPendingForAcceptence(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n      console.log(\"userId\", userid)\r\n      axios\r\n     \r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          if (res.data.code === 1) {\r\n            console.log(\"result\", res.data.result)\r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const Declined = () => {\r\n   \r\n      axios\r\n        .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setDeclined(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getPendindForAccepttence();\r\n    getIncomplete();\r\n    getComplete();\r\n    AllQuery();\r\n    Declined()\r\n  }, []);\r\n\r\n  const updateTab = (key) => {\r\n    setTabIndex(key)\r\n  }\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Query ({allQuery})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Pending For Acceptence ({pendindForAccepttence})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries ({incomplete})\r\n            </Tab>\r\n            {/* <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n            Pending for assignment({complete})\r\n            </Tab> */}\r\n            {/* <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab> */}\r\n          </TabList>\r\n\r\n\r\n          <TabPanel>\r\n            <AllQuery\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <PendingForAcceptence\r\n              updateTab={updateTab}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <InCompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <CompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <DeclinedQuery\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n ","D:\\Mazars\\src\\pages\\TP\\Proposal\\ProposalTab.js",["3332","3333","3334","3335","3336"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction ProposalTab(props) {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n    const [allProposal, setAllProposal] = useState(\"\");\r\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\r\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const AllProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setAllProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const InprogressProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setInprogressProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const AcceptedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setAcceptedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const DeclinedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setDeclinedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        AllProposal();\r\n        InprogressProposal();\r\n        AcceptedProposal();\r\n        DeclinedProposal();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Proposals ({allProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Proposals ({inprogressProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                            Accepted; Proposals ({acceptedProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n                            Customer Declined; Proposals ({declinedProposal})\r\n                        </Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AllProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <InprogressProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <AcceptedProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <DeclinedProposal />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js",["3337","3338","3339","3340","3341"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"otp send your email !\",\r\n            \"icon\" : \"success\"\r\n          })\r\n        \r\n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n      console.log(\"item : \", item)\r\n      // return '';\r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\TP\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\TL\\Proposal\\InvoiceTab.js",["3342","3343","3344","3345","3346","3347"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Invoice from \"./Invoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <Invoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\pages\\TL\\Proposal\\Invoice.js",["3348","3349","3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360","3361","3362"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\nimport OutlinedInputIcons from \"@mui/material/OutlinedInput\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nconst Invoice = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState();\r\n  \r\n    const [tds, setTds] = useState(false)\r\n  \r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n \r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                  \r\n                  setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 1,\r\n                                routes: \"tlinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        \r\n       \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n\r\n                return (\r\n                    \r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                                color : \"blue\",\r\n                                            }}\r\n                                            onClick = {() => addTdsToggle(row)} \r\n                                        ></i>\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     invoice = \"create\" \r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Invoice;","D:\\Mazars\\src\\pages\\TL\\Report\\Report.js",["3363"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\n\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n    const [item] = useState(current_date);\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n      \r\n        // formData.append(\"taxprofessional\");\r\n        // formData.append(\"category\",);\r\n        // formData.append(\"subCategory\");\r\n        formData.append(\"q_no\", value.qno);\r\n        formData.append(\"date_query\", value.dateQuery);\r\n        formData.append(\"cust_id\", value.cust_id);\r\n        formData.append(\"basic_category\", value.basicCategory);\r\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\r\n        formData.append(\"assessment\", value.assessment);\r\n        formData.append(\"purpose\", value.purpose);\r\n        formData.append(\"p_format\", value.p_format);\r\n        formData.append(\"t_requested\", value.t_requester);\r\n        formData.append(\"spc_que\", value.spc_que);\r\n        formData.append(\"date_allocation\", value.doa);\r\n\r\n        formData.append(\"taxprofessional\", value.tp_name);\r\n        formData.append(\"date_proposal\", value.dateProposal);\r\n        formData.append(\"proposed_amount\", value.proposedAmount);\r\n        formData.append(\"payment_terms\", value.paymentTerms);\r\n        formData.append(\"proposal_status\", value.proposal_status);\r\n        formData.append(\"accepted_amount\", value.acceptedAmount);\r\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\r\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\r\n        formData.append(\"amount_overdue\", value.amount_overdue);\r\n        formData.append(\"payment_declined\", value.declinedDate);\r\n        formData.append(\"assignment_number\", value.assignNumber);\r\n        formData.append(\"assign_date\", value.assignDate);\r\n        formData.append(\"proposed_completion_date\", value.completionDate);\r\n        formData.append(\"assignment_status\", value.assignStatus);\r\n        formData.append(\"date_complation\", value.completionQuery);\r\n        formData.append(\"assign_time\", value.assignTime);\r\n        formData.append(\"payment_recived_date\", value.receiptDate);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/reports`,\r\n     data : formData\r\n\r\n   })\r\n    }\r\n    return (\r\n        <>\r\n          <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n          <div className=\"adminForm\">\r\n          <Typography variant=\"h4\">Teamleader Report</Typography>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n      </div>\r\n    \r\n   </div> \r\n   <div className=\"row\">\r\n\r\n\r\n<div className=\"col-md-3\">\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Taxprofessional</label>\r\n<Select isMulti = {true} />\r\n\r\n</div>\r\n</div>\r\n       <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti = {true} />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti={true} />\r\n            </div>\r\n   </div>\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Data Query</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Customer Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\r\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\r\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assignment</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\r\n<label htmlFor=\"assignNumber\">Assignment Number</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n            </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n   \r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\pages\\TL\\Recording\\Recording.js",["3364","3365","3366","3367"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\nconst videoIcon = {\r\n    display : \"flex\", \r\n    justifyContent : \"space-around\", \r\n    alignItems : \"center\"\r\n}\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"absolute\",\r\n        top : \"10%\",\r\n        left : \"0%\",\r\n        botttom: \"0%\", \r\n        right: \"0%\",\r\n       \r\n        width : \"100%\", \r\n        height: \"auto\"\r\n    }\r\nconst canBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"10px\",\r\n    left: \"90%\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\",\r\n    color : \"red\"\r\n}\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_id\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                <>\r\n                                <p style={videoIcon}>\r\n                                <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n            <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                 <Card>\r\n                 <CardHeader>\r\n                     <Row>\r\n                         <Col md=\"7\">\r\n                             <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                         </Col>\r\n                         <Col md=\"5\"></Col>\r\n                     </Row>\r\n                 </CardHeader>\r\n                 <CardBody>\r\n                 <RecordingFilter\r\n                        setData={setFeedBackData}\r\n                     //    getData={getInCompleteAssingment}\r\n                        SearchQuery=\"SearchQuery\"\r\n                       setRecords={setRecords}\r\n                        records={records} \r\n                        userid = {userid}\r\n                        getRecording = {getRecording}\r\n                     /> \r\n                     <BootstrapTable\r\n                         bootstrap4\r\n                         keyField=\"id\"\r\n                         data={feedbackData}\r\n                         columns={columns}\r\n                         rowIndex\r\n                     />\r\n                 </CardBody>\r\n \r\n             </Card>\r\n           \r\n            </div>\r\n             \r\n            {isOpen === true ?\r\n           \r\n                  \r\n                  <div style={modalBox}>\r\n                  <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\r\n                 \r\n        \r\n           <div style={{margin: \"50px 0 0 0\"}}>\r\n           <ReactPlayer\r\n             url={videoid}\r\n             controls={true}\r\n             playing={true}\r\n             width='100%'\r\n             height='100%'\r\n            />\r\n               </div>\r\n             \r\n            </div>\r\n          : \"\"}\r\n          </Layout>\r\n            </>\r\n \r\n     );\r\n }\r\n export default Recording;","D:\\Mazars\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js",["3368","3369","3370","3371"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n\r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id} />\r\n \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\TL\\Schedule\\Schedule.js",["3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n      backgroundColor: \"grey\",\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"blue\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n  \r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\views\\AssignmentTab\\RejectModal.js",["3387","3388","3389","3390"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  nestedModal,\r\n  toggleNested,\r\n  dataItem,\r\n  docData,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.assign_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 2);\r\n    formData.append(\"docid\", docData.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          toggleNested();\r\n          getData();\r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\r\n        <ModalHeader>Discussion</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\PaymentModal.js",["3391","3392","3393","3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  pay,\r\n  getProposalData,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  const { id, amount, accepted_amount, paid_amount,\r\n    payment_terms, no_of_installment, installment_amount,\r\n    due_date, amount_type, amount_fixed, amount_hourly\r\n  } = pay;\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"status\", 8);\r\n    formData.append(\"amount\", value.p_amount);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Payment Done Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          getProposalData();\r\n          paymentHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n   \r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tr>\r\n              <th>Accepted Amount</th>\r\n              <td>{accepted_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Paid Amount</th>\r\n              <td>{paid_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Terms</th>\r\n              {\r\n                payment_terms == \"lumpsum\" ?\r\n                  <td>\r\n                    <tr>\r\n\r\n                      <th>Due Dates</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {CommonServices.removeTime(due_date)}\r\n                      </td>\r\n                    </tr>\r\n                  </td>\r\n                  :\r\n                  payment_terms == \"installment\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Installment Amount</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{installAmount(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    \"\"\r\n              }\r\n            </tr>\r\n\r\n          </table>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {+accepted_amount == +paid_amount ? null : (\r\n              <div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    defaultValue={accepted_amount - paid_amount}\r\n                    placeholder=\"enter amount\"\r\n                  />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Pay\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n\r\n{/* <tr>\r\n              <th>{amount_type}</th>\r\n              <td>\r\n                {\r\n                  amount_type == \"fixed\" ?\r\n                    amount\r\n                    :\r\n                    amount_type == \"hourly\" ?\r\n                      amount_hourly\r\n                      :\r\n                      amount_type == \"mixed\" ?\r\n                        <div>\r\n                          <p>Fixed : {amount}</p>\r\n                          <p>Hourly : {amount_hourly}</p>\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                }\r\n              </td>\r\n            </tr> */}","D:\\Mazars\\src\\views\\AssignmentTab\\ViewAllReport.js",["3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421","3422","3423","3424","3425"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport CommonServices from \"../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport DiscardReport from \"./DiscardReport\";\r\nimport Assignmodal from \"./Assignmodal\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n  const [additionalQuery, setAdditionalQuery] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [modaldoc, setModaldoc] = useState({})\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n  const additionalHandler = (p) => {\r\n setModaldoc(p.docid)\r\n    setAdditionalQuery(!additionalQuery);\r\n    setAssignNo(userId)\r\n};\r\n\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", key.docid);\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n   \r\n        if (response.data.code === 1) {\r\n          getData();\r\n          var variable = \"Draft accepted successfully \"\r\n          // Alerts.SuccessNormal(variable)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\"\r\n              onClick={() => ViewDiscussionToggel()}\r\n              >\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n              \r\n                {/* {\r\n                  dataItem ?\r\n                    dataItem.customer_file === null ? \"\" : <th scope=\"row\">File Upload</th>\r\n                    :\r\n                    null\r\n                } */}\r\n                <th scope=\"row\">Uploaded file\r\n                </th>\r\n               \r\n                {\r\n                  dataItem ?\r\n                    dataItem.final_report ? null : <th scope=\"row\">Action</th>\r\n                    :\r\n                    null\r\n                }\r\n              \r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                     \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                 <br></br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }\r\n                </td>\r\n                    {\r\n                      p.stages_type == \"2\" ?\r\n                        <td>\r\n                          {\r\n                            p.status == \"0\" ?\r\n                              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                <div style={{ cursor: \"pointer\" }} title=\"Accept\">\r\n                                  <i\r\n                                    class=\"fa fa-check\"\r\n                                    style={{\r\n                                      color: \"green\",\r\n                                      fontSize: \"16px\",\r\n                                    }}\r\n                                    onClick={() => acceptHandler(p)}\r\n                                  ></i>\r\n                                </div>\r\n                              \r\n                                                      \r\n                                                \r\n                                <div title=\"Discussion\">\r\n                                  <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                      fontSize: 16,\r\n                                      cursor: \"pointer\",\r\n                                      marginLeft: \"8px\",\r\n                                      color: \"green\"\r\n                                    }}\r\n                                    onClick={() => toggleNested(p)}\r\n                                  ></i>\r\n                                </div>\r\n                                {p.customer_files === null ?\r\n                                <div title=\"Upload Additional Documents\"\r\n                                                            style={{ cursor: \"pointer\" }}\r\n                                                            onClick={() => additionalHandler(p)}\r\n                                                           \r\n                                                        >\r\n                                                            <PublishIcon color=\"secondary\" />\r\n                                                        </div> : \"\"}\r\n                              </div>\r\n                              :\r\n                              p.status == \"1\" ?\r\n                                <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\r\n                                  <i\r\n                                    class=\"fa fa-check\"\r\n                                    style={{\r\n                                      color: \"blue\",\r\n                                      fontSize: \"16px\",\r\n                                    }}\r\n                                  ></i>\r\n                                </div> :\r\n                                p.status == \"2\" ?\r\n                                  <div title=\"Discussion\">\r\n                                    <i\r\n                                      class=\"fa fa-comments-o\"\r\n                                      style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        marginLeft: \"8px\",\r\n                                        color: \"green\"\r\n                                      }}\r\n                                      onClick={() => toggleNested(p)}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  null\r\n                          }\r\n                        </td>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n     <Assignmodal\r\n                        additionalHandler={additionalHandler}\r\n                        additionalQuery={additionalQuery}\r\n                        assignNo={assignNo}\r\n                        modaldoc = {modaldoc}\r\n                        getData = {getData}\r\n                        // getQueriesData={getQueriesData}\r\n                    />\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\pages\\TL\\Message\\Message.js",["3426","3427","3428","3429","3430","3431","3432"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Message(props) {\r\n  \r\n    const alert = useAlert();\r\nconst history = useHistory();\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\r\n                        {row.assign_no}\r\n                        {/* </Link> */}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        <Link to={`/teamleader/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\", justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n       \r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                \r\n            })\r\n            .catch((error) => {\r\n              \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\pages\\TL\\Chatting\\Chatting.js",["3433","3434","3435","3436","3437","3438","3439","3440","3441"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n  msg_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { message_type, query_id, query_No, routes } = data\r\nconst [showTl, setShowTl] = useState(false)\r\n\r\n  useEffect(() => {\r\n   \r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataTL\");\r\n\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkAssigned();\r\n  }, [item]);\r\n\r\n  const checkAssigned = () => {\r\n    axios\r\n    .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${query_No}`).then((res) => {\r\n           if(res.data.code === 0){\r\n                setShowTl(false)\r\n           }\r\n           else{\r\n             setShowTl(true)\r\n           }\r\n         })\r\n  };\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.msg_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    {\r\n      value.p_to != undefined ?\r\n    \r\n    formData.append(\"to\", value.p_to)\r\n  : formData.append(\"to\", \"customer\") }\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.msg_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.msg_type.message}\r\n                          </div>\r\n                        )}\r\n\r\n                      </div>\r\n                      {showTl === true ?\r\n                      <div class=\"form-group\">\r\n                        <label>To<span className=\"declined\">*</span></label>\r\n                        <select\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_to,\r\n                          })}\r\n                          name=\"p_to\"\r\n                          ref={register}\r\n                          style={{ height: \"33px\" }}\r\n                        >\r\n                          <option value=\"\">--select--</option>\r\n                          <option value=\"customer\">Customer</option>\r\n                        \r\n                          <>\r\n                          <option value=\"tp\">Tax Professional</option>\r\n                          <option value=\"both\">Both</option> \r\n                          </>\r\n                        </select>\r\n                        {errors.p_to && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_to.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n: \r\n<div class=\"form-group\">\r\n\r\n<input \r\ntype=\"text\"\r\n  className={classNames(\"form-control\", {\r\n    \"is-invalid\": errors.p_to,\r\n  })}\r\n  disabled\r\n  hidden\r\n  value=\"customer\"\r\n  name=\"pcustomer_to\"\r\n  ref={register}\r\n  style={{ height: \"33px\" }}/>\r\n  \r\n\r\n</div> }\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\components\\AgoraVideoCall\\index.jsx",["3442","3443","3444","3445","3446","3447","3448","3449","3450","3451"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport axios from \"axios\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../assets/fonts/css/icons.css\";\r\n\r\n\r\nvar customer_id = \"d339577a294c458c86d8a78b474141fc\";\r\nvar customer_secret = \"1a61a4bef2144e78be6f671d5cf3fc32\";\r\n\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      \r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n       \r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n             \r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n           \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    // this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n\r\n        },\r\n        () => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      \r\n      rt.client.subscribe(stream, function (err) {\r\n       \r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n     \r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n\r\n          },\r\n          () => {\r\n          \r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      // window.location.hash = \"/customer/schedule\";\r\n      window.location.assign(\"/customer/schedule\")\r\n    }\r\n  };\r\n\r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n      \r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n         \r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                \r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n             \r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n  recordStream = () => {\r\n\r\n    var data = JSON.stringify({\r\n      \"cname\":\"demo\",\r\n      \"uid\":\"527841\",\r\n      \"clientRequest\":{ \"resourceExpiredHour\": 24}});\r\n\r\n      var config = {\r\n      method: 'post',\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      headers: { \r\n        'Content-Type': 'application/json', \r\n        'Authorization': 'Basic '+this.encodedString,\r\n      },\r\n      data : data\r\n      };\r\n        axios(config)\r\n        .then(function (response) {\r\n        \r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recordStream}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record\"\r\n      >\r\n        <RecordVoiceOverIcon />\r\n      </span>\r\n    );\r\n\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n          {recordingBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;\r\n\r\n\r\n// https://mazars.multitvsolution.com/#/customer/dashboard\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\DeclinedProposal.js",["3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Customer Declined; Proposal\" ?\r\n                                    <p className=\"declined\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null :\r\n                            <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n            }\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\AcceptedProposal.js",["3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n// import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n\r\n                            {\r\n                                row.status == \"Accepted; Proposal\" ?\r\n                                    <p className=\"completed\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                           \r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                               \r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    // onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    {/* <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    /> */}\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\InprogressProposal.js",["3479","3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                              \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        InprogressProposal=\"InprogressProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\Generated.js",["3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    \r\n \r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                   \r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 0,\r\n                                routes: \"tlinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"invoice_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       <div style={{ display: \"flex\", alignItems:\"center\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                              {row.is_paid == \"0\" ? \r\n                        <i\r\n                        class=\"fa fa-edit\"\r\n                        style={{\r\n                            fontSize: \"16px\",\r\n                            margin: \"0 5px\",\r\n                            cursor: \"pointer\",\r\n                            color : \"blue\",\r\n                        }}\r\n                       onClick = {() => addTdsToggle(row)} \r\n                    ></i> : \"\"\r\n                        }\r\n                        </div>\r\n                      \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n    \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"generated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                    />\r\n\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\TP\\Proposal\\AllProposal.js",["3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\n\r\nfunction AllProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n                                            {row.status}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.status}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                            {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n            }\r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n     \r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        AllProposal=\"AllProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProposal;\r\n\r\n\r\n\r\n\r\n{/* <div>\r\n                                {row.revised_text && (\r\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\r\n                                            onClick={() => chatHandler(row)}\r\n                                        ></i>\r\n                                    </div>\r\n                                )}\r\n                            </div> */}","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\AllQuery.js",["3529","3530","3531","3532","3533","3534","3535","3536","3537","3538"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllQuery() {\r\n\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const [incompleteData, setInCompleteData] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInCompleteAssingment();\r\n    }, []);\r\n\r\n    const getInCompleteAssingment = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n                console.log(\"resultTP\", res.data.result);\r\n                if (res.data.code === 1) {\r\n                    setInCompleteData(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index: 1,\r\n                                routes: \"queriestab\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"\tExp. Delivery Date\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                     {row.tp_status == \"1\" ? null : \r\n                      \r\n                      <div\r\n                      style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"green\",\r\n                      }}\r\n                  >\r\n                     \r\n\r\n                      {row.status == \"Declined Query\" ? null :\r\n                      <div title=\"Send Message\">\r\n                      <Link\r\n                          to={{\r\n                              pathname: `/taxprofessional/chatting/${row.id}`,\r\n                              obj: {\r\n                                  message_type: \"4\",\r\n                                  query_No: row.assign_no,\r\n                                  query_id: row.id,\r\n                                  routes: `/taxprofessional/proposal`\r\n                              }\r\n                          }}\r\n                      >\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  marginLeft: \"8px\",\r\n                                  color: \"blue\"\r\n                              }}\r\n                          ></i>\r\n                      </Link>\r\n                  </div>}\r\n\r\n                      <div title=\"View Discussion Message\">\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  color: \"orange\"\r\n                              }}\r\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                      </div>\r\n                  </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setInCompleteData}\r\n                        getData={getInCompleteAssingment}\r\n                        AllQuery=\"AllQuery\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={incompleteData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getInCompleteAssingment}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\Login\\VerifyOtpLogin.js",["3539"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n \r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"tpkey\", JSON.stringify(response.data[\"user id\"]));\r\n          localStorage.setItem(\"tpEmail\", JSON.stringify(response.data.name));\r\n          history.push(\"/taxprofessional/dashboard\");\r\n\r\n        } else {\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          setLoading(false)\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"id\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\pages\\TP\\EditProposal\\Payment.js",["3540","3541","3542","3543"],"import React from \"react\";\r\n\r\n\r\nexport default class YourComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n\r\n    amount = this.props.installment_amount\r\n    installment_amount = this.amount.split(',');\r\n    temp = this.installment_amount\r\n    tamp2;\r\n    handleChange1(i, e) {\r\n        const { value } = e.target\r\n        this.temp[i] = value\r\n        console.log(this.temp)\r\n    \r\n        this.setState({\r\n            values: {\r\n              ...this.temp.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n    }\r\n\r\n\r\n    due_date = this.props.due_date;\r\n     installment_due_dates = this.due_date.split(',')\r\n    installmentDueDate = this.installment_due_dates;\r\n\r\n    handleChange2(i, e) {\r\n        const { value } = e.target\r\n        this.installmentDueDate[i] = value\r\n\r\n        this.setState({\r\n            dates: {\r\n              ...this.installmentDueDate.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: false });\r\n        \r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = this.props.clearValue === false ? amount.split(',') : []\r\n        const due_date = date.split(',');\r\n\r\n\r\n        this.props.paymentAmount(installment_amount);\r\n        this.props.paymentDate(due_date)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\nconsole.log(\"dateValue\", this.props.clearValue)\r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n        var fieldsArray = [];\r\n\r\n\r\n        for (var i = 0; i < this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    {this.props.clearValue == true ? \r\n                   <div class=\"col-md-6 my-2\">\r\n                       \r\n                   <input\r\n                       type=\"text\"\r\n                       className=\"form-control\"\r\n                       name={this.state.values[i]}\r\n                       onChange={this.handleChange1.bind(this, i)}\r\n                      defaultValue={installment_amount[i]}\r\n                   />\r\n               </div> :   \"\"\r\n}\r\n{this.props.clearValue == false ? \r\n    <div class=\"col-md-6 my-2\">\r\n                       \r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           name={this.state.values[i]}\r\n                           onChange={this.handleChange1.bind(this, i)}\r\n                           defaultValue=\"\"\r\n                       />\r\n                   </div> : \"\"}\r\n          {this.props.clearValue == true ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue={due_date[i]}\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}  \r\n       {this.props.clearValue == false ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue= \"\"\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}         \r\n                   \r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DeliveryFinalTab.js",["3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n    const [fianlModal, setFianlModal] = useState(false);\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n    console.log(\"current_date :\", current_date);\r\n    const [item] = useState(current_date);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const uploadFinalReport = (id) => {\r\n       \r\n        setFianlModal(!fianlModal);\r\n        setFinalId(id);\r\n      };\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n        console.log(\"resetCategory ..\");\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n        console.log(\"resetData ..\");\r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStatus(value);\r\n    };\r\n// view Report\r\nconst ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.date_of_query);\r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.final_date);\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                      {\r\n                 row.paid_status == \"2\" ? null :\r\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                      <i class=\"fa fa-tasks\"></i>\r\n                    </Link>\r\n            }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n               {\r\n                 row.paid_status == \"2\" ? null : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    \r\n      {\r\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n      \r\n      <div title=\"upload Pdf\">\r\n       <p\r\n         style={{ cursor: \"pointer\", color: \"red\" }}\r\n         onClick={() => uploadFinalReport(row)}\r\n       >\r\n       \r\n             <div>\r\n               <i\r\n                 class=\"fa fa-upload\"\r\n                 style={{ fontSize: \"16px\" }}\r\n               ></i>\r\n               final\r\n             </div>\r\n          \r\n       </p>\r\n      </div> : null\r\n      }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/taxprofessional/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"data :\", data);\r\n        console.log(\"selectedData :\", selectedData);\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=${status}&stages_status=${data.p_status\r\n                }&pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n  <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n          />\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    \r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TP\\SendProposal\\ProposalComponent.js",["3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const [paymentError, setpaymentError] = useState();\r\n\r\n  const [date, setDate] = useState();\r\n  const [amount, setAmount] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tp_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    console.log(\"amount --\", amount)\r\n    console.log(\"date --\", date)\r\n\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n    \r\n    // var arrAmount = []\r\n    // var arrDate = []\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", assignId);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n    if (payment.length < 1) {\r\n      console.log(\"please select payments terms --\")\r\n      setpaymentError(\"Please select at lease one\")\r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n          console.log(\"Please select no of installment --\", installment)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n            console.log(\"Please enter all fields\")\r\n          } else if (amount && date) {\r\n            console.log(\"all deatils ** here --\")\r\n\r\n            console.log(\"installment.value -\", installment.value)\r\n\r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n                // arrAmount.push(amount[i])\r\n                // arrDate.push(date[i])\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  console.log(\"Please enter amount\")\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  console.log(\"Please enter date\")\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n                console.log(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n              } else {\r\n                console.log(\"call else fine api for installment\")\r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tp/uploadProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n                    console.log(\"res-\", response);\r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      Alerts.SuccessNormal(\"Proposal sent successfully.\")\r\n                      history.push(\"/taxprofessional/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    console.log(\"erroror - \", error);\r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n        console.log(\"call api for lumshum\",)\r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tp/uploadProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n            console.log(\"res-\", response);\r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal sent successfully. \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/taxprofessional/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"erroror - \", error);\r\n          });\r\n      }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n    console.log(\"paymentAmount\", data)\r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n    console.log(\"paymentDate\", data)\r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter number only.\");\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n    setTotalAmount(e.target.value);\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n    console.log(\"key\", key)\r\n    setInstallment(key)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div>\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    className=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Proposal Description\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    className=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    className={paymentError ? \"customError\" : \"\"}\r\n                    onChange={(e) => {\r\n                      setPayment(e)\r\n                      setpaymentError(\"\")\r\n                    }}\r\n                    options={payment_terms}\r\n                  />\r\n\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        onChange={(e => installmentHandler(e))}\r\n                        options={no_installments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      totalAmount={totalAmount}\r\n                      min={item}\r\n                      item={item}\r\n                    />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\n\r\nconst payment_terms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst no_installments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n\r\n    // if (amount) {\r\n        //   var sum = amount.reduce(myFunction)\r\n        //   function myFunction(total, value) {\r\n        //     return Number(total) + Number(value);\r\n        //   }\r\n        // }\r\n        // if (value.p_fixed != sum) {\r\n        //   Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n        // } else if (!date) {\r\n        //   console.log(\"call date\")\r\n        //   Alerts.ErrorNormal(`Please date should be enter`)\r\n        // }\r\n\r\n // var lumsum = value.p_inst_date\r\n    // setDate(lumsum)\r\n\r\n    // if (payment.length < 1) {\r\n    //   setpaymentError(\"Please select at lease one\")\r\n    // }\r\n    // else {\r\n    //   setpaymentError(\"\")\r\n    //   let formData = new FormData();\r\n\r\n    // formData.append(\"assign_no\", assingNo);\r\n    // formData.append(\"name\", value.p_name);\r\n    // formData.append(\"type\", \"tl\");\r\n    // formData.append(\"id\", JSON.parse(userid));\r\n    // formData.append(\"assign_id\", assignId);\r\n    // formData.append(\"customer_id\", custId);\r\n    // formData.append(\"description\", value.description);\r\n\r\n    // formData.append(\"amount_type\", \"fixed\");\r\n    // formData.append(\"amount\", value.p_fixed);\r\n    // formData.append(\"installment_amount\", amount);\r\n\r\n    // formData.append(\"payment_terms\", payment.value);\r\n    // formData.append(\"no_of_installment\", installment.value);\r\n\r\n    // payment.label == \"lumpsum\" ?\r\n    //   formData.append(\"due_date\", lumsum) :\r\n    //   payment.label == \"installment\" ?\r\n    //     formData.append(\"due_date\", date) :\r\n    //     formData.append(\"due_date\", \"\")\r\n\r\n    //   console.log(\"payment -\", payment.label)\r\n\r\n    //   if (payment.value == \"installment\") {\r\n    //     console.log(\"amount --\", amount)\r\n    //     console.log(\"date --\", date)\r\n\r\n    // if (!amount || !date) {\r\n    //   Alerts.ErrorNormal(`please enter all fields`)\r\n    // } else\r\n    // if (amount && date) {\r\n    //   if (installment.value > 0) {\r\n    //     console.log(\"installment** --\")\r\n\r\n    //     var a = Number(installment.value)\r\n    //     for (let i = 0; i < a; i++) {\r\n    //       // console.log(\"call for loop\", i, amount[i])\r\n    //       if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n    //         console.log(\"amount --1\", amount[i])\r\n    //         Alerts.ErrorNormal(`please insert all fields.`)\r\n    //         return false\r\n    //       }\r\n    //     }\r\n    //     var sum = amount.reduce(myFunction)\r\n    //     function myFunction(total, value) {\r\n    //       return Number(total) + Number(value);\r\n    //     }\r\n    //     if (value.p_fixed != sum) {\r\n    //       Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n    //     } else {\r\n    //       console.log(\"calll else fine api\")\r\n    //     }\r\n    //   }\r\n    //       }\r\n    //       else {\r\n    //         console.log(\"call else\")\r\n    //         return false\r\n    //         setLoading(true)\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/tl/uploadProposal`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       setLoading(false)\r\n    //       Alerts.SuccessNormal(\"Proposal sent successfully.\")\r\n    //       history.push(\"/teamleader/proposal\");\r\n    //     } else if (response.data.code === 0) {\r\n    //       setLoading(false)\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n    //       }\r\n    //   }\r\n    //   else {\r\n    // setLoading(true)\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/tl/uploadProposal`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       setLoading(false)\r\n\r\n    //       var variable = \"Proposal sent successfully. \"\r\n    //       Alerts.SuccessNormal(variable)\r\n    //       history.push(\"/teamleader/proposal\");\r\n    //     } else if (response.data.code === 0) {\r\n    //       setLoading(false)\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n    //   }\r\n    // }\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AllAssignment.js",["3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [count, setCount] = useState(\"\");\r\n  const [assignment, setAssignment] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [finalId, setFinalId] = useState(\"\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  const [dataItem, setDataItem] = useState({});\r\n  const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  var rowStyle2 = {}\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n  \r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignment(res.data.result);\r\n          setCount(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStatus(value);\r\n  };\r\n\r\n\r\n  //columns\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.date_of_query);\r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n            {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n           \r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected date of delivery\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Actual date of delivery\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Assignment Stage\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              title=\"Add Assignment stages\"\r\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n            >\r\n                {\r\n           row.paid_status == \"2\" ? null :\r\n              <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                <i class=\"fa fa-tasks\"></i>\r\n              </Link>\r\n      }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"90px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n         {\r\n           row.paid_status == \"2\" ? null : \r\n           <div\r\n           style={{\r\n             display: \"flex\",\r\n             justifyContent: \"space-between\",\r\n           }}\r\n         >\r\n           \r\n           \r\n              {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n            {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n{\r\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n\r\n<div title=\"upload Pdf\">\r\n <p\r\n   style={{ cursor: \"pointer\", color: \"red\" }}\r\n   onClick={() => uploadFinalReport(row)}\r\n >\r\n \r\n       <div>\r\n         <i\r\n           class=\"fa fa-upload\"\r\n           style={{ fontSize: \"16px\" }}\r\n         ></i>\r\n         final\r\n       </div>\r\n    \r\n </p>\r\n</div> : null\r\n}\r\n          \r\n\r\n           <div title=\"View Discussion Message\">\r\n             <i\r\n               class=\"fa fa-comments-o\"\r\n               style={{\r\n                 fontSize: 16,\r\n                 cursor: \"pointer\",\r\n                 color: \"orange\"\r\n               }}\r\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n             ></i>\r\n           </div>\r\n           <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                 obj: {\r\n                   message_type: \"3\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.q_id,\r\n                   routes: `/taxprofessional/assignment`\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n\r\n         </div>\r\n         }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n  // draft modal\r\n  const [draftModal, setDraftModal] = useState(false);\r\n  const uploadDraftReport = (id) => {\r\n    console.log(id);\r\n    setDraftModal(!draftModal);\r\n    setId(id);\r\n  };\r\n\r\n\r\n  // final modal\r\n  const [fianlModal, setFianlModal] = useState(false);\r\n  const uploadFinalReport = (id) => {\r\n    console.log(id);\r\n    setFianlModal(!fianlModal);\r\n    setFinalId(id);\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"selectedData :\", selectedData);\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&assignment_status=${status}&stages_status=${data.p_status\r\n        }&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignment(res.data.result);\r\n            setRecords(res.data.result.length);\r\n\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Pending</option>\r\n                  <option value=\"2\">Complete</option>\r\n                  <option value=\"3\">Payment Decline</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Draft report</div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of report\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Completed</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n              }\r\n\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignment}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n\r\n          <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n          />\r\n\r\n          <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n          />\r\n\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentList}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\NewPassword\\ResendOtp.js",["3626","3627"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setLoad, setDisabled, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n        formData.append(\"p\", \"forgot\");\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    setLoad(true)\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paid.js",["3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const rejectHandler = (key) => {\r\n        console.log(\"key\", key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=2`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n        console.log(\"key\", key);\r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\r\n                            {\r\n                                row.paid_status == \"0\" ? null :\r\n                                    <div title=\"Payment History\"\r\n                                      \r\n                                        style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                                    </div>\r\n                            }\r\n\r\n                            {\r\n                                (row.paid_status == \"0\") ?\r\n                                    <div title=\"Payment decline\"\r\n                                        onClick={() => rejectHandler(row)}\r\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <PaymentIcon />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                            <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                        obj: {\r\n                                            message_type: \"5\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.assign_id,\r\n                                            routes: `/teamleader/proposal`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n                            <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>             \r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Paid=\"Paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportTab.js",["3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\r\n    const [item] = useState(current_date);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [draftModal, setDraftModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n    const ViewReport = (key) => {\r\n        console.log(\"key - \", key);\r\n        setReportModal(!reportModal);\r\n        setReport(key.assign_no);\r\n        setDataItem(key)\r\n      };\r\n    const uploadDraftReport = (id) => {\r\n        console.log(id);\r\n        setDraftModal(!draftModal);\r\n        setId(id);\r\n      };\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n        console.log(\"resetCategory ..\");\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n        console.log(\"resetData ..\");\r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStatus(value);\r\n    };\r\n\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.date_of_query);\r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.final_date);\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                      {\r\n                 row.paid_status == \"2\" ? null :\r\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                      <i class=\"fa fa-tasks\"></i>\r\n                    </Link>\r\n            }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n               {\r\n                 row.paid_status == \"2\" ? null : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                  {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/taxprofessional/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"data :\", data);\r\n        console.log(\"selectedData :\", selectedData);\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tp/getAssignments?tp_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=\"Draft_Report\"&stages_status=1\r\n               &pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n<DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n          />\r\n           <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Unpaid.js",["3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n   \r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=1`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.paid_status === \"2\" ? \r\n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                         <div title=\"Payment History\"\r\n \r\n                             style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                         >\r\n                             <i\r\n                            class=\"fa fa-credit-card\"\r\n                            onClick={() => toggle(row.assign_id)}\r\n                            style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                         </div>\r\n                        \r\n \r\n \r\n                         <div title=\"View Discussion Message\">\r\n                             <i\r\n                                 class=\"fa fa-comments-o\"\r\n                                 style={{\r\n                                     fontSize: 16,\r\n                                     cursor: \"pointer\",\r\n                                     color: \"orange\"\r\n                                 }}\r\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                             ></i>\r\n                         </div>\r\n \r\n                     </div> : \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                        <div title=\"Payment History\"\r\n\r\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                        >\r\n                            <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                                    obj: {\r\n                                        message_type: \"5\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.assign_id,\r\n                                        routes: `/taxprofessional/proposal`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 18,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                        </div>\r\n                        {/* <div>\r\n                            {\r\n                                row.paid_status == \"0\" ?\r\n                                    <div title=\"Payment decline\"\r\n                                        onClick={() => rejectHandler(row)}\r\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <PaymentIcon />\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div> */}\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n                    </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        \r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Unpaid=\"Unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                        rowStyle={rowStyle2}\r\n                        rowIndex\r\n                    />\r\n\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n<DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TP\\DeclinedQuery\\DeclinedQuery.js",["3675","3676","3677","3678","3679","3680"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\nfunction DeclinedQuery({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\CompleteData\\CompleteData.js",["3681","3682","3683","3684","3685","3686","3687","3688"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\n\r\n\r\nfunction CompletedQuery() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompletedQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\PendingForAcceptence.js",["3689"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\r\n  let history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    id: \"\",\r\n    allocation_id: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    console.log(\"key\", key);\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      id: key.id,\r\n      allocation_id: key.allocation_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingforAcceptance();\r\n  }, []);\r\n\r\n  const getPendingforAcceptance = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setPendingData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n          // CountPendingForAcceptence(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created);\r\n        var oldDate = row.query_created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Accept / Reject\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                color: \"#6967ce\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              id=\"div1\"\r\n            >\r\n              <div\r\n                id=\"accept\"\r\n                title=\"Accept Assignment\"\r\n                onClick={() => acceptHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-check\"\r\n                  style={{ color: \"green\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n              <div\r\n                id=\"reject\"\r\n                title=\"Reject Assignment\"\r\n                // onClick={() => rejectHandler(row)}\r\n                onClick={() => rejectHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-times\"\r\n                  style={{ color: \"red\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tp_id\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n   \r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\r\n          \r\n          getPendingforAcceptance();\r\n         // updateTab(1);\r\n         history.push(\"/taxprofessional/proposal\")\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setPendingData}\r\n            getData={getPendingforAcceptance}\r\n            pendingForAcceptence=\"pendingForAcceptence\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Spinner color=\"primary\" />\r\n              :\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={pendingData}\r\n                columns={columns}\r\n                rowIndex\r\n              />\r\n          }\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getPendingforAcceptance={getPendingforAcceptance}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\InCompleteData\\InCompleteData.js",["3690","3691","3692","3693","3694","3695","3696","3697","3698","3699"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction InCompleteData({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        \r\n          return (\r\n              <>\r\n               {row.tp_status == \"1\" ? null : \r\n                \r\n                <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    color: \"green\",\r\n                }}\r\n            >\r\n               \r\n\r\n                {row.status == \"Declined Query\" ? null :\r\n                <div title=\"Send Message\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/taxprofessional/chatting/${row.id}`,\r\n                        obj: {\r\n                            message_type: \"4\",\r\n                            query_No: row.assign_no,\r\n                            query_id: row.id,\r\n                            routes: `/taxprofessional/proposal`\r\n                        }\r\n                    }}\r\n                >\r\n                    <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                            fontSize: 16,\r\n                            cursor: \"pointer\",\r\n                            marginLeft: \"8px\",\r\n                            color: \"blue\"\r\n                        }}\r\n                    ></i>\r\n                </Link>\r\n            </div>}\r\n\r\n                <div title=\"View Discussion Message\">\r\n                    <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                            fontSize: 16,\r\n                            cursor: \"pointer\",\r\n                            color: \"orange\"\r\n                        }}\r\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                    ></i>\r\n                </div>\r\n            </div>}\r\n              </>\r\n          );\r\n      },\r\n  },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            InprogressQuery=\"InprogressQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getInCompleteAssingment}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InCompleteData;\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\Assignmodal.js",["3700","3701"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nfunction Assignmodal({\r\n  additionalQuery,\r\n  additionalHandler,\r\n  assignNo,\r\n  modaldoc,\r\n  getData,\r\n  getQueriesData,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n \r\n  let history = useHistory();\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"upload\", file);\r\n       \r\n      }\r\n    }\r\n    formData.append(\"uid\", assignNo);\r\n    formData.append(\"doc_id\", modaldoc);\r\n    // formData.append(\"assign_no\", assignNo);\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/documentAttach`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n       \r\n        history.push(\"/customer/assignment\")\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n       \r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\r\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n              \r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assignmodal;\r\n","D:\\Mazars\\src\\pages\\TL\\Schedule\\Demo.js",["3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(\"res -\", res);\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          console.log(\"dt--\", newArrayOfObj);\r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n        console.log(\"dt---\", newOwners);\r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const B = (key) => {\r\n    setRead(!key)\r\n  }\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <div onDoubleClick={() => B(data.owner)}>\r\n      {console.log(\"dataOwner\", data.owner)}\r\n      <Appointments.Appointment {...restProps}>\r\n        <div style={{ display: \"flex\" }}>\r\n        <i\r\n          onClick={() => handleJoin(data)}\r\n            class=\"fa fa-video-camera\"\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n          <div>{children}</div>\r\n          \r\n        </div>\r\n      </Appointments.Appointment>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (data) => {\r\n    // console.log(\"data\", data);\r\n\r\n    Cookies.set(\"channel_2\", data.question_id);\r\n    Cookies.set(\"baseMode_2\", baseMode);\r\n    Cookies.set(\"transcode_2\", transcode);\r\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n    Cookies.set(\"videoProfile_2\", videoProfile);\r\n    // history.push(\"/teamleader/meeting/\");\r\n    history.push(`/teamleader/meeting/${data.id}`);\r\n\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n    console.log(\"d ---\", d);\r\n\r\n    if (typeof d === 'object') {\r\n      console.log(\"GMT\");\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n      console.log(\"d\");\r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted, cancel }) => {\r\n\r\n    if (added) {\r\n      setLoading(true)\r\n      console.log(\"added - \", added);\r\nconsole.log(\"cancle\", cancel)\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n    if (changed) {\r\n      console.log(\"changed\", changed);\r\n      setLoading(true)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n      console.log(\"data2 - \", data2);\r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n      console.log(\"id -\", id);\r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n      console.log(\"owner\", dataIttem.owner);\r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var msg = \"Call details updated successfully.\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            console.log(\"call 0 code\")\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n      console.log(\"deleted f\", deleted);\r\n      setLoading(true)\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n          console.log(\"owner\", data.owner);\r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n      // console.log(\"value\", value);\r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted !\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n            console.log(\"res -\", res);\r\n            if (res.data.code === 1) {\r\n              setLoading(false)\r\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              setLoading(false)\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n    console.log(\"appointmentData\", appointmentData);\r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ?\r\n          <Loader />\r\n          :\r\n          <>\r\n            <Paper>\r\n              <Scheduler data={data} height={570}>\r\n                <ViewState\r\n                  defaultCurrentDate={currentDate}\r\n                  defaultCurrentViewName=\"Week\"\r\n                />\r\n                <EditingState onCommitChanges={commitChanges} />\r\n                <EditRecurrenceMenu />\r\n\r\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n                \r\n                <Appointments appointmentComponent={myAppointment} />\r\n\r\n                <Toolbar />\r\n                <DateNavigator />\r\n                <TodayButton />\r\n                <ViewSwitcher />\r\n\r\n                <AppointmentTooltip showOpenButton />\r\n\r\n                {\r\n                  read ?\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                      readOnly\r\n                    />\r\n                    :\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                    />\r\n                }\r\n\r\n                <Resources\r\n                  data={resources}\r\n                />\r\n              </Scheduler>\r\n            </Paper>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Demo;","D:\\Mazars\\src\\pages\\TL\\Message\\PaymentModal.js",["3715","3716","3717","3718"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\AllPayment.js",["3719","3720","3721","3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    // End UseSatate \r\n    // Global Veriable\r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n   \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n               \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n        },        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.paid_status === \"2\" ?  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n<div title=\"Payment History\"\r\n\r\n    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n>\r\n    <i\r\n   class=\"fa fa-credit-card\"\r\n   onClick={() => toggle(row.assign_id)}\r\n   style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n</div>\r\n\r\n<div title=\"View Discussion Message\">\r\n    <i\r\n        class=\"fa fa-comments-o\"\r\n        style={{\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            color: \"orange\"\r\n        }}\r\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n    ></i>\r\n</div>\r\n\r\n</div> : \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                        <div title=\"Payment History\"\r\n\r\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                        >\r\n                            <i\r\n                           class=\"fa fa-credit-card\"\r\n                           onClick={() => toggle(row.assign_id)}\r\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                                    obj: {\r\n                                        message_type: \"5\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.assign_id,\r\n                                        routes: `/taxprofessional/proposal`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 18,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                        </div>\r\n                        {/* <div>\r\n                            {\r\n                                row.paid_status == \"0\" ?\r\n                                    <div title=\"Payment decline\"\r\n                                        onClick={() => rejectHandler(row)}\r\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <PaymentIcon />\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div> */}\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n                    </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        rowStyle={rowStyle2}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TL\\meeting\\index.jsx",[],"D:\\Mazars\\src\\pages\\TP\\Schedule\\Demo.js",["3733","3734","3735","3736","3737","3738","3739","3740","3741","3742","3743","3744","3745"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(\"res -\", res);\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery?tp_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          console.log(\"dt--\", newArrayOfObj);\r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n        console.log(\"dt--\", newOwners);\r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const B = (key) => {\r\n    setRead(!key)\r\n  }\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <div onDoubleClick={() => B(data.owner)}>\r\n      <Appointments.Appointment {...restProps}>\r\n        <div style={{ display: \"flex\" }}>\r\n        <i\r\n         onClick={() => handleJoin(data)}\r\n            class=\"fa fa-video-camera\"\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n          <div>{children}</div>\r\n          \r\n         \r\n        </div>\r\n      </Appointments.Appointment>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (data) => {\r\n    // console.log(\"data\", data);\r\n\r\n    Cookies.set(\"channel_2\", data.question_id);\r\n    Cookies.set(\"baseMode_2\", baseMode);\r\n    Cookies.set(\"transcode_2\", transcode);\r\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n    Cookies.set(\"videoProfile_2\", videoProfile);\r\n    // history.push(\"/teamleader/meeting/\");\r\n    history.push(`/taxprofessional/meeting/${data.id}`);\r\n\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n    console.log(\"d ---\", d);\r\n\r\n    if (typeof d === 'object') {\r\n      console.log(\"GMT\");\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n      console.log(\"d\");\r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n\r\n    if (added) {\r\n      setLoading(true)\r\n      console.log(\"added - \", added);\r\n\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n    if (changed) {\r\n      console.log(\"changed\", changed);\r\n      setLoading(true)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n      console.log(\"data2 - \", data2);\r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n      console.log(\"id -\", id);\r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n      console.log(\"owner\", dataIttem.owner);\r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var msg = \"Call details updated successfully.\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            console.log(\"call 0 code\")\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n      console.log(\"deleted f\", deleted);\r\n      setLoading(true)\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n          console.log(\"owner\", data.owner);\r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n      // console.log(\"value\", value);\r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted !\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n            console.log(\"res -\", res);\r\n            if (res.data.code === 1) {\r\n              setLoading(false)\r\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              setLoading(false)\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n    console.log(\"appointmentData\", appointmentData);\r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ?\r\n          <Loader />\r\n          :\r\n          <>\r\n            <Paper>\r\n              <Scheduler data={data} height={570}>\r\n                <ViewState\r\n                  defaultCurrentDate={currentDate}\r\n                  defaultCurrentViewName=\"Week\"\r\n                />\r\n                <EditingState onCommitChanges={commitChanges} />\r\n                <EditRecurrenceMenu />\r\n\r\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n                \r\n                <Appointments appointmentComponent={myAppointment} />\r\n\r\n                <Toolbar />\r\n                <DateNavigator />\r\n                <TodayButton />\r\n                <ViewSwitcher />\r\n\r\n                <AppointmentTooltip showOpenButton />\r\n\r\n                {\r\n                  read ?\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                      readOnly\r\n                    />\r\n                    :\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                    />\r\n                }\r\n\r\n                <Resources\r\n                  data={resources}\r\n                />\r\n              </Scheduler>\r\n            </Paper>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Demo;","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DiscardReport.js",["3746","3747","3748","3749","3750"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  // mazarapi/v1/tl/getMessage?id=128&q_no=Q-24-72\r\n\r\n  const getHistory = () => {\r\n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\components\\Search-Filter\\tpfilter.js",["3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763","3764","3765","3766","3767","3768","3769","3770"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction TaxProfessionalFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    AllQuery,\r\n    pendingForAcceptence,\r\n    InprogressQuery,\r\n    DeclinedQuery,\r\n\r\n    completeAssignment,\r\n    proposal,\r\n    AllProposal,\r\n    InprogressProposal,\r\n    assignment,\r\n    AllPayment,\r\n    Unpaid,\r\n    Paid\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n  \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n  \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n  \r\n    if (AllQuery == \"AllQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQuery == \"InprogressQuery\") {\r\n\r\n  \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getCompleteQues?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllProposal == \"AllProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressProposal == \"InprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if(proposal == \"proposal\"){\r\n      axios\r\n      .get(\r\n        `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&status=2&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setData(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Unpaid == \"Unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?&tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Paid == \"Paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n\r\n                  {AllQuery == \"AllQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Queries</option>\r\n                      <option value=\"2\">Completed; Queries</option>\r\n                      <option value=\"3\">Declined; Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressQuery == \"InprogressQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      onChange={(e) => setStatus1(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllProposal == \"AllProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Proposals</option>\r\n                      <option value=\"2\">Accepted; Proposals</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressProposal == \"InprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\">Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaxProfessionalFilter;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\ViewAllReport.js",["3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783","3784","3785","3786","3787","3788"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"./DiscardReport\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    // setDocData(report)\r\n  }\r\n\r\n\r\n  //check\r\n  const toggleDiscard = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to discard ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, discarted it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    console.log(id)\r\n    let formData = new FormData();\r\n    formData.append(\"tp_id\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 2);\r\n    formData.append(\"docid\", id.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          getData()\r\n          Alerts.SuccessNormal(\"Discarded Successfully\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                    \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                     <p> {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                 <br></br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\r\n                    <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\r\n                                    <i\r\n                                      class=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          class=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          class=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\pages\\TP\\SendProposal\\Payment.js",["3789","3790"],"import { values } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport default class Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        if (isNaN(e.target.value)) {\r\n            this.setState({ error: \"Please insert only digit\" })\r\n        }\r\n        else {\r\n            this.setState({ error: \"\" })\r\n        }\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n\r\n    }\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 1; i <= this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6 my-2\">\r\n                       \r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                        />\r\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            min={this.props.item}\r\n                        />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// import React from \"react\";\r\n\r\n// export default class Payment extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],\r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         if (isNaN(e.target.value)) {\r\n//             this.setState({ error: \"Please insert only digit\" })\r\n//         }\r\n//         else {\r\n//             this.setState({ error: \"\" })\r\n//         }\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n\r\n//     }\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 1; i <= this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                         />\r\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n//                     </div>\r\n\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             min={this.props.item}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n//             );\r\n//         }\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportUpload.js",["3791","3792","3793","3794"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_draft;\r\n    console.log(\"uploadImg\", uploadImg);\r\n\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"draft_report[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"id\", id);\r\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then(response => {\r\n      console.log(response)\r\n      if (response.data.code === 1) {\r\n        setLoading(false)\r\n        var message = response.data.message\r\n        if (message.invalid) {\r\n          Swal.fire({\r\n            title: 'Error !',\r\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n          })\r\n        } else if (message.faill && message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n            icon: 'success',\r\n          })\r\n        } else if (message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p>${message.success}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        else if (message.faill) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        getAssignmentList();\r\n        uploadDraftReport();\r\n      } else if (response.data.code === 0) {\r\n        setLoading(false)\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\r\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_draft\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\RejectedModal.js",["3795","3796","3797","3798"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  assignNo,\r\n  getPaymentStatus,\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"notes\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/declinePayment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Marked as customer declined payment.\")\r\n          getPaymentStatus();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\RejectedModal.js",["3799","3800","3801"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  pay,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { id, allocation_id } = pay;\r\n\r\n  \r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tp_id\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", id);\r\n    formData.append(\"allocation_id\", allocation_id);\r\n    formData.append(\"reject_reason\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\FinalReportUpload.js",["3802","3803","3804","3805"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.p_final;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"final_report[]\", file);\r\n      }\r\n    }\r\n\r\n\r\n    formData.append(\"id\", id.id);\r\n    formData.append(\"q_id\", id.q_id);\r\n    axios\r\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          getAssignmentList();\r\n          uploadFinalReport();\r\n          \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\r\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_final\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n // formData.append(\"final_report\", value.p_final[0]);","D:\\Mazars\\src\\pages\\TP\\Proposal\\ChatHistory.js",["3806","3807"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\r\n  const [notification, setNotification] = useState([]);\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n  useEffect(() => {\r\n    getNotification();\r\n  }, [qno]);\r\n\r\n  const getNotification = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\r\n          userId\r\n        )}&type=2&q_no=${qno}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setNotification(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  console.log(\"notification\", notification);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\r\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Message</th>\r\n                <th scope=\"row\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            {notification.length > 0\r\n              ? notification.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.message}</td>\r\n                      <td>{p.setdate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHistory;\r\n","D:\\Mazars\\src\\pages\\TP\\Message\\PaymentModal.js",["3808","3809","3810","3811"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\pages\\TP\\Invoice\\Generated.js",["3812","3813","3814","3815","3816","3817","3818","3819","3820","3821","3822","3823","3824","3825","3826","3827","3828","3829","3830","3831"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    \r\n \r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"invoice_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       <div style={{ display: \"flex\", alignItems:\"center\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                              {row.is_paid == \"0\" ? \r\n                        <i\r\n                        class=\"fa fa-edit\"\r\n                        style={{\r\n                            fontSize: \"16px\",\r\n                            margin: \"0 5px\",\r\n                            cursor: \"pointer\",\r\n                            color : \"blue\",\r\n                        }}\r\n                       onClick = {() => addTdsToggle(row)} \r\n                    ></i> : \"\"\r\n                        }\r\n                        </div>\r\n                      \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"tpgenerated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                    />\r\n\r\n                   \r\n                  \r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\TP\\Invoice\\CreateInvoice.js",["3832","3833","3834","3835","3836","3837","3838","3839","3840","3841"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\n\r\nconst CreateInvoice = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState();\r\n  \r\n    const [tds, setTds] = useState(false)\r\n  \r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n \r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }, \r\n        \r\n       \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n\r\n                return (\r\n                    \r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                                color : \"blue\",\r\n                                            }}\r\n                                            onClick = {() => addTdsToggle(row)} \r\n                                        ></i>\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice = \"tpcreate\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                   \r\n\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default CreateInvoice;","D:\\Mazars\\src\\pages\\TP\\meeting\\index.jsx",[],"D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\RejectModal.js",["3842","3843","3844"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  nestedModal,\r\n  toggleNested,\r\n  dataItem,\r\n  docData,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  console.log(\"dataItem :\", dataItem);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"tp_id\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", docData.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          toggleNested();\r\n          getData();\r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\r\n        <ModalHeader>Discussion</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\index.jsx",["3845","3846","3847","3848","3849","3850","3851","3852","3853","3854","3855","3856","3857","3858","3859","3860","3861","3862","3863","3864","3865"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport MicNoneIcon from '@material-ui/icons/MicNone';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport {\r\n  Modal,\r\n  ModalTitle,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport RecordingModal from \"./RecordingModal\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green ,red} from '@material-ui/core/colors';\r\nimport recImg from \"../../../loader.gif\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      resID: '',\r\n      showModal: false,\r\n      recordDisplay: false,\r\n      data: {},\r\n      item:{},\r\n      articleId : [],\r\n      articleId2 : [],\r\n      showRecBtn : false,\r\n      showButton : '',\r\n      clickDisable : false\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  // userId = window.localStorage.getItem(\"tlkey\");\r\n  allrecording = [];\r\n  teamKey = window.localStorage.getItem(\"tlkey\");\r\n  uid = Math.floor((Math.random() * 10000) + 1);\r\n  channelName = this.props.channel\r\n  tempArray = []\r\n vendor = 1\r\n region = 14;\r\n bucket = \"vride-multitvm\";\r\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n secretKey = \"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\";\r\nallrecording;\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n     \r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n       \r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n               \r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n          \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n \r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.getSchedulerData()\r\n    this.accuire();\r\n    // this.accuire()\r\n  }\r\nschdrularName;\r\n\r\n  getSchedulerData =() =>{\r\n       axios\r\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n            .then((res) => {\r\n                       \r\n                if (res.data.code === 1) {\r\n                  this.setState({\r\n                    item:res.data.result.items[0],\r\n                   showButton : res.data.result.items[0].owner_id\r\n                  })  \r\n                        \r\n                }\r\n            });\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          \r\n        },\r\n        () => {\r\n                  }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      \r\n      rt.client.subscribe(stream, function (err) {\r\n        \r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n     \r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n    \r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };  \r\n  \r\n  handleExit = async() => {\r\n    if(this.state.clickDisable === false){\r\n      this.setState({clickDisable : true})\r\n     var resourceId = localStorage.getItem(\"resourceId\");\r\n     var sid = localStorage.getItem(\"sid\");\r\n   \r\n     var data = JSON.stringify({\r\n       \"cname\":this.channelName,\r\n       \"uid\":JSON.stringify(this.uid),\r\n       \"clientRequest\":{ }});\r\n     axios({\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"application/json;charset=utf-8\",\r\n         \"authorization\": \"Basic \"+this.encodedString,\r\n         \"cache-control\": \"no-cache\",\r\n       },\r\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n       data: data,\r\n     })\r\n     .then(response => {\r\n       \r\n       this.tempArray.push(response.data.serverResponse.fileList)\r\n       this.setState({showRecBtn : true})\r\n     })\r\n         .catch((error) => {\r\n        \r\n       });\r\n    \r\n    }\r\n \r\n     \r\n   }\r\n \r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n     \r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n         \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                 \r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n            \r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n \r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n   \r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  CreateS3Folder = (uid) =>{\r\n   \r\n    axios\r\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n            .then((res) => {\r\n                \r\n            });\r\n  }\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n\r\n\r\n\r\nsleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n//get recording status\r\nasync GetRecordingStatus(json){\r\n    \r\n\r\n  await this.sleep(3000); \r\n  var resourceId = json.data.resourceId;\r\n  var sid = json.data.sid;\r\n\r\n  localStorage.setItem(\"resourceId\", resourceId);\r\n  localStorage.setItem(\"sid\", sid);\r\n\r\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n})\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n       \r\n        this.setState({\r\n          data:response,\r\n          recordDisplay:!this.state.recordDisplay\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({clickDisable : false})\r\n        }, 1000)\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n\r\n\r\n//start recording\r\nasync startRecording(key){\r\n   \r\n    var resourceId = key.data.resourceId \r\n    \r\n    this.CreateS3Folder(JSON.stringify(this.uid));\r\n\r\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n \r\n\r\n  await axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n      data: data,    \r\n    })\r\n    .then(json => this.GetRecordingStatus(json)) \r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n\r\n  //recording  acquire\r\n  accuire = () =>{\r\n   \r\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      data: data,\r\n    })\r\n      .then(json => \r\n        this.startRecording(json)) \r\n       \r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n// Start recording button\r\n  recStart = () => {\r\n    this.localStream.enableAudio();\r\n    this.localStream.enableVideo();\r\n    this.accuire();\r\n    this.setState({ showRecBtn: false  });\r\n    \r\n  }\r\n\r\n  //toggelStop\r\n  toggleModal = (key) =>{\r\n  \r\n  this.setState({\r\n    showModal: !this.state.showModal,\r\n    recordDisplay:false\r\n  })\r\n}\r\n\r\n\r\n //stop recording \r\n stopRecording = () => {\r\n  if(this.state.showRecBtn === true){\r\n    return(this.toggleModal(\"stop\"),\r\n    this.localStream.disableVideo(),\r\nthis.localStream.disableAudio())\r\n\r\n  }\r\n  \r\n  else if(this.state.showButton == JSON.parse(this.teamKey)){\r\n \r\n    if(resourceId === undefined){\r\n      var resourceId = localStorage.getItem(\"resourceId\");\r\n    var sid = localStorage.getItem(\"sid\");\r\n    }\r\n\r\n  var data = JSON.stringify({\r\n    \"cname\":this.channelName,\r\n    \"uid\":JSON.stringify(this.uid),\r\n    \"clientRequest\":{ }});\r\n  axios({\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n    data: data,\r\n  })\r\n  .then(json => \r\n    \r\n    this.toggleModal(json) ,\r\n     this.setState({showRecBtn : true}),\r\n     this.localStream.disableVideo(),\r\nthis.localStream.disableAudio(),\r\n    ) \r\n    .catch((error) => {\r\n      \r\n    });\r\n}\r\nelse{\r\n  \r\n  window.location.hash = \"/teamleader/schedule\";\r\n}\r\n  \r\n};\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n      onClick={this.stopRecording}\r\n             className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n       \r\n     <i className=\"ag-icon ag-icon-leave\"></i> \r\n      </span>\r\n    );\r\n\r\n//recording btn on\r\n\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recStart}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record On\"\r\n      >{\r\n        this.state.showRecBtn === true ?\r\n      \r\n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n      </span>\r\n    );\r\n\r\n\r\n//recording btn off\r\nconst recordingBtnOff = (\r\n  <span\r\n  onClick={this.handleExit}\r\n\r\n    \r\n    className={\r\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    }\r\n    title=\"Record Off\"\r\n  >\r\n     {\r\n      this.state.showButton == JSON.parse(this.teamKey) ?\r\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\r\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n    }\r\n            \r\n  </span>\r\n);\r\n\r\n\r\n    return (\r\n      <>\r\n      <div id=\"ag-canvas\" style={style}>   \r\n        <div className=\"ag-btn-group\">\r\n\r\n        <RecordingModal \r\n        isOpen={this.state.showModal}\r\n         toggle={this.toggleModal}\r\n         data={this.state.data}\r\n         item={this.state.item}\r\n         allrecording = {this.tempArray}\r\n         />\r\n                \r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n\r\n          {\r\n             this.state.showRecBtn === true ? recordingBtn : null\r\n          }\r\n\r\n          {\r\n             this.state.showRecBtn === false ? recordingBtnOff : null\r\n          }\r\n        </div>\r\n      </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\TP\\Invoice\\Tds.js",["3866","3867","3868","3869","3870","3871","3872","3873","3874"],"D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\index.jsx",["3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887","3888","3889","3890","3891","3892","3893","3894","3895"],"\r\nimport React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport MicNoneIcon from '@material-ui/icons/MicNone';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport {\r\n  Modal,\r\n  ModalTitle,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport RecordingModal from \"./RecordingModal\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green ,red} from '@material-ui/core/colors';\r\nimport recImg from \"../../../loader.gif\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      resID: '',\r\n      showModal: false,\r\n      recordDisplay: false,\r\n      data: {},\r\n      item:{},\r\n      articleId : [],\r\n      articleId2 : [],\r\n      showRecBtn : false,\r\n      showButton : '',\r\n      clickDisable : false\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  // userId = window.localStorage.getItem(\"tlkey\");\r\n  allrecording = [];\r\n  teamKey = window.localStorage.getItem(\"tpkey\");\r\n  uid = Math.floor((Math.random() * 10000) + 1);\r\n  channelName = this.props.channel\r\n  tempArray = []\r\n vendor = 1\r\n region = 14;\r\n bucket = \"vride-multitvm\";\r\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n secretKey = \"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\";\r\nallrecording;\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n \r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.getSchedulerData()\r\n    this.accuire();\r\n    // this.accuire()\r\n  }\r\nschdrularName;\r\n\r\n  getSchedulerData =() =>{\r\n    console.log(\"getSchedulerData--\",this.props.id)\r\n\r\n    axios\r\n    .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n           \r\n               \r\n                if (res.data.code === 1) {\r\n                  this.setState({\r\n                    item:res.data.result.items[0],\r\n                   showButton : res.data.result.items[0].owner_id\r\n                  })  \r\n                        \r\n                }\r\n            });\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  \r\n\r\n\r\n  handleExit = async() => {\r\n    if(this.state.clickDisable === false){\r\n      this.setState({clickDisable : true})\r\n     var resourceId = localStorage.getItem(\"resourceId\");\r\n     var sid = localStorage.getItem(\"sid\");\r\n   \r\n     var data = JSON.stringify({\r\n       \"cname\":this.channelName,\r\n       \"uid\":JSON.stringify(this.uid),\r\n       \"clientRequest\":{ }});\r\n     axios({\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"application/json;charset=utf-8\",\r\n         \"authorization\": \"Basic \"+this.encodedString,\r\n         \"cache-control\": \"no-cache\",\r\n       },\r\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n       data: data,\r\n     })\r\n     .then(response => {\r\n       \r\n       this.tempArray.push(response.data.serverResponse.fileList)\r\n       this.setState({showRecBtn : true})\r\n     })\r\n         .catch((error) => {\r\n        \r\n       });\r\n    \r\n    }\r\n \r\n     \r\n   }\r\n \r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n        console.log(\"AgoraRTC client initialized\");\r\n\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          console.log(\"User \" + uid + \" join channel successfully\");\r\n          console.log(\"At \" + new Date().toLocaleTimeString());\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  console.log(\"Publish local stream error: \" + err);\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              console.log(\"getUserMedia failed\", err);\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n \r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n   \r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  CreateS3Folder = (uid) =>{\r\n    console.log(\"CreateS3Folder\",uid)\r\n    axios\r\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n            .then((res) => {\r\n                console.log(res);    \r\n            });\r\n  }\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n\r\n\r\n\r\nsleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n//get recording status\r\nasync GetRecordingStatus(json){\r\n    \r\n\r\n  await this.sleep(3000); \r\n  var resourceId = json.data.resourceId;\r\n  var sid = json.data.sid;\r\n\r\n  localStorage.setItem(\"resourceId\", resourceId);\r\n  localStorage.setItem(\"sid\", sid);\r\n\r\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n})\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n       \r\n        this.setState({\r\n          data:response,\r\n          recordDisplay:!this.state.recordDisplay\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({clickDisable : false})\r\n        }, 1000)\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n\r\n\r\n//start recording\r\nasync startRecording(key){\r\n    console.log(\"startRecording - \",key);\r\n    var resourceId = key.data.resourceId \r\n    \r\n    this.CreateS3Folder(JSON.stringify(this.uid));\r\n\r\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n \r\n\r\n  await axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n      data: data,    \r\n    })\r\n    .then(json => this.GetRecordingStatus(json)) \r\n      .catch((error) => {\r\n        console.log(\"error - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  //recording  acquire\r\n   accuire = () =>{\r\n    console.log(\"accuire - \");\r\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      data: data,\r\n    })\r\n      .then(json => \r\n        this.startRecording(json)) \r\n        // console.log(\"accuire - \",json))\r\n      .catch((error) => {\r\n        console.log(\"error - \", error);\r\n      });\r\n  };\r\n// Start recording button\r\n // Start recording button\r\n recStart = () => {\r\n  this.localStream.enableAudio();\r\n  this.localStream.enableVideo();\r\n  this.accuire();\r\n  this.setState({ showRecBtn: false  });\r\n  \r\n}\r\n\r\n//toggelStop\r\ntoggleModal = (key) =>{\r\n\r\nthis.setState({\r\n  showModal: !this.state.showModal,\r\n  recordDisplay:false\r\n})\r\n}\r\n\r\n\r\n//stop recording \r\nstopRecording = () => {\r\nif(this.state.showRecBtn === true){\r\n  return(this.toggleModal(\"stop\"),\r\n  this.localStream.disableVideo(),\r\nthis.localStream.disableAudio())\r\n}\r\n\r\nelse if(this.state.showButton == JSON.parse(this.teamKey)){\r\nconsole.log(\"done2\")\r\n  if(resourceId === undefined){\r\n    var resourceId = localStorage.getItem(\"resourceId\");\r\n  var sid = localStorage.getItem(\"sid\");\r\n  }\r\n\r\nvar data = JSON.stringify({\r\n  \"cname\":this.channelName,\r\n  \"uid\":JSON.stringify(this.uid),\r\n  \"clientRequest\":{ }});\r\naxios({\r\n  method: \"POST\",\r\n  headers: {\r\n    \"content-type\": \"application/json;charset=utf-8\",\r\n    \"authorization\": \"Basic \"+this.encodedString,\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n  url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n  data: data,\r\n})\r\n.then(json => \r\n  this.toggleModal(json) ,\r\n   this.setState({showRecBtn : true}),\r\n   this.localStream.disableVideo(),\r\n   this.localStream.disableAudio(),\r\n  ) \r\n  .catch((error) => {\r\n    \r\n  });\r\n}\r\nelse{\r\n\r\nwindow.location.hash = \"/taxprofessional/schedule\";\r\n}\r\n\r\n};\r\n\r\n\r\nrender() {\r\n\r\n  // console.log(\"data\",this.state.data)\r\n\r\n  const style = {\r\n    display: \"grid\",\r\n    gridGap: \"50px 26px\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    gridTemplateRows: \"repeat(12, auto)\",\r\n    gridTemplateColumns: \"repeat(24, auto)\",\r\n  };\r\n  \r\n  const videoControlBtn =\r\n    this.props.attendeeMode === \"video\" ? (\r\n      <span\r\n        onClick={this.handleCamera}\r\n        className=\"ag-btn videoControlBtn\"\r\n        title=\"Enable/Disable Video\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-camera\"></i>\r\n        <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n\r\n  const audioControlBtn =\r\n    this.props.attendeeMode !== \"audience\" ? (\r\n      <span\r\n        onClick={this.handleMic}\r\n        className=\"ag-btn audioControlBtn\"\r\n        title=\"Enable/Disable Audio\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-mic\"></i>\r\n        <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n  const switchDisplayBtn = (\r\n    <span\r\n      onClick={this.switchDisplay}\r\n      className={\r\n        this.state.streamList.length > 4\r\n          ? \"ag-btn displayModeBtn disabled\"\r\n          : \"ag-btn displayModeBtn\"\r\n      }\r\n      title=\"Switch Display Mode\"\r\n    >\r\n      <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n    </span>\r\n  );\r\n\r\n   \r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n      onClick={this.stopRecording}\r\n             className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n       \r\n     <i className=\"ag-icon ag-icon-leave\"></i> \r\n      </span>\r\n    );\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recStart}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record On\"\r\n      >{\r\n        this.state.showRecBtn === true ?\r\n      \r\n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n      </span>\r\n    );\r\n\r\n\r\n//recording btn off\r\nconst recordingBtnOff = (\r\n  <span\r\n  onClick={this.handleExit}\r\n\r\n    \r\n    className={\r\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    }\r\n    title=\"Record Off\"\r\n  >\r\n     {\r\n      this.state.showButton == JSON.parse(this.teamKey) ?\r\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\r\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n    }\r\n            \r\n  </span>\r\n);\r\n\r\nconsole.log(this.state.showRecBtn)\r\n    return (\r\n      <>\r\n      <div id=\"ag-canvas\" style={style}>   \r\n        <div className=\"ag-btn-group\">\r\n\r\n        <RecordingModal \r\n        isOpen={this.state.showModal}\r\n         toggle={this.toggleModal}\r\n         data={this.state.data}\r\n         item={this.state.item}\r\n         allrecording = {this.tempArray}\r\n         />\r\n                \r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n\r\n          {\r\n             this.state.showRecBtn === true ? recordingBtn : null\r\n          }\r\n\r\n          {\r\n             this.state.showRecBtn === false ? recordingBtnOff : null\r\n          }\r\n        </div>\r\n      </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\RecordingModal.js",["3896","3897","3898","3899","3900","3901","3902","3903","3904"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction RecordingModal({\r\n    isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording\r\n}) {\r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n    \r\n    const { assign_no, id, username, start } = item\r\n   \r\n\r\n\r\n    //submit\r\n    const onSubmit = (value) => {\r\n      \r\n\r\nvar serverResponse = data.serverResponse.fileList\r\nvar completeRecording;\r\nif(allrecording === undefined || allrecording.length === 0){\r\n    completeRecording =  serverResponse;\r\n}\r\nelse if(allrecording != undefined || allrecording.length > 0){\r\n    completeRecording = allrecording + \",\" + serverResponse;\r\n}\r\nelse{\r\n    completeRecording = serverResponse;\r\n}\r\n        const { fileList } = serverResponse\r\n        \r\n\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"fileList\", completeRecording);\r\n        formData.append(\"message_type\", value.msg_type);\r\n        formData.append(\"message\", value.p_message);\r\n        formData.append(\"assign_id\", assign_no);\r\n        formData.append(\"participants\", username);\r\n        formData.append(\"schedule_id\", id);\r\n\r\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                        if (response.data.code === 1) {\r\n                    toggle()\r\n                    history.push('/teamleader/schedule');\r\n                }\r\n               \r\n            })\r\n            .catch((error) => {\r\n                       });\r\n    };\r\n    const exitBtn2 = () => {\r\n        history.push('/teamleader/schedule');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\r\n                <ModalHeader toggle={toggle}>\r\n                    Form\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div class=\"col-md-10\">\r\n                                <div class=\"form-group\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button>\r\n                                <button type=\"submit\" className=\"btn btn-primary mx-2\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\RecordingModal.js",["3905","3906","3907","3908","3909","3910","3911","3912","3913"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction RecordingModal({\r\n     isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording\r\n}) {\r\n   \r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n    console.log(\"item\", item)\r\n\r\n    const { assign_no, id, username, start } = item\r\n    console.log(\"assign_no\", assign_no)\r\n    //submit\r\n    const onSubmit = (value) => {\r\n        var serverResponse = data.serverResponse.fileList\r\n        var completeRecording;\r\n        if(allrecording === undefined || allrecording.length === 0){\r\n            completeRecording =  serverResponse;\r\n        }\r\n        else if(allrecording != undefined || allrecording.length > 0){\r\n            completeRecording = allrecording + \",\" + serverResponse;\r\n        }\r\n        else{\r\n            completeRecording = serverResponse;\r\n        }\r\n                const { fileList } = serverResponse\r\n             \r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"fileList\", completeRecording);\r\n        formData.append(\"message_type\", value.msg_type);\r\n        formData.append(\"message\", value.p_message);\r\n        formData.append(\"assign_id\", assign_no);\r\n        formData.append(\"participants\", username);\r\n        formData.append(\"schedule_id\", id);\r\n\r\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    toggle();\r\n                    history.push('/taxprofessional/schedule');\r\n                   \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n    const exitBtn2 = () => {\r\n        history.push('/taxprofessional/schedule');\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\r\n                <ModalHeader toggle={toggle}>\r\n                    Form\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div class=\"col-md-10\">\r\n                                <div class=\"form-group\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-danger mx-2\" onClick={() => exitBtn2()}>Cancel </button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;",{"ruleId":"3914","replacedBy":"3915"},{"ruleId":"3916","replacedBy":"3917"},{"ruleId":"3918","severity":1,"message":"3919","line":73,"column":8,"nodeType":"3920","messageId":"3921","endLine":73,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3922","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":38},{"ruleId":"3918","severity":1,"message":"3922","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":38},{"ruleId":"3918","severity":1,"message":"3923","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3924","line":12,"column":9,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3926","severity":1,"message":"3927","line":113,"column":6,"nodeType":"3928","endLine":113,"endColumn":8,"suggestions":"3929"},{"ruleId":"3930","severity":1,"message":"3931","line":153,"column":31,"nodeType":"3932","messageId":"3933","endLine":153,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3931","line":153,"column":56,"nodeType":"3932","messageId":"3933","endLine":153,"endColumn":58},{"ruleId":"3930","severity":1,"message":"3931","line":168,"column":29,"nodeType":"3932","messageId":"3933","endLine":168,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3931","line":168,"column":55,"nodeType":"3932","messageId":"3933","endLine":168,"endColumn":57},{"ruleId":"3930","severity":1,"message":"3931","line":198,"column":22,"nodeType":"3932","messageId":"3933","endLine":198,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3931","line":248,"column":26,"nodeType":"3932","messageId":"3933","endLine":248,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3931","line":289,"column":27,"nodeType":"3932","messageId":"3933","endLine":289,"endColumn":29},{"ruleId":"3918","severity":1,"message":"3934","line":1,"column":10,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3935","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":16},{"ruleId":"3926","severity":1,"message":"3936","line":44,"column":6,"nodeType":"3928","endLine":44,"endColumn":12,"suggestions":"3937"},{"ruleId":"3918","severity":1,"message":"3925","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":14},{"ruleId":"3926","severity":1,"message":"3938","line":139,"column":6,"nodeType":"3928","endLine":139,"endColumn":16,"suggestions":"3939"},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3924","line":27,"column":9,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":28,"column":35,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":66,"column":14,"nodeType":"3932","messageId":"3933","endLine":66,"endColumn":16},{"ruleId":"3926","severity":1,"message":"3943","line":35,"column":6,"nodeType":"3928","endLine":35,"endColumn":8,"suggestions":"3944"},{"ruleId":"3930","severity":1,"message":"3942","line":117,"column":34,"nodeType":"3932","messageId":"3933","endLine":117,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":120,"column":34,"nodeType":"3932","messageId":"3933","endLine":120,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":34,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":34,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3945","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3925","line":15,"column":33,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":37},{"ruleId":"3918","severity":1,"message":"3948","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3949","line":58,"column":18,"nodeType":"3920","messageId":"3921","endLine":58,"endColumn":30},{"ruleId":"3926","severity":1,"message":"3950","line":68,"column":6,"nodeType":"3928","endLine":68,"endColumn":8,"suggestions":"3951"},{"ruleId":"3930","severity":1,"message":"3942","line":282,"column":37,"nodeType":"3932","messageId":"3933","endLine":282,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":285,"column":39,"nodeType":"3932","messageId":"3933","endLine":285,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":288,"column":41,"nodeType":"3932","messageId":"3933","endLine":288,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":304,"column":33,"nodeType":"3932","messageId":"3933","endLine":304,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":318,"column":35,"nodeType":"3932","messageId":"3933","endLine":318,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":342,"column":32,"nodeType":"3932","messageId":"3933","endLine":342,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":343,"column":32,"nodeType":"3932","messageId":"3933","endLine":343,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":344,"column":33,"nodeType":"3932","messageId":"3933","endLine":344,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3952","line":1,"column":36,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":46},{"ruleId":"3918","severity":1,"message":"3953","line":20,"column":10,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3924","line":28,"column":9,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3954","line":46,"column":10,"nodeType":"3920","messageId":"3921","endLine":46,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3955","line":83,"column":11,"nodeType":"3920","messageId":"3921","endLine":83,"endColumn":12},{"ruleId":"3930","severity":1,"message":"3942","line":84,"column":11,"nodeType":"3932","messageId":"3933","endLine":84,"endColumn":13},{"ruleId":"3930","severity":1,"message":"3942","line":151,"column":25,"nodeType":"3932","messageId":"3933","endLine":151,"endColumn":27},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3957","line":10,"column":10,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":11,"column":13,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3959","line":13,"column":8,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3926","severity":1,"message":"3936","line":45,"column":6,"nodeType":"3928","endLine":45,"endColumn":12,"suggestions":"3960"},{"ruleId":"3918","severity":1,"message":"3961","line":52,"column":9,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3963","line":6,"column":9,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3941","line":20,"column":54,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":59},{"ruleId":"3926","severity":1,"message":"3936","line":35,"column":6,"nodeType":"3928","endLine":35,"endColumn":12,"suggestions":"3964"},{"ruleId":"3918","severity":1,"message":"3961","line":44,"column":9,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3965","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3966","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3967","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3968","line":17,"column":7,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3926","severity":1,"message":"3970","line":28,"column":6,"nodeType":"3928","endLine":28,"endColumn":10,"suggestions":"3971"},{"ruleId":"3918","severity":1,"message":"3972","line":14,"column":8,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3973","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3924","line":22,"column":9,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3974","line":29,"column":10,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3975","line":29,"column":17,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3976","line":31,"column":21,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3977","line":34,"column":10,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3978","line":34,"column":21,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3979","line":39,"column":17,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3980","line":65,"column":9,"nodeType":"3920","messageId":"3921","endLine":65,"endColumn":24},{"ruleId":"3926","severity":1,"message":"3936","line":86,"column":6,"nodeType":"3928","endLine":86,"endColumn":12,"suggestions":"3981"},{"ruleId":"3918","severity":1,"message":"3961","line":95,"column":9,"nodeType":"3920","messageId":"3921","endLine":95,"endColumn":10},{"ruleId":"3930","severity":1,"message":"3942","line":119,"column":13,"nodeType":"3932","messageId":"3933","endLine":119,"endColumn":15},{"ruleId":"3982","severity":1,"message":"3983","line":127,"column":26,"nodeType":"3984","messageId":"3985","endLine":127,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":27,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":29},{"ruleId":"3982","severity":1,"message":"3983","line":134,"column":27,"nodeType":"3984","messageId":"3985","endLine":134,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":15,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":17},{"ruleId":"3982","severity":1,"message":"3983","line":145,"column":23,"nodeType":"3984","messageId":"3985","endLine":145,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":146,"column":16,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":18},{"ruleId":"3982","severity":1,"message":"3983","line":152,"column":26,"nodeType":"3984","messageId":"3985","endLine":152,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":256,"column":36,"nodeType":"3932","messageId":"3933","endLine":256,"endColumn":38},{"ruleId":"3918","severity":1,"message":"3945","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3986","line":18,"column":8,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3987","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3988","line":26,"column":18,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":25},{"ruleId":"3926","severity":1,"message":"3989","line":40,"column":8,"nodeType":"3928","endLine":40,"endColumn":10,"suggestions":"3990"},{"ruleId":"3930","severity":1,"message":"3942","line":109,"column":45,"nodeType":"3932","messageId":"3933","endLine":109,"endColumn":47},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3991","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3991","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3992","line":44,"column":11,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":23},{"ruleId":"3926","severity":1,"message":"3993","line":58,"column":6,"nodeType":"3928","endLine":58,"endColumn":12,"suggestions":"3994"},{"ruleId":"3918","severity":1,"message":"3945","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3925","line":15,"column":10,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3986","line":17,"column":8,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":22},{"ruleId":"3926","severity":1,"message":"3989","line":29,"column":8,"nodeType":"3928","endLine":29,"endColumn":10,"suggestions":"3995"},{"ruleId":"3926","severity":1,"message":"3996","line":36,"column":6,"nodeType":"3928","endLine":36,"endColumn":8,"suggestions":"3997"},{"ruleId":"3930","severity":1,"message":"3942","line":117,"column":34,"nodeType":"3932","messageId":"3933","endLine":117,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":120,"column":34,"nodeType":"3932","messageId":"3933","endLine":120,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":34,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":34,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3945","line":9,"column":10,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3991","line":16,"column":8,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3953","line":17,"column":10,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3998","line":52,"column":12,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3999","line":52,"column":18,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4000","line":67,"column":6,"nodeType":"3928","endLine":67,"endColumn":8,"suggestions":"4001"},{"ruleId":"3930","severity":1,"message":"3942","line":85,"column":22,"nodeType":"3932","messageId":"3933","endLine":85,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4002","line":158,"column":13,"nodeType":"3920","messageId":"3921","endLine":158,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":203,"column":25,"nodeType":"3932","messageId":"3933","endLine":203,"endColumn":27},{"ruleId":"4003","severity":1,"message":"4004","line":374,"column":29,"nodeType":"4005","messageId":"4006","endLine":374,"endColumn":63},{"ruleId":"4007","severity":1,"message":"4008","line":505,"column":35,"nodeType":"4009","messageId":"4010","endLine":508,"endColumn":36,"fix":"4011"},{"ruleId":"3918","severity":1,"message":"3965","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3966","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4012","line":7,"column":45,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3945","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4013","line":38,"column":6,"nodeType":"3928","endLine":38,"endColumn":8,"suggestions":"4014"},{"ruleId":"3930","severity":1,"message":"3942","line":108,"column":34,"nodeType":"3932","messageId":"3933","endLine":108,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":111,"column":34,"nodeType":"3932","messageId":"3933","endLine":111,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":114,"column":34,"nodeType":"3932","messageId":"3933","endLine":114,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":118,"column":34,"nodeType":"3932","messageId":"3933","endLine":118,"endColumn":36},{"ruleId":"3926","severity":1,"message":"4015","line":32,"column":6,"nodeType":"3928","endLine":32,"endColumn":8,"suggestions":"4016"},{"ruleId":"3930","severity":1,"message":"3942","line":99,"column":34,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":102,"column":34,"nodeType":"3932","messageId":"3933","endLine":102,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":105,"column":34,"nodeType":"3932","messageId":"3933","endLine":105,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3967","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4017","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4018","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4019","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4020","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4021","line":18,"column":3,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3935","line":19,"column":3,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4022","line":22,"column":10,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3925","line":23,"column":21,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4023","line":26,"column":10,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":20},{"ruleId":"3926","severity":1,"message":"4024","line":56,"column":8,"nodeType":"3928","endLine":56,"endColumn":10,"suggestions":"4025"},{"ruleId":"3930","severity":1,"message":"3942","line":114,"column":44,"nodeType":"3932","messageId":"3933","endLine":114,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":165,"column":34,"nodeType":"3932","messageId":"3933","endLine":165,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":34,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":203,"column":43,"nodeType":"3932","messageId":"3933","endLine":203,"endColumn":45},{"ruleId":"4007","severity":1,"message":"4008","line":204,"column":21,"nodeType":"4009","messageId":"4010","endLine":204,"endColumn":76,"fix":"4026"},{"ruleId":"3930","severity":1,"message":"3942","line":229,"column":40,"nodeType":"3932","messageId":"3933","endLine":229,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":231,"column":28,"nodeType":"3932","messageId":"3933","endLine":231,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":241,"column":26,"nodeType":"3932","messageId":"3933","endLine":241,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":281,"column":15,"nodeType":"3932","messageId":"3933","endLine":281,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3925","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3924","line":31,"column":9,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":33,"column":35,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4027","line":42,"column":10,"nodeType":"3920","messageId":"3921","endLine":42,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4028","line":43,"column":10,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4029","line":48,"column":10,"nodeType":"3920","messageId":"3921","endLine":48,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4030","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4031","line":56,"column":10,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4032","line":56,"column":21,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4033","line":58,"column":10,"nodeType":"3920","messageId":"3921","endLine":58,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4034","line":58,"column":25,"nodeType":"3920","messageId":"3921","endLine":58,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4035","line":60,"column":10,"nodeType":"3920","messageId":"3921","endLine":60,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4036","line":60,"column":23,"nodeType":"3920","messageId":"3921","endLine":60,"endColumn":37},{"ruleId":"3918","severity":1,"message":"4037","line":62,"column":10,"nodeType":"3920","messageId":"3921","endLine":62,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4038","line":62,"column":22,"nodeType":"3920","messageId":"3921","endLine":62,"endColumn":35},{"ruleId":"3918","severity":1,"message":"4039","line":65,"column":10,"nodeType":"3920","messageId":"3921","endLine":65,"endColumn":17},{"ruleId":"4040","severity":1,"message":"4041","line":129,"column":9,"nodeType":"3920","messageId":"4042","endLine":129,"endColumn":21},{"ruleId":"3982","severity":1,"message":"4043","line":133,"column":21,"nodeType":"3984","messageId":"3985","endLine":133,"endColumn":23},{"ruleId":"3982","severity":1,"message":"4043","line":138,"column":26,"nodeType":"3984","messageId":"3985","endLine":138,"endColumn":28},{"ruleId":"3982","severity":1,"message":"4043","line":193,"column":43,"nodeType":"3984","messageId":"3985","endLine":193,"endColumn":45},{"ruleId":"3918","severity":1,"message":"4044","line":210,"column":7,"nodeType":"3920","messageId":"3921","endLine":210,"endColumn":15},{"ruleId":"3982","severity":1,"message":"4043","line":220,"column":15,"nodeType":"3984","messageId":"3985","endLine":220,"endColumn":17},{"ruleId":"3982","severity":1,"message":"4043","line":244,"column":17,"nodeType":"3984","messageId":"3985","endLine":244,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4045","line":328,"column":9,"nodeType":"3920","messageId":"3921","endLine":328,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4046","line":338,"column":9,"nodeType":"3920","messageId":"3921","endLine":338,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":550,"column":49,"nodeType":"3932","messageId":"3933","endLine":550,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3942","line":557,"column":47,"nodeType":"3932","messageId":"3933","endLine":557,"endColumn":49},{"ruleId":"3918","severity":1,"message":"3924","line":31,"column":9,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":33,"column":35,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4027","line":42,"column":10,"nodeType":"3920","messageId":"3921","endLine":42,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4028","line":43,"column":10,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4029","line":48,"column":10,"nodeType":"3920","messageId":"3921","endLine":48,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4030","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4047","line":55,"column":10,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3979","line":55,"column":17,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4039","line":59,"column":10,"nodeType":"3920","messageId":"3921","endLine":59,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4048","line":62,"column":10,"nodeType":"3920","messageId":"3921","endLine":62,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4049","line":62,"column":17,"nodeType":"3920","messageId":"3921","endLine":62,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4050","line":75,"column":7,"nodeType":"3920","messageId":"3921","endLine":75,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4051","line":87,"column":9,"nodeType":"3920","messageId":"3921","endLine":87,"endColumn":20},{"ruleId":"4040","severity":1,"message":"4041","line":134,"column":9,"nodeType":"3920","messageId":"4042","endLine":134,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4052","line":135,"column":9,"nodeType":"3920","messageId":"3921","endLine":135,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4053","line":137,"column":9,"nodeType":"3920","messageId":"3921","endLine":137,"endColumn":27},{"ruleId":"3982","severity":1,"message":"4043","line":138,"column":21,"nodeType":"3984","messageId":"3985","endLine":138,"endColumn":23},{"ruleId":"3982","severity":1,"message":"4043","line":195,"column":43,"nodeType":"3984","messageId":"3985","endLine":195,"endColumn":45},{"ruleId":"3918","severity":1,"message":"4054","line":313,"column":9,"nodeType":"3920","messageId":"3921","endLine":313,"endColumn":10},{"ruleId":"3982","severity":1,"message":"3983","line":315,"column":27,"nodeType":"3984","messageId":"3985","endLine":315,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":317,"column":16,"nodeType":"3932","messageId":"3933","endLine":317,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":553,"column":49,"nodeType":"3932","messageId":"3933","endLine":553,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3942","line":560,"column":47,"nodeType":"3932","messageId":"3933","endLine":560,"endColumn":49},{"ruleId":"3918","severity":1,"message":"3924","line":29,"column":9,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":31,"column":35,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4055","line":6,"column":27,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3967","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3924","line":34,"column":9,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":35,"column":43,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4056","line":46,"column":10,"nodeType":"3920","messageId":"3921","endLine":46,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4057","line":56,"column":9,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4058","line":73,"column":6,"nodeType":"3928","endLine":73,"endColumn":8,"suggestions":"4059"},{"ruleId":"3926","severity":1,"message":"4000","line":100,"column":6,"nodeType":"3928","endLine":100,"endColumn":15,"suggestions":"4060"},{"ruleId":"3930","severity":1,"message":"3942","line":123,"column":22,"nodeType":"3932","messageId":"3933","endLine":123,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4061","line":132,"column":9,"nodeType":"3920","messageId":"3921","endLine":132,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4062","line":174,"column":9,"nodeType":"3920","messageId":"3921","endLine":174,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":179,"column":13,"nodeType":"3932","messageId":"3933","endLine":179,"endColumn":15},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":20,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":121,"column":34,"nodeType":"3932","messageId":"3933","endLine":121,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":34,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":34,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":132,"column":34,"nodeType":"3932","messageId":"3933","endLine":132,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3925","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4063","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3967","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3948","line":16,"column":8,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":87,"column":39,"nodeType":"3932","messageId":"3933","endLine":87,"endColumn":41},{"ruleId":"3926","severity":1,"message":"3938","line":184,"column":6,"nodeType":"3928","endLine":184,"endColumn":16,"suggestions":"4067"},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4068","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":30},{"ruleId":"3918","severity":1,"message":"3924","line":23,"column":9,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4069","line":28,"column":10,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4070","line":28,"column":21,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4071","line":257,"column":9,"nodeType":"3920","messageId":"3921","endLine":257,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4068","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":30},{"ruleId":"3918","severity":1,"message":"3967","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":18,"column":3,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":19,"column":3,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":20,"column":3,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4072","line":41,"column":11,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3924","line":44,"column":9,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4073","line":52,"column":10,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4074","line":52,"column":18,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4075","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4076","line":55,"column":10,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4077","line":55,"column":17,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4078","line":56,"column":10,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4079","line":56,"column":21,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4080","line":59,"column":10,"nodeType":"3920","messageId":"3921","endLine":59,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4039","line":66,"column":10,"nodeType":"3920","messageId":"3921","endLine":66,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4028","line":70,"column":10,"nodeType":"3920","messageId":"3921","endLine":70,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4081","line":71,"column":10,"nodeType":"3920","messageId":"3921","endLine":71,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4082","line":72,"column":10,"nodeType":"3920","messageId":"3921","endLine":72,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4029","line":73,"column":10,"nodeType":"3920","messageId":"3921","endLine":73,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4083","line":74,"column":10,"nodeType":"3920","messageId":"3921","endLine":74,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4084","line":74,"column":22,"nodeType":"3920","messageId":"3921","endLine":74,"endColumn":35},{"ruleId":"3918","severity":1,"message":"4085","line":75,"column":10,"nodeType":"3920","messageId":"3921","endLine":75,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4086","line":75,"column":14,"nodeType":"3920","messageId":"3921","endLine":75,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4048","line":76,"column":10,"nodeType":"3920","messageId":"3921","endLine":76,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4049","line":76,"column":17,"nodeType":"3920","messageId":"3921","endLine":76,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4087","line":77,"column":10,"nodeType":"3920","messageId":"3921","endLine":77,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4088","line":77,"column":16,"nodeType":"3920","messageId":"3921","endLine":77,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4089","line":78,"column":10,"nodeType":"3920","messageId":"3921","endLine":78,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4090","line":78,"column":19,"nodeType":"3920","messageId":"3921","endLine":78,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4091","line":86,"column":11,"nodeType":"3920","messageId":"3921","endLine":86,"endColumn":23},{"ruleId":"3918","severity":1,"message":"3941","line":86,"column":35,"nodeType":"3920","messageId":"3921","endLine":86,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4092","line":92,"column":7,"nodeType":"3920","messageId":"3921","endLine":92,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4093","line":94,"column":7,"nodeType":"3920","messageId":"3921","endLine":94,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4094","line":95,"column":7,"nodeType":"3920","messageId":"3921","endLine":95,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4095","line":96,"column":7,"nodeType":"3920","messageId":"3921","endLine":96,"endColumn":21},{"ruleId":"4040","severity":1,"message":"4096","line":97,"column":7,"nodeType":"3920","messageId":"4042","endLine":97,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4052","line":172,"column":9,"nodeType":"3920","messageId":"3921","endLine":172,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4053","line":173,"column":9,"nodeType":"3920","messageId":"3921","endLine":173,"endColumn":27},{"ruleId":"3982","severity":1,"message":"4043","line":174,"column":21,"nodeType":"3984","messageId":"3985","endLine":174,"endColumn":23},{"ruleId":"4097","severity":1,"message":"4098","line":199,"column":7,"nodeType":"4099","messageId":"4100","endLine":201,"endColumn":41},{"ruleId":"4097","severity":1,"message":"4098","line":202,"column":9,"nodeType":"4099","messageId":"4100","endLine":204,"endColumn":47},{"ruleId":"4097","severity":1,"message":"4098","line":205,"column":7,"nodeType":"4099","messageId":"4100","endLine":208,"endColumn":8},{"ruleId":"4097","severity":1,"message":"4098","line":211,"column":7,"nodeType":"4099","messageId":"4100","endLine":214,"endColumn":8},{"ruleId":"4097","severity":1,"message":"4098","line":217,"column":7,"nodeType":"4099","messageId":"4100","endLine":221,"endColumn":8},{"ruleId":"4097","severity":1,"message":"4098","line":223,"column":7,"nodeType":"4099","messageId":"4100","endLine":226,"endColumn":8},{"ruleId":"3982","severity":1,"message":"4043","line":248,"column":43,"nodeType":"3984","messageId":"3985","endLine":248,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3931","line":423,"column":11,"nodeType":"3932","messageId":"3933","endLine":423,"endColumn":13},{"ruleId":"3930","severity":1,"message":"3942","line":503,"column":23,"nodeType":"3932","messageId":"3933","endLine":503,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":562,"column":47,"nodeType":"3932","messageId":"3933","endLine":562,"endColumn":49},{"ruleId":"3930","severity":1,"message":"3942","line":583,"column":45,"nodeType":"3932","messageId":"3933","endLine":583,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":672,"column":53,"nodeType":"3932","messageId":"3933","endLine":672,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":679,"column":52,"nodeType":"3932","messageId":"3933","endLine":679,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3924","line":20,"column":9,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4101","line":23,"column":10,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4102","line":23,"column":18,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4052","line":26,"column":7,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":9},{"ruleId":"4097","severity":1,"message":"4098","line":40,"column":5,"nodeType":"4099","messageId":"4100","endLine":53,"endColumn":6},{"ruleId":"3930","severity":1,"message":"3942","line":150,"column":27,"nodeType":"3932","messageId":"3933","endLine":150,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":156,"column":29,"nodeType":"3932","messageId":"3933","endLine":156,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":33,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":166,"column":35,"nodeType":"3932","messageId":"3933","endLine":166,"endColumn":37},{"ruleId":"3926","severity":1,"message":"4103","line":225,"column":6,"nodeType":"3928","endLine":225,"endColumn":8,"suggestions":"4104"},{"ruleId":"3918","severity":1,"message":"4105","line":230,"column":11,"nodeType":"3920","messageId":"3921","endLine":230,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4071","line":241,"column":9,"nodeType":"3920","messageId":"3921","endLine":241,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3986","line":16,"column":8,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3930","severity":1,"message":"3931","line":35,"column":27,"nodeType":"3932","messageId":"3933","endLine":35,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":89,"column":32,"nodeType":"3932","messageId":"3933","endLine":89,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4055","line":6,"column":27,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3945","line":7,"column":10,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3967","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":5,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3969","line":16,"column":5,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3941","line":33,"column":45,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":50},{"ruleId":"3918","severity":1,"message":"3956","line":2,"column":17,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3962","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4106","line":7,"column":9,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4107","line":1,"column":56,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":69},{"ruleId":"3930","severity":1,"message":"3942","line":106,"column":34,"nodeType":"3932","messageId":"3933","endLine":106,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":109,"column":34,"nodeType":"3932","messageId":"3933","endLine":109,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":112,"column":34,"nodeType":"3932","messageId":"3933","endLine":112,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":116,"column":34,"nodeType":"3932","messageId":"3933","endLine":116,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3959","line":12,"column":8,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":25,"column":9,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":27,"column":35,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":65,"column":14,"nodeType":"3932","messageId":"3933","endLine":65,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3957","line":8,"column":10,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":9,"column":13,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3959","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3926","severity":1,"message":"3938","line":43,"column":6,"nodeType":"3928","endLine":43,"endColumn":16,"suggestions":"4108"},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":42,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":44},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":72,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":74},{"ruleId":"3930","severity":1,"message":"3942","line":219,"column":39,"nodeType":"3932","messageId":"3933","endLine":219,"endColumn":41},{"ruleId":"3918","severity":1,"message":"3946","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":18,"column":3,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3924","line":39,"column":9,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":14},{"ruleId":"3926","severity":1,"message":"3993","line":66,"column":6,"nodeType":"3928","endLine":66,"endColumn":12,"suggestions":"4109"},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4110","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4111","line":3,"column":15,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4112","line":3,"column":21,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":28},{"ruleId":"3918","severity":1,"message":"4113","line":3,"column":30,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":38},{"ruleId":"3918","severity":1,"message":"4114","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4063","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4115","line":16,"column":12,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4116","line":16,"column":22,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4117","line":17,"column":11,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4118","line":26,"column":11,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4119","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3935","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4120","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4121","line":20,"column":10,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4122","line":22,"column":10,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":16},{"ruleId":"3926","severity":1,"message":"4123","line":42,"column":8,"nodeType":"3928","endLine":42,"endColumn":10,"suggestions":"4124"},{"ruleId":"3918","severity":1,"message":"3945","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3986","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3987","line":27,"column":12,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3988","line":27,"column":18,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":25},{"ruleId":"3926","severity":1,"message":"3989","line":32,"column":8,"nodeType":"3928","endLine":32,"endColumn":10,"suggestions":"4125"},{"ruleId":"3930","severity":1,"message":"3942","line":98,"column":45,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":47},{"ruleId":"4097","severity":1,"message":"4126","line":177,"column":1,"nodeType":"4099","messageId":"4127","endLine":192,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4128","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":53},{"ruleId":"3918","severity":1,"message":"3965","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3966","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":17},{"ruleId":"3930","severity":1,"message":"3942","line":39,"column":46,"nodeType":"3932","messageId":"3933","endLine":39,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":42,"column":46,"nodeType":"3932","messageId":"3933","endLine":42,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3947","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3925","line":14,"column":10,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4068","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":30},{"ruleId":"3918","severity":1,"message":"3924","line":23,"column":9,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4069","line":27,"column":10,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4070","line":27,"column":21,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4129","line":31,"column":7,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":13},{"ruleId":"4097","severity":1,"message":"4098","line":185,"column":5,"nodeType":"4099","messageId":"4100","endLine":197,"endColumn":6},{"ruleId":"4130","severity":1,"message":"4131","line":186,"column":12,"nodeType":"4132","messageId":"4133","endLine":186,"endColumn":13,"fix":"4134"},{"ruleId":"3918","severity":1,"message":"4135","line":204,"column":9,"nodeType":"3920","messageId":"3921","endLine":204,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4136","line":17,"column":12,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4137","line":17,"column":25,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4138","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4027","line":26,"column":10,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4139","line":28,"column":10,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4029","line":29,"column":10,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4044","line":39,"column":7,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4140","line":43,"column":7,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4012","line":44,"column":45,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":54},{"ruleId":"3926","severity":1,"message":"4141","line":79,"column":6,"nodeType":"3928","endLine":79,"endColumn":8,"suggestions":"4142"},{"ruleId":"3918","severity":1,"message":"4105","line":84,"column":11,"nodeType":"3920","messageId":"3921","endLine":84,"endColumn":13},{"ruleId":"3926","severity":1,"message":"4143","line":95,"column":6,"nodeType":"3928","endLine":95,"endColumn":13,"suggestions":"4144"},{"ruleId":"3982","severity":1,"message":"4043","line":210,"column":19,"nodeType":"3984","messageId":"3985","endLine":210,"endColumn":21},{"ruleId":"3982","severity":1,"message":"4043","line":256,"column":17,"nodeType":"3984","messageId":"3985","endLine":256,"endColumn":19},{"ruleId":"3982","severity":1,"message":"4043","line":265,"column":15,"nodeType":"3984","messageId":"3985","endLine":265,"endColumn":17},{"ruleId":"3982","severity":1,"message":"4043","line":275,"column":15,"nodeType":"3984","messageId":"3985","endLine":275,"endColumn":17},{"ruleId":"3930","severity":1,"message":"3942","line":359,"column":49,"nodeType":"3932","messageId":"3933","endLine":359,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3942","line":366,"column":47,"nodeType":"3932","messageId":"3933","endLine":366,"endColumn":49},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3926","severity":1,"message":"3970","line":28,"column":6,"nodeType":"3928","endLine":28,"endColumn":10,"suggestions":"4145"},{"ruleId":"3930","severity":1,"message":"3942","line":90,"column":46,"nodeType":"3932","messageId":"3933","endLine":90,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":93,"column":46,"nodeType":"3932","messageId":"3933","endLine":93,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":96,"column":46,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":100,"column":34,"nodeType":"3932","messageId":"3933","endLine":100,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":103,"column":34,"nodeType":"3932","messageId":"3933","endLine":103,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":106,"column":34,"nodeType":"3932","messageId":"3933","endLine":106,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4143","line":27,"column":6,"nodeType":"3928","endLine":27,"endColumn":8,"suggestions":"4146"},{"ruleId":"3918","severity":1,"message":"4071","line":156,"column":9,"nodeType":"3920","messageId":"3921","endLine":156,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3967","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":18,"column":3,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":19,"column":3,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":20,"column":3,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4147","line":22,"column":8,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4148","line":25,"column":8,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4072","line":40,"column":11,"nodeType":"3920","messageId":"3921","endLine":40,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3924","line":43,"column":9,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4073","line":51,"column":10,"nodeType":"3920","messageId":"3921","endLine":51,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4074","line":51,"column":18,"nodeType":"3920","messageId":"3921","endLine":51,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4075","line":53,"column":10,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4076","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4077","line":54,"column":17,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4078","line":55,"column":10,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4079","line":55,"column":21,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4039","line":65,"column":10,"nodeType":"3920","messageId":"3921","endLine":65,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4028","line":69,"column":10,"nodeType":"3920","messageId":"3921","endLine":69,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4081","line":70,"column":10,"nodeType":"3920","messageId":"3921","endLine":70,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4082","line":71,"column":10,"nodeType":"3920","messageId":"3921","endLine":71,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4029","line":72,"column":10,"nodeType":"3920","messageId":"3921","endLine":72,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4091","line":79,"column":11,"nodeType":"3920","messageId":"3921","endLine":79,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4149","line":79,"column":25,"nodeType":"3920","messageId":"3921","endLine":79,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":79,"column":35,"nodeType":"3920","messageId":"3921","endLine":79,"endColumn":40},{"ruleId":"3926","severity":1,"message":"4103","line":107,"column":6,"nodeType":"3928","endLine":107,"endColumn":10,"suggestions":"4150"},{"ruleId":"3982","severity":1,"message":"4043","line":176,"column":21,"nodeType":"3984","messageId":"3985","endLine":176,"endColumn":23},{"ruleId":"3982","severity":1,"message":"4043","line":180,"column":26,"nodeType":"3984","messageId":"3985","endLine":180,"endColumn":28},{"ruleId":"4097","severity":1,"message":"4098","line":201,"column":6,"nodeType":"4099","messageId":"4100","endLine":203,"endColumn":39},{"ruleId":"4097","severity":1,"message":"4098","line":204,"column":7,"nodeType":"4099","messageId":"4100","endLine":206,"endColumn":45},{"ruleId":"4097","severity":1,"message":"4098","line":207,"column":6,"nodeType":"4099","messageId":"4100","endLine":208,"endColumn":40},{"ruleId":"4097","severity":1,"message":"4098","line":209,"column":6,"nodeType":"4099","messageId":"4100","endLine":210,"endColumn":38},{"ruleId":"4097","severity":1,"message":"4098","line":211,"column":7,"nodeType":"4099","messageId":"4100","endLine":213,"endColumn":45},{"ruleId":"4097","severity":1,"message":"4098","line":214,"column":6,"nodeType":"4099","messageId":"4100","endLine":215,"endColumn":43},{"ruleId":"3982","severity":1,"message":"4043","line":238,"column":43,"nodeType":"3984","messageId":"3985","endLine":238,"endColumn":45},{"ruleId":"3918","severity":1,"message":"4044","line":301,"column":7,"nodeType":"3920","messageId":"3921","endLine":301,"endColumn":15},{"ruleId":"3982","severity":1,"message":"4043","line":310,"column":15,"nodeType":"3984","messageId":"3985","endLine":310,"endColumn":17},{"ruleId":"3982","severity":1,"message":"4043","line":329,"column":17,"nodeType":"3984","messageId":"3985","endLine":329,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4052","line":427,"column":6,"nodeType":"3920","messageId":"3921","endLine":427,"endColumn":8},{"ruleId":"3982","severity":1,"message":"4043","line":434,"column":19,"nodeType":"3984","messageId":"3985","endLine":434,"endColumn":21},{"ruleId":"3982","severity":1,"message":"4043","line":437,"column":21,"nodeType":"3984","messageId":"3985","endLine":437,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3931","line":454,"column":10,"nodeType":"3932","messageId":"3933","endLine":454,"endColumn":12},{"ruleId":"3930","severity":1,"message":"3931","line":457,"column":10,"nodeType":"3932","messageId":"3933","endLine":457,"endColumn":12},{"ruleId":"3930","severity":1,"message":"3942","line":541,"column":23,"nodeType":"3932","messageId":"3933","endLine":541,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":574,"column":46,"nodeType":"3932","messageId":"3933","endLine":574,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":593,"column":47,"nodeType":"3932","messageId":"3933","endLine":593,"endColumn":49},{"ruleId":"3930","severity":1,"message":"3942","line":694,"column":53,"nodeType":"3932","messageId":"3933","endLine":694,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":701,"column":52,"nodeType":"3932","messageId":"3933","endLine":701,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3957","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":6,"column":13,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4151","line":27,"column":35,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":41},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":33,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":37},{"ruleId":"3918","severity":1,"message":"3945","line":7,"column":10,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3967","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4152","line":19,"column":10,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4151","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4153","line":25,"column":10,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":26},{"ruleId":"3926","severity":1,"message":"4154","line":34,"column":6,"nodeType":"3928","endLine":34,"endColumn":8,"suggestions":"4155"},{"ruleId":"3930","severity":1,"message":"3942","line":53,"column":39,"nodeType":"3932","messageId":"3933","endLine":53,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":53,"column":65,"nodeType":"3932","messageId":"3933","endLine":53,"endColumn":67},{"ruleId":"3930","severity":1,"message":"3942","line":163,"column":38,"nodeType":"3932","messageId":"3933","endLine":163,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":37,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":165,"column":34,"nodeType":"3932","messageId":"3933","endLine":165,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":166,"column":38,"nodeType":"3932","messageId":"3933","endLine":166,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":167,"column":33,"nodeType":"3932","messageId":"3933","endLine":167,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3959","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":29,"column":9,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":30,"column":35,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":40},{"ruleId":"3926","severity":1,"message":"4156","line":104,"column":8,"nodeType":"3928","endLine":104,"endColumn":10,"suggestions":"4157"},{"ruleId":"3930","severity":1,"message":"3942","line":119,"column":46,"nodeType":"3932","messageId":"3933","endLine":119,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":122,"column":46,"nodeType":"3932","messageId":"3933","endLine":122,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":125,"column":46,"nodeType":"3932","messageId":"3933","endLine":125,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":46,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3986","line":14,"column":8,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":19,"column":9,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4158","line":26,"column":6,"nodeType":"3928","endLine":26,"endColumn":8,"suggestions":"4159"},{"ruleId":"3930","severity":1,"message":"3942","line":76,"column":29,"nodeType":"3932","messageId":"3933","endLine":76,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4151","line":13,"column":35,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":41},{"ruleId":"3918","severity":1,"message":"3941","line":13,"column":43,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3967","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3924","line":34,"column":9,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4160","line":56,"column":9,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4161","line":75,"column":6,"nodeType":"3928","endLine":75,"endColumn":8,"suggestions":"4162"},{"ruleId":"3926","severity":1,"message":"4000","line":104,"column":6,"nodeType":"3928","endLine":104,"endColumn":15,"suggestions":"4163"},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":22,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4140","line":11,"column":9,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4164","line":27,"column":10,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4165","line":28,"column":10,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":74,"column":40,"nodeType":"3932","messageId":"3933","endLine":74,"endColumn":42},{"ruleId":"3926","severity":1,"message":"3938","line":163,"column":6,"nodeType":"3928","endLine":163,"endColumn":16,"suggestions":"4166"},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4167","line":23,"column":10,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4156","line":114,"column":6,"nodeType":"3928","endLine":114,"endColumn":8,"suggestions":"4168"},{"ruleId":"3930","severity":1,"message":"3942","line":131,"column":34,"nodeType":"3932","messageId":"3933","endLine":131,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":34,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":138,"column":34,"nodeType":"3932","messageId":"3933","endLine":138,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":141,"column":34,"nodeType":"3932","messageId":"3933","endLine":141,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3925","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4169","line":32,"column":6,"nodeType":"3928","endLine":32,"endColumn":16,"suggestions":"4170"},{"ruleId":"3930","severity":1,"message":"3942","line":290,"column":39,"nodeType":"3932","messageId":"3933","endLine":290,"endColumn":41},{"ruleId":"3918","severity":1,"message":"3925","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4171","line":53,"column":23,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4172","line":54,"column":5,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":28},{"ruleId":"3926","severity":1,"message":"4156","line":153,"column":6,"nodeType":"3928","endLine":153,"endColumn":8,"suggestions":"4173"},{"ruleId":"3918","severity":1,"message":"4174","line":157,"column":7,"nodeType":"3920","messageId":"3921","endLine":157,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3924","line":27,"column":9,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":28,"column":35,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3974","line":33,"column":10,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4175","line":36,"column":10,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4176","line":36,"column":16,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4081","line":41,"column":10,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4177","line":41,"column":17,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4000","line":64,"column":6,"nodeType":"3928","endLine":64,"endColumn":8,"suggestions":"4178"},{"ruleId":"3930","severity":1,"message":"3942","line":116,"column":23,"nodeType":"3932","messageId":"3933","endLine":116,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":19,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":137,"column":21,"nodeType":"3932","messageId":"3933","endLine":137,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":145,"column":25,"nodeType":"3932","messageId":"3933","endLine":145,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":146,"column":25,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":158,"column":31,"nodeType":"3932","messageId":"3933","endLine":158,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":158,"column":50,"nodeType":"3932","messageId":"3933","endLine":158,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":162,"column":29,"nodeType":"3932","messageId":"3933","endLine":162,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":162,"column":46,"nodeType":"3932","messageId":"3933","endLine":162,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3931","line":171,"column":33,"nodeType":"3932","messageId":"3933","endLine":171,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":199,"column":32,"nodeType":"3932","messageId":"3933","endLine":199,"endColumn":34},{"ruleId":"3982","severity":1,"message":"4043","line":240,"column":45,"nodeType":"3984","messageId":"3985","endLine":240,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":250,"column":45,"nodeType":"3984","messageId":"3985","endLine":250,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":370,"column":32,"nodeType":"3932","messageId":"3933","endLine":370,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":33,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":399,"column":33,"nodeType":"3932","messageId":"3933","endLine":399,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3924","line":22,"column":9,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":24,"column":35,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":61,"column":14,"nodeType":"3932","messageId":"3933","endLine":61,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4151","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4179","line":23,"column":50,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":58},{"ruleId":"3926","severity":1,"message":"4154","line":34,"column":6,"nodeType":"3928","endLine":34,"endColumn":8,"suggestions":"4180"},{"ruleId":"3926","severity":1,"message":"4181","line":49,"column":6,"nodeType":"3928","endLine":49,"endColumn":16,"suggestions":"4182"},{"ruleId":"3930","severity":1,"message":"3942","line":136,"column":35,"nodeType":"3932","messageId":"3933","endLine":136,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":309,"column":26,"nodeType":"3932","messageId":"3933","endLine":309,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":323,"column":26,"nodeType":"3932","messageId":"3933","endLine":323,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":336,"column":26,"nodeType":"3932","messageId":"3933","endLine":336,"endColumn":28},{"ruleId":"4007","severity":1,"message":"4008","line":398,"column":29,"nodeType":"4009","messageId":"4010","endLine":401,"endColumn":30,"fix":"4183"},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3926","severity":1,"message":"3970","line":28,"column":6,"nodeType":"3928","endLine":28,"endColumn":10,"suggestions":"4184"},{"ruleId":"3918","severity":1,"message":"3957","line":8,"column":10,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":9,"column":13,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3959","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":20,"column":9,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3961","line":49,"column":7,"nodeType":"3920","messageId":"3921","endLine":49,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3926","severity":1,"message":"4185","line":26,"column":6,"nodeType":"3928","endLine":26,"endColumn":8,"suggestions":"4186"},{"ruleId":"4007","severity":1,"message":"4008","line":86,"column":29,"nodeType":"4009","messageId":"4010","endLine":89,"endColumn":30,"fix":"4187"},{"ruleId":"3926","severity":1,"message":"4015","line":32,"column":6,"nodeType":"3928","endLine":32,"endColumn":8,"suggestions":"4188"},{"ruleId":"3930","severity":1,"message":"3942","line":97,"column":34,"nodeType":"3932","messageId":"3933","endLine":97,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":100,"column":34,"nodeType":"3932","messageId":"3933","endLine":100,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":103,"column":34,"nodeType":"3932","messageId":"3933","endLine":103,"endColumn":36},{"ruleId":"3926","severity":1,"message":"4156","line":89,"column":6,"nodeType":"3928","endLine":89,"endColumn":8,"suggestions":"4189"},{"ruleId":"3930","severity":1,"message":"3942","line":104,"column":34,"nodeType":"3932","messageId":"3933","endLine":104,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":107,"column":34,"nodeType":"3932","messageId":"3933","endLine":107,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":110,"column":34,"nodeType":"3932","messageId":"3933","endLine":110,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4190","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4054","line":52,"column":13,"nodeType":"3920","messageId":"3921","endLine":52,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4191","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":45},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4192","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4193","line":21,"column":8,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4194","line":22,"column":8,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3924","line":27,"column":9,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4195","line":30,"column":10,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4196","line":33,"column":10,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4197","line":35,"column":9,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":29},{"ruleId":"3926","severity":1,"message":"4198","line":42,"column":6,"nodeType":"3928","endLine":42,"endColumn":8,"suggestions":"4199"},{"ruleId":"3930","severity":1,"message":"3942","line":132,"column":28,"nodeType":"3932","messageId":"3933","endLine":132,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":137,"column":30,"nodeType":"3932","messageId":"3933","endLine":137,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":32,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":167,"column":26,"nodeType":"3932","messageId":"3933","endLine":167,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3924","line":30,"column":9,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4200","line":31,"column":11,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4201","line":36,"column":10,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":15},{"ruleId":"3926","severity":1,"message":"4202","line":88,"column":6,"nodeType":"3928","endLine":88,"endColumn":8,"suggestions":"4203"},{"ruleId":"3930","severity":1,"message":"3942","line":233,"column":32,"nodeType":"3932","messageId":"3933","endLine":233,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":330,"column":35,"nodeType":"3932","messageId":"3933","endLine":330,"endColumn":37},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4201","line":34,"column":12,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":87,"column":8,"nodeType":"3928","endLine":87,"endColumn":10,"suggestions":"4204"},{"ruleId":"3930","severity":1,"message":"3942","line":231,"column":36,"nodeType":"3932","messageId":"3933","endLine":231,"endColumn":38},{"ruleId":"3930","severity":1,"message":"3942","line":329,"column":41,"nodeType":"3932","messageId":"3933","endLine":329,"endColumn":43},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3945","line":18,"column":10,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4200","line":31,"column":11,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4201","line":35,"column":10,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":15},{"ruleId":"3926","severity":1,"message":"4202","line":87,"column":6,"nodeType":"3928","endLine":87,"endColumn":8,"suggestions":"4205"},{"ruleId":"3930","severity":1,"message":"3942","line":232,"column":32,"nodeType":"3932","messageId":"3933","endLine":232,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":339,"column":35,"nodeType":"3932","messageId":"3933","endLine":339,"endColumn":37},{"ruleId":"3918","severity":1,"message":"4206","line":433,"column":9,"nodeType":"3920","messageId":"3921","endLine":433,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4191","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":45},{"ruleId":"3918","severity":1,"message":"3947","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4207","line":24,"column":10,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4195","line":32,"column":12,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":24},{"ruleId":"3926","severity":1,"message":"4198","line":52,"column":8,"nodeType":"3928","endLine":52,"endColumn":10,"suggestions":"4208"},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":44,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":147,"column":48,"nodeType":"3932","messageId":"3933","endLine":147,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":152,"column":52,"nodeType":"3932","messageId":"3933","endLine":152,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":178,"column":40,"nodeType":"3932","messageId":"3933","endLine":178,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3931","line":181,"column":49,"nodeType":"3932","messageId":"3933","endLine":181,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3942","line":208,"column":40,"nodeType":"3932","messageId":"3933","endLine":208,"endColumn":42},{"ruleId":"4209","severity":1,"message":"4210","line":210,"column":42,"nodeType":"3932","messageId":"4211","endLine":210,"endColumn":43},{"ruleId":"4209","severity":1,"message":"4210","line":210,"column":52,"nodeType":"3932","messageId":"4211","endLine":210,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":230,"column":41,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":230,"column":67,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":69},{"ruleId":"3930","severity":1,"message":"3942","line":230,"column":93,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":95},{"ruleId":"3930","severity":1,"message":"3942","line":294,"column":41,"nodeType":"3932","messageId":"3933","endLine":294,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":294,"column":100,"nodeType":"3932","messageId":"3933","endLine":294,"endColumn":102},{"ruleId":"4209","severity":1,"message":"4210","line":298,"column":46,"nodeType":"3932","messageId":"4211","endLine":298,"endColumn":47},{"ruleId":"4209","severity":1,"message":"4210","line":298,"column":56,"nodeType":"3932","messageId":"4211","endLine":298,"endColumn":59},{"ruleId":"3930","severity":1,"message":"3942","line":315,"column":57,"nodeType":"3932","messageId":"3933","endLine":315,"endColumn":59},{"ruleId":"3930","severity":1,"message":"3942","line":323,"column":50,"nodeType":"3932","messageId":"3933","endLine":323,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4191","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":45},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3924","line":23,"column":9,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4195","line":26,"column":10,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4196","line":28,"column":10,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4198","line":32,"column":6,"nodeType":"3928","endLine":32,"endColumn":8,"suggestions":"4212"},{"ruleId":"3918","severity":1,"message":"4197","line":34,"column":9,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":145,"column":26,"nodeType":"3932","messageId":"3933","endLine":145,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":171,"column":26,"nodeType":"3932","messageId":"3933","endLine":171,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":178,"column":53,"nodeType":"3932","messageId":"3933","endLine":178,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":178,"column":112,"nodeType":"3932","messageId":"3933","endLine":178,"endColumn":114},{"ruleId":"4209","severity":1,"message":"4210","line":182,"column":58,"nodeType":"3932","messageId":"4211","endLine":182,"endColumn":59},{"ruleId":"4209","severity":1,"message":"4210","line":182,"column":68,"nodeType":"3932","messageId":"4211","endLine":182,"endColumn":71},{"ruleId":"3918","severity":1,"message":"4191","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":45},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3924","line":29,"column":9,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4195","line":32,"column":10,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4198","line":50,"column":6,"nodeType":"3928","endLine":50,"endColumn":8,"suggestions":"4213"},{"ruleId":"3930","severity":1,"message":"3942","line":146,"column":28,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":154,"column":30,"nodeType":"3932","messageId":"3933","endLine":154,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":159,"column":32,"nodeType":"3932","messageId":"3933","endLine":159,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":34,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":190,"column":34,"nodeType":"3932","messageId":"3933","endLine":190,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3931","line":193,"column":43,"nodeType":"3932","messageId":"3933","endLine":193,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":216,"column":26,"nodeType":"3932","messageId":"3933","endLine":216,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":37,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":63,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":65},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":89,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":91},{"ruleId":"3930","severity":1,"message":"3942","line":285,"column":57,"nodeType":"3932","messageId":"3933","endLine":285,"endColumn":59},{"ruleId":"3930","severity":1,"message":"3942","line":285,"column":116,"nodeType":"3932","messageId":"3933","endLine":285,"endColumn":118},{"ruleId":"4209","severity":1,"message":"4210","line":289,"column":62,"nodeType":"3932","messageId":"4211","endLine":289,"endColumn":63},{"ruleId":"4209","severity":1,"message":"4210","line":289,"column":72,"nodeType":"3932","messageId":"4211","endLine":289,"endColumn":75},{"ruleId":"3930","severity":1,"message":"3942","line":307,"column":47,"nodeType":"3932","messageId":"3933","endLine":307,"endColumn":49},{"ruleId":"3918","severity":1,"message":"4214","line":455,"column":7,"nodeType":"3920","messageId":"3921","endLine":455,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4215","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4216","line":26,"column":8,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":31,"column":11,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":32,"column":13,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":34,"column":11,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":38,"column":12,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":55,"column":8,"nodeType":"3928","endLine":55,"endColumn":10,"suggestions":"4218"},{"ruleId":"3930","severity":1,"message":"3942","line":325,"column":53,"nodeType":"3932","messageId":"3933","endLine":325,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3931","line":75,"column":22,"nodeType":"3932","messageId":"3933","endLine":75,"endColumn":24},{"ruleId":"4003","severity":1,"message":"4004","line":104,"column":17,"nodeType":"4005","messageId":"4006","endLine":106,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4216","line":24,"column":8,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":32,"column":11,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":33,"column":13,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":35,"column":11,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":39,"column":12,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":64,"column":8,"nodeType":"3928","endLine":64,"endColumn":10,"suggestions":"4219"},{"ruleId":"3930","severity":1,"message":"3931","line":101,"column":24,"nodeType":"3932","messageId":"3933","endLine":101,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":101,"column":45,"nodeType":"3932","messageId":"3933","endLine":101,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":220,"column":38,"nodeType":"3932","messageId":"3933","endLine":220,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":376,"column":48,"nodeType":"3932","messageId":"3933","endLine":376,"endColumn":50},{"ruleId":"3918","severity":1,"message":"4151","line":11,"column":27,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":11,"column":35,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4220","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4215","line":24,"column":8,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3924","line":31,"column":11,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":32,"column":13,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":34,"column":11,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":38,"column":12,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":61,"column":8,"nodeType":"3928","endLine":61,"endColumn":10,"suggestions":"4221"},{"ruleId":"3930","severity":1,"message":"3931","line":98,"column":24,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":98,"column":45,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":38,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":376,"column":48,"nodeType":"3932","messageId":"3933","endLine":376,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":83,"column":44,"nodeType":"3932","messageId":"3933","endLine":83,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":95,"column":24,"nodeType":"3932","messageId":"3933","endLine":95,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":106,"column":34,"nodeType":"3932","messageId":"3933","endLine":106,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":119,"column":31,"nodeType":"3932","messageId":"3933","endLine":119,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4140","line":21,"column":11,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4151","line":24,"column":37,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4222","line":25,"column":21,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4201","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":28,"column":12,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4223","line":28,"column":16,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4224","line":36,"column":12,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4225","line":36,"column":18,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4154","line":56,"column":8,"nodeType":"3928","endLine":56,"endColumn":10,"suggestions":"4226"},{"ruleId":"3930","severity":1,"message":"3931","line":74,"column":29,"nodeType":"3932","messageId":"3933","endLine":74,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4227","line":120,"column":11,"nodeType":"3920","messageId":"3921","endLine":120,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":267,"column":48,"nodeType":"3932","messageId":"3933","endLine":267,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":284,"column":37,"nodeType":"3932","messageId":"3933","endLine":284,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":314,"column":37,"nodeType":"3932","messageId":"3933","endLine":314,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":332,"column":34,"nodeType":"3932","messageId":"3933","endLine":332,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":344,"column":30,"nodeType":"3932","messageId":"3933","endLine":344,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":344,"column":65,"nodeType":"3932","messageId":"3933","endLine":344,"endColumn":67},{"ruleId":"3930","severity":1,"message":"3942","line":344,"column":104,"nodeType":"3932","messageId":"3933","endLine":344,"endColumn":106},{"ruleId":"3930","severity":1,"message":"3942","line":344,"column":142,"nodeType":"3932","messageId":"3933","endLine":344,"endColumn":144},{"ruleId":"3930","severity":1,"message":"3931","line":416,"column":28,"nodeType":"3932","messageId":"3933","endLine":416,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3931","line":416,"column":49,"nodeType":"3932","messageId":"3933","endLine":416,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3931","line":420,"column":33,"nodeType":"3932","messageId":"3933","endLine":420,"endColumn":35},{"ruleId":"3918","severity":1,"message":"4054","line":30,"column":9,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":10},{"ruleId":"4228","severity":1,"message":"4229","line":43,"column":1,"nodeType":"4230","endLine":48,"endColumn":3},{"ruleId":"4228","severity":1,"message":"4229","line":135,"column":1,"nodeType":"4230","endLine":145,"endColumn":3},{"ruleId":"4097","severity":1,"message":"4126","line":129,"column":2,"nodeType":"4099","messageId":"4127","endLine":131,"endColumn":26},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4231","line":22,"column":8,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4232","line":23,"column":13,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4140","line":32,"column":9,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4151","line":35,"column":35,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4222","line":36,"column":19,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4201","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4233","line":53,"column":10,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4234","line":53,"column":20,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4235","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4236","line":54,"column":21,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4237","line":55,"column":10,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4238","line":55,"column":24,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4239","line":56,"column":10,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4240","line":56,"column":24,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":39},{"ruleId":"3926","severity":1,"message":"4154","line":80,"column":6,"nodeType":"3928","endLine":80,"endColumn":8,"suggestions":"4241"},{"ruleId":"3930","severity":1,"message":"3931","line":98,"column":22,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":230,"column":30,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":286,"column":40,"nodeType":"3932","messageId":"3933","endLine":286,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":303,"column":31,"nodeType":"3932","messageId":"3933","endLine":303,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":333,"column":31,"nodeType":"3932","messageId":"3933","endLine":333,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":351,"column":28,"nodeType":"3932","messageId":"3933","endLine":351,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":37,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":72,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":74},{"ruleId":"3930","severity":1,"message":"3931","line":361,"column":107,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":109},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":37,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":72,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":74},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":111,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":113},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":24,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":59,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":61},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":98,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":100},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":136,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":138},{"ruleId":"3930","severity":1,"message":"3931","line":456,"column":24,"nodeType":"3932","messageId":"3933","endLine":456,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":456,"column":45,"nodeType":"3932","messageId":"3933","endLine":456,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3931","line":460,"column":29,"nodeType":"3932","messageId":"3933","endLine":460,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":624,"column":22,"nodeType":"3932","messageId":"3933","endLine":624,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4140","line":21,"column":11,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4151","line":24,"column":37,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4222","line":25,"column":21,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4201","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4242","line":29,"column":12,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4243","line":29,"column":21,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4244","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4224","line":36,"column":12,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4225","line":36,"column":18,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4154","line":59,"column":8,"nodeType":"3928","endLine":59,"endColumn":10,"suggestions":"4245"},{"ruleId":"3930","severity":1,"message":"3931","line":77,"column":29,"nodeType":"3932","messageId":"3933","endLine":77,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4227","line":123,"column":11,"nodeType":"3920","messageId":"3921","endLine":123,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3931","line":142,"column":24,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":142,"column":45,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3931","line":146,"column":29,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":285,"column":48,"nodeType":"3932","messageId":"3933","endLine":285,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":302,"column":37,"nodeType":"3932","messageId":"3933","endLine":302,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":332,"column":37,"nodeType":"3932","messageId":"3933","endLine":332,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":350,"column":34,"nodeType":"3932","messageId":"3933","endLine":350,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":43,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":78,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":80},{"ruleId":"3930","severity":1,"message":"3931","line":361,"column":113,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":115},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":43,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":78,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":80},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":117,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":119},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":5,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":5,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":5,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":10},{"ruleId":"3926","severity":1,"message":"4246","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4247"},{"ruleId":"3930","severity":1,"message":"3942","line":155,"column":44,"nodeType":"3932","messageId":"3933","endLine":155,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":161,"column":48,"nodeType":"3932","messageId":"3933","endLine":161,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":166,"column":52,"nodeType":"3932","messageId":"3933","endLine":166,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":188,"column":40,"nodeType":"3932","messageId":"3933","endLine":188,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":199,"column":35,"nodeType":"3932","messageId":"3933","endLine":199,"endColumn":37},{"ruleId":"3918","severity":1,"message":"4248","line":2,"column":19,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":32},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4249","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3974","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4177","line":41,"column":17,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4250","line":70,"column":6,"nodeType":"3928","endLine":70,"endColumn":8,"suggestions":"4251"},{"ruleId":"3930","severity":1,"message":"3942","line":88,"column":23,"nodeType":"3932","messageId":"3933","endLine":88,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":110,"column":19,"nodeType":"3932","messageId":"3933","endLine":110,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":112,"column":21,"nodeType":"3932","messageId":"3933","endLine":112,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":120,"column":25,"nodeType":"3932","messageId":"3933","endLine":120,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":121,"column":25,"nodeType":"3932","messageId":"3933","endLine":121,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":31,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":50,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":140,"column":29,"nodeType":"3932","messageId":"3933","endLine":140,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":140,"column":46,"nodeType":"3932","messageId":"3933","endLine":140,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3931","line":150,"column":33,"nodeType":"3932","messageId":"3933","endLine":150,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":177,"column":32,"nodeType":"3932","messageId":"3933","endLine":177,"endColumn":34},{"ruleId":"3982","severity":1,"message":"4043","line":211,"column":45,"nodeType":"3984","messageId":"3985","endLine":211,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":221,"column":45,"nodeType":"3984","messageId":"3985","endLine":221,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":347,"column":32,"nodeType":"3932","messageId":"3933","endLine":347,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":362,"column":33,"nodeType":"3932","messageId":"3933","endLine":362,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":375,"column":33,"nodeType":"3932","messageId":"3933","endLine":375,"endColumn":35},{"ruleId":"3926","severity":1,"message":"4252","line":41,"column":6,"nodeType":"3928","endLine":41,"endColumn":8,"suggestions":"4253"},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4246","line":34,"column":6,"nodeType":"3928","endLine":34,"endColumn":8,"suggestions":"4254"},{"ruleId":"3930","severity":1,"message":"3942","line":152,"column":28,"nodeType":"3932","messageId":"3933","endLine":152,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":157,"column":30,"nodeType":"3932","messageId":"3933","endLine":157,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":162,"column":32,"nodeType":"3932","messageId":"3933","endLine":162,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":30,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":32},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4255","line":2,"column":10,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3925","line":2,"column":22,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4256","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4257","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4258","line":8,"column":8,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3986","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4259","line":18,"column":10,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4196","line":26,"column":10,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4197","line":31,"column":9,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":29},{"ruleId":"3926","severity":1,"message":"4246","line":40,"column":6,"nodeType":"3928","endLine":40,"endColumn":8,"suggestions":"4260"},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":38,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":180,"column":42,"nodeType":"3932","messageId":"3933","endLine":180,"endColumn":44},{"ruleId":"3930","severity":1,"message":"3942","line":185,"column":46,"nodeType":"3932","messageId":"3933","endLine":185,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":305,"column":33,"nodeType":"3932","messageId":"3933","endLine":305,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4148","line":8,"column":8,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4149","line":20,"column":25,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4140","line":22,"column":9,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4261","line":24,"column":22,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":28},{"ruleId":"3918","severity":1,"message":"4262","line":25,"column":5,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4263","line":25,"column":20,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":37},{"ruleId":"3918","severity":1,"message":"4264","line":25,"column":39,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4265","line":26,"column":15,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":26},{"ruleId":"3918","severity":1,"message":"3949","line":26,"column":28,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4266","line":26,"column":42,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":55},{"ruleId":"3918","severity":1,"message":"4267","line":57,"column":9,"nodeType":"3920","messageId":"3921","endLine":57,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":90,"column":28,"nodeType":"3932","messageId":"3933","endLine":90,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":93,"column":37,"nodeType":"3932","messageId":"3933","endLine":93,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4268","line":21,"column":6,"nodeType":"3928","endLine":21,"endColumn":14,"suggestions":"4269"},{"ruleId":"3930","severity":1,"message":"3942","line":50,"column":41,"nodeType":"3932","messageId":"3933","endLine":50,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":56,"column":32,"nodeType":"3932","messageId":"3933","endLine":56,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4268","line":21,"column":6,"nodeType":"3928","endLine":21,"endColumn":14,"suggestions":"4270"},{"ruleId":"3930","severity":1,"message":"3931","line":25,"column":13,"nodeType":"3932","messageId":"3933","endLine":25,"endColumn":15},{"ruleId":"3930","severity":1,"message":"3931","line":25,"column":43,"nodeType":"3932","messageId":"3933","endLine":25,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":54,"column":41,"nodeType":"3932","messageId":"3933","endLine":54,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":60,"column":32,"nodeType":"3932","messageId":"3933","endLine":60,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3941","line":25,"column":35,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4151","line":11,"column":35,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4271","line":13,"column":11,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3931","line":41,"column":22,"nodeType":"3932","messageId":"3933","endLine":41,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":89,"column":15,"nodeType":"3932","messageId":"3933","endLine":89,"endColumn":17},{"ruleId":"3930","severity":1,"message":"3942","line":113,"column":30,"nodeType":"3932","messageId":"3933","endLine":113,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":136,"column":33,"nodeType":"3932","messageId":"3933","endLine":136,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":158,"column":23,"nodeType":"3932","messageId":"3933","endLine":158,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":182,"column":18,"nodeType":"3932","messageId":"3933","endLine":182,"endColumn":20},{"ruleId":"3930","severity":1,"message":"3942","line":206,"column":28,"nodeType":"3932","messageId":"3933","endLine":206,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":229,"column":26,"nodeType":"3932","messageId":"3933","endLine":229,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":252,"column":26,"nodeType":"3932","messageId":"3933","endLine":252,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":276,"column":20,"nodeType":"3932","messageId":"3933","endLine":276,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":299,"column":20,"nodeType":"3932","messageId":"3933","endLine":299,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":318,"column":16,"nodeType":"3932","messageId":"3933","endLine":318,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":337,"column":14,"nodeType":"3932","messageId":"3933","endLine":337,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":456,"column":26,"nodeType":"3932","messageId":"3933","endLine":456,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":470,"column":41,"nodeType":"3932","messageId":"3933","endLine":470,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":485,"column":34,"nodeType":"3932","messageId":"3933","endLine":485,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":500,"column":29,"nodeType":"3932","messageId":"3933","endLine":500,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":514,"column":39,"nodeType":"3932","messageId":"3933","endLine":514,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":527,"column":31,"nodeType":"3932","messageId":"3933","endLine":527,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":540,"column":31,"nodeType":"3932","messageId":"3933","endLine":540,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3924","line":12,"column":9,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":13,"column":35,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4272","line":14,"column":7,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":13},{"ruleId":"3926","severity":1,"message":"4273","line":87,"column":6,"nodeType":"3928","endLine":87,"endColumn":14,"suggestions":"4274"},{"ruleId":"4007","severity":1,"message":"4008","line":147,"column":27,"nodeType":"4009","messageId":"4010","endLine":150,"endColumn":28,"fix":"4275"},{"ruleId":"4007","severity":1,"message":"4008","line":160,"column":23,"nodeType":"4009","messageId":"4010","endLine":163,"endColumn":28,"fix":"4276"},{"ruleId":"3930","severity":1,"message":"3942","line":170,"column":41,"nodeType":"3932","messageId":"3933","endLine":170,"endColumn":43},{"ruleId":"4209","severity":1,"message":"4277","line":170,"column":46,"nodeType":"4278","messageId":"4211","endLine":170,"endColumn":48},{"ruleId":"4209","severity":1,"message":"4277","line":170,"column":64,"nodeType":"4278","messageId":"4211","endLine":170,"endColumn":66},{"ruleId":"4209","severity":1,"message":"4279","line":170,"column":64,"nodeType":"4278","messageId":"4211","endLine":170,"endColumn":66},{"ruleId":"3930","severity":1,"message":"3942","line":170,"column":81,"nodeType":"3932","messageId":"3933","endLine":170,"endColumn":83},{"ruleId":"4209","severity":1,"message":"4279","line":170,"column":86,"nodeType":"4278","messageId":"4211","endLine":170,"endColumn":88},{"ruleId":"3930","severity":1,"message":"3942","line":176,"column":39,"nodeType":"3932","messageId":"3933","endLine":176,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":179,"column":40,"nodeType":"3932","messageId":"3933","endLine":179,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":182,"column":42,"nodeType":"3932","messageId":"3933","endLine":182,"endColumn":44},{"ruleId":"3930","severity":1,"message":"3942","line":193,"column":44,"nodeType":"3932","messageId":"3933","endLine":193,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":46,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4151","line":9,"column":35,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4280","line":25,"column":5,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":15},{"ruleId":"3930","severity":1,"message":"3931","line":44,"column":29,"nodeType":"3932","messageId":"3933","endLine":44,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":94,"column":18,"nodeType":"3932","messageId":"3933","endLine":94,"endColumn":20},{"ruleId":"3930","severity":1,"message":"3942","line":113,"column":30,"nodeType":"3932","messageId":"3933","endLine":113,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":133,"column":25,"nodeType":"3932","messageId":"3933","endLine":133,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":151,"column":23,"nodeType":"3932","messageId":"3933","endLine":151,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":167,"column":28,"nodeType":"3932","messageId":"3933","endLine":167,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":186,"column":21,"nodeType":"3932","messageId":"3933","endLine":186,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":205,"column":28,"nodeType":"3932","messageId":"3933","endLine":205,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":224,"column":17,"nodeType":"3932","messageId":"3933","endLine":224,"endColumn":19},{"ruleId":"3930","severity":1,"message":"3942","line":242,"column":20,"nodeType":"3932","messageId":"3933","endLine":242,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":260,"column":16,"nodeType":"3932","messageId":"3933","endLine":260,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":278,"column":14,"nodeType":"3932","messageId":"3933","endLine":278,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":398,"column":29,"nodeType":"3932","messageId":"3933","endLine":398,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":412,"column":36,"nodeType":"3932","messageId":"3933","endLine":412,"endColumn":38},{"ruleId":"3930","severity":1,"message":"3942","line":428,"column":34,"nodeType":"3932","messageId":"3933","endLine":428,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":441,"column":32,"nodeType":"3932","messageId":"3933","endLine":441,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":455,"column":39,"nodeType":"3932","messageId":"3933","endLine":455,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":468,"column":31,"nodeType":"3932","messageId":"3933","endLine":468,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3924","line":14,"column":9,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":15,"column":35,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3925","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4281","line":36,"column":7,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4282","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4283","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4284","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4285","line":12,"column":8,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4286","line":13,"column":8,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4287","line":16,"column":8,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4288","line":45,"column":4,"nodeType":"3928","endLine":45,"endColumn":20,"suggestions":"4289"},{"ruleId":"3930","severity":1,"message":"3931","line":47,"column":21,"nodeType":"3932","messageId":"3933","endLine":47,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3931","line":52,"column":27,"nodeType":"3932","messageId":"3933","endLine":52,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":48,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":108,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":110},{"ruleId":"3930","severity":1,"message":"3931","line":65,"column":17,"nodeType":"3932","messageId":"3933","endLine":65,"endColumn":19},{"ruleId":"3930","severity":1,"message":"3931","line":70,"column":24,"nodeType":"3932","messageId":"3933","endLine":70,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":76,"column":47,"nodeType":"3932","messageId":"3933","endLine":76,"endColumn":49},{"ruleId":"3930","severity":1,"message":"3942","line":76,"column":107,"nodeType":"3932","messageId":"3933","endLine":76,"endColumn":109},{"ruleId":"3930","severity":1,"message":"3931","line":85,"column":18,"nodeType":"3932","messageId":"3933","endLine":85,"endColumn":20},{"ruleId":"3930","severity":1,"message":"3931","line":90,"column":26,"nodeType":"3932","messageId":"3933","endLine":90,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":96,"column":48,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":96,"column":108,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":110},{"ruleId":"4290","severity":1,"message":"4291","line":128,"column":15,"nodeType":"4009","endLine":128,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4292","line":1,"column":10,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3953","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":18,"column":12,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4293","line":22,"column":11,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4294","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4295"},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":44,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":240,"column":50,"nodeType":"3932","messageId":"3933","endLine":240,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":251,"column":53,"nodeType":"3932","messageId":"3933","endLine":251,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":264,"column":71,"nodeType":"3932","messageId":"3933","endLine":264,"endColumn":73},{"ruleId":"4007","severity":1,"message":"4008","line":267,"column":37,"nodeType":"4009","messageId":"4010","endLine":270,"endColumn":38,"fix":"4296"},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4294","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4297"},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":44,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":193,"column":48,"nodeType":"3932","messageId":"3933","endLine":193,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":198,"column":52,"nodeType":"3932","messageId":"3933","endLine":198,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":253,"column":50,"nodeType":"3932","messageId":"3933","endLine":253,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":264,"column":53,"nodeType":"3932","messageId":"3933","endLine":264,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3931","line":264,"column":76,"nodeType":"3932","messageId":"3933","endLine":264,"endColumn":78},{"ruleId":"3930","severity":1,"message":"3942","line":282,"column":48,"nodeType":"3932","messageId":"3933","endLine":282,"endColumn":50},{"ruleId":"4007","severity":1,"message":"4008","line":314,"column":37,"nodeType":"4009","messageId":"4010","endLine":317,"endColumn":38,"fix":"4298"},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":20,"column":12,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4293","line":23,"column":11,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4294","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4299"},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":44,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":241,"column":50,"nodeType":"3932","messageId":"3933","endLine":241,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":252,"column":53,"nodeType":"3932","messageId":"3933","endLine":252,"endColumn":55},{"ruleId":"4007","severity":1,"message":"4008","line":268,"column":37,"nodeType":"4009","messageId":"4010","endLine":271,"endColumn":38,"fix":"4300"},{"ruleId":"3930","severity":1,"message":"3942","line":285,"column":48,"nodeType":"3932","messageId":"3933","endLine":285,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":64,"column":32,"nodeType":"3932","messageId":"3933","endLine":64,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4301","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4201","line":21,"column":12,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4302","line":25,"column":12,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4303","line":25,"column":17,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4304","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4305","line":26,"column":17,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":23},{"ruleId":"3926","severity":1,"message":"4294","line":47,"column":8,"nodeType":"3928","endLine":47,"endColumn":10,"suggestions":"4306"},{"ruleId":"3930","severity":1,"message":"3942","line":195,"column":44,"nodeType":"3932","messageId":"3933","endLine":195,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":203,"column":48,"nodeType":"3932","messageId":"3933","endLine":203,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":207,"column":52,"nodeType":"3932","messageId":"3933","endLine":207,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":260,"column":50,"nodeType":"3932","messageId":"3933","endLine":260,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":271,"column":53,"nodeType":"3932","messageId":"3933","endLine":271,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3931","line":271,"column":74,"nodeType":"3932","messageId":"3933","endLine":271,"endColumn":76},{"ruleId":"3930","severity":1,"message":"3942","line":284,"column":71,"nodeType":"3932","messageId":"3933","endLine":284,"endColumn":73},{"ruleId":"4007","severity":1,"message":"4008","line":288,"column":37,"nodeType":"4009","messageId":"4010","endLine":291,"endColumn":38,"fix":"4307"},{"ruleId":"3930","severity":1,"message":"3942","line":308,"column":48,"nodeType":"3932","messageId":"3933","endLine":308,"endColumn":50},{"ruleId":"4097","severity":1,"message":"4126","line":402,"column":1,"nodeType":"4099","messageId":"4127","endLine":412,"endColumn":39},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":5,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":17,"column":10,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":19,"column":10,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4309","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":24},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":5,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":17,"column":10,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":19,"column":10,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4309","line":32,"column":12,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":188,"column":38,"nodeType":"3932","messageId":"3933","endLine":188,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":291,"column":42,"nodeType":"3932","messageId":"3933","endLine":291,"endColumn":44},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":5,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":17,"column":10,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":19,"column":10,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4309","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":191,"column":38,"nodeType":"3932","messageId":"3933","endLine":191,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4259","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4255","line":5,"column":21,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3963","line":10,"column":11,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":17},{"ruleId":"4007","severity":1,"message":"4008","line":61,"column":45,"nodeType":"4009","messageId":"4010","endLine":64,"endColumn":46,"fix":"4310"},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3924","line":15,"column":9,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4311","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4312","line":13,"column":11,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4313","line":15,"column":9,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4314","line":20,"column":9,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":19},{"ruleId":"3930","severity":1,"message":"3942","line":95,"column":38,"nodeType":"3932","messageId":"3933","endLine":95,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":96,"column":37,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":97,"column":34,"nodeType":"3932","messageId":"3933","endLine":97,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":98,"column":38,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":99,"column":33,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":112,"column":38,"nodeType":"3932","messageId":"3933","endLine":112,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":112,"column":86,"nodeType":"3932","messageId":"3933","endLine":112,"endColumn":88},{"ruleId":"4007","severity":1,"message":"4008","line":116,"column":27,"nodeType":"4009","messageId":"4010","endLine":119,"endColumn":28,"fix":"4315"},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":42,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":44},{"ruleId":"4209","severity":1,"message":"4277","line":124,"column":74,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":76},{"ruleId":"4209","severity":1,"message":"4277","line":124,"column":92,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":94},{"ruleId":"4209","severity":1,"message":"4279","line":124,"column":92,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":94},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":109,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":111},{"ruleId":"4209","severity":1,"message":"4279","line":124,"column":141,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":143},{"ruleId":"4209","severity":1,"message":"4279","line":124,"column":159,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":161},{"ruleId":"4209","severity":1,"message":"4279","line":124,"column":186,"nodeType":"4278","messageId":"4211","endLine":124,"endColumn":188},{"ruleId":"3930","severity":1,"message":"3942","line":127,"column":37,"nodeType":"3932","messageId":"3933","endLine":127,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":33,"column":33,"nodeType":"3932","messageId":"3933","endLine":33,"endColumn":35},{"ruleId":"4007","severity":1,"message":"4008","line":37,"column":23,"nodeType":"4009","messageId":"4010","endLine":40,"endColumn":24,"fix":"4316"},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"4007","severity":1,"message":"4008","line":79,"column":21,"nodeType":"4009","messageId":"4010","endLine":82,"endColumn":22,"fix":"4317"},{"ruleId":"3930","severity":1,"message":"3942","line":131,"column":30,"nodeType":"3932","messageId":"3933","endLine":131,"endColumn":32},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4318","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4106","line":26,"column":9,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4151","line":29,"column":35,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4222","line":30,"column":19,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4319","line":31,"column":10,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4244","line":35,"column":10,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4227","line":114,"column":9,"nodeType":"3920","messageId":"3921","endLine":114,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":256,"column":40,"nodeType":"3932","messageId":"3933","endLine":256,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":274,"column":31,"nodeType":"3932","messageId":"3933","endLine":274,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3931","line":359,"column":24,"nodeType":"3932","messageId":"3933","endLine":359,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":359,"column":45,"nodeType":"3932","messageId":"3933","endLine":359,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3931","line":363,"column":29,"nodeType":"3932","messageId":"3933","endLine":363,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3941","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4318","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4106","line":27,"column":9,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4151","line":30,"column":35,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4222","line":31,"column":19,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4319","line":32,"column":10,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4320","line":60,"column":10,"nodeType":"3920","messageId":"3921","endLine":60,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4321","line":62,"column":9,"nodeType":"3920","messageId":"3921","endLine":62,"endColumn":20},{"ruleId":"3930","severity":1,"message":"3942","line":215,"column":32,"nodeType":"3932","messageId":"3933","endLine":215,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":272,"column":40,"nodeType":"3932","messageId":"3933","endLine":272,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":289,"column":31,"nodeType":"3932","messageId":"3933","endLine":289,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3931","line":372,"column":24,"nodeType":"3932","messageId":"3933","endLine":372,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":372,"column":45,"nodeType":"3932","messageId":"3933","endLine":372,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":511,"column":22,"nodeType":"3932","messageId":"3933","endLine":511,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4322","line":36,"column":11,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":17},{"ruleId":"3930","severity":1,"message":"3942","line":138,"column":27,"nodeType":"3932","messageId":"3933","endLine":138,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":177,"column":35,"nodeType":"3932","messageId":"3933","endLine":177,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":180,"column":37,"nodeType":"3932","messageId":"3933","endLine":180,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":39,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":199,"column":31,"nodeType":"3932","messageId":"3933","endLine":199,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":213,"column":33,"nodeType":"3932","messageId":"3933","endLine":213,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":242,"column":33,"nodeType":"3932","messageId":"3933","endLine":242,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":243,"column":33,"nodeType":"3932","messageId":"3933","endLine":243,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":244,"column":34,"nodeType":"3932","messageId":"3933","endLine":244,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":267,"column":33,"nodeType":"3932","messageId":"3933","endLine":267,"endColumn":35},{"ruleId":"4007","severity":1,"message":"4008","line":273,"column":21,"nodeType":"4009","messageId":"4010","endLine":273,"endColumn":76,"fix":"4323"},{"ruleId":"3930","severity":1,"message":"3942","line":276,"column":33,"nodeType":"3932","messageId":"3933","endLine":276,"endColumn":35},{"ruleId":"4007","severity":1,"message":"4008","line":279,"column":23,"nodeType":"4009","messageId":"4010","endLine":279,"endColumn":64,"fix":"4324"},{"ruleId":"3930","severity":1,"message":"3942","line":308,"column":29,"nodeType":"3932","messageId":"3933","endLine":308,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4119","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3935","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4120","line":18,"column":8,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4123","line":39,"column":8,"nodeType":"3928","endLine":39,"endColumn":10,"suggestions":"4325"},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4318","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4106","line":26,"column":9,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4151","line":29,"column":35,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4222","line":30,"column":19,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4319","line":31,"column":10,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4244","line":35,"column":10,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4227","line":114,"column":9,"nodeType":"3920","messageId":"3921","endLine":114,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":255,"column":40,"nodeType":"3932","messageId":"3933","endLine":255,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":273,"column":31,"nodeType":"3932","messageId":"3933","endLine":273,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3931","line":358,"column":24,"nodeType":"3932","messageId":"3933","endLine":358,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":358,"column":45,"nodeType":"3932","messageId":"3933","endLine":358,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3931","line":362,"column":29,"nodeType":"3932","messageId":"3933","endLine":362,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4063","line":3,"column":3,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":4,"column":3,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3967","line":5,"column":3,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4326","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3931","line":44,"column":22,"nodeType":"3932","messageId":"3933","endLine":44,"endColumn":24},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4151","line":9,"column":35,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4072","line":10,"column":11,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4222","line":10,"column":19,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4327","line":12,"column":10,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4328","line":12,"column":24,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":30,"column":16,"nodeType":"3932","messageId":"3933","endLine":30,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4063","line":3,"column":3,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":4,"column":3,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3967","line":5,"column":3,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4326","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":29},{"ruleId":"4228","severity":1,"message":"4229","line":23,"column":1,"nodeType":"4230","endLine":29,"endColumn":3},{"ruleId":"3918","severity":1,"message":"3961","line":17,"column":9,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":10},{"ruleId":"4228","severity":1,"message":"4229","line":31,"column":1,"nodeType":"4230","endLine":33,"endColumn":5},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3941","line":24,"column":35,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4021","line":4,"column":41,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3926","severity":1,"message":"4329","line":12,"column":6,"nodeType":"3928","endLine":12,"endColumn":11,"suggestions":"4330"},{"ruleId":"3918","severity":1,"message":"4331","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4332","line":36,"column":11,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":19},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":24,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":26},{"ruleId":"3926","severity":1,"message":"4333","line":80,"column":6,"nodeType":"3928","endLine":80,"endColumn":24,"suggestions":"4334"},{"ruleId":"3918","severity":1,"message":"4012","line":81,"column":45,"nodeType":"3920","messageId":"3921","endLine":81,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3941","line":81,"column":56,"nodeType":"3920","messageId":"3921","endLine":81,"endColumn":61},{"ruleId":"3982","severity":1,"message":"4043","line":89,"column":35,"nodeType":"3984","messageId":"3985","endLine":89,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":170,"column":27,"nodeType":"3932","messageId":"3933","endLine":170,"endColumn":29},{"ruleId":"3982","severity":1,"message":"4043","line":272,"column":21,"nodeType":"3984","messageId":"3985","endLine":272,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":274,"column":14,"nodeType":"3932","messageId":"3933","endLine":274,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4268","line":21,"column":6,"nodeType":"3928","endLine":21,"endColumn":14,"suggestions":"4335"},{"ruleId":"3930","severity":1,"message":"3942","line":53,"column":41,"nodeType":"3932","messageId":"3933","endLine":53,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":32,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":34},{"ruleId":"3918","severity":1,"message":"4151","line":9,"column":35,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4271","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4280","line":23,"column":5,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":15},{"ruleId":"3930","severity":1,"message":"3931","line":42,"column":23,"nodeType":"3932","messageId":"3933","endLine":42,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":94,"column":26,"nodeType":"3932","messageId":"3933","endLine":94,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":110,"column":33,"nodeType":"3932","messageId":"3933","endLine":110,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":126,"column":26,"nodeType":"3932","messageId":"3933","endLine":126,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":25,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":158,"column":28,"nodeType":"3932","messageId":"3933","endLine":158,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":20,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":190,"column":26,"nodeType":"3932","messageId":"3933","endLine":190,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":206,"column":20,"nodeType":"3932","messageId":"3933","endLine":206,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":222,"column":16,"nodeType":"3932","messageId":"3933","endLine":222,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":238,"column":14,"nodeType":"3932","messageId":"3933","endLine":238,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":254,"column":21,"nodeType":"3932","messageId":"3933","endLine":254,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":367,"column":31,"nodeType":"3932","messageId":"3933","endLine":367,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":382,"column":44,"nodeType":"3932","messageId":"3933","endLine":382,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":395,"column":39,"nodeType":"3932","messageId":"3933","endLine":395,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":408,"column":32,"nodeType":"3932","messageId":"3933","endLine":408,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":422,"column":36,"nodeType":"3932","messageId":"3933","endLine":422,"endColumn":38},{"ruleId":"3930","severity":1,"message":"3942","line":437,"column":31,"nodeType":"3932","messageId":"3933","endLine":437,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4272","line":10,"column":7,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4336","line":28,"column":7,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":16},{"ruleId":"3926","severity":1,"message":"4273","line":35,"column":6,"nodeType":"3928","endLine":35,"endColumn":14,"suggestions":"4337"},{"ruleId":"4007","severity":1,"message":"4008","line":96,"column":27,"nodeType":"4009","messageId":"4010","endLine":99,"endColumn":28,"fix":"4338"},{"ruleId":"4007","severity":1,"message":"4008","line":109,"column":23,"nodeType":"4009","messageId":"4010","endLine":112,"endColumn":28,"fix":"4339"},{"ruleId":"3930","severity":1,"message":"3942","line":123,"column":41,"nodeType":"3932","messageId":"3933","endLine":123,"endColumn":43},{"ruleId":"4209","severity":1,"message":"4277","line":123,"column":46,"nodeType":"4278","messageId":"4211","endLine":123,"endColumn":48},{"ruleId":"4209","severity":1,"message":"4277","line":123,"column":64,"nodeType":"4278","messageId":"4211","endLine":123,"endColumn":66},{"ruleId":"4209","severity":1,"message":"4279","line":123,"column":64,"nodeType":"4278","messageId":"4211","endLine":123,"endColumn":66},{"ruleId":"3930","severity":1,"message":"3942","line":123,"column":81,"nodeType":"3932","messageId":"3933","endLine":123,"endColumn":83},{"ruleId":"4209","severity":1,"message":"4279","line":123,"column":86,"nodeType":"4278","messageId":"4211","endLine":123,"endColumn":88},{"ruleId":"3930","severity":1,"message":"3942","line":130,"column":39,"nodeType":"3932","messageId":"3933","endLine":130,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":133,"column":40,"nodeType":"3932","messageId":"3933","endLine":133,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":136,"column":42,"nodeType":"3932","messageId":"3933","endLine":136,"endColumn":44},{"ruleId":"3930","severity":1,"message":"3942","line":147,"column":44,"nodeType":"3932","messageId":"3933","endLine":147,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":175,"column":46,"nodeType":"3932","messageId":"3933","endLine":175,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4340","line":10,"column":39,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":53},{"ruleId":"3918","severity":1,"message":"4140","line":12,"column":9,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":16},{"ruleId":"4290","severity":1,"message":"4341","line":26,"column":17,"nodeType":"4009","endLine":29,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":57,"column":57,"nodeType":"3932","messageId":"3933","endLine":57,"endColumn":59},{"ruleId":"3930","severity":1,"message":"3942","line":64,"column":21,"nodeType":"3932","messageId":"3933","endLine":64,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":68,"column":21,"nodeType":"3932","messageId":"3933","endLine":68,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":72,"column":21,"nodeType":"3932","messageId":"3933","endLine":72,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":75,"column":22,"nodeType":"3932","messageId":"3933","endLine":75,"endColumn":24},{"ruleId":"4290","severity":1,"message":"4341","line":81,"column":17,"nodeType":"4009","endLine":86,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":99,"column":27,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":29},{"ruleId":"3926","severity":1,"message":"4329","line":18,"column":8,"nodeType":"3928","endLine":18,"endColumn":18,"suggestions":"4342"},{"ruleId":"3930","severity":1,"message":"3931","line":27,"column":42,"nodeType":"3932","messageId":"3933","endLine":27,"endColumn":44},{"ruleId":"4290","severity":1,"message":"4341","line":44,"column":33,"nodeType":"4009","endLine":44,"endColumn":66},{"ruleId":"3918","severity":1,"message":"4063","line":3,"column":3,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":4,"column":3,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3967","line":5,"column":3,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4326","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4063","line":3,"column":3,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":4,"column":3,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3967","line":5,"column":3,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4326","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":29},{"ruleId":"3918","severity":1,"message":"3946","line":4,"column":38,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":4,"column":49,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":4,"column":54,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":17,"column":12,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4343","line":17,"column":19,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4344","line":20,"column":12,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4345","line":20,"column":28,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":179,"column":34,"nodeType":"3932","messageId":"3933","endLine":179,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":181,"column":34,"nodeType":"3932","messageId":"3933","endLine":181,"endColumn":36},{"ruleId":"4007","severity":1,"message":"4008","line":199,"column":25,"nodeType":"4009","messageId":"4010","endLine":202,"endColumn":20,"fix":"4346"},{"ruleId":"3930","severity":1,"message":"3931","line":221,"column":29,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3931","line":221,"column":51,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":53},{"ruleId":"3930","severity":1,"message":"3931","line":225,"column":32,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3931","line":225,"column":54,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":56},{"ruleId":"3930","severity":1,"message":"3931","line":225,"column":75,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":77},{"ruleId":"3930","severity":1,"message":"3931","line":230,"column":33,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3931","line":230,"column":55,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":57},{"ruleId":"4003","severity":1,"message":"4004","line":275,"column":21,"nodeType":"4005","messageId":"4006","endLine":275,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3946","line":4,"column":38,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":4,"column":49,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":4,"column":54,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":57},{"ruleId":"4003","severity":1,"message":"4004","line":189,"column":21,"nodeType":"4005","messageId":"4006","endLine":189,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4347","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4348","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4234","line":41,"column":20,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4236","line":42,"column":21,"nodeType":"3920","messageId":"3921","endLine":42,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4238","line":43,"column":24,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4240","line":44,"column":24,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4349","line":53,"column":23,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":37},{"ruleId":"3926","severity":1,"message":"4350","line":59,"column":6,"nodeType":"3928","endLine":59,"endColumn":8,"suggestions":"4351"},{"ruleId":"4040","severity":1,"message":"4352","line":325,"column":17,"nodeType":"3920","messageId":"4042","endLine":325,"endColumn":20},{"ruleId":"3982","severity":1,"message":"3983","line":339,"column":26,"nodeType":"3984","messageId":"3985","endLine":339,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":340,"column":21,"nodeType":"3932","messageId":"3933","endLine":340,"endColumn":23},{"ruleId":"4040","severity":1,"message":"4353","line":348,"column":13,"nodeType":"3920","messageId":"4042","endLine":348,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4072","line":8,"column":11,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4151","line":9,"column":35,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4327","line":23,"column":10,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4354","line":24,"column":10,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4355","line":24,"column":16,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4073","line":25,"column":10,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4356","line":26,"column":10,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4357","line":31,"column":10,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":14},{"ruleId":"3930","severity":1,"message":"3942","line":50,"column":16,"nodeType":"3932","messageId":"3933","endLine":50,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4151","line":11,"column":27,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":11,"column":35,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4018","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4019","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4020","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4021","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3935","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4190","line":19,"column":10,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":21,"column":10,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3959","line":25,"column":8,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4327","line":32,"column":10,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4328","line":32,"column":24,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":163,"column":28,"nodeType":"3932","messageId":"3933","endLine":163,"endColumn":30},{"ruleId":"3918","severity":1,"message":"4358","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4359","line":14,"column":10,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":19},{"ruleId":"3926","severity":1,"message":"4360","line":33,"column":6,"nodeType":"3928","endLine":33,"endColumn":21,"suggestions":"4361"},{"ruleId":"3930","severity":1,"message":"3942","line":133,"column":28,"nodeType":"3932","messageId":"3933","endLine":133,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":139,"column":30,"nodeType":"3932","messageId":"3933","endLine":139,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":144,"column":32,"nodeType":"3932","messageId":"3933","endLine":144,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":24,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":225,"column":26,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4091","line":28,"column":11,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4149","line":28,"column":25,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4151","line":28,"column":35,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":41},{"ruleId":"3918","severity":1,"message":"3941","line":28,"column":43,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4072","line":29,"column":11,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4222","line":29,"column":19,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4327","line":32,"column":10,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4328","line":32,"column":24,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":144,"column":28,"nodeType":"3932","messageId":"3933","endLine":144,"endColumn":30},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":13,"column":10,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":15,"column":10,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4259","line":16,"column":16,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":129,"column":28,"nodeType":"3932","messageId":"3933","endLine":129,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":134,"column":30,"nodeType":"3932","messageId":"3933","endLine":134,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":138,"column":32,"nodeType":"3932","messageId":"3933","endLine":138,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":13,"column":10,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":15,"column":10,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":182,"column":28,"nodeType":"3932","messageId":"3933","endLine":182,"endColumn":30},{"ruleId":"4007","severity":1,"message":"4008","line":248,"column":19,"nodeType":"4009","messageId":"4010","endLine":251,"endColumn":20,"fix":"4362"},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":13,"column":10,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":15,"column":10,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":180,"column":28,"nodeType":"3932","messageId":"3933","endLine":180,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":251,"column":55,"nodeType":"3932","messageId":"3933","endLine":251,"endColumn":57},{"ruleId":"4007","severity":1,"message":"4008","line":253,"column":19,"nodeType":"4009","messageId":"4010","endLine":256,"endColumn":20,"fix":"4363"},{"ruleId":"3930","severity":1,"message":"3942","line":65,"column":32,"nodeType":"3932","messageId":"3933","endLine":65,"endColumn":34},{"ruleId":"3918","severity":1,"message":"3953","line":7,"column":10,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4091","line":9,"column":13,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4012","line":9,"column":45,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":29,"column":50,"nodeType":"3932","messageId":"3933","endLine":29,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4364","line":14,"column":16,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":189,"column":28,"nodeType":"3932","messageId":"3933","endLine":189,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":197,"column":30,"nodeType":"3932","messageId":"3933","endLine":197,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":201,"column":32,"nodeType":"3932","messageId":"3933","endLine":201,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":264,"column":55,"nodeType":"3932","messageId":"3933","endLine":264,"endColumn":57},{"ruleId":"4007","severity":1,"message":"4008","line":266,"column":19,"nodeType":"4009","messageId":"4010","endLine":269,"endColumn":20,"fix":"4365"},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4190","line":13,"column":10,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4308","line":15,"column":10,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":28,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":30},{"ruleId":"4007","severity":1,"message":"4008","line":250,"column":19,"nodeType":"4009","messageId":"4010","endLine":253,"endColumn":20,"fix":"4366"},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"4097","severity":1,"message":"4126","line":70,"column":1,"nodeType":"4099","messageId":"4127","endLine":79,"endColumn":2},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3924","line":25,"column":11,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4367","line":29,"column":12,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4200","line":32,"column":12,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4223","line":32,"column":16,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4368","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4369","line":33,"column":20,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":31},{"ruleId":"3926","severity":1,"message":"4370","line":44,"column":8,"nodeType":"3928","endLine":44,"endColumn":10,"suggestions":"4371"},{"ruleId":"4007","severity":1,"message":"4008","line":268,"column":37,"nodeType":"4009","messageId":"4010","endLine":271,"endColumn":38,"fix":"4372"},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4193","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3924","line":26,"column":11,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4367","line":30,"column":12,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4200","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4223","line":33,"column":16,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4368","line":34,"column":12,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4369","line":34,"column":20,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":31},{"ruleId":"3926","severity":1,"message":"4370","line":40,"column":8,"nodeType":"3928","endLine":40,"endColumn":10,"suggestions":"4373"},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4151","line":7,"column":36,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":20,"column":22,"nodeType":"3932","messageId":"3933","endLine":20,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":33,"column":28,"nodeType":"3932","messageId":"3933","endLine":33,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":46,"column":28,"nodeType":"3932","messageId":"3933","endLine":46,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":27,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":72,"column":27,"nodeType":"3932","messageId":"3933","endLine":72,"endColumn":29},{"ruleId":"3930","severity":1,"message":"3942","line":85,"column":28,"nodeType":"3932","messageId":"3933","endLine":85,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":22,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":24},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":52,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":86,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":88},{"ruleId":"3930","severity":1,"message":"3942","line":57,"column":24,"nodeType":"3932","messageId":"3933","endLine":57,"endColumn":26},{"ruleId":"3926","severity":1,"message":"4374","line":76,"column":6,"nodeType":"3928","endLine":76,"endColumn":24,"suggestions":"4375"},{"ruleId":"3918","severity":1,"message":"4012","line":77,"column":45,"nodeType":"3920","messageId":"3921","endLine":77,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3941","line":77,"column":56,"nodeType":"3920","messageId":"3921","endLine":77,"endColumn":61},{"ruleId":"3982","severity":1,"message":"4043","line":85,"column":35,"nodeType":"3984","messageId":"3985","endLine":85,"endColumn":37},{"ruleId":"3982","severity":1,"message":"4043","line":238,"column":21,"nodeType":"3984","messageId":"3985","endLine":238,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":240,"column":9,"nodeType":"3932","messageId":"3933","endLine":240,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4376","line":840,"column":8,"nodeType":"3920","messageId":"3921","endLine":840,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4377","line":841,"column":8,"nodeType":"3920","messageId":"3921","endLine":841,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4018","line":847,"column":3,"nodeType":"3920","messageId":"3921","endLine":847,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4378","line":848,"column":3,"nodeType":"3920","messageId":"3921","endLine":848,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4019","line":849,"column":3,"nodeType":"3920","messageId":"3921","endLine":849,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4020","line":850,"column":3,"nodeType":"3920","messageId":"3921","endLine":850,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4021","line":851,"column":3,"nodeType":"3920","messageId":"3921","endLine":851,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3935","line":852,"column":3,"nodeType":"3920","messageId":"3921","endLine":852,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4379","line":856,"column":17,"nodeType":"3920","messageId":"3921","endLine":856,"endColumn":20},{"ruleId":"4380","severity":1,"message":"4381","line":951,"column":9,"nodeType":"4132","messageId":"4382","endLine":951,"endColumn":19},{"ruleId":"3982","severity":1,"message":"4043","line":1018,"column":47,"nodeType":"3984","messageId":"3985","endLine":1018,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":1044,"column":47,"nodeType":"3984","messageId":"3985","endLine":1044,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":1135,"column":45,"nodeType":"3984","messageId":"3985","endLine":1135,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":1213,"column":21,"nodeType":"3984","messageId":"3985","endLine":1213,"endColumn":23},{"ruleId":"4380","severity":1,"message":"4381","line":1260,"column":7,"nodeType":"4132","messageId":"4382","endLine":1260,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":1262,"column":7,"nodeType":"4132","messageId":"4382","endLine":1262,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":1271,"column":11,"nodeType":"4132","messageId":"4382","endLine":1271,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":1456,"column":33,"nodeType":"3932","messageId":"3933","endLine":1456,"endColumn":35},{"ruleId":"4383","severity":1,"message":"4384","line":1458,"column":8,"nodeType":"3920","messageId":"4385","endLine":1458,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":1607,"column":29,"nodeType":"3932","messageId":"3933","endLine":1607,"endColumn":31},{"ruleId":"4386","severity":1,"message":"4387","line":1609,"column":6,"nodeType":"4009","endLine":1609,"endColumn":55},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"3986","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4151","line":18,"column":37,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4388","line":23,"column":38,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3931","line":33,"column":30,"nodeType":"3932","messageId":"3933","endLine":33,"endColumn":32},{"ruleId":"3918","severity":1,"message":"4389","line":39,"column":25,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4390","line":41,"column":13,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":22},{"ruleId":"4097","severity":1,"message":"4126","line":163,"column":1,"nodeType":"4099","messageId":"4127","endLine":173,"endColumn":20},{"ruleId":"4097","severity":1,"message":"4126","line":174,"column":1,"nodeType":"4099","messageId":"4127","endLine":176,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":36,"column":37,"nodeType":"3932","messageId":"3933","endLine":36,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":44,"column":39,"nodeType":"3932","messageId":"3933","endLine":44,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":51,"column":41,"nodeType":"3932","messageId":"3933","endLine":51,"endColumn":43},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4148","line":21,"column":8,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3959","line":22,"column":8,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":29,"column":11,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4367","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4368","line":35,"column":12,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4369","line":35,"column":20,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":31},{"ruleId":"3926","severity":1,"message":"4370","line":55,"column":8,"nodeType":"3928","endLine":55,"endColumn":10,"suggestions":"4391"},{"ruleId":"3930","severity":1,"message":"3942","line":199,"column":44,"nodeType":"3932","messageId":"3933","endLine":199,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":207,"column":48,"nodeType":"3932","messageId":"3933","endLine":207,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":213,"column":52,"nodeType":"3932","messageId":"3933","endLine":213,"endColumn":54},{"ruleId":"4007","severity":1,"message":"4008","line":302,"column":49,"nodeType":"4009","messageId":"4010","endLine":305,"endColumn":50,"fix":"4392"},{"ruleId":"3930","severity":1,"message":"3942","line":317,"column":56,"nodeType":"3932","messageId":"3933","endLine":317,"endColumn":58},{"ruleId":"4097","severity":1,"message":"4126","line":391,"column":1,"nodeType":"4099","messageId":"4127","endLine":397,"endColumn":51},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4193","line":15,"column":8,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4148","line":17,"column":8,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3924","line":25,"column":11,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4367","line":29,"column":12,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4200","line":32,"column":12,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4223","line":32,"column":16,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4368","line":33,"column":12,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4370","line":43,"column":8,"nodeType":"3928","endLine":43,"endColumn":10,"suggestions":"4393"},{"ruleId":"3930","severity":1,"message":"3942","line":184,"column":44,"nodeType":"3932","messageId":"3933","endLine":184,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":192,"column":48,"nodeType":"3932","messageId":"3933","endLine":192,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":199,"column":52,"nodeType":"3932","messageId":"3933","endLine":199,"endColumn":54},{"ruleId":"4007","severity":1,"message":"4008","line":289,"column":49,"nodeType":"4009","messageId":"4010","endLine":292,"endColumn":50,"fix":"4394"},{"ruleId":"3930","severity":1,"message":"3942","line":304,"column":56,"nodeType":"3932","messageId":"3933","endLine":304,"endColumn":58},{"ruleId":"3918","severity":1,"message":"4395","line":332,"column":11,"nodeType":"3920","messageId":"3921","endLine":332,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4190","line":2,"column":10,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3957","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":4,"column":13,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4396","line":5,"column":8,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4220","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3945","line":9,"column":10,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3948","line":10,"column":8,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4140","line":17,"column":9,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4151","line":13,"column":27,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":13,"column":35,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4397","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3925","line":25,"column":10,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4398","line":33,"column":10,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4399","line":34,"column":10,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4234","line":37,"column":20,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4236","line":38,"column":21,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4238","line":39,"column":24,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4240","line":40,"column":24,"nodeType":"3920","messageId":"3921","endLine":40,"endColumn":39},{"ruleId":"3926","severity":1,"message":"4400","line":56,"column":6,"nodeType":"3928","endLine":56,"endColumn":8,"suggestions":"4401"},{"ruleId":"3918","severity":1,"message":"4402","line":204,"column":9,"nodeType":"3920","messageId":"3921","endLine":204,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4151","line":12,"column":27,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":12,"column":35,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4151","line":11,"column":27,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":11,"column":35,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4232","line":2,"column":13,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":20},{"ruleId":"4290","severity":1,"message":"4291","line":65,"column":15,"nodeType":"4009","endLine":68,"endColumn":16},{"ruleId":"4097","severity":1,"message":"4126","line":108,"column":1,"nodeType":"4099","messageId":"4127","endLine":110,"endColumn":2},{"ruleId":"4097","severity":1,"message":"4126","line":124,"column":1,"nodeType":"4099","messageId":"4127","endLine":156,"endColumn":2},{"ruleId":"4097","severity":1,"message":"4126","line":157,"column":1,"nodeType":"4099","messageId":"4127","endLine":173,"endColumn":2},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"4403","severity":1,"message":"4404","line":17,"column":11,"nodeType":"4009","endLine":18,"endColumn":42},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4405","line":4,"column":19,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4232","line":17,"column":13,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4406","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4407","line":21,"column":8,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4148","line":25,"column":8,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4017","line":26,"column":8,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4140","line":32,"column":11,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3924","line":33,"column":11,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4319","line":36,"column":12,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":27},{"ruleId":"3926","severity":1,"message":"4408","line":60,"column":8,"nodeType":"3928","endLine":60,"endColumn":10,"suggestions":"4409"},{"ruleId":"3930","severity":1,"message":"3942","line":151,"column":38,"nodeType":"3932","messageId":"3933","endLine":151,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":207,"column":48,"nodeType":"3932","messageId":"3933","endLine":207,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":225,"column":14,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":225,"column":55,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":57},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4405","line":4,"column":19,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4232","line":17,"column":13,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4148","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4140","line":29,"column":9,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3924","line":30,"column":9,"nodeType":"3920","messageId":"3921","endLine":30,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4319","line":33,"column":10,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4233","line":36,"column":10,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4234","line":36,"column":20,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4235","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4236","line":37,"column":21,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4237","line":38,"column":10,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4238","line":38,"column":24,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4239","line":39,"column":10,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4240","line":39,"column":24,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4410","line":41,"column":10,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4411","line":48,"column":9,"nodeType":"3920","messageId":"3921","endLine":48,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4408","line":72,"column":6,"nodeType":"3928","endLine":72,"endColumn":8,"suggestions":"4412"},{"ruleId":"3930","severity":1,"message":"3942","line":165,"column":32,"nodeType":"3932","messageId":"3933","endLine":165,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":40,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":239,"column":26,"nodeType":"3932","messageId":"3933","endLine":239,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":239,"column":67,"nodeType":"3932","messageId":"3933","endLine":239,"endColumn":69},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4405","line":4,"column":19,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4255","line":15,"column":16,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4232","line":17,"column":13,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3945","line":18,"column":10,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4406","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4017","line":26,"column":8,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4319","line":34,"column":10,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4413","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4408","line":66,"column":6,"nodeType":"3928","endLine":66,"endColumn":8,"suggestions":"4414"},{"ruleId":"3930","severity":1,"message":"3942","line":157,"column":32,"nodeType":"3932","messageId":"3933","endLine":157,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":213,"column":40,"nodeType":"3932","messageId":"3933","endLine":213,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":232,"column":14,"nodeType":"3932","messageId":"3933","endLine":232,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":232,"column":55,"nodeType":"3932","messageId":"3933","endLine":232,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4415","line":312,"column":9,"nodeType":"3920","messageId":"3921","endLine":312,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4405","line":4,"column":19,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":28},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4232","line":17,"column":13,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4193","line":19,"column":8,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4406","line":20,"column":8,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4407","line":21,"column":8,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4017","line":26,"column":8,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4140","line":32,"column":9,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3924","line":33,"column":9,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4319","line":36,"column":10,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4408","line":60,"column":6,"nodeType":"3928","endLine":60,"endColumn":8,"suggestions":"4416"},{"ruleId":"3930","severity":1,"message":"3942","line":151,"column":32,"nodeType":"3932","messageId":"3933","endLine":151,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":207,"column":40,"nodeType":"3932","messageId":"3933","endLine":207,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":225,"column":26,"nodeType":"3932","messageId":"3933","endLine":225,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":239,"column":38,"nodeType":"3932","messageId":"3933","endLine":239,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":50,"column":40,"nodeType":"3932","messageId":"3933","endLine":50,"endColumn":42},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":36,"column":37,"nodeType":"3932","messageId":"3933","endLine":36,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":44,"column":39,"nodeType":"3932","messageId":"3933","endLine":44,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":51,"column":41,"nodeType":"3932","messageId":"3933","endLine":51,"endColumn":43},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4128","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":53},{"ruleId":"3930","severity":1,"message":"3942","line":37,"column":46,"nodeType":"3932","messageId":"3933","endLine":37,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":40,"column":46,"nodeType":"3932","messageId":"3933","endLine":40,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3941","line":22,"column":37,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":42},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3946","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":10},{"ruleId":"3926","severity":1,"message":"3970","line":28,"column":6,"nodeType":"3928","endLine":28,"endColumn":10,"suggestions":"4417"},{"ruleId":"3918","severity":1,"message":"4119","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4418","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":29},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3935","line":14,"column":5,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":11},{"ruleId":"3918","severity":1,"message":"4120","line":21,"column":8,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4123","line":40,"column":8,"nodeType":"3928","endLine":40,"endColumn":10,"suggestions":"4419"},{"ruleId":"3918","severity":1,"message":"4012","line":18,"column":45,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4106","line":6,"column":9,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3986","line":14,"column":8,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":19,"column":9,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4158","line":26,"column":6,"nodeType":"3928","endLine":26,"endColumn":8,"suggestions":"4420"},{"ruleId":"3930","severity":1,"message":"3942","line":86,"column":29,"nodeType":"3932","messageId":"3933","endLine":86,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3946","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3924","line":33,"column":9,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3992","line":44,"column":11,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":23},{"ruleId":"3926","severity":1,"message":"4421","line":59,"column":6,"nodeType":"3928","endLine":59,"endColumn":8,"suggestions":"4422"},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3986","line":18,"column":8,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":22,"column":11,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3987","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3988","line":26,"column":18,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":25},{"ruleId":"3926","severity":1,"message":"3989","line":36,"column":8,"nodeType":"3928","endLine":36,"endColumn":10,"suggestions":"4423"},{"ruleId":"3930","severity":1,"message":"3942","line":120,"column":45,"nodeType":"3932","messageId":"3933","endLine":120,"endColumn":47},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":33,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":37},{"ruleId":"3918","severity":1,"message":"3945","line":7,"column":10,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3967","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":11},{"ruleId":"3918","severity":1,"message":"3946","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4151","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4153","line":25,"column":10,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":26},{"ruleId":"3926","severity":1,"message":"4154","line":34,"column":6,"nodeType":"3928","endLine":34,"endColumn":8,"suggestions":"4424"},{"ruleId":"3930","severity":1,"message":"3942","line":51,"column":39,"nodeType":"3932","messageId":"3933","endLine":51,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":51,"column":65,"nodeType":"3932","messageId":"3933","endLine":51,"endColumn":67},{"ruleId":"3930","severity":1,"message":"3942","line":165,"column":38,"nodeType":"3932","messageId":"3933","endLine":165,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":166,"column":37,"nodeType":"3932","messageId":"3933","endLine":166,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":167,"column":34,"nodeType":"3932","messageId":"3933","endLine":167,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":168,"column":38,"nodeType":"3932","messageId":"3933","endLine":168,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":169,"column":33,"nodeType":"3932","messageId":"3933","endLine":169,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4110","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4111","line":3,"column":15,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4112","line":3,"column":21,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":28},{"ruleId":"3918","severity":1,"message":"4113","line":3,"column":30,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":38},{"ruleId":"3918","severity":1,"message":"4114","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4063","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4115","line":16,"column":12,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4116","line":16,"column":22,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4117","line":17,"column":11,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4118","line":26,"column":11,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4171","line":53,"column":23,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4172","line":54,"column":5,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":28},{"ruleId":"3926","severity":1,"message":"4156","line":153,"column":6,"nodeType":"3928","endLine":153,"endColumn":8,"suggestions":"4425"},{"ruleId":"3926","severity":1,"message":"4015","line":32,"column":6,"nodeType":"3928","endLine":32,"endColumn":8,"suggestions":"4426"},{"ruleId":"3930","severity":1,"message":"3942","line":96,"column":34,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":99,"column":34,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":102,"column":34,"nodeType":"3932","messageId":"3933","endLine":102,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3957","line":8,"column":10,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3958","line":9,"column":13,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3959","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4427","line":16,"column":10,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":20},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3961","line":50,"column":7,"nodeType":"3920","messageId":"3921","endLine":50,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3965","line":5,"column":8,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3966","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3959","line":10,"column":8,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":26,"column":54,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":59},{"ruleId":"3918","severity":1,"message":"4081","line":28,"column":10,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4177","line":28,"column":17,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3925","line":6,"column":21,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":25},{"ruleId":"3926","severity":1,"message":"3938","line":136,"column":6,"nodeType":"3928","endLine":136,"endColumn":16,"suggestions":"4428"},{"ruleId":"3918","severity":1,"message":"3946","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3924","line":27,"column":9,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":28,"column":35,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3974","line":33,"column":10,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4175","line":36,"column":10,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4176","line":36,"column":16,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4081","line":41,"column":10,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4177","line":41,"column":17,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4000","line":65,"column":6,"nodeType":"3928","endLine":65,"endColumn":8,"suggestions":"4429"},{"ruleId":"3930","severity":1,"message":"3942","line":118,"column":23,"nodeType":"3932","messageId":"3933","endLine":118,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":137,"column":19,"nodeType":"3932","messageId":"3933","endLine":137,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":139,"column":21,"nodeType":"3932","messageId":"3933","endLine":139,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":148,"column":25,"nodeType":"3932","messageId":"3933","endLine":148,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":149,"column":25,"nodeType":"3932","messageId":"3933","endLine":149,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":160,"column":31,"nodeType":"3932","messageId":"3933","endLine":160,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":160,"column":50,"nodeType":"3932","messageId":"3933","endLine":160,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":29,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":46,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3931","line":173,"column":33,"nodeType":"3932","messageId":"3933","endLine":173,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":201,"column":32,"nodeType":"3932","messageId":"3933","endLine":201,"endColumn":34},{"ruleId":"3982","severity":1,"message":"4043","line":242,"column":45,"nodeType":"3984","messageId":"3985","endLine":242,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":252,"column":45,"nodeType":"3984","messageId":"3985","endLine":252,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":370,"column":32,"nodeType":"3932","messageId":"3933","endLine":370,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":386,"column":33,"nodeType":"3932","messageId":"3933","endLine":386,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":400,"column":33,"nodeType":"3932","messageId":"3933","endLine":400,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3926","severity":1,"message":"4156","line":89,"column":6,"nodeType":"3928","endLine":89,"endColumn":8,"suggestions":"4430"},{"ruleId":"3930","severity":1,"message":"3942","line":104,"column":34,"nodeType":"3932","messageId":"3933","endLine":104,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":107,"column":34,"nodeType":"3932","messageId":"3933","endLine":107,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":110,"column":34,"nodeType":"3932","messageId":"3933","endLine":110,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3924","line":29,"column":9,"nodeType":"3920","messageId":"3921","endLine":29,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":31,"column":35,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4431","line":22,"column":10,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4167","line":25,"column":10,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":18},{"ruleId":"3926","severity":1,"message":"4156","line":119,"column":6,"nodeType":"3928","endLine":119,"endColumn":8,"suggestions":"4432"},{"ruleId":"3930","severity":1,"message":"3942","line":136,"column":34,"nodeType":"3932","messageId":"3933","endLine":136,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":139,"column":34,"nodeType":"3932","messageId":"3933","endLine":139,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":34,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":36},{"ruleId":"3926","severity":1,"message":"4156","line":104,"column":8,"nodeType":"3928","endLine":104,"endColumn":10,"suggestions":"4433"},{"ruleId":"3930","severity":1,"message":"3942","line":119,"column":46,"nodeType":"3932","messageId":"3933","endLine":119,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":122,"column":46,"nodeType":"3932","messageId":"3933","endLine":122,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":125,"column":46,"nodeType":"3932","messageId":"3933","endLine":125,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":128,"column":46,"nodeType":"3932","messageId":"3933","endLine":128,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3956","line":2,"column":17,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":2,"column":27,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3924","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":62,"column":14,"nodeType":"3932","messageId":"3933","endLine":62,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4128","line":1,"column":38,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":53},{"ruleId":"3918","severity":1,"message":"3965","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3966","line":5,"column":10,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":17},{"ruleId":"3930","severity":1,"message":"3942","line":39,"column":46,"nodeType":"3932","messageId":"3933","endLine":39,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3942","line":42,"column":46,"nodeType":"3932","messageId":"3933","endLine":42,"endColumn":48},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4231","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4434","line":10,"column":8,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4301","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4435","line":14,"column":8,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4436","line":16,"column":8,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4201","line":21,"column":12,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4343","line":21,"column":19,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4304","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4305","line":26,"column":17,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":23},{"ruleId":"3926","severity":1,"message":"4294","line":56,"column":8,"nodeType":"3928","endLine":56,"endColumn":10,"suggestions":"4437"},{"ruleId":"4003","severity":1,"message":"4004","line":228,"column":21,"nodeType":"4005","messageId":"4006","endLine":228,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4012","line":18,"column":45,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":54},{"ruleId":"3918","severity":1,"message":"4119","line":3,"column":8,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3935","line":14,"column":5,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":11},{"ruleId":"3926","severity":1,"message":"4123","line":38,"column":8,"nodeType":"3928","endLine":38,"endColumn":10,"suggestions":"4438"},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4106","line":6,"column":9,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":15},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4110","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4111","line":3,"column":15,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4112","line":3,"column":21,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":28},{"ruleId":"3918","severity":1,"message":"4113","line":3,"column":30,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":38},{"ruleId":"3918","severity":1,"message":"4114","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4063","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":7},{"ruleId":"3918","severity":1,"message":"4064","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":13},{"ruleId":"3918","severity":1,"message":"3946","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4115","line":16,"column":12,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4116","line":16,"column":22,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4117","line":17,"column":11,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4118","line":26,"column":11,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3941","line":26,"column":35,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3924","line":20,"column":9,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4140","line":21,"column":9,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4261","line":23,"column":15,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4263","line":24,"column":20,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":37},{"ruleId":"3918","severity":1,"message":"4265","line":25,"column":15,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":26},{"ruleId":"3918","severity":1,"message":"3949","line":25,"column":28,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4266","line":25,"column":42,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":90,"column":31,"nodeType":"3932","messageId":"3933","endLine":90,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":103,"column":33,"nodeType":"3932","messageId":"3933","endLine":103,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":121,"column":31,"nodeType":"3932","messageId":"3933","endLine":121,"endColumn":33},{"ruleId":"4097","severity":1,"message":"4126","line":149,"column":1,"nodeType":"4099","messageId":"4127","endLine":168,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3957","line":7,"column":10,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3948","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4272","line":16,"column":7,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":13},{"ruleId":"3926","severity":1,"message":"4273","line":47,"column":6,"nodeType":"3928","endLine":47,"endColumn":14,"suggestions":"4439"},{"ruleId":"3918","severity":1,"message":"4440","line":98,"column":15,"nodeType":"3920","messageId":"3921","endLine":98,"endColumn":23},{"ruleId":"4007","severity":1,"message":"4008","line":161,"column":27,"nodeType":"4009","messageId":"4010","endLine":164,"endColumn":28,"fix":"4441"},{"ruleId":"4007","severity":1,"message":"4008","line":174,"column":23,"nodeType":"4009","messageId":"4010","endLine":177,"endColumn":28,"fix":"4442"},{"ruleId":"3930","severity":1,"message":"3942","line":184,"column":41,"nodeType":"3932","messageId":"3933","endLine":184,"endColumn":43},{"ruleId":"4209","severity":1,"message":"4277","line":184,"column":46,"nodeType":"4278","messageId":"4211","endLine":184,"endColumn":48},{"ruleId":"4209","severity":1,"message":"4277","line":184,"column":64,"nodeType":"4278","messageId":"4211","endLine":184,"endColumn":66},{"ruleId":"4209","severity":1,"message":"4279","line":184,"column":64,"nodeType":"4278","messageId":"4211","endLine":184,"endColumn":66},{"ruleId":"3930","severity":1,"message":"3942","line":184,"column":81,"nodeType":"3932","messageId":"3933","endLine":184,"endColumn":83},{"ruleId":"4209","severity":1,"message":"4279","line":184,"column":86,"nodeType":"4278","messageId":"4211","endLine":184,"endColumn":88},{"ruleId":"3930","severity":1,"message":"3942","line":189,"column":37,"nodeType":"3932","messageId":"3933","endLine":189,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":192,"column":38,"nodeType":"3932","messageId":"3933","endLine":192,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3942","line":230,"column":40,"nodeType":"3932","messageId":"3933","endLine":230,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":240,"column":42,"nodeType":"3932","messageId":"3933","endLine":240,"endColumn":44},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":5,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3986","line":18,"column":8,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":23,"column":11,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3987","line":27,"column":12,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3988","line":27,"column":18,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":25},{"ruleId":"3926","severity":1,"message":"3989","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4443"},{"ruleId":"3930","severity":1,"message":"3942","line":104,"column":45,"nodeType":"3932","messageId":"3933","endLine":104,"endColumn":47},{"ruleId":"3918","severity":1,"message":"3946","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":10},{"ruleId":"3918","severity":1,"message":"3924","line":33,"column":9,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3992","line":44,"column":11,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":23},{"ruleId":"3926","severity":1,"message":"3993","line":59,"column":6,"nodeType":"3928","endLine":59,"endColumn":8,"suggestions":"4444"},{"ruleId":"3926","severity":1,"message":"4445","line":63,"column":6,"nodeType":"3928","endLine":63,"endColumn":12,"suggestions":"4446"},{"ruleId":"4097","severity":1,"message":"4098","line":87,"column":5,"nodeType":"4099","messageId":"4100","endLine":91,"endColumn":40},{"ruleId":"3930","severity":1,"message":"3931","line":88,"column":18,"nodeType":"3932","messageId":"3933","endLine":88,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4447","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4448","line":12,"column":5,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":20},{"ruleId":"4380","severity":1,"message":"4381","line":81,"column":9,"nodeType":"4132","messageId":"4382","endLine":81,"endColumn":19},{"ruleId":"3982","severity":1,"message":"4043","line":136,"column":47,"nodeType":"3984","messageId":"3985","endLine":136,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":162,"column":47,"nodeType":"3984","messageId":"3985","endLine":162,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":255,"column":45,"nodeType":"3984","messageId":"3985","endLine":255,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":333,"column":21,"nodeType":"3984","messageId":"3985","endLine":333,"endColumn":23},{"ruleId":"4380","severity":1,"message":"4381","line":376,"column":7,"nodeType":"4132","messageId":"4382","endLine":376,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":378,"column":7,"nodeType":"4132","messageId":"4382","endLine":378,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":387,"column":11,"nodeType":"4132","messageId":"4382","endLine":387,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":20,"column":12,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4293","line":23,"column":11,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4294","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4449"},{"ruleId":"3930","severity":1,"message":"3942","line":186,"column":44,"nodeType":"3932","messageId":"3933","endLine":186,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":240,"column":50,"nodeType":"3932","messageId":"3933","endLine":240,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":251,"column":53,"nodeType":"3932","messageId":"3933","endLine":251,"endColumn":55},{"ruleId":"4007","severity":1,"message":"4008","line":267,"column":37,"nodeType":"4009","messageId":"4010","endLine":270,"endColumn":38,"fix":"4450"},{"ruleId":"3930","severity":1,"message":"3942","line":284,"column":48,"nodeType":"3932","messageId":"3933","endLine":284,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":313,"column":48,"nodeType":"3932","messageId":"3933","endLine":313,"endColumn":50},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":18,"column":12,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4293","line":22,"column":11,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":22},{"ruleId":"3926","severity":1,"message":"4294","line":32,"column":8,"nodeType":"3928","endLine":32,"endColumn":10,"suggestions":"4451"},{"ruleId":"3930","severity":1,"message":"3942","line":181,"column":44,"nodeType":"3932","messageId":"3933","endLine":181,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":234,"column":50,"nodeType":"3932","messageId":"3933","endLine":234,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":245,"column":53,"nodeType":"3932","messageId":"3933","endLine":245,"endColumn":55},{"ruleId":"4007","severity":1,"message":"4008","line":261,"column":37,"nodeType":"4009","messageId":"4010","endLine":264,"endColumn":38,"fix":"4452"},{"ruleId":"3930","severity":1,"message":"3942","line":276,"column":48,"nodeType":"3932","messageId":"3933","endLine":276,"endColumn":50},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4294","line":38,"column":8,"nodeType":"3928","endLine":38,"endColumn":10,"suggestions":"4453"},{"ruleId":"3930","severity":1,"message":"3942","line":187,"column":44,"nodeType":"3932","messageId":"3933","endLine":187,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":193,"column":48,"nodeType":"3932","messageId":"3933","endLine":193,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":198,"column":52,"nodeType":"3932","messageId":"3933","endLine":198,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":253,"column":50,"nodeType":"3932","messageId":"3933","endLine":253,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":264,"column":53,"nodeType":"3932","messageId":"3933","endLine":264,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":277,"column":72,"nodeType":"3932","messageId":"3933","endLine":277,"endColumn":74},{"ruleId":"4007","severity":1,"message":"4008","line":280,"column":37,"nodeType":"4009","messageId":"4010","endLine":283,"endColumn":38,"fix":"4454"},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4231","line":9,"column":8,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4434","line":10,"column":8,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4301","line":11,"column":8,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4201","line":22,"column":12,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4343","line":22,"column":19,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":27},{"ruleId":"3926","severity":1,"message":"4294","line":53,"column":8,"nodeType":"3928","endLine":53,"endColumn":10,"suggestions":"4455"},{"ruleId":"3930","severity":1,"message":"3942","line":190,"column":34,"nodeType":"3932","messageId":"3933","endLine":190,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":192,"column":34,"nodeType":"3932","messageId":"3933","endLine":192,"endColumn":36},{"ruleId":"4007","severity":1,"message":"4008","line":208,"column":25,"nodeType":"4009","messageId":"4010","endLine":211,"endColumn":20,"fix":"4456"},{"ruleId":"3930","severity":1,"message":"3942","line":214,"column":44,"nodeType":"3932","messageId":"3933","endLine":214,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3931","line":241,"column":29,"nodeType":"3932","messageId":"3933","endLine":241,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3931","line":241,"column":51,"nodeType":"3932","messageId":"3933","endLine":241,"endColumn":53},{"ruleId":"3930","severity":1,"message":"3931","line":245,"column":32,"nodeType":"3932","messageId":"3933","endLine":245,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3931","line":245,"column":54,"nodeType":"3932","messageId":"3933","endLine":245,"endColumn":56},{"ruleId":"3930","severity":1,"message":"3931","line":245,"column":75,"nodeType":"3932","messageId":"3933","endLine":245,"endColumn":77},{"ruleId":"3930","severity":1,"message":"3931","line":250,"column":33,"nodeType":"3932","messageId":"3933","endLine":250,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3931","line":250,"column":55,"nodeType":"3932","messageId":"3933","endLine":250,"endColumn":57},{"ruleId":"4003","severity":1,"message":"4004","line":299,"column":21,"nodeType":"4005","messageId":"4006","endLine":299,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":5,"column":38,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":5,"column":49,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":5,"column":54,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":21,"column":12,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4294","line":42,"column":8,"nodeType":"3928","endLine":42,"endColumn":10,"suggestions":"4457"},{"ruleId":"3930","severity":1,"message":"3942","line":190,"column":44,"nodeType":"3932","messageId":"3933","endLine":190,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":198,"column":48,"nodeType":"3932","messageId":"3933","endLine":198,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":202,"column":52,"nodeType":"3932","messageId":"3933","endLine":202,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":255,"column":50,"nodeType":"3932","messageId":"3933","endLine":255,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":266,"column":53,"nodeType":"3932","messageId":"3933","endLine":266,"endColumn":55},{"ruleId":"3930","severity":1,"message":"3942","line":279,"column":72,"nodeType":"3932","messageId":"3933","endLine":279,"endColumn":74},{"ruleId":"4007","severity":1,"message":"4008","line":282,"column":37,"nodeType":"4009","messageId":"4010","endLine":285,"endColumn":38,"fix":"4458"},{"ruleId":"3930","severity":1,"message":"3942","line":299,"column":48,"nodeType":"3932","messageId":"3933","endLine":299,"endColumn":50},{"ruleId":"4097","severity":1,"message":"4126","line":389,"column":1,"nodeType":"4099","messageId":"4127","endLine":399,"endColumn":39},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":5,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":5,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":5,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":10},{"ruleId":"3926","severity":1,"message":"4246","line":37,"column":8,"nodeType":"3928","endLine":37,"endColumn":10,"suggestions":"4459"},{"ruleId":"3930","severity":1,"message":"3942","line":145,"column":44,"nodeType":"3932","messageId":"3933","endLine":145,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":151,"column":48,"nodeType":"3932","messageId":"3933","endLine":151,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":156,"column":52,"nodeType":"3932","messageId":"3933","endLine":156,"endColumn":54},{"ruleId":"3930","severity":1,"message":"3942","line":178,"column":37,"nodeType":"3932","messageId":"3933","endLine":178,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":189,"column":35,"nodeType":"3932","messageId":"3933","endLine":189,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":63,"column":32,"nodeType":"3932","messageId":"3933","endLine":63,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":83,"column":44,"nodeType":"3932","messageId":"3933","endLine":83,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":95,"column":24,"nodeType":"3932","messageId":"3933","endLine":95,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":106,"column":34,"nodeType":"3932","messageId":"3933","endLine":106,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":119,"column":31,"nodeType":"3932","messageId":"3933","endLine":119,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4140","line":19,"column":11,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4151","line":22,"column":37,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4222","line":23,"column":21,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4201","line":24,"column":12,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4200","line":26,"column":12,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4223","line":26,"column":16,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4224","line":34,"column":12,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4225","line":34,"column":18,"nodeType":"3920","messageId":"3921","endLine":34,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4196","line":40,"column":12,"nodeType":"3920","messageId":"3921","endLine":40,"endColumn":20},{"ruleId":"3926","severity":1,"message":"4154","line":56,"column":8,"nodeType":"3928","endLine":56,"endColumn":10,"suggestions":"4460"},{"ruleId":"3918","severity":1,"message":"4227","line":118,"column":11,"nodeType":"3920","messageId":"3921","endLine":118,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":260,"column":48,"nodeType":"3932","messageId":"3933","endLine":260,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":277,"column":37,"nodeType":"3932","messageId":"3933","endLine":277,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":308,"column":34,"nodeType":"3932","messageId":"3933","endLine":308,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":327,"column":34,"nodeType":"3932","messageId":"3933","endLine":327,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":30,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":65,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":67},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":104,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":106},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":142,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":144},{"ruleId":"3918","severity":1,"message":"4248","line":2,"column":19,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":32},{"ruleId":"3918","severity":1,"message":"3946","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"3947","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4249","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3974","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4177","line":41,"column":17,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4250","line":70,"column":6,"nodeType":"3928","endLine":70,"endColumn":8,"suggestions":"4461"},{"ruleId":"3930","severity":1,"message":"3942","line":91,"column":23,"nodeType":"3932","messageId":"3933","endLine":91,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":113,"column":19,"nodeType":"3932","messageId":"3933","endLine":113,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":115,"column":21,"nodeType":"3932","messageId":"3933","endLine":115,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":123,"column":25,"nodeType":"3932","messageId":"3933","endLine":123,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":124,"column":25,"nodeType":"3932","messageId":"3933","endLine":124,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":141,"column":31,"nodeType":"3932","messageId":"3933","endLine":141,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":141,"column":50,"nodeType":"3932","messageId":"3933","endLine":141,"endColumn":52},{"ruleId":"3930","severity":1,"message":"3942","line":146,"column":29,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":146,"column":46,"nodeType":"3932","messageId":"3933","endLine":146,"endColumn":48},{"ruleId":"3930","severity":1,"message":"3931","line":156,"column":33,"nodeType":"3932","messageId":"3933","endLine":156,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":32,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":34},{"ruleId":"3982","severity":1,"message":"4043","line":217,"column":45,"nodeType":"3984","messageId":"3985","endLine":217,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":227,"column":45,"nodeType":"3984","messageId":"3985","endLine":227,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":353,"column":32,"nodeType":"3932","messageId":"3933","endLine":353,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":368,"column":33,"nodeType":"3932","messageId":"3933","endLine":368,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3942","line":381,"column":33,"nodeType":"3932","messageId":"3933","endLine":381,"endColumn":35},{"ruleId":"3918","severity":1,"message":"3962","line":2,"column":8,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"3969","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":10},{"ruleId":"3918","severity":1,"message":"4418","line":22,"column":8,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4232","line":23,"column":13,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":20},{"ruleId":"3918","severity":1,"message":"4140","line":32,"column":9,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4151","line":35,"column":35,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4222","line":36,"column":19,"nodeType":"3920","messageId":"3921","endLine":36,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4201","line":37,"column":10,"nodeType":"3920","messageId":"3921","endLine":37,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4233","line":53,"column":10,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4234","line":53,"column":20,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4235","line":54,"column":10,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4236","line":54,"column":21,"nodeType":"3920","messageId":"3921","endLine":54,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4237","line":55,"column":10,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4238","line":55,"column":24,"nodeType":"3920","messageId":"3921","endLine":55,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4239","line":56,"column":10,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4240","line":56,"column":24,"nodeType":"3920","messageId":"3921","endLine":56,"endColumn":39},{"ruleId":"3926","severity":1,"message":"4154","line":78,"column":6,"nodeType":"3928","endLine":78,"endColumn":8,"suggestions":"4462"},{"ruleId":"3930","severity":1,"message":"3931","line":96,"column":23,"nodeType":"3932","messageId":"3933","endLine":96,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":227,"column":30,"nodeType":"3932","messageId":"3933","endLine":227,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":284,"column":40,"nodeType":"3932","messageId":"3933","endLine":284,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":301,"column":31,"nodeType":"3932","messageId":"3933","endLine":301,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":332,"column":28,"nodeType":"3932","messageId":"3933","endLine":332,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":351,"column":28,"nodeType":"3932","messageId":"3933","endLine":351,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":37,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":361,"column":72,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":74},{"ruleId":"3930","severity":1,"message":"3931","line":361,"column":107,"nodeType":"3932","messageId":"3933","endLine":361,"endColumn":109},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":37,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":72,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":74},{"ruleId":"3930","severity":1,"message":"3942","line":373,"column":111,"nodeType":"3932","messageId":"3933","endLine":373,"endColumn":113},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":24,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":59,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":61},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":98,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":100},{"ruleId":"3930","severity":1,"message":"3942","line":385,"column":136,"nodeType":"3932","messageId":"3933","endLine":385,"endColumn":138},{"ruleId":"3930","severity":1,"message":"3931","line":456,"column":24,"nodeType":"3932","messageId":"3933","endLine":456,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":456,"column":45,"nodeType":"3932","messageId":"3933","endLine":456,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":621,"column":22,"nodeType":"3932","messageId":"3933","endLine":621,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4151","line":11,"column":27,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":33},{"ruleId":"3918","severity":1,"message":"3941","line":11,"column":35,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4215","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3924","line":32,"column":11,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":33,"column":13,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":35,"column":11,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":39,"column":12,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":56,"column":8,"nodeType":"3928","endLine":56,"endColumn":10,"suggestions":"4463"},{"ruleId":"3930","severity":1,"message":"3942","line":294,"column":49,"nodeType":"3932","messageId":"3933","endLine":294,"endColumn":51},{"ruleId":"3930","severity":1,"message":"3942","line":307,"column":50,"nodeType":"3932","messageId":"3933","endLine":307,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4140","line":23,"column":11,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4151","line":26,"column":37,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4222","line":27,"column":21,"nodeType":"3920","messageId":"3921","endLine":27,"endColumn":29},{"ruleId":"3918","severity":1,"message":"4201","line":28,"column":12,"nodeType":"3920","messageId":"3921","endLine":28,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4242","line":31,"column":12,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4243","line":31,"column":21,"nodeType":"3920","messageId":"3921","endLine":31,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4244","line":35,"column":12,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4224","line":38,"column":12,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4225","line":38,"column":18,"nodeType":"3920","messageId":"3921","endLine":38,"endColumn":25},{"ruleId":"3926","severity":1,"message":"4154","line":65,"column":8,"nodeType":"3928","endLine":65,"endColumn":10,"suggestions":"4464"},{"ruleId":"3930","severity":1,"message":"3931","line":83,"column":29,"nodeType":"3932","messageId":"3933","endLine":83,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4227","line":129,"column":11,"nodeType":"3920","messageId":"3921","endLine":129,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":265,"column":48,"nodeType":"3932","messageId":"3933","endLine":265,"endColumn":50},{"ruleId":"3930","severity":1,"message":"3942","line":282,"column":37,"nodeType":"3932","messageId":"3933","endLine":282,"endColumn":39},{"ruleId":"3930","severity":1,"message":"3942","line":313,"column":34,"nodeType":"3932","messageId":"3933","endLine":313,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":332,"column":34,"nodeType":"3932","messageId":"3933","endLine":332,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":342,"column":43,"nodeType":"3932","messageId":"3933","endLine":342,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":342,"column":78,"nodeType":"3932","messageId":"3933","endLine":342,"endColumn":80},{"ruleId":"3930","severity":1,"message":"3931","line":342,"column":113,"nodeType":"3932","messageId":"3933","endLine":342,"endColumn":115},{"ruleId":"3930","severity":1,"message":"3942","line":354,"column":43,"nodeType":"3932","messageId":"3933","endLine":354,"endColumn":45},{"ruleId":"3930","severity":1,"message":"3942","line":354,"column":78,"nodeType":"3932","messageId":"3933","endLine":354,"endColumn":80},{"ruleId":"3930","severity":1,"message":"3942","line":354,"column":117,"nodeType":"3932","messageId":"3933","endLine":354,"endColumn":119},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4215","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":25},{"ruleId":"3918","severity":1,"message":"4017","line":24,"column":8,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":19},{"ruleId":"3918","severity":1,"message":"3924","line":32,"column":11,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":33,"column":13,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":35,"column":11,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":39,"column":12,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":57,"column":8,"nodeType":"3928","endLine":57,"endColumn":10,"suggestions":"4465"},{"ruleId":"3930","severity":1,"message":"3931","line":98,"column":24,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":98,"column":45,"nodeType":"3932","messageId":"3933","endLine":98,"endColumn":47},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4246","line":27,"column":6,"nodeType":"3928","endLine":27,"endColumn":8,"suggestions":"4466"},{"ruleId":"3930","severity":1,"message":"3942","line":135,"column":28,"nodeType":"3932","messageId":"3933","endLine":135,"endColumn":30},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4246","line":29,"column":6,"nodeType":"3928","endLine":29,"endColumn":8,"suggestions":"4467"},{"ruleId":"3930","severity":1,"message":"3942","line":137,"column":28,"nodeType":"3932","messageId":"3933","endLine":137,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":30,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":147,"column":32,"nodeType":"3932","messageId":"3933","endLine":147,"endColumn":34},{"ruleId":"3926","severity":1,"message":"4252","line":42,"column":6,"nodeType":"3928","endLine":42,"endColumn":8,"suggestions":"4468"},{"ruleId":"3918","severity":1,"message":"3946","line":6,"column":3,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4065","line":7,"column":3,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":6},{"ruleId":"3918","severity":1,"message":"4066","line":8,"column":3,"nodeType":"3920","messageId":"3921","endLine":8,"endColumn":6},{"ruleId":"3918","severity":1,"message":"3947","line":9,"column":3,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":8},{"ruleId":"3926","severity":1,"message":"4246","line":34,"column":6,"nodeType":"3928","endLine":34,"endColumn":8,"suggestions":"4469"},{"ruleId":"3930","severity":1,"message":"3942","line":142,"column":28,"nodeType":"3932","messageId":"3933","endLine":142,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":147,"column":30,"nodeType":"3932","messageId":"3933","endLine":147,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":152,"column":32,"nodeType":"3932","messageId":"3933","endLine":152,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":174,"column":31,"nodeType":"3932","messageId":"3933","endLine":174,"endColumn":33},{"ruleId":"3930","severity":1,"message":"3942","line":185,"column":29,"nodeType":"3932","messageId":"3933","endLine":185,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4347","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4348","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4234","line":41,"column":20,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4236","line":42,"column":21,"nodeType":"3920","messageId":"3921","endLine":42,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4238","line":43,"column":24,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4240","line":44,"column":24,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4349","line":53,"column":23,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":37},{"ruleId":"3926","severity":1,"message":"4400","line":59,"column":6,"nodeType":"3928","endLine":59,"endColumn":8,"suggestions":"4470"},{"ruleId":"4040","severity":1,"message":"4352","line":323,"column":17,"nodeType":"3920","messageId":"4042","endLine":323,"endColumn":20},{"ruleId":"3982","severity":1,"message":"3983","line":337,"column":26,"nodeType":"3984","messageId":"3985","endLine":337,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":21,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":23},{"ruleId":"4040","severity":1,"message":"4353","line":346,"column":13,"nodeType":"3920","messageId":"4042","endLine":346,"endColumn":21},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4140","line":17,"column":9,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3962","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3946","line":9,"column":5,"nodeType":"3920","messageId":"3921","endLine":9,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4065","line":10,"column":5,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4066","line":11,"column":5,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4017","line":23,"column":8,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4216","line":24,"column":8,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":22},{"ruleId":"3918","severity":1,"message":"3924","line":32,"column":11,"nodeType":"3920","messageId":"3921","endLine":32,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4200","line":33,"column":13,"nodeType":"3920","messageId":"3921","endLine":33,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4217","line":35,"column":11,"nodeType":"3920","messageId":"3921","endLine":35,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4201","line":39,"column":12,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":17},{"ruleId":"3926","severity":1,"message":"4202","line":62,"column":8,"nodeType":"3928","endLine":62,"endColumn":10,"suggestions":"4471"},{"ruleId":"3930","severity":1,"message":"3931","line":99,"column":24,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":26},{"ruleId":"3930","severity":1,"message":"3931","line":99,"column":45,"nodeType":"3932","messageId":"3933","endLine":99,"endColumn":47},{"ruleId":"3930","severity":1,"message":"3942","line":217,"column":38,"nodeType":"3932","messageId":"3933","endLine":217,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3925","line":4,"column":10,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4347","line":10,"column":3,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4348","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4234","line":41,"column":20,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":31},{"ruleId":"3918","severity":1,"message":"4236","line":42,"column":21,"nodeType":"3920","messageId":"3921","endLine":42,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4238","line":43,"column":24,"nodeType":"3920","messageId":"3921","endLine":43,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4240","line":44,"column":24,"nodeType":"3920","messageId":"3921","endLine":44,"endColumn":39},{"ruleId":"3918","severity":1,"message":"4349","line":53,"column":23,"nodeType":"3920","messageId":"3921","endLine":53,"endColumn":37},{"ruleId":"3926","severity":1,"message":"4400","line":59,"column":6,"nodeType":"3928","endLine":59,"endColumn":8,"suggestions":"4472"},{"ruleId":"4040","severity":1,"message":"4352","line":323,"column":17,"nodeType":"3920","messageId":"4042","endLine":323,"endColumn":20},{"ruleId":"3982","severity":1,"message":"3983","line":337,"column":26,"nodeType":"3984","messageId":"3985","endLine":337,"endColumn":28},{"ruleId":"3930","severity":1,"message":"3942","line":338,"column":21,"nodeType":"3932","messageId":"3933","endLine":338,"endColumn":23},{"ruleId":"4040","severity":1,"message":"4353","line":346,"column":13,"nodeType":"3920","messageId":"4042","endLine":346,"endColumn":21},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3926","severity":1,"message":"4268","line":21,"column":6,"nodeType":"3928","endLine":21,"endColumn":14,"suggestions":"4473"},{"ruleId":"3930","severity":1,"message":"3942","line":51,"column":41,"nodeType":"3932","messageId":"3933","endLine":51,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3942","line":57,"column":32,"nodeType":"3932","messageId":"3933","endLine":57,"endColumn":34},{"ruleId":"3918","severity":1,"message":"4151","line":10,"column":35,"nodeType":"3920","messageId":"3921","endLine":10,"endColumn":41},{"ruleId":"3918","severity":1,"message":"4280","line":26,"column":5,"nodeType":"3920","messageId":"3921","endLine":26,"endColumn":15},{"ruleId":"3930","severity":1,"message":"3931","line":45,"column":23,"nodeType":"3932","messageId":"3933","endLine":45,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":93,"column":18,"nodeType":"3932","messageId":"3933","endLine":93,"endColumn":20},{"ruleId":"3930","severity":1,"message":"3942","line":111,"column":30,"nodeType":"3932","messageId":"3933","endLine":111,"endColumn":32},{"ruleId":"3930","severity":1,"message":"3942","line":130,"column":25,"nodeType":"3932","messageId":"3933","endLine":130,"endColumn":27},{"ruleId":"3930","severity":1,"message":"3942","line":148,"column":23,"nodeType":"3932","messageId":"3933","endLine":148,"endColumn":25},{"ruleId":"3930","severity":1,"message":"3942","line":164,"column":28,"nodeType":"3932","messageId":"3933","endLine":164,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":183,"column":21,"nodeType":"3932","messageId":"3933","endLine":183,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":202,"column":28,"nodeType":"3932","messageId":"3933","endLine":202,"endColumn":30},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":17,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":19},{"ruleId":"3930","severity":1,"message":"3942","line":239,"column":20,"nodeType":"3932","messageId":"3933","endLine":239,"endColumn":22},{"ruleId":"3930","severity":1,"message":"3942","line":255,"column":16,"nodeType":"3932","messageId":"3933","endLine":255,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":271,"column":14,"nodeType":"3932","messageId":"3933","endLine":271,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":389,"column":29,"nodeType":"3932","messageId":"3933","endLine":389,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3942","line":403,"column":36,"nodeType":"3932","messageId":"3933","endLine":403,"endColumn":38},{"ruleId":"3930","severity":1,"message":"3942","line":419,"column":34,"nodeType":"3932","messageId":"3933","endLine":419,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":432,"column":32,"nodeType":"3932","messageId":"3933","endLine":432,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3942","line":446,"column":39,"nodeType":"3932","messageId":"3933","endLine":446,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":459,"column":31,"nodeType":"3932","messageId":"3933","endLine":459,"endColumn":33},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"4190","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4272","line":14,"column":7,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":13},{"ruleId":"3926","severity":1,"message":"4273","line":88,"column":6,"nodeType":"3928","endLine":88,"endColumn":14,"suggestions":"4474"},{"ruleId":"4007","severity":1,"message":"4008","line":148,"column":27,"nodeType":"4009","messageId":"4010","endLine":151,"endColumn":28,"fix":"4475"},{"ruleId":"4007","severity":1,"message":"4008","line":161,"column":23,"nodeType":"4009","messageId":"4010","endLine":164,"endColumn":28,"fix":"4476"},{"ruleId":"3930","severity":1,"message":"3942","line":171,"column":41,"nodeType":"3932","messageId":"3933","endLine":171,"endColumn":43},{"ruleId":"4209","severity":1,"message":"4277","line":171,"column":46,"nodeType":"4278","messageId":"4211","endLine":171,"endColumn":48},{"ruleId":"4209","severity":1,"message":"4277","line":171,"column":64,"nodeType":"4278","messageId":"4211","endLine":171,"endColumn":66},{"ruleId":"4209","severity":1,"message":"4279","line":171,"column":64,"nodeType":"4278","messageId":"4211","endLine":171,"endColumn":66},{"ruleId":"3930","severity":1,"message":"3942","line":171,"column":81,"nodeType":"3932","messageId":"3933","endLine":171,"endColumn":83},{"ruleId":"4209","severity":1,"message":"4279","line":171,"column":86,"nodeType":"4278","messageId":"4211","endLine":171,"endColumn":88},{"ruleId":"3930","severity":1,"message":"3942","line":176,"column":39,"nodeType":"3932","messageId":"3933","endLine":176,"endColumn":41},{"ruleId":"3930","severity":1,"message":"3942","line":179,"column":40,"nodeType":"3932","messageId":"3933","endLine":179,"endColumn":42},{"ruleId":"3930","severity":1,"message":"3942","line":182,"column":42,"nodeType":"3932","messageId":"3933","endLine":182,"endColumn":44},{"ruleId":"3930","severity":1,"message":"3942","line":193,"column":44,"nodeType":"3932","messageId":"3933","endLine":193,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3942","line":221,"column":46,"nodeType":"3932","messageId":"3933","endLine":221,"endColumn":48},{"ruleId":"3918","severity":1,"message":"4292","line":1,"column":10,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3953","line":3,"column":10,"nodeType":"3920","messageId":"3921","endLine":3,"endColumn":17},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3924","line":14,"column":9,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":15,"column":35,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3945","line":6,"column":10,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"3941","line":25,"column":35,"nodeType":"3920","messageId":"3921","endLine":25,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3941","line":23,"column":35,"nodeType":"3920","messageId":"3921","endLine":23,"endColumn":40},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3924","line":12,"column":9,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3941","line":13,"column":35,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4021","line":4,"column":41,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3926","severity":1,"message":"4329","line":12,"column":6,"nodeType":"3928","endLine":12,"endColumn":11,"suggestions":"4477"},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4140","line":17,"column":9,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":16},{"ruleId":"3918","severity":1,"message":"3946","line":4,"column":38,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":4,"column":49,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":4,"column":54,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":17,"column":12,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4343","line":17,"column":19,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4344","line":20,"column":12,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":26},{"ruleId":"3918","severity":1,"message":"4345","line":20,"column":28,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":45},{"ruleId":"3926","severity":1,"message":"4294","line":43,"column":8,"nodeType":"3928","endLine":43,"endColumn":10,"suggestions":"4478"},{"ruleId":"3930","severity":1,"message":"3942","line":177,"column":34,"nodeType":"3932","messageId":"3933","endLine":177,"endColumn":36},{"ruleId":"3930","severity":1,"message":"3942","line":179,"column":34,"nodeType":"3932","messageId":"3933","endLine":179,"endColumn":36},{"ruleId":"4007","severity":1,"message":"4008","line":196,"column":25,"nodeType":"4009","messageId":"4010","endLine":199,"endColumn":20,"fix":"4479"},{"ruleId":"3930","severity":1,"message":"3942","line":202,"column":44,"nodeType":"3932","messageId":"3933","endLine":202,"endColumn":46},{"ruleId":"3930","severity":1,"message":"3931","line":229,"column":29,"nodeType":"3932","messageId":"3933","endLine":229,"endColumn":31},{"ruleId":"3930","severity":1,"message":"3931","line":229,"column":51,"nodeType":"3932","messageId":"3933","endLine":229,"endColumn":53},{"ruleId":"3930","severity":1,"message":"3931","line":233,"column":32,"nodeType":"3932","messageId":"3933","endLine":233,"endColumn":34},{"ruleId":"3930","severity":1,"message":"3931","line":233,"column":54,"nodeType":"3932","messageId":"3933","endLine":233,"endColumn":56},{"ruleId":"3930","severity":1,"message":"3931","line":233,"column":75,"nodeType":"3932","messageId":"3933","endLine":233,"endColumn":77},{"ruleId":"3930","severity":1,"message":"3931","line":238,"column":33,"nodeType":"3932","messageId":"3933","endLine":238,"endColumn":35},{"ruleId":"3930","severity":1,"message":"3931","line":238,"column":55,"nodeType":"3932","messageId":"3933","endLine":238,"endColumn":57},{"ruleId":"4003","severity":1,"message":"4004","line":281,"column":21,"nodeType":"4005","messageId":"4006","endLine":281,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3946","line":4,"column":38,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":47},{"ruleId":"3918","severity":1,"message":"4065","line":4,"column":49,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":52},{"ruleId":"3918","severity":1,"message":"4066","line":4,"column":54,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":57},{"ruleId":"3918","severity":1,"message":"4201","line":14,"column":12,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":17},{"ruleId":"3918","severity":1,"message":"4343","line":14,"column":19,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":27},{"ruleId":"3918","severity":1,"message":"4304","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":15},{"ruleId":"3918","severity":1,"message":"4305","line":19,"column":17,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":23},{"ruleId":"3918","severity":1,"message":"4197","line":41,"column":11,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":31},{"ruleId":"3926","severity":1,"message":"4294","line":49,"column":8,"nodeType":"3928","endLine":49,"endColumn":10,"suggestions":"4480"},{"ruleId":"4003","severity":1,"message":"4004","line":214,"column":21,"nodeType":"4005","messageId":"4006","endLine":214,"endColumn":31},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"4021","line":2,"column":41,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":52},{"ruleId":"3918","severity":1,"message":"3941","line":24,"column":35,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":40},{"ruleId":"3918","severity":1,"message":"4376","line":4,"column":8,"nodeType":"3920","messageId":"3921","endLine":4,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4377","line":5,"column":8,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4018","line":11,"column":3,"nodeType":"3920","messageId":"3921","endLine":11,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4378","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4019","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4020","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4021","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3935","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4379","line":20,"column":17,"nodeType":"3920","messageId":"3921","endLine":20,"endColumn":20},{"ruleId":"4380","severity":1,"message":"4381","line":115,"column":9,"nodeType":"4132","messageId":"4382","endLine":115,"endColumn":19},{"ruleId":"3982","severity":1,"message":"4043","line":182,"column":47,"nodeType":"3984","messageId":"3985","endLine":182,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":208,"column":47,"nodeType":"3984","messageId":"3985","endLine":208,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":299,"column":45,"nodeType":"3984","messageId":"3985","endLine":299,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":377,"column":21,"nodeType":"3984","messageId":"3985","endLine":377,"endColumn":23},{"ruleId":"4380","severity":1,"message":"4381","line":424,"column":7,"nodeType":"4132","messageId":"4382","endLine":424,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":426,"column":7,"nodeType":"4132","messageId":"4382","endLine":426,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":435,"column":11,"nodeType":"4132","messageId":"4382","endLine":435,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":620,"column":33,"nodeType":"3932","messageId":"3933","endLine":620,"endColumn":35},{"ruleId":"4383","severity":1,"message":"4384","line":622,"column":8,"nodeType":"3920","messageId":"4385","endLine":622,"endColumn":18},{"ruleId":"3930","severity":1,"message":"3942","line":771,"column":29,"nodeType":"3932","messageId":"3933","endLine":771,"endColumn":31},{"ruleId":"4386","severity":1,"message":"4387","line":773,"column":6,"nodeType":"4009","endLine":773,"endColumn":55},{"ruleId":"3918","severity":1,"message":"4331","line":19,"column":12,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":59,"column":24,"nodeType":"3932","messageId":"3933","endLine":59,"endColumn":26},{"ruleId":"3926","severity":1,"message":"4333","line":80,"column":6,"nodeType":"3928","endLine":80,"endColumn":24,"suggestions":"4481"},{"ruleId":"3918","severity":1,"message":"4012","line":81,"column":45,"nodeType":"3920","messageId":"3921","endLine":81,"endColumn":54},{"ruleId":"3918","severity":1,"message":"3941","line":81,"column":56,"nodeType":"3920","messageId":"3921","endLine":81,"endColumn":61},{"ruleId":"3982","severity":1,"message":"4043","line":89,"column":35,"nodeType":"3984","messageId":"3985","endLine":89,"endColumn":37},{"ruleId":"3930","severity":1,"message":"3942","line":167,"column":27,"nodeType":"3932","messageId":"3933","endLine":167,"endColumn":29},{"ruleId":"3982","severity":1,"message":"4043","line":267,"column":21,"nodeType":"3984","messageId":"3985","endLine":267,"endColumn":23},{"ruleId":"3930","severity":1,"message":"3942","line":269,"column":14,"nodeType":"3932","messageId":"3933","endLine":269,"endColumn":16},{"ruleId":"3918","severity":1,"message":"4376","line":5,"column":8,"nodeType":"3920","messageId":"3921","endLine":5,"endColumn":19},{"ruleId":"3918","severity":1,"message":"4377","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":18},{"ruleId":"3918","severity":1,"message":"4018","line":12,"column":3,"nodeType":"3920","messageId":"3921","endLine":12,"endColumn":8},{"ruleId":"3918","severity":1,"message":"4378","line":13,"column":3,"nodeType":"3920","messageId":"3921","endLine":13,"endColumn":13},{"ruleId":"3918","severity":1,"message":"4019","line":14,"column":3,"nodeType":"3920","messageId":"3921","endLine":14,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4020","line":15,"column":3,"nodeType":"3920","messageId":"3921","endLine":15,"endColumn":12},{"ruleId":"3918","severity":1,"message":"4021","line":16,"column":3,"nodeType":"3920","messageId":"3921","endLine":16,"endColumn":14},{"ruleId":"3918","severity":1,"message":"3935","line":17,"column":3,"nodeType":"3920","messageId":"3921","endLine":17,"endColumn":9},{"ruleId":"3918","severity":1,"message":"4379","line":21,"column":17,"nodeType":"3920","messageId":"3921","endLine":21,"endColumn":20},{"ruleId":"4380","severity":1,"message":"4381","line":116,"column":9,"nodeType":"4132","messageId":"4382","endLine":116,"endColumn":19},{"ruleId":"3982","severity":1,"message":"4043","line":190,"column":47,"nodeType":"3984","messageId":"3985","endLine":190,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":216,"column":47,"nodeType":"3984","messageId":"3985","endLine":216,"endColumn":49},{"ruleId":"3982","severity":1,"message":"4043","line":317,"column":45,"nodeType":"3984","messageId":"3985","endLine":317,"endColumn":47},{"ruleId":"3982","severity":1,"message":"4043","line":395,"column":21,"nodeType":"3984","messageId":"3985","endLine":395,"endColumn":23},{"ruleId":"4380","severity":1,"message":"4381","line":445,"column":7,"nodeType":"4132","messageId":"4382","endLine":445,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":447,"column":7,"nodeType":"4132","messageId":"4382","endLine":447,"endColumn":17},{"ruleId":"4380","severity":1,"message":"4381","line":457,"column":11,"nodeType":"4132","messageId":"4382","endLine":457,"endColumn":21},{"ruleId":"3930","severity":1,"message":"3942","line":646,"column":31,"nodeType":"3932","messageId":"3933","endLine":646,"endColumn":33},{"ruleId":"4383","severity":1,"message":"4384","line":648,"column":6,"nodeType":"3920","messageId":"4385","endLine":648,"endColumn":16},{"ruleId":"3930","severity":1,"message":"3942","line":795,"column":29,"nodeType":"3932","messageId":"3933","endLine":795,"endColumn":31},{"ruleId":"4386","severity":1,"message":"4387","line":797,"column":6,"nodeType":"4009","endLine":797,"endColumn":55},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"3986","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4151","line":18,"column":37,"nodeType":"3920","messageId":"3921","endLine":18,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4388","line":22,"column":38,"nodeType":"3920","messageId":"3921","endLine":22,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3931","line":35,"column":22,"nodeType":"3932","messageId":"3933","endLine":35,"endColumn":24},{"ruleId":"3918","severity":1,"message":"4389","line":41,"column":17,"nodeType":"3920","messageId":"3921","endLine":41,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3956","line":1,"column":17,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":25},{"ruleId":"3918","severity":1,"message":"3940","line":1,"column":27,"nodeType":"3920","messageId":"3921","endLine":1,"endColumn":36},{"ruleId":"3918","severity":1,"message":"3935","line":2,"column":54,"nodeType":"3920","messageId":"3921","endLine":2,"endColumn":60},{"ruleId":"3918","severity":1,"message":"3986","line":6,"column":8,"nodeType":"3920","messageId":"3921","endLine":6,"endColumn":22},{"ruleId":"3918","severity":1,"message":"4148","line":7,"column":8,"nodeType":"3920","messageId":"3921","endLine":7,"endColumn":14},{"ruleId":"3918","severity":1,"message":"4151","line":19,"column":37,"nodeType":"3920","messageId":"3921","endLine":19,"endColumn":43},{"ruleId":"3918","severity":1,"message":"4388","line":24,"column":38,"nodeType":"3920","messageId":"3921","endLine":24,"endColumn":43},{"ruleId":"3930","severity":1,"message":"3931","line":33,"column":30,"nodeType":"3932","messageId":"3933","endLine":33,"endColumn":32},{"ruleId":"3918","severity":1,"message":"4389","line":39,"column":25,"nodeType":"3920","messageId":"3921","endLine":39,"endColumn":33},"no-native-reassign",["4482"],"no-negated-in-lhs",["4483"],"no-unused-vars","'LoginFun' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'LoginForm' is defined but never used.","'alert' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["4484"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.",["4485"],"React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["4486"],"'useEffect' is defined but never used.","'reset' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["4487"],"'useAlert' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'classNames' is defined but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalDetails'. Either include it or remove the dependency array.",["4488"],"'Controller' is defined but never used.","'Spinner' is defined but never used.","'custError' is assigned a value but never used.","'b' is assigned a value but never used.","'useState' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.",["4489"],"'s' is assigned a value but never used.","'Layout' is defined but never used.","'userId' is assigned a value but never used.",["4490"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","'CardBody' is defined but never used.","'thankyour' is assigned a value but never used.","'Tooltip' is defined but never used.","React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["4491"],"'GetOTP' is defined but never used.","'phone2' is assigned a value but never used.","'store' is assigned a value but never used.","'setStore' is assigned a value but never used.","'setpassError' is assigned a value but never used.","'changeNum' is assigned a value but never used.","'setChangeNum' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.",["4492"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CommonServices' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["4493"],"'Loader' is defined but never used.","'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.obj'. Either include it or remove the dependency array.",["4494"],["4495"],"React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["4496"],"'val3' is assigned a value but never used.","'setVal3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["4497"],"'timer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"4498","text":"4499"},"'getValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["4500"],"React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["4501"],"'PaymentIcon' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'baseUrl2' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'paydetails2'. Either include it or remove the dependency array.",["4502"],{"range":"4503","text":"4499"},"'nn' is assigned a value but never used.","'mcatname' is assigned a value but never used.","'custCate2' is assigned a value but never used.","'postValue' is assigned a value but never used.","'emailPost' is assigned a value but never used.","'setEmailPost' is assigned a value but never used.","'valiEmailPost' is assigned a value but never used.","'setValiemailPost' is assigned a value but never used.","'invalidPost' is assigned a value but never used.","'setInvalidPost' is assigned a value but never used.","'wEmailPost' is assigned a value but never used.","'setWemailPost' is assigned a value but never used.","'display' is assigned a value but never used.","no-redeclare","'categeryName' is already defined.","redeclared","Array.prototype.map() expects a return value from arrow function.","'allData1' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'emailValidation' is assigned a value but never used.","'email' is assigned a value but never used.","'post1' is assigned a value but never used.","'setPost1' is assigned a value but never used.","'post_name' is defined but never used.","'teamleader1' is assigned a value but never used.","'kk' is assigned a value but never used.","'parentCategoryName' is assigned a value but never used.","'a' is assigned a value but never used.","'Redirect' is defined but never used.","'expectedDate' is assigned a value but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["4504"],["4505"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["4506"],"'TaxProffesionalService' is defined but never used.","'myPurpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","'del' is assigned a value but never used.","'Option' is assigned a value but never used.","'store2' is assigned a value but never used.","'setStore2' is assigned a value but never used.","'mcategory' is assigned a value but never used.","'mdata' is assigned a value but never used.","'setmdata' is assigned a value but never used.","'mdataName' is assigned a value but never used.","'setMdataname' is assigned a value but never used.","'numAvail' is assigned a value but never used.","'error' is assigned a value but never used.","'error2' is assigned a value but never used.","'teamleader' is assigned a value but never used.","'setTeamLeader' is assigned a value but never used.","'tl' is assigned a value but never used.","'setTl' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'post_na' is assigned a value but never used.","'setPost_na' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'a' is defined but never used.","'dirvalue' is assigned a value but never used.","'indirvalue' is assigned a value but never used.","'allsubcatvalue' is assigned a value but never used.","'vv' is already defined.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'subCat' is assigned a value but never used.","'setsubCat' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["4507"],"'dd' is assigned a value but never used.","'userid' is assigned a value but never used.","'createContext' is defined but never used.",["4508"],["4509"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Recording' is defined but never used.","'tabIndex' is assigned a value but never used.","'setTabIndex' is assigned a value but never used.","'myStyle1' is assigned a value but never used.","'myStyle2' is assigned a value but never used.","'ModalVideo' is defined but never used.","'ReactHlsPlayer' is defined but never used.","'VideoLibraryRounded' is defined but never used.","'padEnd' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecording'. Either include it or remove the dependency array.",["4510"],["4511"],"Block is redundant.","redundantBlock","'useLayoutEffect' is defined but never used.","'digit2' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"4512","text":"4513"},"'deleteCliente' is assigned a value but never used.","'subCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'custCate' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getTeamLeader'. Either include them or remove the dependency array.",["4514"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["4515"],["4516"],["4517"],"'Reset' is defined but never used.","'Alerts' is defined but never used.","'register' is assigned a value but never used.",["4518"],"'errors' is assigned a value but never used.","'result' is defined but never used.","'clientDiscussion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["4519"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["4520"],"React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["4521"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["4522"],["4523"],"'declined2' is assigned a value but never used.","'declinedStatus' is assigned a value but never used.",["4524"],"'declined' is assigned a value but never used.",["4525"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["4526"],"'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.",["4527"],"'todaysDate' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'setError' is assigned a value but never used.",["4528"],"'setValue' is assigned a value but never used.",["4529"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["4530"],{"range":"4531","text":"4499"},["4532"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["4533"],{"range":"4534","text":"4499"},["4535"],["4536"],"'useForm' is defined but never used.","'useMemo' is defined but never used.","'DiscardReport' is defined but never used.","'FeedbackIcon' is defined but never used.","'PublishIcon' is defined but never used.","'queriesCount' is assigned a value but never used.","'assignNo' is assigned a value but never used.","'ViewDiscussionToggel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["4537"],"'id' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["4538"],["4539"],["4540"],"'defaultSorted' is assigned a value but never used.","'date' is defined but never used.",["4541"],"no-mixed-operators","Unexpected mix of '>' and '==='. Use parentheses to clarify the intended order of operations.","unexpectedMixedOperator",["4542"],["4543"],"'arr' is assigned a value but never used.","'ChangeHistoryIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'cust_id' is assigned a value but never used.",["4544"],["4545"],"'Footer' is defined but never used.",["4546"],"'OptGroup' is assigned a value but never used.","'setId' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["4547"],"'assingmentStatus' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'TeamFilter' is defined but never used.","'Cookies' is defined but never used.","'baseMode' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'transcode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'attendeeMode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'videoProfile' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.",["4548"],"'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.","'status' is assigned a value but never used.",["4549"],"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["4550"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["4551"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["4552"],["4553"],"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","'useParams' is defined but never used.",["4554"],"'amount' is assigned a value but never used.","'payment_terms' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'installment_amount' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","'installAmount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["4555"],["4556"],"'records' is assigned a value but never used.","'Schema' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["4557"],{"range":"4558","text":"4499"},{"range":"4559","text":"4499"},"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'assignment' is assigned a value but never used.","'name' is assigned a value but never used.","'Badge' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'StarBorder' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeedback2'. Either include it or remove the dependency array.",["4560"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'values' is defined but never used.","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["4561"],{"range":"4562","text":"4499"},["4563"],{"range":"4564","text":"4499"},["4565"],{"range":"4566","text":"4499"},"'AccountBalanceIcon' is defined but never used.","'id2' is assigned a value but never used.","'setId2' is assigned a value but never used.","'tds' is assigned a value but never used.","'setTds' is assigned a value but never used.",["4567"],{"range":"4568","text":"4499"},"'Select' is defined but never used.","'paymentcount' is assigned a value but never used.",{"range":"4569","text":"4499"},"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'difference' is assigned a value but never used.",{"range":"4570","text":"4499"},{"range":"4571","text":"4499"},{"range":"4572","text":"4499"},"'AdminFilter' is defined but never used.","'assignmentCount' is assigned a value but never used.","'viewData' is assigned a value but never used.","'ViewHandler' is assigned a value but never used.","'tlname' is assigned a value but never used.",{"range":"4573","text":"4499"},{"range":"4574","text":"4499"},["4575"],"'ChangeFormateDate' is defined but never used.","'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["4576"],"'services2' is assigned a value but never used.","'disabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4577"],["4578"],"'viewStyle' is assigned a value but never used.",["4579"],{"range":"4580","text":"4499"},{"range":"4581","text":"4499"},"'feedbackNumber' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["4582"],"'setCount' is assigned a value but never used.","'ViewDiscussion' is assigned a value but never used.","'setViewDiscussion' is assigned a value but never used.",{"range":"4583","text":"4499"},"'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["4584"],"'msg' is already defined.","'variable' is already defined.","'tax2' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'status1' is assigned a value but never used.","'item' is assigned a value but never used.","'useContext' is defined but never used.","'DataValue' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["4585"],{"range":"4586","text":"4499"},{"range":"4587","text":"4499"},"'NavLink' is defined but never used.",{"range":"4588","text":"4499"},{"range":"4589","text":"4499"},"'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","'setRejected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["4590"],{"range":"4591","text":"4499"},["4592"],"React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', 'props.id', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4593"],"'MicNoneIcon' is defined but never used.","'MicOffIcon' is defined but never used.","'ModalTitle' is defined but never used.","'red' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","no-use-before-define","'resourceId' was used before it was defined.","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'start' is assigned a value but never used.","'fileList' is assigned a value but never used.","'formData2' is assigned a value but never used.",["4594"],{"range":"4595","text":"4499"},["4596"],{"range":"4597","text":"4499"},"'rejected' is assigned a value but never used.","'Header' is defined but never used.","'IntegratedEditing' is defined but never used.","'loading' is assigned a value but never used.","'owner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["4598"],"'messages' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ReportUrl' is defined but never used.","'PaymentModal' is defined but never used.","'RejectedModal' is defined but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["4599"],"'rejectedItem' is assigned a value but never used.","'rejectHandler' is assigned a value but never used.",["4600"],"'dataItem' is assigned a value but never used.",["4601"],"'acceptHandler' is assigned a value but never used.",["4602"],["4603"],"'TaxProfessionalFilter' is defined but never used.",["4604"],["4605"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["4606"],["4607"],["4608"],["4609"],["4610"],"'localeData' is defined but never used.",["4611"],["4612"],["4613"],"'complete' is assigned a value but never used.",["4614"],["4615"],"'ChatHistory' is defined but never used.","'OutlinedInputIcons' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.",["4616"],["4617"],["4618"],"'variable' is assigned a value but never used.",{"range":"4619","text":"4499"},{"range":"4620","text":"4499"},["4621"],["4622"],"React Hook useEffect has a missing dependency: 'checkAssigned'. Either include it or remove the dependency array.",["4623"],"'customer_id' is assigned a value but never used.","'customer_secret' is assigned a value but never used.",["4624"],{"range":"4625","text":"4499"},["4626"],{"range":"4627","text":"4499"},["4628"],{"range":"4629","text":"4499"},["4630"],{"range":"4631","text":"4499"},["4632"],{"range":"4633","text":"4499"},["4634"],["4635"],["4636"],["4637"],["4638"],["4639"],["4640"],["4641"],["4642"],["4643"],["4644"],["4645"],["4646"],["4647"],["4648"],["4649"],{"range":"4650","text":"4499"},{"range":"4651","text":"4499"},["4652"],["4653"],{"range":"4654","text":"4499"},["4655"],["4656"],"no-global-assign","no-unsafe-negation",{"desc":"4657","fix":"4658"},{"desc":"4659","fix":"4660"},{"desc":"4661","fix":"4662"},{"desc":"4663","fix":"4664"},{"desc":"4665","fix":"4666"},{"desc":"4659","fix":"4667"},{"desc":"4659","fix":"4668"},{"desc":"4669","fix":"4670"},{"desc":"4659","fix":"4671"},{"desc":"4672","fix":"4673"},{"desc":"4674","fix":"4675"},{"desc":"4672","fix":"4676"},{"desc":"4677","fix":"4678"},{"desc":"4679","fix":"4680"},[19017,19017]," rel=\"noreferrer\"",{"desc":"4681","fix":"4682"},{"desc":"4683","fix":"4684"},{"desc":"4685","fix":"4686"},[5776,5776],{"desc":"4687","fix":"4688"},{"desc":"4689","fix":"4690"},{"desc":"4661","fix":"4691"},{"desc":"4692","fix":"4693"},{"desc":"4661","fix":"4694"},{"desc":"4674","fix":"4695"},{"desc":"4696","fix":"4697"},{"desc":"4672","fix":"4698"},[4131,4140],"\r\n      .",{"desc":"4699","fix":"4700"},{"desc":"4701","fix":"4702"},{"desc":"4669","fix":"4703"},{"desc":"4704","fix":"4705"},{"desc":"4706","fix":"4707"},{"desc":"4708","fix":"4709"},{"desc":"4710","fix":"4711"},{"desc":"4712","fix":"4713"},{"desc":"4714","fix":"4715"},{"desc":"4689","fix":"4716"},{"desc":"4661","fix":"4717"},{"desc":"4710","fix":"4718"},{"desc":"4719","fix":"4720"},{"desc":"4710","fix":"4721"},{"desc":"4679","fix":"4722"},{"desc":"4708","fix":"4723"},{"desc":"4724","fix":"4725"},[13147,13147],{"desc":"4669","fix":"4726"},{"desc":"4727","fix":"4728"},[2434,2434],{"desc":"4683","fix":"4729"},{"desc":"4710","fix":"4730"},{"desc":"4731","fix":"4732"},{"desc":"4733","fix":"4734"},{"desc":"4733","fix":"4735"},{"desc":"4733","fix":"4736"},{"desc":"4731","fix":"4737"},{"desc":"4731","fix":"4738"},{"desc":"4731","fix":"4739"},{"desc":"4733","fix":"4740"},{"desc":"4733","fix":"4741"},{"desc":"4733","fix":"4742"},{"desc":"4708","fix":"4743"},{"desc":"4708","fix":"4744"},{"desc":"4708","fix":"4745"},{"desc":"4746","fix":"4747"},{"desc":"4748","fix":"4749"},{"desc":"4750","fix":"4751"},{"desc":"4746","fix":"4752"},{"desc":"4746","fix":"4753"},{"desc":"4754","fix":"4755"},{"desc":"4754","fix":"4756"},{"desc":"4757","fix":"4758"},[4238,4238],[4766,4766],{"desc":"4759","fix":"4760"},{"desc":"4761","fix":"4762"},[9282,9282],{"desc":"4761","fix":"4763"},[11799,11799],{"desc":"4761","fix":"4764"},[9253,9253],{"desc":"4761","fix":"4765"},[10398,10398],[2201,2201],[3971,3971],[1257,1257],[2478,2478],[7838,7838],[8121,8121],{"desc":"4696","fix":"4766"},{"desc":"4767","fix":"4768"},{"desc":"4769","fix":"4770"},{"desc":"4754","fix":"4771"},{"desc":"4757","fix":"4772"},[3010,3010],[3537,3537],{"desc":"4773","fix":"4774"},[6177,6177],{"desc":"4775","fix":"4776"},{"desc":"4777","fix":"4778"},[6237,6237],[6423,6423],[6813,6813],[6299,6299],{"desc":"4779","fix":"4780"},[9109,9109],{"desc":"4779","fix":"4781"},{"desc":"4782","fix":"4783"},{"desc":"4779","fix":"4784"},[10814,10814],{"desc":"4779","fix":"4785"},[10690,10690],{"desc":"4786","fix":"4787"},{"desc":"4788","fix":"4789"},{"desc":"4788","fix":"4790"},{"desc":"4788","fix":"4791"},{"desc":"4788","fix":"4792"},{"desc":"4669","fix":"4793"},{"desc":"4696","fix":"4794"},{"desc":"4712","fix":"4795"},{"desc":"4796","fix":"4797"},{"desc":"4672","fix":"4798"},{"desc":"4708","fix":"4799"},{"desc":"4710","fix":"4800"},{"desc":"4683","fix":"4801"},{"desc":"4661","fix":"4802"},{"desc":"4679","fix":"4803"},{"desc":"4710","fix":"4804"},{"desc":"4710","fix":"4805"},{"desc":"4710","fix":"4806"},{"desc":"4761","fix":"4807"},{"desc":"4696","fix":"4808"},{"desc":"4757","fix":"4809"},[4778,4778],[5306,5306],{"desc":"4672","fix":"4810"},{"desc":"4811","fix":"4812"},{"desc":"4813","fix":"4814"},{"desc":"4761","fix":"4815"},[9426,9426],{"desc":"4761","fix":"4816"},[9158,9158],{"desc":"4761","fix":"4817"},[10126,10126],{"desc":"4761","fix":"4818"},[6560,6560],{"desc":"4761","fix":"4819"},[10205,10205],{"desc":"4746","fix":"4820"},{"desc":"4708","fix":"4821"},{"desc":"4748","fix":"4822"},{"desc":"4708","fix":"4823"},{"desc":"4733","fix":"4824"},{"desc":"4708","fix":"4825"},{"desc":"4733","fix":"4826"},{"desc":"4746","fix":"4827"},{"desc":"4746","fix":"4828"},{"desc":"4750","fix":"4829"},{"desc":"4746","fix":"4830"},{"desc":"4786","fix":"4831"},{"desc":"4733","fix":"4832"},{"desc":"4786","fix":"4833"},{"desc":"4754","fix":"4834"},{"desc":"4757","fix":"4835"},[4397,4397],[4924,4924],{"desc":"4767","fix":"4836"},{"desc":"4761","fix":"4837"},[6080,6080],{"desc":"4761","fix":"4838"},{"desc":"4769","fix":"4839"},"Update the dependencies array to be: [userId]",{"range":"4840","text":"4841"},"Update the dependencies array to be: [getTime, load]",{"range":"4842","text":"4843"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"4844","text":"4845"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"4846","text":"4847"},"Update the dependencies array to be: [getProposalDetails]",{"range":"4848","text":"4849"},{"range":"4850","text":"4843"},{"range":"4851","text":"4843"},"Update the dependencies array to be: [getChatting, id]",{"range":"4852","text":"4853"},{"range":"4854","text":"4843"},"Update the dependencies array to be: [getMessage]",{"range":"4855","text":"4856"},"Update the dependencies array to be: [item, props.location.obj]",{"range":"4857","text":"4858"},{"range":"4859","text":"4856"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"4860","text":"4861"},"Update the dependencies array to be: [getQuery]",{"range":"4862","text":"4863"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"4864","text":"4865"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"4866","text":"4867"},"Update the dependencies array to be: [paydetails2]",{"range":"4868","text":"4869"},"Update the dependencies array to be: [getQueryData]",{"range":"4870","text":"4871"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"4872","text":"4873"},{"range":"4874","text":"4845"},"Update the dependencies array to be: [getTeamLeader]",{"range":"4875","text":"4876"},{"range":"4877","text":"4845"},{"range":"4878","text":"4858"},"Update the dependencies array to be: [getRecording]",{"range":"4879","text":"4880"},{"range":"4881","text":"4856"},"Update the dependencies array to be: [getData, getTeamLeader]",{"range":"4882","text":"4883"},"Update the dependencies array to be: [getTaxProf, taxId]",{"range":"4884","text":"4885"},{"range":"4886","text":"4853"},"Update the dependencies array to be: [getTaxProf]",{"range":"4887","text":"4888"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"4889","text":"4890"},"Update the dependencies array to be: [getAssignmentList]",{"range":"4891","text":"4892"},"Update the dependencies array to be: [userid]",{"range":"4893","text":"4894"},"Update the dependencies array to be: [getFeedback]",{"range":"4895","text":"4896"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"4897","text":"4898"},{"range":"4899","text":"4873"},{"range":"4900","text":"4845"},{"range":"4901","text":"4894"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"4902","text":"4903"},{"range":"4904","text":"4894"},{"range":"4905","text":"4863"},{"range":"4906","text":"4892"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"4907","text":"4908"},{"range":"4909","text":"4853"},"Update the dependencies array to be: [getReport]",{"range":"4910","text":"4911"},{"range":"4912","text":"4867"},{"range":"4913","text":"4894"},"Update the dependencies array to be: [getQueriesData]",{"range":"4914","text":"4915"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"4916","text":"4917"},{"range":"4918","text":"4917"},{"range":"4919","text":"4917"},{"range":"4920","text":"4915"},{"range":"4921","text":"4915"},{"range":"4922","text":"4915"},{"range":"4923","text":"4917"},{"range":"4924","text":"4917"},{"range":"4925","text":"4917"},{"range":"4926","text":"4892"},{"range":"4927","text":"4892"},{"range":"4928","text":"4892"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"4929","text":"4930"},"Update the dependencies array to be: [id, userid]",{"range":"4931","text":"4932"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"4933","text":"4934"},{"range":"4935","text":"4930"},{"range":"4936","text":"4930"},"Update the dependencies array to be: [getHistory, report]",{"range":"4937","text":"4938"},{"range":"4939","text":"4938"},"Update the dependencies array to be: [getData, report]",{"range":"4940","text":"4941"},"Update the dependencies array to be: [adminDashboard, getFeedback2]",{"range":"4942","text":"4943"},"Update the dependencies array to be: [getProposalList]",{"range":"4944","text":"4945"},{"range":"4946","text":"4945"},{"range":"4947","text":"4945"},{"range":"4948","text":"4945"},{"range":"4949","text":"4880"},"Update the dependencies array to be: [getNotification, qno]",{"range":"4950","text":"4951"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",{"range":"4952","text":"4953"},{"range":"4954","text":"4938"},{"range":"4955","text":"4941"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"4956","text":"4957"},"Update the dependencies array to be: [getData, getUsers]",{"range":"4958","text":"4959"},"Update the dependencies array to be: [getAllQueriesData, props.allData]",{"range":"4960","text":"4961"},"Update the dependencies array to be: [getProposalData]",{"range":"4962","text":"4963"},{"range":"4964","text":"4963"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",{"range":"4965","text":"4966"},{"range":"4967","text":"4963"},{"range":"4968","text":"4963"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"4969","text":"4970"},"Update the dependencies array to be: [getAssignmentData]",{"range":"4971","text":"4972"},{"range":"4973","text":"4972"},{"range":"4974","text":"4972"},{"range":"4975","text":"4972"},{"range":"4976","text":"4853"},{"range":"4977","text":"4880"},{"range":"4978","text":"4896"},"Update the dependencies array to be: [props]",{"range":"4979","text":"4980"},{"range":"4981","text":"4856"},{"range":"4982","text":"4892"},{"range":"4983","text":"4894"},{"range":"4984","text":"4867"},{"range":"4985","text":"4845"},{"range":"4986","text":"4863"},{"range":"4987","text":"4894"},{"range":"4988","text":"4894"},{"range":"4989","text":"4894"},{"range":"4990","text":"4945"},{"range":"4991","text":"4880"},{"range":"4992","text":"4941"},{"range":"4993","text":"4856"},"Update the dependencies array to be: [props.location.obj]",{"range":"4994","text":"4995"},"Update the dependencies array to be: [checkAssigned, item]",{"range":"4996","text":"4997"},{"range":"4998","text":"4945"},{"range":"4999","text":"4945"},{"range":"5000","text":"4945"},{"range":"5001","text":"4945"},{"range":"5002","text":"4945"},{"range":"5003","text":"4930"},{"range":"5004","text":"4892"},{"range":"5005","text":"4932"},{"range":"5006","text":"4892"},{"range":"5007","text":"4917"},{"range":"5008","text":"4892"},{"range":"5009","text":"4917"},{"range":"5010","text":"4930"},{"range":"5011","text":"4930"},{"range":"5012","text":"4934"},{"range":"5013","text":"4930"},{"range":"5014","text":"4970"},{"range":"5015","text":"4917"},{"range":"5016","text":"4970"},{"range":"5017","text":"4938"},{"range":"5018","text":"4941"},{"range":"5019","text":"4951"},{"range":"5020","text":"4945"},{"range":"5021","text":"4945"},{"range":"5022","text":"4953"},[3814,3816],"[userId]",[1611,1617],"[getTime, load]",[5119,5129],"[assingNo, getQuery, id]",[1180,1182],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[1746,1748],"[getProposalDetails]",[1488,1494],[1340,1346],[700,704],"[getChatting, id]",[2981,2987],[1034,1036],"[getMessage]",[1622,1628],"[item, props.location.obj]",[699,701],[1149,1151],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[2350,2352],"[getQuery]",[1167,1169],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[839,841],"[getAllPaid, getPaid, getUnpaid]",[1712,1714],"[paydetails2]",[2091,2093],"[getQueryData]",[2777,2786],"[getQuery, queryNo]",[6204,6214],[5045,5047],"[getTeamLeader]",[1258,1268],[1672,1678],[1349,1351],"[getRecording]",[874,876],[2585,2587],"[getData, getTeamLeader]",[2898,2905],"[getTaxProf, taxId]",[711,715],[706,708],"[getTaxProf]",[3289,3293],"[getTeamLeader, id]",[1050,1052],"[getAssignmentList]",[3176,3178],"[userid]",[742,744],"[getFeedback]",[2156,2158],"[getQueryData, getTaxProfession]",[2939,2948],[5857,5867],[3010,3012],[926,936],"[assingNo, getAdditionalQuery, getQueryDetails]",[5117,5119],[2011,2013],[961,963],[1280,1290],"[assignNo, getDetails]",[708,712],[655,657],"[getReport]",[841,843],[2288,2290],[1348,1350],"[getQueriesData]",[2396,2398],"[getPaymentStatus]",[2482,2484],[2367,2369],[1716,1718],[1082,1084],[1653,1655],[1771,1773],[1932,1934],[1937,1939],[2149,2151],[2675,2677],[2255,2257],[1001,1003],"[getInCompleteAssingment]",[2198,2200],"[id, userid]",[1165,1167],"[getPendingforAcceptance]",[976,978],[1189,1191],[596,604],"[getHistory, report]",[604,612],[2304,2312],"[getData, report]",[1778,1794],"[adminDashboard, getFeedback2]",[1304,1306],"[getProposalList]",[1341,1343],[1300,1302],[1663,1665],[1128,1130],[436,441],"[getNotification, qno]",[2752,2770],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",[607,615],[992,1000],[382,392],"[getNotification, tokenKey]",[1830,1832],"[getData, getUsers]",[1015,1030],"[getAllQueriesData, props.allData]",[1420,1422],"[getProposalData]",[1175,1177],[2628,2646],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",[1715,1717],[1452,1454],[1622,1624],"[getAssignmentNo, getData, getUsers]",[2048,2050],"[getAssignmentData]",[2281,2283],[2128,2130],[1891,1893],[708,712],[1326,1328],[742,744],[1659,1661],"[props]",[1125,1127],[1018,1020],[5268,5270],[841,843],[5036,5046],[1999,2001],[2339,2341],[3291,3293],[3324,3326],[2104,2106],[1198,1200],[1545,1553],[1060,1062],[1670,1672],"[props.location.obj]",[1726,1732],"[checkAssigned, item]",[1337,1339],[1104,1106],[1381,1383],[2064,2066],[1388,1390],[1012,1014],[2200,2202],[2198,2200],[2754,2756],[1687,1689],[2409,2411],[1717,1719],[701,703],[687,689],[1277,1279],[987,989],[1827,1829],[1943,1945],[1827,1829],[604,612],[2397,2405],[436,441],[1646,1648],[1640,1642],[2754,2772]]
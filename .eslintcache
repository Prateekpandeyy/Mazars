[{"D:\\Mazars\\src\\index.js":"1","D:\\Mazars\\src\\reportWebVitals.js":"2","D:\\Mazars\\src\\App.js":"3","D:\\Mazars\\src\\Service\\PublicRouteAdmin.js":"4","D:\\Mazars\\src\\Service\\PublicRouteTP.js":"5","D:\\Mazars\\src\\Service\\PublicRouteTL.js":"6","D:\\Mazars\\src\\components\\PageNotFound\\PageNotFound.js":"7","D:\\Mazars\\src\\Service\\PrivateRouteTP.js":"8","D:\\Mazars\\src\\views\\MyAssingment\\MyAssingment.js":"9","D:\\Mazars\\src\\views\\Login\\Login.js":"10","D:\\Mazars\\src\\components\\LoginForm\\LoginFun.js":"11","D:\\Mazars\\src\\views\\ForgetPassword\\ForgetPassword.js":"12","D:\\Mazars\\src\\Service\\PublicRouteUser.js":"13","D:\\Mazars\\src\\views\\AddFressAssignment\\AddFreshAssingment.js":"14","D:\\Mazars\\src\\views\\AssignmentTab\\AssignmentTab.js":"15","D:\\Mazars\\src\\views\\Schedule\\schedule.js":"16","D:\\Mazars\\src\\views\\Dashboard\\Dashboard.js":"17","D:\\Mazars\\src\\views\\QueriesTab\\QueriesTab.js":"18","D:\\Mazars\\src\\views\\ProposalTab\\ProposalTab.js":"19","D:\\Mazars\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js":"20","D:\\Mazars\\src\\views\\NewPassword\\NewPassword.js":"21","D:\\Mazars\\src\\views\\VideoCall\\VideoCall.js":"22","D:\\Mazars\\src\\views\\ProposalView\\ProposalView.js":"23","D:\\Mazars\\src\\views\\EditQuery\\EditQuery.js":"24","D:\\Mazars\\src\\views\\Feedback\\Feedback.js":"25","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentStatus.js":"26","D:\\Mazars\\src\\views\\ViewNotification\\ViewNotification.js":"27","D:\\Mazars\\src\\views\\ThankYou\\Thankyou.js":"28","D:\\Mazars\\src\\views\\MeetingComponent\\MeetingComponent.js":"29","D:\\Mazars\\src\\views\\Chatting\\Chatting.js":"30","D:\\Mazars\\src\\views\\ChangePassword\\ChangePassword.js":"31","D:\\Mazars\\src\\views\\FeedbackData\\FeedbackData.js":"32","D:\\Mazars\\src\\views\\Message\\Message.js":"33","D:\\Mazars\\src\\views\\PaymentGateway.js\\PaymentGateway.js":"34","D:\\Mazars\\src\\pages\\Admin\\Login\\Login.js":"35","D:\\Mazars\\src\\pages\\Admin\\EditTP\\EditTP.js":"36","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\index.js":"37","D:\\Mazars\\src\\pages\\Admin\\Start\\Start.js":"38","D:\\Mazars\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js":"39","D:\\Mazars\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js":"40","D:\\Mazars\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js":"41","D:\\Mazars\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js":"42","D:\\Mazars\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js":"43","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js":"44","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Schedule.js":"45","D:\\Mazars\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js":"46","D:\\Mazars\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js":"47","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\NewPassword.js":"48","D:\\Mazars\\src\\pages\\Admin\\Proposal\\Proposal.js":"49","D:\\Mazars\\src\\pages\\Admin\\Chatting\\Chatting.js":"50","D:\\Mazars\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js":"51","D:\\Mazars\\src\\pages\\Admin\\Message\\Message.js":"52","D:\\Mazars\\src\\pages\\Admin\\Report\\Report.js":"53","D:\\Mazars\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js":"54","D:\\Mazars\\src\\pages\\Admin\\Report\\Consalation.js":"55","D:\\Mazars\\src\\pages\\TL\\Dashboard\\Dashboard.js":"56","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js":"57","D:\\Mazars\\src\\pages\\TL\\Start\\Start.js":"58","D:\\Mazars\\src\\pages\\TL\\AddNew\\AddNew.js":"59","D:\\Mazars\\src\\pages\\Admin\\customer\\Customer.js":"60","D:\\Mazars\\src\\pages\\Admin\\Report\\ReportList.js":"61","D:\\Mazars\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js":"62","D:\\Mazars\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js":"63","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Invoice.js":"64","D:\\Mazars\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js":"65","D:\\Mazars\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js":"66","D:\\Mazars\\src\\pages\\TL\\SendProposal\\SendProposal.js":"67","D:\\Mazars\\src\\pages\\TL\\Login\\Login.js":"68","D:\\Mazars\\src\\pages\\TL\\Proposal\\ProposalTab.js":"69","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js":"70","D:\\Mazars\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js":"71","D:\\Mazars\\src\\pages\\TL\\EditTP\\EditTP.js":"72","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js":"73","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\QueriesTab.js":"74","D:\\Mazars\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js":"75","D:\\Mazars\\src\\pages\\TL\\ViewReport\\ViewReport.js":"76","D:\\Mazars\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js":"77","D:\\Mazars\\src\\pages\\Admin\\EditTL\\EditTL.js":"78","D:\\Mazars\\src\\pages\\TL\\EditProposal\\EditProposal.js":"79","D:\\Mazars\\src\\pages\\Admin\\Recording\\Recording.js":"80","D:\\Mazars\\src\\pages\\Admin\\Dashboard\\Dashboard.js":"81","D:\\Mazars\\src\\pages\\TL\\PendingReceived\\PendingReceived.js":"82","D:\\Mazars\\src\\views\\PaymentStatus\\PayDetails.js":"83","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paydetails.js":"84","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js":"85","D:\\Mazars\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js":"86","D:\\Mazars\\src\\views\\SignUpForm\\SignUp.js":"87","D:\\Mazars\\src\\views\\Message\\PaymentModal.js":"88","D:\\Mazars\\src\\views\\ChangePassword\\ResendOtp.js":"89","D:\\Mazars\\src\\components\\Layout\\Layout.js":"90","D:\\Mazars\\src\\pages\\TL\\EditProposal\\Payment.js":"91","D:\\Mazars\\src\\components\\Common\\Mandatory.js":"92","D:\\Mazars\\src\\config\\config.js":"93","D:\\Mazars\\src\\common\\common.js":"94","D:\\Mazars\\src\\common\\Alerts.js":"95","D:\\Mazars\\src\\pages\\Admin\\Recording\\RecordingEdit.js":"96","D:\\Mazars\\src\\components\\LoadingTime\\LoadingTime.js":"97","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Unpaid.js":"98","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\AllQuery.js":"99","D:\\Mazars\\src\\components\\Search-Filter\\RecordingFilter.js":"100","D:\\Mazars\\src\\pages\\TL\\CompleteData\\CompleteData.js":"101","D:\\Mazars\\src\\components\\Common\\EmailValidation.js":"102","D:\\Mazars\\src\\pages\\TL\\InCompleteData\\InCompleteData.js":"103","D:\\Mazars\\src\\views\\SignUpForm\\ResendOtp.js":"104","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js":"105","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paid.js":"106","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\AllPayment.js":"107","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\History.js":"108","D:\\Mazars\\src\\components\\Footer\\Footer.js":"109","D:\\Mazars\\src\\components\\Header\\Header.js":"110","D:\\Mazars\\src\\views\\SignUpForm\\data.js":"111","D:\\Mazars\\src\\components\\Search-Filter\\tlFilter.js":"112","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DiscardReport.js":"113","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js":"114","D:\\Mazars\\src\\components\\Admin-Footer\\Admin-Footer.js":"115","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js":"116","D:\\Mazars\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js":"117","D:\\Mazars\\src\\components\\Admin-Header\\Admin-Header.js":"118","D:\\Mazars\\src\\views\\PaymentStatus\\PayModal.js":"119","D:\\Mazars\\src\\pages\\TL\\Proposal\\AcceptedProposal.js":"120","D:\\Mazars\\src\\pages\\TL\\Proposal\\AllProposal.js":"121","D:\\Mazars\\src\\pages\\TL\\Proposal\\InprogressProposal.js":"122","D:\\Mazars\\src\\pages\\TL\\Login\\VerifyOtpLogin.js":"123","D:\\Mazars\\src\\pages\\TL\\Proposal\\DeclinedProposal.js":"124","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js":"125","D:\\Mazars\\src\\components\\PendingForAllocation\\History.js":"126","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js":"127","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js":"128","D:\\Mazars\\src\\pages\\TL\\SendProposal\\ProposalComponent.js":"129","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Generated.js":"130","D:\\Mazars\\src\\pages\\Admin\\Invoice\\CreateInvoice.js":"131","D:\\Mazars\\src\\components\\QueryDetails\\QueryDetails.js":"132","D:\\Mazars\\src\\components\\Loader\\Loader.js":"133","D:\\Mazars\\src\\pages\\TL\\Proposal\\Tds.js":"134","D:\\Mazars\\src\\components\\Admin-Header\\NavWrapper.js":"135","D:\\Mazars\\src\\pages\\TL\\Proposal\\ChatHistory.js":"136","D:\\Mazars\\src\\views\\SignUpForm\\city.js":"137","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js":"138","D:\\Mazars\\src\\pages\\TL\\SendProposal\\Payment.js":"139","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\ViewAllReport.js":"140","D:\\Mazars\\src\\components\\Search-Filter\\InvoiceFilter.js":"141","D:\\Mazars\\src\\components\\QueryDetails\\Feedback.js":"142","D:\\Mazars\\src\\components\\QueryDetails\\QueryRecording.js":"143","D:\\Mazars\\src\\components\\QueryDetails\\DraftReports.js":"144","D:\\Mazars\\src\\components\\QueryDetails\\AddAdditionalQuery.js":"145","D:\\Mazars\\src\\components\\QueryDetails\\AdditionalQuery.js":"146","D:\\Mazars\\src\\components\\Records\\Records.js":"147","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\RejectModal.js":"148","D:\\Mazars\\src\\components\\Admin-Header\\CustomerNotification.js":"149","D:\\Mazars\\src\\components\\QueryDetails\\AssignmentDetails.js":"150","D:\\Mazars\\src\\components\\QueryDetails\\BasicQuery.js":"151","D:\\Mazars\\src\\components\\QueryDetails\\ProposalDetails.js":"152","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Tds.js":"153","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DiscardReport.js":"154","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js":"155","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\History.js":"156","D:\\Mazars\\src\\pages\\Admin\\customer\\CustHistory.js":"157","D:\\Mazars\\src\\components\\Search-Filter\\CustomerListFilter.js":"158","D:\\Mazars\\src\\config\\services\\TaxProffesional.js":"159","D:\\Mazars\\src\\pages\\Admin\\Report\\ConsaltSearch.js":"160","D:\\Mazars\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js":"161","D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js":"162","D:\\Mazars\\src\\config\\http\\http-common.js":"163","D:\\Mazars\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js":"164","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\ResendOtp.js":"165","D:\\Mazars\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js":"166","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js":"167","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js":"168","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js":"169","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Demo.js":"170","D:\\Mazars\\src\\components\\PendingForAllocation\\PendingForAllocation.js":"171","D:\\Mazars\\src\\components\\AllQueriesData\\AllQueriesData.js":"172","D:\\Mazars\\src\\components\\DeclinedQueries\\DeclinedQueries.js":"173","D:\\Mazars\\src\\components\\PendingForProposals\\PendingForProposals.js":"174","D:\\Mazars\\src\\pages\\Admin\\meeting\\index.jsx":"175","D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\RetviewModal.js":"176","D:\\Mazars\\src\\components\\Search-Filter\\AdminFilter.js":"177","D:\\Mazars\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js":"178","D:\\Mazars\\src\\agora.config.js":"179","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx":"180","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\RecordingModal.js":"181","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js":"182","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js":"183","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js":"184","D:\\Mazars\\src\\pages\\Admin\\Login\\VerifyOtpLogin.js":"185","D:\\Mazars\\src\\views\\PaymentStatus\\AllPayment.js":"186","D:\\Mazars\\src\\views\\PaymentStatus\\Paid.js":"187","D:\\Mazars\\src\\views\\PaymentStatus\\Unpaid.js":"188","D:\\Mazars\\src\\views\\EditQuery\\DeleteQuery.js":"189","D:\\Mazars\\src\\views\\ProposalView\\RejectedModal22.js":"190","D:\\Mazars\\src\\views\\ProposalView\\TermsConditions.js":"191","D:\\Mazars\\src\\views\\NewPassword\\ResendOtp.js":"192","D:\\Mazars\\src\\views\\ProposalTab\\AcceptedProposal.js":"193","D:\\Mazars\\src\\views\\ProposalTab\\DeclinedProposal.js":"194","D:\\Mazars\\src\\components\\meeting\\index.jsx":"195","D:\\Mazars\\src\\views\\ProposalTab\\AllProposal.js":"196","D:\\Mazars\\src\\components\\InputRoom\\index.js":"197","D:\\Mazars\\src\\views\\QueriesTab\\InprogressProposal.js":"198","D:\\Mazars\\src\\views\\QueriesTab\\InprogressAllocation.js":"199","D:\\Mazars\\src\\views\\ProposalTab\\InprogressProposal.js":"200","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js":"201","D:\\Mazars\\src\\views\\QueriesTab\\DeclinedQueries.js":"202","D:\\Mazars\\src\\views\\QueriesTab\\AllQueriesData.js":"203","D:\\Mazars\\src\\components\\CategorySelect\\CategorySelect.js":"204","D:\\Mazars\\src\\views\\Schedule\\demo.js":"205","D:\\Mazars\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js":"206","D:\\Mazars\\src\\views\\AssignmentTab\\InprogressAssignment.js":"207","D:\\Mazars\\src\\views\\AssignmentTab\\CompletedAssignment.js":"208","D:\\Mazars\\src\\views\\AssignmentTab\\AllAssignment.js":"209","D:\\Mazars\\src\\views\\AddFressAssignment\\data.js":"210","D:\\Mazars\\src\\pages\\TP\\Invoice\\Invoice.js":"211","D:\\Mazars\\src\\components\\LoginForm\\LoginForm.js":"212","D:\\Mazars\\src\\views\\Login\\VerifyOTP.js":"213","D:\\Mazars\\src\\Service\\PrivateRouteAdmin.js":"214","D:\\Mazars\\src\\Service\\PrivateRouteTL.js":"215","D:\\Mazars\\src\\Service\\PrivateRouteUser.js":"216","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\PaymentStatus.js":"217","D:\\Mazars\\src\\views\\AssignmentTab\\DiscardReport.js":"218","D:\\Mazars\\src\\pages\\TP\\Recording\\Recording.js":"219","D:\\Mazars\\src\\pages\\TP\\MeetingComponent\\MeetingComponent.js":"220","D:\\Mazars\\src\\pages\\TP\\ViewNotification\\ViewNotification.js":"221","D:\\Mazars\\src\\pages\\TP\\Chatting\\Chatting.js":"222","D:\\Mazars\\src\\pages\\TP\\Schedule\\Schedule.js":"223","D:\\Mazars\\src\\pages\\TP\\AddAssingmentStages\\AddAssingmentStages.js":"224","D:\\Mazars\\src\\pages\\TP\\Message\\Message.js":"225","D:\\Mazars\\src\\pages\\TP\\FeedbackTab\\FeedbackTab.js":"226","D:\\Mazars\\src\\pages\\TP\\Report\\Report.js":"227","D:\\Mazars\\src\\components\\Search-Filter\\CustomerFilter.js":"228","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AssignmentTab.js":"229","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentComponent.js":"230","D:\\Mazars\\src\\pages\\TP\\NewPassword\\NewPassword.js":"231","D:\\Mazars\\src\\pages\\TP\\Dashboard\\Dashboard.js":"232","D:\\Mazars\\src\\pages\\TP\\SendProposal\\SendProposal.js":"233","D:\\Mazars\\src\\pages\\TP\\EditProposal\\EditProposal.js":"234","D:\\Mazars\\src\\pages\\TP\\ChangePassword\\ChangePassword.js":"235","D:\\Mazars\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js":"236","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paydetails.js":"237","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\QueriesTab.js":"238","D:\\Mazars\\src\\pages\\TP\\Proposal\\ProposalTab.js":"239","D:\\Mazars\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js":"240","D:\\Mazars\\src\\pages\\TP\\Login\\Login.js":"241","D:\\Mazars\\src\\pages\\TL\\Proposal\\InvoiceTab.js":"242","D:\\Mazars\\src\\pages\\TP\\Start\\Start.js":"243","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paydetails.js":"244","D:\\Mazars\\src\\views\\ProposalTab\\ViewComponent.js":"245","D:\\Mazars\\src\\views\\QueriesTab\\RejectedModal.js":"246","D:\\Mazars\\src\\views\\QueriesTab\\AdditionalQueryModal.js":"247","D:\\Mazars\\src\\views\\AssignmentTab\\ViewAllReport.js":"248","D:\\Mazars\\src\\views\\AssignmentTab\\RejectModal.js":"249","D:\\Mazars\\src\\pages\\TL\\Proposal\\Invoice.js":"250","D:\\Mazars\\src\\pages\\TP\\Invoice\\CreateInvoice.js":"251","D:\\Mazars\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js":"252","D:\\Mazars\\src\\pages\\TP\\Invoice\\Generated.js":"253","D:\\Mazars\\src\\pages\\TL\\Recording\\Recording.js":"254","D:\\Mazars\\src\\pages\\TL\\Report\\Report.js":"255","D:\\Mazars\\src\\pages\\TL\\Message\\Message.js":"256","D:\\Mazars\\src\\pages\\TL\\NewPassword\\NewPassword.js":"257","D:\\Mazars\\src\\pages\\TL\\Chatting\\Chatting.js":"258","D:\\Mazars\\src\\pages\\TL\\ViewNotification\\ViewNotification.js":"259","D:\\Mazars\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js":"260","D:\\Mazars\\src\\pages\\TL\\Schedule\\Schedule.js":"261","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Unpaid.js":"262","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\AllPayment.js":"263","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paid.js":"264","D:\\Mazars\\src\\pages\\TP\\Recording\\RecordingEdit.js":"265","D:\\Mazars\\src\\pages\\TP\\NewPassword\\ResendOtp.js":"266","D:\\Mazars\\src\\pages\\TP\\Message\\PaymentModal.js":"267","D:\\Mazars\\src\\pages\\TP\\EditProposal\\Payment.js":"268","D:\\Mazars\\src\\pages\\TP\\Schedule\\Demo.js":"269","D:\\Mazars\\src\\pages\\TP\\SendProposal\\ProposalComponent.js":"270","D:\\Mazars\\src\\components\\AgoraVideoCall\\index.jsx":"271","D:\\Mazars\\src\\pages\\TP\\Proposal\\AcceptedProposal.js":"272","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\AllQuery.js":"273","D:\\Mazars\\src\\pages\\TP\\Proposal\\AllProposal.js":"274","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AllAssignment.js":"275","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DeliveryFinalTab.js":"276","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportTab.js":"277","D:\\Mazars\\src\\pages\\TP\\Proposal\\DeclinedProposal.js":"278","D:\\Mazars\\src\\pages\\TP\\Proposal\\InprogressProposal.js":"279","D:\\Mazars\\src\\pages\\TP\\DeclinedQuery\\DeclinedQuery.js":"280","D:\\Mazars\\src\\pages\\TP\\CompleteData\\CompleteData.js":"281","D:\\Mazars\\src\\pages\\TP\\InCompleteData\\InCompleteData.js":"282","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\PendingForAcceptence.js":"283","D:\\Mazars\\src\\pages\\TL\\Proposal\\Generated.js":"284","D:\\Mazars\\src\\pages\\TP\\Login\\VerifyOtpLogin.js":"285","D:\\Mazars\\src\\pages\\TP\\meeting\\index.jsx":"286","D:\\Mazars\\src\\views\\AssignmentTab\\Assignmodal.js":"287","D:\\Mazars\\src\\pages\\TP\\Invoice\\Tds.js":"288","D:\\Mazars\\src\\pages\\TL\\Recording\\RecordingEdit.js":"289","D:\\Mazars\\src\\pages\\TL\\Message\\PaymentModal.js":"290","D:\\Mazars\\src\\pages\\TL\\NewPassword\\ResendOtp.js":"291","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DiscardReport.js":"292","D:\\Mazars\\src\\components\\Search-Filter\\tpfilter.js":"293","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\RejectedModal.js":"294","D:\\Mazars\\src\\pages\\TL\\Schedule\\Demo.js":"295","D:\\Mazars\\src\\pages\\TL\\meeting\\index.jsx":"296","D:\\Mazars\\src\\pages\\TP\\SendProposal\\Payment.js":"297","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\ViewAllReport.js":"298","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\FinalReportUpload.js":"299","D:\\Mazars\\src\\pages\\TP\\Proposal\\ChatHistory.js":"300","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportUpload.js":"301","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\RejectedModal.js":"302","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\index.jsx":"303","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\RejectModal.js":"304","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\index.jsx":"305","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\RecordingModal.js":"306","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\RecordingModal.js":"307","D:\\Mazars\\src\\pages\\Admin\\EditTL\\Reset.js":"308"},{"size":566,"mtime":1636370578245,"results":"309","hashOfConfig":"310"},{"size":375,"mtime":1636370578420,"results":"311","hashOfConfig":"310"},{"size":20044,"mtime":1640691716263,"results":"312","hashOfConfig":"310"},{"size":815,"mtime":1636370578183,"results":"313","hashOfConfig":"310"},{"size":839,"mtime":1636370660840,"results":"314","hashOfConfig":"310"},{"size":823,"mtime":1638434147542,"results":"315","hashOfConfig":"310"},{"size":219,"mtime":1636370578223,"results":"316","hashOfConfig":"310"},{"size":498,"mtime":1636370578183,"results":"317","hashOfConfig":"310"},{"size":8883,"mtime":1640691716497,"results":"318","hashOfConfig":"310"},{"size":7407,"mtime":1638944620738,"results":"319","hashOfConfig":"310"},{"size":2302,"mtime":1636370661035,"results":"320","hashOfConfig":"310"},{"size":3907,"mtime":1636370661164,"results":"321","hashOfConfig":"310"},{"size":812,"mtime":1636370578185,"results":"322","hashOfConfig":"310"},{"size":19517,"mtime":1640691716492,"results":"323","hashOfConfig":"310"},{"size":4182,"mtime":1640691716493,"results":"324","hashOfConfig":"310"},{"size":709,"mtime":1638434147706,"results":"325","hashOfConfig":"310"},{"size":11227,"mtime":1640691716495,"results":"326","hashOfConfig":"310"},{"size":4005,"mtime":1636370661181,"results":"327","hashOfConfig":"310"},{"size":4070,"mtime":1636370661177,"results":"328","hashOfConfig":"310"},{"size":1192,"mtime":1636370578520,"results":"329","hashOfConfig":"310"},{"size":9780,"mtime":1640691716498,"results":"330","hashOfConfig":"310"},{"size":370,"mtime":1638434147708,"results":"331","hashOfConfig":"310"},{"size":13134,"mtime":1640691716505,"results":"332","hashOfConfig":"310"},{"size":22334,"mtime":1640691716496,"results":"333","hashOfConfig":"310"},{"size":4596,"mtime":1636370661163,"results":"334","hashOfConfig":"310"},{"size":2962,"mtime":1636370661173,"results":"335","hashOfConfig":"310"},{"size":2616,"mtime":1638434147708,"results":"336","hashOfConfig":"310"},{"size":637,"mtime":1636370661201,"results":"337","hashOfConfig":"310"},{"size":347,"mtime":1638944620738,"results":"338","hashOfConfig":"310"},{"size":6394,"mtime":1638434147688,"results":"339","hashOfConfig":"310"},{"size":11251,"mtime":1640691716494,"results":"340","hashOfConfig":"310"},{"size":3020,"mtime":1636370661163,"results":"341","hashOfConfig":"310"},{"size":6230,"mtime":1638434147691,"results":"342","hashOfConfig":"310"},{"size":15468,"mtime":1640691716498,"results":"343","hashOfConfig":"310"},{"size":6913,"mtime":1640691716419,"results":"344","hashOfConfig":"310"},{"size":23441,"mtime":1640691716416,"results":"345","hashOfConfig":"310"},{"size":3764,"mtime":1640691716413,"results":"346","hashOfConfig":"310"},{"size":460,"mtime":1636370578281,"results":"347","hashOfConfig":"310"},{"size":8969,"mtime":1640691716423,"results":"348","hashOfConfig":"310"},{"size":19069,"mtime":1640691716405,"results":"349","hashOfConfig":"310"},{"size":11914,"mtime":1638434147592,"results":"350","hashOfConfig":"310"},{"size":4070,"mtime":1638434147591,"results":"351","hashOfConfig":"310"},{"size":3580,"mtime":1636370661078,"results":"352","hashOfConfig":"310"},{"size":3017,"mtime":1636370661088,"results":"353","hashOfConfig":"310"},{"size":669,"mtime":1638434147596,"results":"354","hashOfConfig":"310"},{"size":464,"mtime":1638434147586,"results":"355","hashOfConfig":"310"},{"size":2698,"mtime":1636370661099,"results":"356","hashOfConfig":"310"},{"size":9198,"mtime":1640691716419,"results":"357","hashOfConfig":"310"},{"size":4796,"mtime":1640691716422,"results":"358","hashOfConfig":"310"},{"size":7406,"mtime":1638944620706,"results":"359","hashOfConfig":"310"},{"size":8223,"mtime":1636691960561,"results":"360","hashOfConfig":"310"},{"size":6637,"mtime":1638434147587,"results":"361","hashOfConfig":"310"},{"size":24832,"mtime":1640691716426,"results":"362","hashOfConfig":"310"},{"size":4476,"mtime":1640691716417,"results":"363","hashOfConfig":"310"},{"size":7988,"mtime":1640691716425,"results":"364","hashOfConfig":"310"},{"size":12939,"mtime":1640691716436,"results":"365","hashOfConfig":"310"},{"size":7623,"mtime":1638434147609,"results":"366","hashOfConfig":"310"},{"size":460,"mtime":1636370578356,"results":"367","hashOfConfig":"310"},{"size":3580,"mtime":1636370661103,"results":"368","hashOfConfig":"310"},{"size":5789,"mtime":1636370661101,"results":"369","hashOfConfig":"310"},{"size":4697,"mtime":1640691716427,"results":"370","hashOfConfig":"310"},{"size":11779,"mtime":1637121042054,"results":"371","hashOfConfig":"310"},{"size":5839,"mtime":1638434147593,"results":"372","hashOfConfig":"310"},{"size":2069,"mtime":1636370661080,"results":"373","hashOfConfig":"310"},{"size":9147,"mtime":1640691716469,"results":"374","hashOfConfig":"310"},{"size":4116,"mtime":1640691716437,"results":"375","hashOfConfig":"310"},{"size":517,"mtime":1636370578355,"results":"376","hashOfConfig":"310"},{"size":6584,"mtime":1640691716438,"results":"377","hashOfConfig":"310"},{"size":4948,"mtime":1640691716468,"results":"378","hashOfConfig":"310"},{"size":3417,"mtime":1640691716432,"results":"379","hashOfConfig":"310"},{"size":5035,"mtime":1638434147612,"results":"380","hashOfConfig":"310"},{"size":3776,"mtime":1636370661117,"results":"381","hashOfConfig":"310"},{"size":2950,"mtime":1636370661124,"results":"382","hashOfConfig":"310"},{"size":4782,"mtime":1636370661135,"results":"383","hashOfConfig":"310"},{"size":13915,"mtime":1636370661107,"results":"384","hashOfConfig":"310"},{"size":2959,"mtime":1636370661138,"results":"385","hashOfConfig":"310"},{"size":23055,"mtime":1640691716429,"results":"386","hashOfConfig":"310"},{"size":24252,"mtime":1640954979893,"results":"387","hashOfConfig":"310"},{"size":14248,"mtime":1640691716437,"results":"388","hashOfConfig":"310"},{"size":8668,"mtime":1640845702395,"results":"389","hashOfConfig":"310"},{"size":13241,"mtime":1638944620706,"results":"390","hashOfConfig":"310"},{"size":10044,"mtime":1636691960576,"results":"391","hashOfConfig":"310"},{"size":9307,"mtime":1640953787809,"results":"392","hashOfConfig":"310"},{"size":7906,"mtime":1640953787778,"results":"393","hashOfConfig":"310"},{"size":7521,"mtime":1640953787793,"results":"394","hashOfConfig":"310"},{"size":19227,"mtime":1640953787746,"results":"395","hashOfConfig":"310"},{"size":25717,"mtime":1640953787824,"results":"396","hashOfConfig":"310"},{"size":2209,"mtime":1636370661166,"results":"397","hashOfConfig":"310"},{"size":1733,"mtime":1636370661159,"results":"398","hashOfConfig":"310"},{"size":1099,"mtime":1640691716306,"results":"399","hashOfConfig":"310"},{"size":4399,"mtime":1636370661116,"results":"400","hashOfConfig":"310"},{"size":308,"mtime":1636370578213,"results":"401","hashOfConfig":"310"},{"size":828,"mtime":1640845702370,"results":"402","hashOfConfig":"310"},{"size":931,"mtime":1636370578203,"results":"403","hashOfConfig":"310"},{"size":2632,"mtime":1640691716264,"results":"404","hashOfConfig":"310"},{"size":3720,"mtime":1640691716424,"results":"405","hashOfConfig":"310"},{"size":759,"mtime":1636370661032,"results":"406","hashOfConfig":"310"},{"size":17906,"mtime":1640691716464,"results":"407","hashOfConfig":"310"},{"size":9255,"mtime":1638944620722,"results":"408","hashOfConfig":"310"},{"size":2772,"mtime":1640691716393,"results":"409","hashOfConfig":"310"},{"size":9325,"mtime":1640691716436,"results":"410","hashOfConfig":"310"},{"size":3173,"mtime":1636370660948,"results":"411","hashOfConfig":"310"},{"size":6983,"mtime":1638944620722,"results":"412","hashOfConfig":"310"},{"size":2667,"mtime":1636370661183,"results":"413","hashOfConfig":"310"},{"size":6848,"mtime":1638944620722,"results":"414","hashOfConfig":"310"},{"size":16181,"mtime":1640691716439,"results":"415","hashOfConfig":"310"},{"size":17614,"mtime":1640691716439,"results":"416","hashOfConfig":"310"},{"size":1739,"mtime":1636370661098,"results":"417","hashOfConfig":"310"},{"size":297,"mtime":1640691716296,"results":"418","hashOfConfig":"310"},{"size":3311,"mtime":1640691716304,"results":"419","hashOfConfig":"310"},{"size":343537,"mtime":1640845702443,"results":"420","hashOfConfig":"310"},{"size":15099,"mtime":1640691716394,"results":"421","hashOfConfig":"310"},{"size":2666,"mtime":1638434147616,"results":"422","hashOfConfig":"310"},{"size":2734,"mtime":1640691716463,"results":"423","hashOfConfig":"310"},{"size":463,"mtime":1640691716265,"results":"424","hashOfConfig":"310"},{"size":2825,"mtime":1636370661126,"results":"425","hashOfConfig":"310"},{"size":21018,"mtime":1640691716285,"results":"426","hashOfConfig":"310"},{"size":2152,"mtime":1640691716265,"results":"427","hashOfConfig":"310"},{"size":3981,"mtime":1640953787809,"results":"428","hashOfConfig":"310"},{"size":13597,"mtime":1640691716464,"results":"429","hashOfConfig":"310"},{"size":15777,"mtime":1640691716465,"results":"430","hashOfConfig":"310"},{"size":14697,"mtime":1640691716467,"results":"431","hashOfConfig":"310"},{"size":4959,"mtime":1638434147620,"results":"432","hashOfConfig":"310"},{"size":12205,"mtime":1640691716466,"results":"433","hashOfConfig":"310"},{"size":20839,"mtime":1640953787793,"results":"434","hashOfConfig":"310"},{"size":1763,"mtime":1640691716309,"results":"435","hashOfConfig":"310"},{"size":20773,"mtime":1640953787793,"results":"436","hashOfConfig":"310"},{"size":21054,"mtime":1640953787793,"results":"437","hashOfConfig":"310"},{"size":13617,"mtime":1640691716472,"results":"438","hashOfConfig":"310"},{"size":10779,"mtime":1640691716418,"results":"439","hashOfConfig":"310"},{"size":6711,"mtime":1640691716417,"results":"440","hashOfConfig":"310"},{"size":5065,"mtime":1636691960545,"results":"441","hashOfConfig":"310"},{"size":433,"mtime":1636370578221,"results":"442","hashOfConfig":"310"},{"size":19775,"mtime":1640691716468,"results":"443","hashOfConfig":"310"},{"size":4848,"mtime":1640691716266,"results":"444","hashOfConfig":"310"},{"size":1712,"mtime":1636370578331,"results":"445","hashOfConfig":"310"},{"size":4841625,"mtime":1636370578642,"results":"446","hashOfConfig":"310"},{"size":3298,"mtime":1640691716434,"results":"447","hashOfConfig":"310"},{"size":4914,"mtime":1636370578355,"results":"448","hashOfConfig":"310"},{"size":8730,"mtime":1640691716435,"results":"449","hashOfConfig":"310"},{"size":6747,"mtime":1640691716392,"results":"450","hashOfConfig":"310"},{"size":1485,"mtime":1640691716335,"results":"451","hashOfConfig":"310"},{"size":6267,"mtime":1640691716364,"results":"452","hashOfConfig":"310"},{"size":2687,"mtime":1640691716335,"results":"453","hashOfConfig":"310"},{"size":2410,"mtime":1640691716321,"results":"454","hashOfConfig":"310"},{"size":1554,"mtime":1640691716321,"results":"455","hashOfConfig":"310"},{"size":463,"mtime":1640691716378,"results":"456","hashOfConfig":"310"},{"size":3128,"mtime":1636370661111,"results":"457","hashOfConfig":"310"},{"size":1763,"mtime":1640691716266,"results":"458","hashOfConfig":"310"},{"size":4944,"mtime":1640691716322,"results":"459","hashOfConfig":"310"},{"size":4944,"mtime":1640691716322,"results":"460","hashOfConfig":"310"},{"size":11235,"mtime":1640953787746,"results":"461","hashOfConfig":"310"},{"size":18388,"mtime":1636370661081,"results":"462","hashOfConfig":"310"},{"size":2720,"mtime":1640691716410,"results":"463","hashOfConfig":"310"},{"size":3442,"mtime":1640691716434,"results":"464","hashOfConfig":"310"},{"size":1740,"mtime":1636370661096,"results":"465","hashOfConfig":"310"},{"size":2008,"mtime":1640845702400,"results":"466","hashOfConfig":"310"},{"size":5022,"mtime":1640691716391,"results":"467","hashOfConfig":"310"},{"size":519,"mtime":1636370578240,"results":"468","hashOfConfig":"310"},{"size":6010,"mtime":1640691716425,"results":"469","hashOfConfig":"310"},{"size":9942,"mtime":1640691716308,"results":"470","hashOfConfig":"310"},{"size":10584,"mtime":1640691716408,"results":"471","hashOfConfig":"310"},{"size":376,"mtime":1640845702763,"results":"472","hashOfConfig":"310"},{"size":9820,"mtime":1640691716414,"results":"473","hashOfConfig":"310"},{"size":1601,"mtime":1636370661086,"results":"474","hashOfConfig":"310"},{"size":8896,"mtime":1640691716404,"results":"475","hashOfConfig":"310"},{"size":14542,"mtime":1640691716422,"results":"476","hashOfConfig":"310"},{"size":17316,"mtime":1640691716420,"results":"477","hashOfConfig":"310"},{"size":15235,"mtime":1640691716420,"results":"478","hashOfConfig":"310"},{"size":15014,"mtime":1640953787778,"results":"479","hashOfConfig":"310"},{"size":6646,"mtime":1640691716309,"results":"480","hashOfConfig":"310"},{"size":6832,"mtime":1640691716287,"results":"481","hashOfConfig":"310"},{"size":5769,"mtime":1640691716296,"results":"482","hashOfConfig":"310"},{"size":6288,"mtime":1640691716310,"results":"483","hashOfConfig":"310"},{"size":2439,"mtime":1638434147610,"results":"484","hashOfConfig":"310"},{"size":2971,"mtime":1640691716409,"results":"485","hashOfConfig":"310"},{"size":14491,"mtime":1640691716380,"results":"486","hashOfConfig":"310"},{"size":2433,"mtime":1636370661100,"results":"487","hashOfConfig":"310"},{"size":164,"mtime":1636370578185,"results":"488","hashOfConfig":"310"},{"size":31608,"mtime":1640955890096,"results":"489","hashOfConfig":"310"},{"size":6388,"mtime":1640691716406,"results":"490","hashOfConfig":"310"},{"size":14732,"mtime":1640691716411,"results":"491","hashOfConfig":"310"},{"size":14806,"mtime":1640691716412,"results":"492","hashOfConfig":"310"},{"size":17477,"mtime":1640691716410,"results":"493","hashOfConfig":"310"},{"size":4998,"mtime":1638434147585,"results":"494","hashOfConfig":"310"},{"size":15169,"mtime":1640849080728,"results":"495","hashOfConfig":"310"},{"size":17447,"mtime":1640849220424,"results":"496","hashOfConfig":"310"},{"size":14359,"mtime":1640849259108,"results":"497","hashOfConfig":"310"},{"size":1802,"mtime":1640691716495,"results":"498","hashOfConfig":"310"},{"size":2882,"mtime":1640691716506,"results":"499","hashOfConfig":"310"},{"size":823,"mtime":1636370578514,"results":"500","hashOfConfig":"310"},{"size":1663,"mtime":1636370661168,"results":"501","hashOfConfig":"310"},{"size":11830,"mtime":1640691716502,"results":"502","hashOfConfig":"310"},{"size":11180,"mtime":1640691716503,"results":"503","hashOfConfig":"310"},{"size":2295,"mtime":1638944620706,"results":"504","hashOfConfig":"310"},{"size":17679,"mtime":1640691716503,"results":"505","hashOfConfig":"310"},{"size":1067,"mtime":1640691716305,"results":"506","hashOfConfig":"310"},{"size":7719,"mtime":1638434147704,"results":"507","hashOfConfig":"310"},{"size":15179,"mtime":1640691716508,"results":"508","hashOfConfig":"310"},{"size":16111,"mtime":1640691716504,"results":"509","hashOfConfig":"310"},{"size":7444,"mtime":1640691716412,"results":"510","hashOfConfig":"310"},{"size":8121,"mtime":1640953787918,"results":"511","hashOfConfig":"310"},{"size":19715,"mtime":1640953787934,"results":"512","hashOfConfig":"310"},{"size":5922,"mtime":1640691716295,"results":"513","hashOfConfig":"310"},{"size":8163,"mtime":1640691716509,"results":"514","hashOfConfig":"310"},{"size":11854,"mtime":1638434147684,"results":"515","hashOfConfig":"310"},{"size":10044,"mtime":1638434147685,"results":"516","hashOfConfig":"310"},{"size":12068,"mtime":1638434147683,"results":"517","hashOfConfig":"310"},{"size":9688,"mtime":1638434147681,"results":"518","hashOfConfig":"310"},{"size":491,"mtime":1636370661152,"results":"519","hashOfConfig":"310"},{"size":1978,"mtime":1636370661145,"results":"520","hashOfConfig":"310"},{"size":3481,"mtime":1640691716307,"results":"521","hashOfConfig":"310"},{"size":5228,"mtime":1640691716497,"results":"522","hashOfConfig":"310"},{"size":497,"mtime":1636370578181,"results":"523","hashOfConfig":"310"},{"size":493,"mtime":1636370578182,"results":"524","hashOfConfig":"310"},{"size":564,"mtime":1636370660839,"results":"525","hashOfConfig":"310"},{"size":2957,"mtime":1638434147669,"results":"526","hashOfConfig":"310"},{"size":2565,"mtime":1638434147685,"results":"527","hashOfConfig":"310"},{"size":9176,"mtime":1640845702418,"results":"528","hashOfConfig":"310"},{"size":361,"mtime":1638434147664,"results":"529","hashOfConfig":"310"},{"size":2797,"mtime":1636370578418,"results":"530","hashOfConfig":"310"},{"size":6245,"mtime":1638944620738,"results":"531","hashOfConfig":"310"},{"size":1087,"mtime":1636370578409,"results":"532","hashOfConfig":"310"},{"size":23040,"mtime":1640691716473,"results":"533","hashOfConfig":"310"},{"size":6239,"mtime":1638434147665,"results":"534","hashOfConfig":"310"},{"size":4126,"mtime":1640691716480,"results":"535","hashOfConfig":"310"},{"size":11941,"mtime":1638944620738,"results":"536","hashOfConfig":"310"},{"size":17957,"mtime":1640691716381,"results":"537","hashOfConfig":"310"},{"size":3417,"mtime":1640691716476,"results":"538","hashOfConfig":"310"},{"size":3188,"mtime":1636370661172,"results":"539","hashOfConfig":"310"},{"size":9478,"mtime":1638434147666,"results":"540","hashOfConfig":"310"},{"size":12589,"mtime":1640691716479,"results":"541","hashOfConfig":"310"},{"size":547,"mtime":1636370578416,"results":"542","hashOfConfig":"310"},{"size":14297,"mtime":1640691716480,"results":"543","hashOfConfig":"310"},{"size":5214,"mtime":1638434147654,"results":"544","hashOfConfig":"310"},{"size":2914,"mtime":1638434147659,"results":"545","hashOfConfig":"310"},{"size":7970,"mtime":1640953787809,"results":"546","hashOfConfig":"310"},{"size":4817,"mtime":1638434147677,"results":"547","hashOfConfig":"310"},{"size":4960,"mtime":1640691716489,"results":"548","hashOfConfig":"310"},{"size":8332,"mtime":1640691716489,"results":"549","hashOfConfig":"310"},{"size":6938,"mtime":1640691716483,"results":"550","hashOfConfig":"310"},{"size":2039,"mtime":1636370661131,"results":"551","hashOfConfig":"310"},{"size":488,"mtime":1636370578417,"results":"552","hashOfConfig":"310"},{"size":8013,"mtime":1640953787793,"results":"553","hashOfConfig":"310"},{"size":2432,"mtime":1636370661177,"results":"554","hashOfConfig":"310"},{"size":2878,"mtime":1638434147704,"results":"555","hashOfConfig":"310"},{"size":3549,"mtime":1640691716507,"results":"556","hashOfConfig":"310"},{"size":9997,"mtime":1640691716493,"results":"557","hashOfConfig":"310"},{"size":3099,"mtime":1638434147686,"results":"558","hashOfConfig":"310"},{"size":8154,"mtime":1640691716467,"results":"559","hashOfConfig":"310"},{"size":7403,"mtime":1640691716481,"results":"560","hashOfConfig":"310"},{"size":440,"mtime":1638434147633,"results":"561","hashOfConfig":"310"},{"size":10726,"mtime":1640691716482,"results":"562","hashOfConfig":"310"},{"size":9211,"mtime":1640845702406,"results":"563","hashOfConfig":"310"},{"size":24536,"mtime":1640691716471,"results":"564","hashOfConfig":"310"},{"size":6271,"mtime":1638434147633,"results":"565","hashOfConfig":"310"},{"size":9348,"mtime":1636370661121,"results":"566","hashOfConfig":"310"},{"size":8180,"mtime":1638944620722,"results":"567","hashOfConfig":"310"},{"size":2862,"mtime":1636370661138,"results":"568","hashOfConfig":"310"},{"size":3528,"mtime":1636370661118,"results":"569","hashOfConfig":"310"},{"size":1089,"mtime":1636370578352,"results":"570","hashOfConfig":"310"},{"size":18570,"mtime":1640691716486,"results":"571","hashOfConfig":"310"},{"size":17668,"mtime":1640691716483,"results":"572","hashOfConfig":"310"},{"size":16600,"mtime":1640691716484,"results":"573","hashOfConfig":"310"},{"size":3396,"mtime":1640691716490,"results":"574","hashOfConfig":"310"},{"size":1629,"mtime":1638434147667,"results":"575","hashOfConfig":"310"},{"size":2207,"mtime":1638434147665,"results":"576","hashOfConfig":"310"},{"size":4443,"mtime":1638434147658,"results":"577","hashOfConfig":"310"},{"size":13865,"mtime":1640691716491,"results":"578","hashOfConfig":"310"},{"size":18513,"mtime":1640691716492,"results":"579","hashOfConfig":"310"},{"size":22617,"mtime":1640959621372,"results":"580","hashOfConfig":"310"},{"size":13192,"mtime":1640691716486,"results":"581","hashOfConfig":"310"},{"size":8939,"mtime":1638944620738,"results":"582","hashOfConfig":"310"},{"size":15247,"mtime":1640691716487,"results":"583","hashOfConfig":"310"},{"size":20852,"mtime":1640953787793,"results":"584","hashOfConfig":"310"},{"size":19750,"mtime":1640953787809,"results":"585","hashOfConfig":"310"},{"size":20499,"mtime":1640953787809,"results":"586","hashOfConfig":"310"},{"size":13966,"mtime":1640691716487,"results":"587","hashOfConfig":"310"},{"size":14550,"mtime":1640691716488,"results":"588","hashOfConfig":"310"},{"size":4166,"mtime":1638944620738,"results":"589","hashOfConfig":"310"},{"size":4480,"mtime":1638944620738,"results":"590","hashOfConfig":"310"},{"size":7183,"mtime":1638944620738,"results":"591","hashOfConfig":"310"},{"size":7074,"mtime":1638944620738,"results":"592","hashOfConfig":"310"},{"size":11428,"mtime":1640691716466,"results":"593","hashOfConfig":"310"},{"size":4963,"mtime":1638434147663,"results":"594","hashOfConfig":"310"},{"size":2324,"mtime":1637040484535,"results":"595","hashOfConfig":"310"},{"size":3571,"mtime":1638434147683,"results":"596","hashOfConfig":"310"},{"size":19851,"mtime":1640691716482,"results":"597","hashOfConfig":"310"},{"size":3720,"mtime":1640691716470,"results":"598","hashOfConfig":"310"},{"size":2204,"mtime":1636370661121,"results":"599","hashOfConfig":"310"},{"size":1544,"mtime":1636370661122,"results":"600","hashOfConfig":"310"},{"size":2708,"mtime":1638434147651,"results":"601","hashOfConfig":"310"},{"size":15089,"mtime":1640691716395,"results":"602","hashOfConfig":"310"},{"size":2727,"mtime":1640691716485,"results":"603","hashOfConfig":"310"},{"size":14702,"mtime":1640691716472,"results":"604","hashOfConfig":"310"},{"size":2434,"mtime":1638434147646,"results":"605","hashOfConfig":"310"},{"size":4915,"mtime":1636370578415,"results":"606","hashOfConfig":"310"},{"size":8719,"mtime":1640691716479,"results":"607","hashOfConfig":"310"},{"size":3414,"mtime":1640691716478,"results":"608","hashOfConfig":"310"},{"size":1706,"mtime":1638434147673,"results":"609","hashOfConfig":"310"},{"size":3301,"mtime":1640691716478,"results":"610","hashOfConfig":"310"},{"size":2827,"mtime":1638434147671,"results":"611","hashOfConfig":"310"},{"size":30885,"mtime":1640953787793,"results":"612","hashOfConfig":"310"},{"size":3133,"mtime":1638434147653,"results":"613","hashOfConfig":"310"},{"size":32223,"mtime":1641195507155,"results":"614","hashOfConfig":"310"},{"size":6363,"mtime":1640691716474,"results":"615","hashOfConfig":"310"},{"size":6267,"mtime":1640691716429,"results":"616","hashOfConfig":"310"},{"size":2997,"mtime":1636370661075,"results":"617","hashOfConfig":"310"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},"zdd4px",{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"620"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"620"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"620"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"620"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"620"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"620"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"620"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"620"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"620"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"620"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"620"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"620"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"620"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"680","usedDeprecatedRules":"620"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"620"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"620"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"620"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"620"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"620"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"620"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"620"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"620"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"620"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"620"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"620"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"620"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"620"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"620"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"620"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"620"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"620"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"620"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"620"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"620"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"620"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"620"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"620"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"620"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"620"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"620"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"620"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"620"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"771","usedDeprecatedRules":"620"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"620"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"620"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"620"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"785","usedDeprecatedRules":"620"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"788","usedDeprecatedRules":"620"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"620"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"620"},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"620"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"620"},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"620"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"620"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"620"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"620"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"620"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"620"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"620"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"620"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"620"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"830","usedDeprecatedRules":"620"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"833","usedDeprecatedRules":"620"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"620"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"620"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"620"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"620"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"620"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"853","usedDeprecatedRules":"620"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"856","usedDeprecatedRules":"620"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"620"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862","usedDeprecatedRules":"620"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"620"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"620"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"620"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"620"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"620"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"620"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"620"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"620"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"620"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"896","usedDeprecatedRules":"620"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"620"},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"620"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"620"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"620"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"620"},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"620"},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"620"},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"620"},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"923","usedDeprecatedRules":"620"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"620"},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"620"},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"620"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"620"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"620"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"620"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"620"},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"620"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"620"},{"filePath":"957","messages":"958","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"959","usedDeprecatedRules":"620"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"962","usedDeprecatedRules":"620"},{"filePath":"963","messages":"964","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"965","usedDeprecatedRules":"620"},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"620"},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"971","usedDeprecatedRules":"620"},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"620"},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"620"},{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"620"},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"620"},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"620"},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"989","usedDeprecatedRules":"620"},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"620"},{"filePath":"993","messages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"620"},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"620"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1003","usedDeprecatedRules":"620"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"620"},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"620"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"620"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1017","usedDeprecatedRules":"620"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"620"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"620"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026","usedDeprecatedRules":"620"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1029","usedDeprecatedRules":"620"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"620"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1035","usedDeprecatedRules":"620"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"620"},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043","usedDeprecatedRules":"620"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1046","usedDeprecatedRules":"620"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1049","usedDeprecatedRules":"620"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1052","usedDeprecatedRules":"620"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"620"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"620"},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061","usedDeprecatedRules":"620"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"620"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"620"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"620"},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"620"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"620"},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1079","usedDeprecatedRules":"620"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1082","usedDeprecatedRules":"620"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1087","usedDeprecatedRules":"620"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"620"},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1093","usedDeprecatedRules":"620"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1096","usedDeprecatedRules":"620"},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"620"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1102","usedDeprecatedRules":"620"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"620"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"620"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"620"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"620"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"620"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1122","usedDeprecatedRules":"620"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"620"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"620"},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1133","usedDeprecatedRules":"620"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"620"},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"620"},{"filePath":"1140","messages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"620"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"620"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"620"},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"620"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"620"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"620"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"620"},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"620"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1166","usedDeprecatedRules":"620"},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169","usedDeprecatedRules":"620"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1172","usedDeprecatedRules":"620"},{"filePath":"1173","messages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1175","usedDeprecatedRules":"620"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1180","usedDeprecatedRules":"620"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"620"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"620"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1189","usedDeprecatedRules":"620"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1192","usedDeprecatedRules":"620"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1195","usedDeprecatedRules":"620"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"620"},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1201","usedDeprecatedRules":"620"},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1204","usedDeprecatedRules":"620"},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"620"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"620"},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1213","usedDeprecatedRules":"620"},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1216","usedDeprecatedRules":"620"},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"620"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"620"},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"620"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"620"},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"620"},{"filePath":"1240","messages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"620"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"620"},{"filePath":"1246","messages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"620"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1251","usedDeprecatedRules":"620"},{"filePath":"1252","messages":"1253","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"620"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"620"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"620"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"620"},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"620"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"620"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"620"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"620"},{"filePath":"1276","messages":"1277","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"620"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281","usedDeprecatedRules":"620"},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1284","usedDeprecatedRules":"620"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"620"},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"620"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"620"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"620"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1299","usedDeprecatedRules":"620"},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"620"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"620"},{"filePath":"1306","messages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"620"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1311","usedDeprecatedRules":"620"},{"filePath":"1312","messages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1314","usedDeprecatedRules":"620"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1319","usedDeprecatedRules":"620"},{"filePath":"1320","messages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"620"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325","usedDeprecatedRules":"620"},{"filePath":"1326","messages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"620"},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1331","usedDeprecatedRules":"620"},{"filePath":"1332","messages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"620"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"620"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"620"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1345","usedDeprecatedRules":"620"},{"filePath":"1346","messages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348","usedDeprecatedRules":"620"},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"620"},{"filePath":"1352","messages":"1353","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"620"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"620"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1360","usedDeprecatedRules":"620"},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"620"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"620"},{"filePath":"1367","messages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"620"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1372","usedDeprecatedRules":"620"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1375","usedDeprecatedRules":"620"},{"filePath":"1376","messages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1378","usedDeprecatedRules":"620"},{"filePath":"1379","messages":"1380","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1381","usedDeprecatedRules":"620"},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1384","usedDeprecatedRules":"620"},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"620"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"620"},{"filePath":"1391","messages":"1392","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1393","usedDeprecatedRules":"620"},{"filePath":"1394","messages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"620"},{"filePath":"1397","messages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1399","usedDeprecatedRules":"620"},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1402","usedDeprecatedRules":"620"},{"filePath":"1403","messages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405","usedDeprecatedRules":"620"},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1408","usedDeprecatedRules":"620"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1411","usedDeprecatedRules":"620"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1414","usedDeprecatedRules":"620"},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"620"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1420","usedDeprecatedRules":"620"},{"filePath":"1421","messages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1423","usedDeprecatedRules":"620"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1426","usedDeprecatedRules":"620"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"620"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1432","usedDeprecatedRules":"620"},{"filePath":"1433","messages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1435","usedDeprecatedRules":"620"},{"filePath":"1436","messages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1438","usedDeprecatedRules":"620"},{"filePath":"1439","messages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1441","usedDeprecatedRules":"620"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1444","messages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"620"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1451","usedDeprecatedRules":"620"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1454","usedDeprecatedRules":"620"},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"620"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460","usedDeprecatedRules":"620"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463","usedDeprecatedRules":"620"},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1466","usedDeprecatedRules":"620"},{"filePath":"1467","messages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"620"},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"620"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474","usedDeprecatedRules":"620"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1477","usedDeprecatedRules":"620"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1480","usedDeprecatedRules":"620"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483","usedDeprecatedRules":"620"},{"filePath":"1484","messages":"1485","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486","usedDeprecatedRules":"620"},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489","usedDeprecatedRules":"620"},{"filePath":"1490","messages":"1491","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1492","usedDeprecatedRules":"620"},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495","usedDeprecatedRules":"620"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1498","messages":"1499","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"620"},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1503","usedDeprecatedRules":"620"},{"filePath":"1504","messages":"1505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"620"},"D:\\Mazars\\src\\index.js",[],["1507","1508"],"D:\\Mazars\\src\\reportWebVitals.js",[],"D:\\Mazars\\src\\App.js",["1509"],"import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { positions, Provider, transitions } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport PageNotFound from './components/PageNotFound/PageNotFound'\r\n\r\n\r\n\r\n//user routes\r\nimport Login from './views/Login/Login'\r\nimport SignUp from './views/SignUpForm/SignUp'\r\nimport Dashboard from './views/Dashboard/Dashboard'\r\nimport MyAssingment from './views/MyAssingment/MyAssingment'\r\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\r\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\r\nimport QueriesTab from './views/QueriesTab/QueriesTab'\r\nimport ProposalTab from './views/ProposalTab/ProposalTab'\r\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\r\nimport ProposalReceived from './views/ProposalView/ProposalView'\r\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\r\nimport NewPassword from './views/NewPassword/NewPassword'\r\nimport ChangePassword from './views/ChangePassword/ChangePassword'\r\nimport EditQuery from './views/EditQuery/EditQuery'\r\nimport VideoCall from './views/VideoCall/VideoCall'\r\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\r\nimport schedule from './views/Schedule/schedule'\r\nimport ViewNotification from './views/ViewNotification/ViewNotification'\r\nimport Chatting from './views/Chatting/Chatting'\r\nimport Message from './views/Message/Message'\r\nimport ProposalView from './views/ProposalView/ProposalView'\r\nimport Feedback from './views/Feedback/Feedback'\r\nimport FeedbackData from './views/FeedbackData/FeedbackData'\r\nimport PaymentStatus from './views/PaymentStatus/PaymentStatus'\r\nimport PaymentGateway from \"./views/PaymentGateway.js/PaymentGateway\";\r\nimport ThankYou from \"./views/ThankYou/Thankyou\";\r\nimport payDetails from \"./views/PaymentStatus/PayDetails\";\r\n\r\n\r\n\r\n//admin routes\r\nimport AdminStart from './pages/Admin/Start/Start'\r\nimport AdminLogin from './pages/Admin/Login/Login'\r\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\r\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\r\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\r\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\r\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\r\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\r\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\r\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\r\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\r\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/index'\r\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\r\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\r\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\r\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\r\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\r\nimport AdminForgetPassword from './pages/Admin/ForgetPassword/ForgetPassword'\r\nimport AdminNewPassword from './pages/Admin/NewPassword/NewPassword'\r\nimport AdminQueryRejection from './pages/Admin/QueryRejection/QueryRejection'\r\nimport AdminSchedule from './pages/Admin/Schedule/Schedule'\r\nimport AdminMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\r\nimport AdminChatting from './pages/Admin/Chatting/Chatting'\r\nimport AdminMessage from './pages/Admin/Message/Message'\r\nimport AdminViewNotification from './pages/Admin/ViewNotification/ViewNotification'\r\nimport AdminRecording from './pages/Admin/Recording/Recording'\r\nimport adMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\r\nimport Customer from \"./pages/Admin/customer/Customer\";\r\nimport adminReport from \"./pages/Admin/Report/Report\";\r\nimport AdminInvoice from \"./pages/Admin/Invoice/Invoice\";\r\nimport AdpayDetails from \"./pages/Admin/PaymentStatusTab/Paydetails\";\r\nimport ReportList from \"./pages/Admin/Report/ReportList\"\r\nimport Consalation from './pages/Admin/Report/Consalation';\r\nimport LoginFun from \"./components/LoginForm/LoginFun\";\r\n//TL routes\r\nimport TlStart from './pages/TL/Start/Start'\r\nimport TlLogin from './pages/TL/Login/Login'\r\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\r\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\r\nimport TlAddNew from './pages/TL/AddNew/AddNew'\r\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\r\nimport TlProposalTab from './pages/TL/Proposal/ProposalTab'\r\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\r\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\r\nimport TlEditTP from './pages/TL/EditTP/EditTP'\r\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\r\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\r\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\r\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\r\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\r\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\r\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\r\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\r\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\r\nimport TlForgetPassword from './pages/TL/ForgetPassword/ForgetPassword'\r\nimport TlNewPassword from './pages/TL/NewPassword/NewPassword'\r\nimport TlViewNotification from './pages/TL/ViewNotification/ViewNotification'\r\nimport TlChatting from './pages/TL/Chatting/Chatting'\r\nimport TlMessage from './pages/TL/Message/Message'\r\nimport TlSchedule from './pages/TL/Schedule/Schedule'\r\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\r\nimport TlRecording from './pages/TL/Recording/Recording'\r\nimport TlReport from \"./pages/TL/Report/Report\";\r\nimport TlInvoice from \"./pages/TL/Proposal/Invoice\"\r\nimport TlInvoiceTab from \"./pages/TL/Proposal/InvoiceTab\";\r\nimport TlpayDetails from \"./pages/TL/PaymentStatus/Paydetails\";\r\n// TP routes\r\nimport TpStart from './pages/TP/Start/Start'\r\nimport TpLogin from './pages/TP/Login/Login'\r\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\r\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\r\nimport TpProposalTab from './pages/TP/Proposal/ProposalTab'\r\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\r\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\r\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\r\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\r\nimport TpForgetPassword from './pages/TP/ForgetPassword/ForgetPassword'\r\nimport TpNewPassword from './pages/TP/NewPassword/NewPassword'\r\nimport TpPaymentStatus from './pages/TP/PaymentStatus/PaymentStatus'\r\nimport TpAssignmentTab from './pages/TP/AssignmentTab/AssignmentTab'\r\nimport TpSchedule from './pages/TP/Schedule/Schedule'\r\nimport TpMessage from './pages/TP/Message/Message'\r\nimport TpChatting from './pages/TP/Chatting/Chatting'\r\nimport TpAddAssingmentStages from './pages/TP/AddAssingmentStages/AddAssingmentStages'\r\nimport TpFeedbackTab from './pages/TP/FeedbackTab/FeedbackTab'\r\nimport TpMeetingComponent from './pages/TP/MeetingComponent/MeetingComponent'\r\nimport TpViewNotification from './pages/TP/ViewNotification/ViewNotification'\r\nimport TpRecording from './pages/TP/Recording/Recording'\r\nimport TpReport from \"./pages/TP/Report/Report\";\r\nimport TpInvoice from \"./pages/TP/Invoice/Invoice.js\";\r\nimport TppayDetails from \"./pages/TP/PaymentStatus/Paydetails\";\r\n//private routes\r\nimport PrivateRouteUser from './Service/PrivateRouteUser'\r\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\r\nimport PrivateRouteTL from './Service/PrivateRouteTL'\r\nimport PrivateRouteTP from './Service/PrivateRouteTP'\r\nimport PublicRouteUser from './Service/PublicRouteUser'\r\nimport PublicRouteAdmin from './Service/PublicRouteAdmin'\r\nimport PublicRouteTL from './Service/PublicRouteTL'\r\nimport PublicRouteTP from './Service/PublicRouteTP'\r\n// import PayDetails from \"./views/PaymentStatus/PayDetails\";\r\n\r\n\r\nconst options = {\r\n  timeout: 4000,\r\n  position: positions.TOP_CENTER,\r\n  offset: \"80px\",\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nfunction App() {\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Provider template={AlertTemplate} {...options}>\r\n        <Router>\r\n          <Switch>\r\n\r\n            <PublicRouteUser exact path=\"/\" component={Login} />\r\n            <PublicRouteUser exact path=\"/customer/signup\" component={SignUp} />\r\n            <PublicRouteUser exact path=\"/customer/forget-password\" component={ForgetPassword} />\r\n            <PublicRouteUser exact path=\"/customer/new-password/:id\" component={NewPassword} />\r\n\r\n        \r\n            <PrivateRouteUser exact path=\"/customer/select-category\" component={SelectCategoryPage} />\r\n            <PrivateRouteUser exact path=\"/customer/dashboard\" component={Dashboard} />\r\n            <PrivateRouteUser exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\r\n            <PrivateRouteUser exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\r\n            <PrivateRouteUser exact path=\"/customer/queries\" component={QueriesTab} />\r\n            <PrivateRouteUser exact path=\"/customer/proposal\" component={ProposalTab} />\r\n            <PrivateRouteUser exact path=\"/customer/assignment\" component={AssignmentTab} />\r\n            <PrivateRouteUser exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\r\n            <PrivateRouteUser exact path=\"/customer/change-password\" component={ChangePassword} />\r\n            <PrivateRouteUser exact path=\"/customer/edit-query/:id\" component={EditQuery} />\r\n            <PrivateRouteUser exact path=\"/customer/video-call\" component={VideoCall} />\r\n            <PrivateRouteUser exact path=\"/customer/meeting/:id\" component={MeetingComponent} />\r\n            <PrivateRouteUser exact path=\"/customer/schedule\" component={schedule} />\r\n            <PrivateRouteUser exact path=\"/customer/view-notification/:id\" component={ViewNotification} />\r\n            <PrivateRouteUser exact path=\"/customer/proposal_view/:id\" component={ProposalView} />\r\n            <PrivateRouteUser exact path=\"/customer/message\" component={Message} />\r\n            <PrivateRouteUser exact path=\"/customer/chatting/:id\" component={Chatting} />\r\n            <PrivateRouteUser exact path=\"/customer/feedback/:id\" component={Feedback} />\r\n            <PrivateRouteUser exact path=\"/customer/feedback-data\" component={FeedbackData} />\r\n            <PrivateRouteUser exact path=\"/customer/paymentstatus\" component={PaymentStatus} />\r\n            <PrivateRouteUser exact path=\"/customer/payment\" component={PaymentGateway} />\r\n            <PrivateRouteUser exact path=\"/customer/thankyou\" component={ThankYou} />  \r\n            <PrivateRouteUser exact path=\"/customer/paydetails/:id\" component={payDetails} />\r\n            <PublicRouteAdmin exact path=\"/admin/start\" component={AdminStart} />\r\n            <PublicRouteAdmin exact path=\"/admin/login\" component={AdminLogin} />\r\n            <PublicRouteAdmin exact path=\"/admin/forget-password\" component={AdminForgetPassword} />\r\n            <PublicRouteAdmin exact path=\"/admin/new-password/:id\" component={AdminNewPassword} />\r\n\r\n            <PrivateRouteAdmin exact path=\"/admin/dashboard\" component={AdminDashboard} />\r\n            <PrivateRouteAdmin exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\r\n            <PrivateRouteAdmin exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\r\n            <PrivateRouteAdmin exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/proposal\" component={AdminProposal} />\r\n            <PrivateRouteAdmin exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\r\n            <PrivateRouteAdmin exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\r\n            <PrivateRouteAdmin exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\r\n            <PrivateRouteAdmin exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\r\n            <PrivateRouteAdmin exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\r\n            <PrivateRouteAdmin exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\r\n            <PrivateRouteAdmin exact path=\"/admin/query_rejection/:id\" component={AdminQueryRejection} />\r\n            <PrivateRouteAdmin exact path=\"/admin/schedule\" component={AdminSchedule} />\r\n            <PrivateRouteAdmin exact path=\"/admin/meeting\" component={AdminMeetingComponent} />\r\n            <PrivateRouteAdmin exact path=\"/admin/chatting/:id\" component={AdminChatting} />\r\n            <PrivateRouteAdmin exact path=\"/admin/message\" component={AdminMessage} />\r\n            <PrivateRouteAdmin exact path=\"/admin/view-notification/:id\" component={AdminViewNotification} />\r\n            <PrivateRouteAdmin exact path=\"/admin/recording\" component={AdminRecording} />\r\n            <PrivateRouteAdmin exact path=\"/admin/meeting/:id\" component={adMeetingComponent} />\r\n            <PrivateRouteAdmin exact path=\"/admin/customers\" component={Customer} />\r\n            <PrivateRouteAdmin exact path=\"/admin/reports\" component={adminReport} />\r\n            <PrivateRouteAdmin exact path= \"/admin/adinvoice\" component={AdminInvoice}/>\r\n            <PrivateRouteAdmin exact path=\"/admin/paydetails/:id\" component={AdpayDetails} />\r\n            <PrivateRouteAdmin exact path = \"/admin/reportlist\" component = {ReportList} />\r\n            <PrivateRouteAdmin exact path = \"/admin/consalation\" component = {Consalation} />\r\n            <PublicRouteTL exact path=\"/teamleader/start\" component={TlStart} />\r\n            <PublicRouteTL exact path=\"/teamleader/login\" component={TlLogin} />\r\n            <PublicRouteTL exact path=\"/teamleader/forget-password\" component={TlForgetPassword} />\r\n            <PublicRouteTL exact path=\"/teamleader/new-password/:id\" component={TlNewPassword} />\r\n          \r\n                  \r\n            <PrivateRouteTL exact path=\"/teamleader/dashboard\" component={TlDashboard} />\r\n            <PrivateRouteTL exact path=\"/teamleader/addnew\" component={TlAddNew} />\r\n            <PrivateRouteTL exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\r\n            <PrivateRouteTL exact path=\"/teamleader/proposal\" component={TlProposalTab} />\r\n            <PrivateRouteTL exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\r\n            <PrivateRouteTL exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\r\n            <PrivateRouteTL exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\r\n            <PrivateRouteTL exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\r\n            <PrivateRouteTL exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\r\n            <PrivateRouteTL exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\r\n            <PrivateRouteTL exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\r\n            <PrivateRouteTL exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\r\n            <PrivateRouteTL exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\r\n            <PrivateRouteTL exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\r\n            <PrivateRouteTL exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\r\n            <PrivateRouteTL exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\r\n            <PrivateRouteTL exact path=\"/teamleader/meeting/:id\" component={TlMeetingComponent} />\r\n            <PrivateRouteTL exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\r\n            <PrivateRouteTL exact path=\"/teamleader/schedule\" component={TlSchedule} />\r\n            <PrivateRouteTL exact path=\"/teamleader/view-notification/:id\" component={TlViewNotification} />\r\n            <PrivateRouteTL exact path=\"/teamleader/chatting/:id\" component={TlChatting} />\r\n            <PrivateRouteTL exact path=\"/teamleader/message\" component={TlMessage} />\r\n            <PrivateRouteTL exact path=\"/teamleader/recording\" component={TlRecording} />\r\n            <PrivateRouteTL exact path=\"/teamleader/reports\" component={TlReport}/>\r\n            <PrivateRouteTL exact path=\"/teamleader/invoice\" component={TlInvoice}/>\r\n            <PrivateRouteTL exact path=\"/teamleader/tlinvoice\" component={TlInvoiceTab}/>\r\n            <PrivateRouteTL exact path=\"/teamleader/paydetails/:id\" component={TlpayDetails} />\r\n\r\n            <PublicRouteTP exact path=\"/taxprofessional/start\" component={TpStart} />\r\n            <PublicRouteTP exact path=\"/taxprofessional/login\" component={TpLogin} />\r\n            <PublicRouteTP exact path=\"/taxprofessional/new-password/:id\" component={TpNewPassword} />\r\n            <PublicRouteTP exact path=\"/taxprofessional/forget-password\" component={TpForgetPassword} />\r\n            \r\n            <PrivateRouteTP exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/proposal\" component={TpProposalTab} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\r\n            <PrivateRouteTP exact path =\"/taxprofessional/chatting/:id\" component = {TpChatting} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/addassingment/:id\" component={TpAddAssingmentStages} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/paymentstatus\" component={TpPaymentStatus} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/assignment\" component={TpAssignmentTab} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/schedule\" component={TpSchedule} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/message\" component={TpMessage} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/feedback\" component={TpFeedbackTab} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/meeting/:id\" component={TpMeetingComponent} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/view-notification/:id\" component={TpViewNotification} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/recording\" component={TpRecording} />\r\n            <PrivateRouteTP exact path=\"/taxprofessional/reports\" component={TpReport}/>\r\n            <PrivateRouteTP exact path=\"/taxprofessional/tpinvoice\" component={TpInvoice}/>\r\n            <PrivateRouteTP exact path=\"/taxprofessional/paydetails/:id\" component={TppayDetails} />\r\n            <Route exact path=\"/*\" component={PageNotFound} />\r\n\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// 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\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\Service\\PublicRouteAdmin.js",[],"D:\\Mazars\\src\\Service\\PublicRouteTP.js",["1510"],"import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PublicRoutesTP = ({ component: Component, ...rest }) => {\r\n\r\n\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                const token = window.localStorage.getItem(\"tpkey\");\r\n\r\n                if (token) {\r\n                    return (\r\n                        <>\r\n                            <Redirect to={\"/taxprofessional/dashboard\"} />\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <Component {...props} />\r\n                        </>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PublicRoutesTP;\r\n\r\n\r\n","D:\\Mazars\\src\\Service\\PublicRouteTL.js",[],"D:\\Mazars\\src\\components\\PageNotFound\\PageNotFound.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteTP.js",[],"D:\\Mazars\\src\\views\\MyAssingment\\MyAssingment.js",["1511","1512","1513","1514"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport QueryDetails from \"../../components/QueryDetails/QueryDetails\";\r\nimport moment from 'moment';\r\nfunction MyAssingment(props) {\r\n  const { id } = useParams();\r\n  \r\n  const history = useHistory();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [accept, setAccept] = useState();\r\n  const [finalDate, setFinalDate] = useState()\r\n  const [tlName2, setTlname] = useState();\r\n  const [qstatus, setqStatus] = useState();\r\n  const[tp22, setTp22] = useState();\r\n  const [tpStatus, setTpstatus] = useState();\r\n  const [declined2, setDeclined2] = useState();\r\n  const [declinedStatus, setDeclinedStatus] = useState(false)\r\n    const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    proposal_reactive_dates: \"\",\r\n    proposal_reactive_notes: \"\"\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setqStatus(res.data.result[0].query_status)\r\n          setAccept(res.data.result[0].query_status)\r\n          setTlname(res.data.result[0].tlname);\r\n          setTp22(res.data.result[0].tpname);\r\n          setTpstatus(res.data.result[0].tp_status);\r\n          if(res.data.history_queries[0] === undefined){\r\n\r\n          }\r\n          else{\r\n            setDisplayHistory({\r\n              tlname: res.data.proposal_queries,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          \r\n          }\r\n          if(res.data.result[0].status ==\"Declined Query\"){\r\n        \r\n            let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\r\n              setDeclined2(a)\r\n             setDeclinedStatus(true)\r\n            }\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setPaymentDetails(res.data.payment_detail);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n          setFeedback(res.data.feedback_detail);\r\n          setReports(res.data.reports);\r\n    \r\n         \r\n       \r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n          \r\n          try {\r\n           \r\n            var myYear = JSON.parse(assementItem);\r\n           \r\n            setYear(myYear);\r\n          } catch (e) {\r\n           \r\n          }\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            \r\n            setPurpose(myPurpose);\r\n           \r\n          } catch (e) {\r\n           \r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n              accept : res.data.result[0].accept,\r\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\r\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\r\n            \r\n            });\r\n            let a = moment(res.data.result[0].final_date);\r\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\r\n            let c = a.diff(b)\r\n            let d = moment.duration(c)\r\n            let finalDate = d.days() + 1;\r\n           setFinalDate(finalDate)\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          // if (res.data.history_queries.length > 0) {\r\n          //   setDisplayHistory({\r\n          //     tlname: res.data.history_queries[0].tname,\r\n          //     date_of_allocation:\r\n          //       res.data.history_queries[0].date_of_allocation,\r\n          //   });\r\n          // }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n\r\n  const getQuery = () => {\r\n  if(assingNo === undefined){\r\n    return false\r\n  }\r\n  else{\r\n    axios\r\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n    .then((res) => {\r\n  \r\n      if (res.data.code === 1) {\r\n        setDisplayQuery(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query\">\r\n              <Link\r\n                  to={{\r\n                    pathname: `/customer/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                customerQuery=\"customerQuery\"\r\n                queryDocs={queryDocs}\r\n                purpose={purpose}\r\n                year={year}\r\n                paymentDetails={paymentDetails}\r\n                feedback={feedback}\r\n                reports={reports}\r\n                submitData = {submitData}\r\n                accept = {accept}\r\n                tlName2={tlName2}\r\n                tp22 = {tp22}\r\n                tpStatus={tpStatus}\r\n                qstatus={qstatus}\r\n                finalDate={finalDate}\r\n                declined2={declined2}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MyAssingment;\r\n","D:\\Mazars\\src\\views\\Login\\Login.js",["1515","1516","1517","1518"],"import { useRef, useState, useEffect } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport './style.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport VerifyOTP from \"./VerifyOTP\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nimport LoadingTime from \"../../components/LoadingTime/LoadingTime\";\r\nimport Cookies from \"js-cookie\";\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n  p_password: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction LoginForm() {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [uid, setUid] = useState('')\r\n  const [time, setTime] = useState('');\r\n  const [load, setLoad] = useState(false);\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n\r\n    if (load) {\r\n      LoadingTime.timer2(setTime, setDisabled)\r\n    }\r\n\r\n  }\r\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\r\n    window.location.href = window.location.href.replace('http:', 'https:')\r\n  }\r\n  \r\n  \r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setShow(true)\r\n          console.log(response.data.display_name)\r\n          setLoad(true)\r\n          Cookies.set(\"custName\", response.data.display_name)\r\n          setUid(response.data.user_id)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(response.data.result)\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setEmail(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header noSign=\"noSign\" />\r\n      <h1 style={{ \"textAlign\": \"center\", \"margin\": \"55px 0 30px 0\" }}>\r\n        Would you like to post a query\r\n      </h1>\r\n\r\n\r\n      <div className=\"StartPage\">\r\n        <div className=\"mainContent\">\r\n\r\n          <div className=\"signIn\">\r\n            <div className=\"signBtn\">\r\n              <div className=\"boxOverlay\">\r\n                <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#fff\" }}>\r\n                  For new Client\r\n                </Typography>\r\n                <button className=\"btn btn-success\">\r\n                  <Link className=\"SignUpLink\"\r\n                    to={{\r\n                      pathname: \"/customer/signup\",\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"signUp\">\r\n            <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#2b345f\" }}>\r\n              For existing Client\r\n            </Typography>\r\n            {\r\n              show ? <div className=\"customForm\">\r\n\r\n                <VerifyOTP email={email} uid={uid} time={time} setLoad={setLoad}\r\n                  setDisabled={setDisabled} disabled={disabled} setLoading={setLoading}\r\n                  loading={loading} />\r\n              </div>\r\n                :\r\n                <div className=\"customForm\">\r\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"signInForm\"  autocomplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"form-label\">Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        autocomplete=\"off\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group passForm \">\r\n                      <label className=\"form-label\">Password <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_password,\r\n                        })}\r\n                        name=\"p_password\"\r\n                        autocomplete=\"off\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      \r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon-login`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                    </div>\r\n\r\n                    <div style={{ display: \"flex\", margin: \"0 0 30px 0\", justifyContent: \"flex-end\" }}>\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/customer/forget-password\",\r\n                          email: `${email}`,\r\n                        }}\r\n                      >\r\n                        Forgot Password\r\n                      </Link>\r\n                    </div>\r\n\r\n                    {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-success\" type=\"submit\">\r\n                          Send OTP\r\n                        </button>\r\n                    }\r\n\r\n                  </form>\r\n                </div>\r\n            }\r\n            <Mandatory />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n","D:\\Mazars\\src\\components\\LoginForm\\LoginFun.js",["1519","1520"],"import React from 'react';\r\nimport { useState, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../config/config';\r\nimport { useHistory } from 'react-router';\r\nimport { useAlert } from \"react-alert\";\r\nimport Login from '../../pages/Admin/Login/Login';\r\nimport Alerts from '../../common/Alerts';\r\nimport LoginForm from './LoginForm';\r\nconst LoginData = createContext();\r\nconst LoginFun = () => {\r\n  const alert = useAlert();\r\n  let history = useHistory();\r\n    const [email, setEmail] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [uid, setUid] = useState('')\r\n    const [isPasswordShow, setPasswordShow] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    const togglePasssword = () => {\r\n      setPasswordShow(!isPasswordShow)\r\n    };\r\n  \r\n    const onSubmit = (value) => {\r\n    \r\n      setLoading(true)\r\n  \r\n      let formData = new FormData();\r\n      formData.append(\"userid\", value.p_email);\r\n      formData.append(\"password\", value.password);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/login`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n  \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n            setUid(response.data[\"user id\"])\r\n            logout();\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Invalid email or password.\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 600000)\r\n  }\r\n    const handleChange = (e) => {\r\n  \r\n      setEmail(e.target.value);\r\n    };\r\n   \r\n  const valData = { handleChange, onSubmit, togglePasssword, isPasswordShow, email, show, uid, loading, setLoading}\r\n  return(\r\n      <>\r\n      <LoginData.Provider value={valData}>\r\n          <Login />\r\n          \r\n      </LoginData.Provider>\r\n      </>\r\n  )\r\n}\r\nexport default LoginFun;\r\nexport {LoginData}","D:\\Mazars\\src\\views\\ForgetPassword\\ForgetPassword.js",["1521","1522","1523","1524"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n});\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"p\", \"forgot\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\r\n          props.history.push(`/customer/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n       \r\n          Alerts.ErrorNormal(\"Invalid email.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"undefined\") {\r\n      \r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n\r\n         \r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n                {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Get OTP\r\n                      </button>\r\n                       <Link to=\"/\" style={{ \"margin\": \"10px\" }}>\r\n                       <button type=\"submit\" className=\"btn btn-secondary\">\r\n                         Cancel\r\n                       </button>\r\n                     </Link>\r\n                     </>\r\n                    }\r\n                \r\n               \r\n              </form>\r\n          \r\n          <Mandatory />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\Service\\PublicRouteUser.js",[],"D:\\Mazars\\src\\views\\AddFressAssignment\\AddFreshAssingment.js",[],"D:\\Mazars\\src\\views\\AssignmentTab\\AssignmentTab.js",["1525"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport InprogressAssignment from \"./InprogressAssignment\";\r\nimport CompletedAssignment from \"./CompletedAssignment\";\r\nimport CustomerDeclinedPayment from \"./CustomerDeclinedPayment\";\r\n\r\n\r\n\r\nfunction AssignmentTab(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allassignment, setAllAssignment] = useState(\"\");\r\n  const [inprogressAssignmentCount, setInprogressAssignmentCount] = useState(\"\");\r\n  const [completeAssignment, setCompleteAssignment] = useState(\"\");\r\n  const [declinedAssignment, setDeclinedAssignment] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllAssignment();\r\n    getInprogressAssignment();\r\n    getCompletedAssignment();\r\n    getCustomerDeclinedPayment();\r\n  }, []);\r\n\r\n\r\n  const getAllAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        setAllAssignment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getInprogressAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`)\r\n      .then((response) => {\r\n       \r\n        if (response.data.code === 1) {\r\n          setInprogressAssignmentCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n  const getCompletedAssignment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setCompleteAssignment(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getCustomerDeclinedPayment = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`)\r\n      .then((response) => {\r\n     \r\n        if (response.data.code === 1) {\r\n          setDeclinedAssignment(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex === 0 ? myStyle2 : myStyle1}>\r\n              All Assignment ({allassignment})\r\n            </Tab>\r\n            <Tab style={tabIndex === 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Assignments ({inprogressAssignmentCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex === 2 ? myStyle2 : myStyle1}>\r\n              Completed; Assignments ({completeAssignment})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex === 3 ? myStyle2 : myStyle1}>\r\n              Client Declined; Payment ({declinedAssignment})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <CompletedAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <CustomerDeclinedPayment />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\Schedule\\schedule.js",[],"D:\\Mazars\\src\\views\\Dashboard\\Dashboard.js",["1526","1527","1528","1529","1530","1531","1532","1533","1534"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Dashboard() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\nconst sessionId =  window.sessionStorage.getItem(\"userIdsession\")\r\nlet history= useHistory()\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n\r\n    allassignment: '',\r\n    inprogress: '',\r\n    complete: '',\r\n    customer_declined_Pay: '',\r\n\r\n\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress,\r\n    allassignment, inprogress, complete,\r\n    customer_declined_Pay,\r\n    paid, unpaid, totalpayment,\r\n  } = allQueries;\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"userid\")\r\n  localStorage.removeItem(\"custEmail\")\r\n  history.push(\"/\")\r\n}\r\nconsole.log(\"sessionStorage\", window.sessionStorage)\r\n  useEffect(() => {\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/totalComplete?uid=${JSON.parse(userId)}`)\r\n        .then((response) => {\r\n\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n\r\n\r\n              allassignment: response.data.result.assignment.allassignment,\r\n              inprogress: response.data.result.assignment.inprogress,\r\n              complete: response.data.result.assignment.complete,\r\n              customer_declined_Pay: response.data.result.assignment.customer_declined_payment,\r\n\r\n\r\n\r\n              totalpayment: response.data.result.payments.totalpayment,\r\n              paid: response.data.result.payments.paid,\r\n              unpaid: response.data.result.payments.unpaid,\r\n\r\n\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n      \r\n        });\r\n    };\r\n\r\n\r\n    getAllQueries();\r\n  }, []);\r\n\r\n\r\n  return (\r\n  <>\r\n  {sessionId ? \r\n  <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n\r\n  <div className=\"row\">\r\n    <div className=\"col-md-3 content_header\">\r\n      <table className=\"table table-striped first main_table\">\r\n        <thead className=\"query_thead\">\r\n          <tr>\r\n            <th className=\"left_side\"> All Queries</th>\r\n            <th>{total}</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <table className=\"table table-striped second main_table\">\r\n        <thead className=\"query_thead\">\r\n          <tr>\r\n            <th className=\"left_side\">Inprogress; Queries</th>\r\n            <th>{inprogress_queries}</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"table_body\">\r\n          <tr>\r\n            <td className=\"left_side\">Inprogress; Allocation</td>\r\n            <td>{inprogress_allocation}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"left_side\">Inprogress; Proposals</td>\r\n            <td>{inprogress_proposal}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"left_side\">Inprogress; Assignments</td>\r\n            <td>{inprogress_assignment}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      {inprogress_queries != 0 || declined_queries != 0 ? <>\r\n        <table className=\"table table-striped third main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Completed; Queries</th>\r\n              <th>{complete_query}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Completed; Assignments</td>\r\n              <td>{complete_query}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {complete_query != 0  || declined_queries != 0 ? <>\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Client Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Client Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Client Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </> : \"\"}   </> : \"\"}   </div>\r\n    {allproposal != 0 ? <>\r\n      <div className=\"col-md-3 content_header\">\r\n\r\n        <table className=\"table table-striped fifth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Proposals</th>\r\n              <th>{allproposal}</th>\r\n\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped sixth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Proposals</th>\r\n              <th>{InProgress}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody classNameName=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Preparation</td>\r\n              <td>{inprogress_preparation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Acceptance</td>\r\n              <td>{inprogress_acceptance}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table className=\"table table-striped seventh main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Accepted; Proposals </th>\r\n              <th>{accepted_proposals}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped eight main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Client Declined; Proposals</th>\r\n              <th>{declined}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n      {allassignment != 0 ? <>\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{allassignment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Client Declined; Payment</th>\r\n                <th>{customer_declined_Pay}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n        {totalpayment != 0 ? <>\r\n\r\n          <div className=\"col-md-3 content_header\">\r\n\r\n            <table className=\"table table-striped twelvth main_table\">\r\n              <thead className=\"payment_thead\">\r\n                <tr>\r\n                  <th className=\"left_side\">All Payments</th>\r\n                  <th>{totalpayment}</th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n            <table className=\"table table-striped thirteen main_table\">\r\n              <thead className=\"payment_thead2\">\r\n                <tr>\r\n                  <th className=\"left_side\">Paid</th>\r\n                  <th>{paid}</th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n\r\n            <table className=\"table table-striped thirteen main_table\">\r\n              <thead className=\"payment_thead2\">\r\n                <tr>\r\n                  <th className=\"left_side\">Unpaid</th>\r\n                  <th>{unpaid}</th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n        </> : \"\"} </> : \"\"}  </> : \"\"}  </div>\r\n\r\n</Layout> : \r\n<>\r\n{logout()}\r\n</>}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Mazars\\src\\views\\QueriesTab\\QueriesTab.js",["1535","1536","1537","1538","1539","1540"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllQueriesData from \"./AllQueriesData\";\r\nimport InprogressAllocation from \"./InprogressAllocation\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport DeclinedQueries from \"./DeclinedQueries\";\r\n\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\r\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAllQueriesCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Completed; Queries ({inprogressProposal})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\ProposalTab\\ProposalTab.js",["1541","1542","1543","1544","1545"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction Proposal(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllProposal();\r\n    getInprogressProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n\r\n  const getAllProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n\r\n        setAllProposalCount(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getInprogressProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n      .then((response) => {\r\n      \r\n        if (response.data.code === 1) {\r\n          setInprogressProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n  const getAcceptedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAcceptedProposalCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n      .then((response) => {\r\n        \r\n        if (response.data.code === 1) {\r\n          setDeclinedProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({inprogressProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedProposal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js",["1546","1547","1548"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\r\n\r\nfunction SelectCategoryPage() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SelectCategoryPage;\r\n","D:\\Mazars\\src\\views\\NewPassword\\NewPassword.js",["1549","1550","1551","1552","1553","1554"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n  const getTime = () => {\r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n      }\r\n      setLoad(false)\r\n      timer(180);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n   \r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password reset successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          \r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime}\r\n                setLoad={setLoad} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/customer/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\Mazars\\src\\views\\VideoCall\\VideoCall.js",[],"D:\\Mazars\\src\\views\\ProposalView\\ProposalView.js",["1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport TermsConditions from \"./TermsConditions\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport RejectedModal22 from \"./RejectedModal22\";\r\n\r\n\r\nfunction ProposalView(props) {\r\n  const { handleSubmit, register } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [queryStatus, setQueryStatus] = useState(null);\r\n  const [custcheckError, setCheckerror] = useState(null);\r\n  const [valueCheckBox, setValueCheckBox] = useState(false);\r\n  const [rejectedBox, showRejectedBox] = useState(false)\r\n  const [assignNo2, setAssignNo2] = useState()\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    proposal_date: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const { amount, proposal_date,\r\n    name, description,\r\n    amount_type, amount_fixed, amount_hourly,\r\n    payment_terms,\r\n    no_of_installment,\r\n    installment_amount,\r\n    due_date,\r\n  } = diaplayProposal\r\n\r\n\r\n  useEffect(() => {\r\n    getProposalDetails();\r\n  }, []);\r\n\r\n  const getProposalDetails = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/getQueryDetails?id=${id}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n        \r\n\r\n          if (res.data.result[0].query_status) {\r\n            setQueryStatus(res.data.result[0].query_status);\r\n          }\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              name: res.data.proposal_queries[0].tlname,\r\n              description: res.data.proposal_queries[0].description,\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n            });\r\n          }\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  var nfObject = new Intl.NumberFormat('hi-IN')\r\n  const readTerms = () => {\r\n \r\n    setPaymentModal(!addPaymentModal);\r\n  };\r\n\r\n\r\n  const updateCheckbox = ({ checked }) => {\r\n    setValueCheckBox(checked)\r\n    setPaymentModal(checked);\r\n    setCheckerror(\"\")\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n\r\n    if (valueCheckBox === false) {\r\n     \r\n      setCheckerror(\"Please , You have to select\")\r\n    }\r\n    else {\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n      formData.append(\"id\", id);\r\n      formData.append(\"status\", 5);\r\n      formData.append(\"terms_condition\", Number(value.p_terms_condition));\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/ProposalAccept`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var variable = \"\"\r\n            Alerts.SuccessNormal(variable)\r\n            history.push({\r\n              pathname: `/customer/proposal`,\r\n              index: 0,\r\n            });\r\n          } if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    }\r\n\r\n  };\r\n\r\nconst amountStyle  = {\r\n  display : \"block\",\r\n  textAlign : \"right\",\r\n  marginRight : \"50px\"\r\n}\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n   \r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n  const installAmount2 = (data) => {\r\n    var item = data.split(',')\r\n   \r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p style={amountStyle}>{nfObject.format(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n  // curent date\r\n  var date = new Date();\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n\r\n\r\n  //rejected\r\n  const rejected = (id) => {\r\n   \r\n    if (valueCheckBox === false) {\r\n   \r\n      setCheckerror(\"Please , You have to select\")\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Are you sure\",\r\n         text: \"to reject proposal ?\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, reject it\",\r\n       \r\n      }).then((result) => {\r\n        if (result.value) {\r\n          deleteCliente(id);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // delete data\r\n  const deleteCliente = (key) => {\r\n    setAssignNo2(id)\r\n    showRejectedBox(!rejectedBox)\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\r\n            </Col>\r\n            <Col\r\n              md=\"4\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            ></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(proposal_date)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{nfObject.format(amount)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Scope of Work</th>\r\n                <td>{description}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Amount</th>\r\n                <td>\r\n                  <tr>\r\n                    <th>Amount Type</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\r\n                    <td>\r\n                      {\r\n                        amount_type == \"fixed\" ?\r\n                          nfObject.format(amount)\r\n                          :\r\n                          amount_type == \"hourly\" ?\r\n                            nfObject.format(amount_hourly)\r\n                            :\r\n                            amount_type == \"mixed\" ?\r\n                              <div>\r\n                                <p>Fixed : {nfObject.format(amount)}</p>\r\n                                <p>Hourly : {nfObject.format(amount_hourly)}</p>\r\n                              </div>\r\n                              :\r\n                              \"\"\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">Payment Terms</th>\r\n                {\r\n                  payment_terms == \"lumpsum\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Payment Type</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\r\n                        <td>\r\n                          {CommonServices.removeTime(due_date)}\r\n                        </td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    payment_terms == \"installment\" ?\r\n                      <td>\r\n                        <tr>\r\n                          <th>Payment Type</th>\r\n                          <th>No of Installments</th>\r\n                          <th>Installment Amount</th>\r\n                          <th>Due Dates</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>{payment_terms}</td>\r\n                          <td>{no_of_installment}</td>\r\n                          <td>{installAmount2(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                        </tr>\r\n                      </td>\r\n                      :\r\n                      \"\"\r\n                }\r\n\r\n\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposal Status</th>\r\n                <td>\r\n                  {queryStatus == \"4\" && \"Inprogress\"}\r\n                  {queryStatus == \"6\" && \"Declined\"}\r\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n\r\n          </table>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    id=\"terms_condition\"\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"p_terms_condition\"\r\n                    ref={register}\r\n                    onChange={(e) => updateCheckbox(e.target)}\r\n                  />\r\n                  <label\r\n                    htmlFor=\"terms_condition\"\r\n                    className=\"form-check-label\"\r\n                    title=\"Read\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    Engagement Letter\r\n                  </label>\r\n                  <p className=\"declined\">{custcheckError}</p>\r\n                </div>\r\n                <br />\r\n\r\n                {\r\n                  loading ?\r\n                    <Loader />\r\n                    :\r\n                    <>\r\n                      <div className=\"form-check\">\r\n                        {\r\n                          valueCheckBox ?\r\n                            <div>\r\n                              <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Accept\r\n                              </button>\r\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => rejected(id)}>\r\n                                Reject\r\n                              </button>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                              <button type=\"submit\" className=\"btn btn-primary\" disabled>\r\n                                Accept\r\n                              </button>\r\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" disabled>\r\n                                Reject\r\n                              </button>\r\n                            </div>\r\n                        }\r\n                      </div>\r\n                    </>\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n\r\n\r\n        </CardBody>\r\n\r\n        <TermsConditions\r\n          readTerms={readTerms}\r\n          addPaymentModal={addPaymentModal}\r\n          id={id}\r\n        />\r\n         <RejectedModal22\r\n                    showRejectedBox = {showRejectedBox} \r\n                    rejectedBox = {rejectedBox}\r\n                    // getQueriesData = {getQueriesData}\r\n                    assignNo={assignNo2}\r\n                    deleteCliente = {deleteCliente}/>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProposalView;\r\n","D:\\Mazars\\src\\views\\EditQuery\\EditQuery.js",["1572","1573","1574","1575","1576","1577","1578","1579"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ImageUrl } from \"../../config/config\";\r\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport DeleteQuery from \"./DeleteQuery\";\r\nimport Swal from \"sweetalert2\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport classNames from \"classnames\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nfunction EditQuery(props) {\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  \r\n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\r\n    defaultValues: {\r\n      users: [{ query: \"\" }],\r\n    },\r\n  });\r\n\r\n  const { append, remove, fields } = useFieldArray({\r\n    control,\r\n    name: \"users\",\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const category = window.localStorage.getItem(\"category\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [custcheckError, setCheckerror] = useState(null);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n const [qno, setQno] = useState()\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [purposeOption, setPurposeOption] = useState([]);\r\n  const [selectError, setSelectError] = useState()\r\n  const [assessmentYear, setAssessmentYear] = useState([]);\r\n    const [value2 , setValue2] = useState();\r\n    const [val3, setVal3] = useState()\r\n    const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\r\n  const purPoseQuery = (e) => {\r\n    setSelectError(\"\")\r\n    setPurposeOption(e)\r\n\r\n  }\r\n  const remError = () => {\r\n    setCheckerror(\"\")\r\n  }\r\n \r\n  useEffect(() => {\r\n    getAssementYear();\r\n    getQuery();\r\n   \r\n  }, []);\r\n\r\n \r\n  const getAssementYear = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getAssesmentYear`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setAssessmentYear(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\r\n\r\n      if (res) {\r\n        var specific = res.data.result[0].specific_query;\r\n        if (specific == \"undefined\") {\r\n        } else var sepData = JSON.parse(specific);\r\n        reset({\r\n          users: sepData,\r\n        });\r\n         setQno(res.data.result[0].assign_no)\r\n        var value = res.data.result[0].assessment_year;\r\n        var purposeItem = res.data.result[0].purpose_opinion;\r\n\r\n\r\n        try {\r\n         \r\n          var myPurpose = JSON.parse(purposeItem);\r\n\r\n         \r\n          setPurposeOption(myPurpose);\r\n        } catch (e) {\r\n          \r\n        }\r\n        try {\r\n          var myObj = JSON.parse(value);\r\n         \r\n\r\n          setSelectedOption(myObj);\r\n        \r\n        } catch (e) {\r\n          \r\n        }\r\n       \r\n        setValue2(res.data.result[0].fact_case);\r\n     \r\n      //  setValue(\"fact_case\", res.data.result[0].fact_case);\r\n        setValue(\"case_name\", res.data.result[0].case_name);\r\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\r\n        setValue(\r\n          \"p_Softcopy_digital\",\r\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\r\n        );\r\n        setValue(\r\n          \"p_Softcopy_physical\",\r\n          Boolean(+res.data.result[0].printout_physically_assigned)\r\n        );\r\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\r\n        setQueryDocs(res.data.queries_document);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    \r\n    if (purposeOption < 1) {\r\n      setSelectError(\"At least one value should be enter\")\r\n    }\r\n    else if (value.p_Softcopy_word === false && value.p_Softcopy_digital === false && value.p_Softcopy_physical === false) {\r\n    \r\n      setCheckerror(\"Please select at least one.\")\r\n    }\r\n    else {\r\n      const timer = setInterval(() => {\r\n        setUploadOrDownloadCount(\r\n          (beforeValue) => (beforeValue >= 90 ? 90 \r\n                            : beforeValue + 10));\r\n      }, 800);\r\n      setLoading(true)\r\n     \r\n\r\n      var uploadImg = value.uploadImg;\r\n      if(uploadImg === undefined){\r\n        uploadImg = 0;\r\n      }\r\n      let formData = new FormData();\r\n     \r\n      if (uploadImg) {\r\n        for (var i = 0; i < uploadImg.length; i++) {\r\n          let file = uploadImg[i];\r\n          formData.append(\"upload_1[]\", file);\r\n        }\r\n      }\r\n   \r\n      formData.append(\"fact\", value2);\r\n      formData.append(\"specific\", JSON.stringify(value.users));\r\n      formData.append(\"timelines\", value.p_timelines);\r\n      formData.append(\"user\", JSON.parse(userId));\r\n      formData.append(\"id\", id);\r\n      formData.append(\"cid\", JSON.parse(category));\r\n      formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\r\n      formData.append(\r\n        \"softcopy_digitally_assigned\",\r\n        Number(value.p_Softcopy_digital)\r\n      );\r\n      formData.append(\r\n        \"printout_physically_assigned\",\r\n        Number(value.p_Softcopy_physical)\r\n      );\r\n      formData.append(\"case_name\", value.case_name);\r\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\r\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\r\n\r\n      axios\r\n        .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setUploadOrDownloadCount(100)\r\n            var message = response.data.message\r\n            if (message == \"\") {\r\n              Swal.fire(\r\n                \"Success\",\r\n                `Query updated successfully.`,\r\n                \"success\"\r\n              )\r\n            } else if (message.invalid) {\r\n              Swal.fire({\r\n                title: 'Error !',\r\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n              })\r\n            }\r\n            else if (message.faill) {\r\n              Swal.fire({\r\n                title: 'Success !',\r\n                html: `<p>Query Updated Successfully.</p>\r\n                <br/><p class=\"text-danger\"> ${message.faill}</p>`,\r\n                icon: 'success',\r\n              })\r\n            }\r\n            props.history.push(\"/customer/queries\");\r\n          } else {\r\n            setLoading(true)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Update Query - {qno}</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <DeleteQuery id={id} setLoading={setLoading}/>\r\n            </Col>\r\n          </Row>\r\n         \r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n         \r\n            <div className=\"container-fluid\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Facts of the case <span className=\"declined\">*</span></label>\r\n                     \r\n                        <CKEditor\r\n                     editor={ ClassicEditor }\r\n                     config = {{\r\n\r\n                      highlight: {\r\n                        options: [\r\n                            {\r\n                                model: 'greenMarker',\r\n                                class: 'marker-green',\r\n                                title: 'Green marker',\r\n                                color: 'var(--ck-highlight-marker-green)',\r\n                                type: 'marker'\r\n                            },\r\n                            {\r\n                                model: 'redPen',\r\n                                class: 'pen-red',\r\n                                title: 'Red pen',\r\n                                color: 'var(--ck-highlight-pen-red)',\r\n                                type: 'pen'\r\n                            }\r\n                        ]\r\n                    },\r\n                      fontFamily: {\r\n                        options: [\r\n                            'default',\r\n                            'Ubuntu, Arial, sans-serif',\r\n                            'Ubuntu Mono, Courier New, Courier, monospace'\r\n                        ]\r\n                    },\r\n                    fontColor: {\r\n                      colors: [\r\n                          {\r\n                              color: 'hsl(0, 0%, 0%)',\r\n                              label: 'Black'\r\n                          },\r\n                          {\r\n                              color: 'hsl(0, 0%, 30%)',\r\n                              label: 'Dim grey'\r\n                          },\r\n                          {\r\n                              color: 'hsl(0, 0%, 60%)',\r\n                              label: 'Grey'\r\n                          },\r\n                          {\r\n                              color: 'hsl(0, 0%, 90%)',\r\n                              label: 'Light grey'\r\n                          },\r\n                          {\r\n                              color: 'hsl(0, 0%, 100%)',\r\n                              label: 'White',\r\n                              hasBorder: true\r\n                          },\r\n\r\n                          // ...\r\n                      ]\r\n                  },\r\n                    toolbar: [\r\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\r\n                    ],\r\n                  \r\n                    }}\r\n                    \r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fact,\r\n                    })}\r\n                    id=\"textarea22\"\r\n                    rows=\"6\"\r\n                    name=\"p_fact\"\r\n                   data={value2}\r\n                    onChange={ ( event, editor ) => {\r\n                      setValue2(editor.getData());\r\n                      // setcustError(\"\")\r\n                    \r\n                  } }\r\n                    //ref={register({ required: true })}\r\n                >\r\n                  \r\n                  </CKEditor>\r\n                      </div>\r\n                    </div>\r\n</div>\r\n<div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"question_query mb-2\">\r\n                        <label className=\"form-label\">\r\n                          Specific Questions for advisory <span className=\"declined\">*</span>\r\n                        </label>\r\n                        <div\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => append({ query: \"\" })}\r\n                        >\r\n                          +\r\n                        </div>\r\n                      </div>\r\n\r\n                      {fields.map((item, index) => (\r\n                        <div className=\"question_query_field mb-2\" key={item.id}>\r\n                          <input\r\n                            type=\"text\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.users,\r\n                            })}\r\n                            ref={register}\r\n                            name={`users[${index}].query`}\r\n                            defaultValue={`${item.query}`}\r\n                            placeholder=\"Specify your query\"\r\n                            ref={register({ required: true })}\r\n                          />\r\n                          <div\r\n                            className=\"btn btn-primary ml-2\"\r\n                            onClick={() => remove(index)}\r\n                          >\r\n                            -\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Purpose for which Opinion is sought <span className=\"declined\">*</span>\r\n                        </label>\r\n                        <Select\r\n                          closeMenuOnSelect={false}\r\n                          className={selectError ? \"customError\" : \"\"}\r\n                          onChange={purPoseQuery}\r\n                          value={purposeOption}\r\n                          isMulti\r\n                          options={purpose}\r\n                        />\r\n                      </div>\r\n                     \r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Assessment year</label>\r\n\r\n                        <Select\r\n                          closeMenuOnSelect={false}\r\n                          onChange={setSelectedOption}\r\n                          value={selectedOption}\r\n                          isMulti\r\n                          options={assessmentYear}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <ImageUploads register={register} control={control} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Format in which Opinion is required\r\n                        </label>\r\n                        <br />\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            id=\"a1\"\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            onChange={remError}\r\n                            name=\"p_Softcopy_word\"\r\n                            ref={register}\r\n                          />\r\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\r\n                            Softcopy - Word/ Pdf\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            id=\"a2\"\r\n                            className=\"form-check-input\"\r\n                            onChange={remError}\r\n                            type=\"checkbox\"\r\n                            name=\"p_Softcopy_digital\"\r\n                            ref={register}\r\n                          />\r\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\r\n                            SoftCopy- Digitally Signed\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            id=\"a3\"\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            onChange={remError}\r\n                            name=\"p_Softcopy_physical\"\r\n                            ref={register}\r\n                          />\r\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\r\n                            Printout- Physically Signed\r\n                          </label>\r\n                        </div>\r\n                        <p className=\"declined\">{custcheckError}</p>  </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Timelines within which Opinion is Required\r\n                        </label>\r\n                        <br />\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"p_timelines\"\r\n                            ref={register}\r\n                            value=\"Urgent, (4-5 Working Days)\"\r\n                          // disabled\r\n                          />\r\n                          <label>Urgent, (4-5 Working Days)</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"p_timelines\"\r\n                            ref={register}\r\n                            value=\"Regular (10-12 Working Days)\"\r\n                          // disabled\r\n                          />\r\n                          <label>Regular (10-12 Working Days)</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Display Documents</label>\r\n                        <br />\r\n\r\n                        <>\r\n                          <div>\r\n                            {queryDocs.map((p, i) => (\r\n                              <ul style={{listStyle : \"none\"}}>\r\n                                <li>\r\n                                  <a\r\n                                    href={`${ImageUrl}/${p.assign_no}/${p.name}`}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                  <em>\r\n                                    {++i}\r\n                                    </em>  <i\r\n                                      class=\"fa fa-photo\"\r\n                                      style={{ width: \"50\", height: \"20\" }}\r\n                                    ></i>\r\n                                    <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\r\n                                  </a>\r\n                                </li>\r\n                              </ul>\r\n                            ))}\r\n\r\n                          </div>\r\n                        </>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Case name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"case_name\"\r\n                          ref={register}\r\n                          className=\"form-control\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                      loading ?\r\n                      <Box position=\"relative\" display=\"inline-flex\">\r\n                      <CircularProgress variant=\"determinate\" \r\n                                        value={uploadOrDownloadCount} />\r\n                      <Box\r\n                        bottom={0}\r\n                        right={0}\r\n                        top={0}\r\n                        justifyContent=\"center\"\r\n                        left={0}\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        position=\"absolute\"\r\n                      >\r\n                        {`${Math.round(uploadOrDownloadCount)}%`}\r\n                      </Box>\r\n                    </Box>\r\n                            \r\n                        :\r\n                        <button className=\"btn btn-success\" type=\"submit\">\r\n                          Update\r\n                        </button>\r\n                    }\r\n                </form>\r\n\r\n              </div>\r\n\r\n              <Mandatory />\r\n            </div>\r\n       \r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditQuery;\r\n\r\nconst ImageUploads = ({ register, control }) => {\r\n  const { append, fields, remove } = useFieldArray({\r\n    control,\r\n    name: \"upload\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question_query mb-2\">\r\n        <label className=\"form-label\">Upload Your Document</label>\r\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\r\n        <PublishIcon color=\"secondary\" />\r\n        </div>\r\n      </div>\r\n\r\n      {fields.map((item, index) => (\r\n        <>\r\n        {index === 0 ? \r\n        <div className=\"question_query_field mb-2\" key={index}>\r\n        <input\r\n          type=\"file\"\r\n          name= \"uploadImg\"\r\n          multiple={true}\r\n          ref={register()}\r\n          className=\"form-control-file manage_file\"\r\n          defaultValue={item.pics}\r\n        />\r\n        <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\r\n          -\r\n        </div>\r\n      </div> : \"\"}\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst purpose = [\r\n  { value: \"Assessment\", label: \"Assessment\" },\r\n  { value: \"Appeal\", label: \"Appeal\" },\r\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\r\n  {\r\n    value: \"Filing before any Authority\",\r\n    label: \"Filing before any Authority\",\r\n  },\r\n  { value: \"Others\", label: \"Others\" },\r\n];\r\n\r\n","D:\\Mazars\\src\\views\\Feedback\\Feedback.js",["1580","1581"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_feedback: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Feedback() {\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [loading, setLoading] = useState(false);\r\n \r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"feedback\", value.p_feedback);\r\n    formData.append(\"user_id\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostUserFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          reset();\r\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\r\n          history.push({\r\n            pathname: `/customer/queries`,\r\n            index: 0,\r\n          });\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <ArrowBackIcon />\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Feedback</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n         \r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={id}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Feedback</label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_feedback,\r\n                          })}\r\n                          placeholder=\"Feedback text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_feedback\"\r\n                        ></textarea>\r\n                        {errors.p_feedback && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_feedback.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                       \r\n                  {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                         Submit\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentStatus.js",["1582","1583","1584","1585"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\nimport AllPayment from \"./AllPayment\";\r\n\r\n\r\n\r\nfunction PaymentStatus(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n      \r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n      \r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n      \r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\ViewNotification\\ViewNotification.js",["1586"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\views\\ThankYou\\Thankyou.js",[],"D:\\Mazars\\src\\views\\MeetingComponent\\MeetingComponent.js",["1587","1588"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Meeting from \"../../components/meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    \r\n      <Meeting id={props.match.params.id}/>\r\n   \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;\r\n","D:\\Mazars\\src\\views\\Chatting\\Chatting.js",["1589","1590","1591","1592","1593"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const [loading, setLoading] = useState(false);\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n  useEffect(() => {\r\n    \r\n    const dataItem = props.location.obj\r\n \r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataCust\");\r\n    var data2 = JSON.parse(myData)\r\n   \r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\nconsole.log(\"data\", data)\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          reset();\r\n          var variable = \"Message sent successfully. \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n         \r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.message_type,\r\n                            })}\r\n                            name=\"message_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n\r\n                        {errors.message_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.message_type.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      \r\n                  {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                         Send\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n         \r\n        </CardBody>\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\views\\ChangePassword\\ChangePassword.js",["1594","1595","1596"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ChangePassword(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [show, setShow] = useState(false);\r\n  const [display, setDisplay] = useState(false);\r\n  const [time, setTime] = useState('')\r\n  const [load, setLoad] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n  const getTime = () => {\r\n\r\n\r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n      }\r\n      timer(180);\r\n    }\r\n  }\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    setEmail(value.p_email)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userId));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n\r\n    if (display) {\r\n      let formData = new FormData();\r\n      formData.append(\"email\", value.p_email);\r\n      formData.append(\"uid\", JSON.parse(userId));\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/regenrateotp`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setLoad(true)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Please enter correct details\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        ShowError.LoadingError(setLoading)\r\n        });\r\n      return false\r\n    }\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/passChange`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(\"/customer/dashboard\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        \r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       ShowError.LoadingError(setLoading)\r\n      });\r\n  };\r\n\r\n\r\n\r\n  //setotp\r\n  const setOtp = () => {\r\n    setDisplay(false)\r\n  }\r\n\r\n  //get OTP\r\n  const getOtp = () => {\r\n    setDisplay(true)\r\n  }\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter email id\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"p_password\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {\r\n                show ?\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_otp,\r\n                        })}\r\n                        name=\"p_otp\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter your OTP\"\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      {\r\n                        disabled ? null\r\n                          :\r\n                          <small class=\"text-center\">\r\n                            Note: OTP is valid for {time} seconds.\r\n                          </small>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  : null\r\n              }\r\n\r\n              {\r\n                loading ?\r\n                  <div class=\"col-md-12\">\r\n                    <Spinner color=\"primary\" />\r\n                  </div>\r\n                  :\r\n                  <div class=\"col-md-6\">\r\n                    {\r\n                      show ?\r\n                        <div>\r\n                          {\r\n                            disabled ? null\r\n                              :\r\n                              <>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\r\n                                <Cancel />\r\n                              </>\r\n                          }\r\n                        </div>\r\n                        :\r\n                        <>\r\n                          <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\r\n                          <Cancel />\r\n                        </>\r\n                    }\r\n                  </div>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\r\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <Mandatory />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\Mazars\\src\\views\\FeedbackData\\FeedbackData.js",["1597","1598","1599","1600","1601"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction FeedbackData(props) {\r\n\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n          \r\n        },\r\n\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Feedback\",\r\n            dataField: \"feedback\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"150px\" };\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default FeedbackData;\r\n       ","D:\\Mazars\\src\\views\\Message\\Message.js",["1602","1603","1604","1605","1606","1607","1608"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Message(props) {\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    let history = useHistory();\r\n    const paymentHandler = (key) => {\r\n      \r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}\r\n                &type_list=all`\r\n            )\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                   \r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n          \r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        \r\n {\r\n    text: \"Date\",\r\n    dataField: \"setdate\",\r\n    sort: true,\r\n    headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n    },\r\n\r\n},\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",      \r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display : \"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n\r\n                                    :\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display :\"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"\r\n                                        }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n               \r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    // data={data}\r\n                    // getProposalData={getAssignmentData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\views\\PaymentGateway.js\\PaymentGateway.js",["1609","1610","1611"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../config/config\";\r\nfunction PaymentGateway(){\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    const info = {\r\n      \"state\" : \"Haryana\",\r\n      \"email\" : \"singhnishantrana@gmail.com\", \r\n      \"gender\" : \"\", \r\n      \"dob\" : \"01-11-1990\",\r\n      \"city\" : \"Gurugoan\",\r\n      \"pincode\" : \"122017\", \r\n      \"status\" : \"1\",\r\n      \"first_name\" : \"Nishant Rana\",\r\n      \"last_name\" : \"\",\r\n      \"address_line_1\" : \"A-22, A Block\",\r\n      \"address_line_2\" : \"Sector 109\",\r\n      \"plan_name\" : \"TPIN_100Mbps_Combo\"\r\n    }\r\n    const billdes = {\r\n      // \"HSN_SAC_code\": \"11040\",\r\n        \"Desc\": \"Bill for Mazars\",\r\n        \"Qty\": \"1\",\r\n        \"UoM\": \"NA\",\r\n        \"Rate\": \"11620.0\",\r\n        \"Total\": \"1.0\",\r\n        \"Discount\": \"0\",\r\n        \"Delivery_Charges\": \"0\",\r\n        \"Net_Tax_Val\": \"0\",\r\n        \"CGST_Rate\": \"0\",\r\n        \"CGST_Amount\": \"0\",\r\n        \"SGST_Rate\": \"0\",\r\n        \"SGST_Amount\": \"0\",\r\n        \"IGST_Rate\": \"0\",\r\n        \"IGST_Amount\": \"0\",\r\n        \"Total_Amount\": \"1.0\"\r\n    }\r\n    const onSubmit = (value) => {\r\n\r\n \r\n    let formData = new FormData()\r\n    formData.append(\"token\", \"09f3b52d937b320e929ad45153ef745d\");\r\n    formData.append(\"timestamp\", \"09-09-2021 13:52:02\");\r\n    formData.append(\"mobile\", \"9818685050\");\r\n    formData.append(\"type\", \"F\");\r\n    formData.append(\"userInfo\" , JSON.stringify(info));\r\n    formData.append(\"billDescription\", JSON.stringify(billdes));\r\n    formData.append(\"ekycStatus\", 0);\r\n    formData.append(\"public_key\", \"791E14FF-6243-4A73-A6E1\");\r\n    formData.append(\"Bill_no\", \"11189974221\");\r\n    formData.append(\"Balance\", \"100\");\r\n    formData.append(\"Bill_due_date\",  \"24-09-2021\");\r\n    formData.append(\"user_id\", \"9818685050\");\r\n    formData.append(\"merchant_id\", \"T10012\");\r\n    formData.append(\"agent_id\", \"8595923172\");\r\n    formData.append(\"caf_number\", \"\");\r\n\r\n  \r\n    var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  \"token\": \"09f3b52d937b320e929ad45153ef745d\",\r\n  \"timestamp\": \"09-09-2021 13:52:02\",\r\n  \"mobile\": \"7703954008\",\r\n  \"type\": \"F\",\r\n  \"userInfo\": {\r\n    \"state\": \"Haryana\",\r\n    \"email\": \"na@gmail.com\",\r\n    \"gender\": \"\",\r\n    \"dob\": \"\",\r\n    \"city\": \"Gurgaon\",\r\n    \"pincode\": \"122002\",\r\n    \"status\": \"1\",\r\n    \"first_name\": \"Test\",\r\n    \"last_name\": \"Test\",\r\n    \"address_line_1\": \"Test, Tower - A, Ground Floor\",\r\n    \"address_line_2\": \"DLF Phase I\",\r\n    \"plan_name\": \"20 Mbps free\"\r\n  },\r\n  \"billDescription\": {\r\n    \"HSN_SAC_code\": \"15684\",\r\n    \"Desc\": \"20 Mbps free\",\r\n    \"Qty\": \"1\",\r\n    \"UoM\": \"NA\",\r\n    \"Rate\": \"10.0\",\r\n    \"Total\": \"10.0\",\r\n    \"Discount\": \"0\",\r\n    \"Delivery_Charges\": \"0\",\r\n    \"Net_Tax_Val\": \"0\",\r\n    \"CGST_Rate\": \"0\",\r\n    \"CGST_Amount\": \"0\",\r\n    \"SGST_Rate\": \"0\",\r\n    \"SGST_Amount\": \"0\",\r\n    \"IGST_Rate\": \"0\",\r\n    \"IGST_Amount\": \"0\",\r\n    \"Total_Amount\": \"10.0\"\r\n  },\r\n  \"ekycStatus\": \"1\",\r\n  \"public_key\": \"791E14FF-6243-4A73-A6E1\",\r\n  \"Bill_no\": \"15293997\",\r\n  \"Balance\": \"10.0\",\r\n  \"Bill_due_date\": \"20-09-2021\",\r\n  \"user_id\": \"7703954008\",\r\n  \"merchant_id\": \"T10001\",\r\n  \"agent_id\": \"8689003344\",\r\n  \"caf_number\": \"TP-EC-44882\"\r\n});\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"https://pay.mobilpay.in/index.php/getUserBillData\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n    }\r\n      return(\r\n        <div className=\"container\">\r\n\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Client Register</h2>\r\n          </div>\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Mobile<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_mobile\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Mobile Number\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_mobile,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_type\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_type,\r\n                        })}\r\n                        \r\n                        placeholder=\"Enter type\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n                    </div>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">User Information<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_userInfo\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter User Information\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_userInfo,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Description<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_billDescription\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_billDescription,\r\n                        })}\r\n                        \r\n                        placeholder=\"Enter Your Description\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n                    </div>\r\n                  </div>\r\n               </div>\r\n\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Ekyc Status<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_ekycStatus ,\r\n                        })}\r\n                        name=\"p_zipCode\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Public Key<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_publicKey ,\r\n                        })}\r\n                        name=\"p_publicKey\"\r\n                        placeholder=\"Enter Public Key\"\r\n                        ref={register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Number<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.bill_no,\r\n                        })}\r\n                        \r\n                        placeholder=\"Bill Number\"\r\n                        name=\"bill_no\"\r\n                        ref={register}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                      <div class=\"col-md-6\">\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Balance<span className=\"declined\">*</span></label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.balance,\r\n                            })}\r\n                            name=\"balance\"\r\n                            ref={register({ required: true })}\r\n                           \r\n                            placeholder=\"Enter Amount\"\r\n                            autocomplete=\"off\"\r\n                          />\r\n                         \r\n                        </div>\r\n                      </div>\r\n              </div>\r\n              <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Bill Due Date<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.bill_dueDate ,\r\n                        })}\r\n                        name=\"bill_dueDate\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Due Date\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.user_id ,\r\n                        })}\r\n                        name=\"user_id\"\r\n                        placeholder=\"Enter your user id\"\r\n                        ref={register}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Agent Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.agent_id ,\r\n                        })}\r\n                        name=\"agent_id\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Merchant Id<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.merchant_id ,\r\n                        })}\r\n                        name=\"merchant_id\"\r\n                        placeholder=\"Enter Public Key\"\r\n                        ref={register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">     \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">CAF Number<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.caf_number ,\r\n                        })}\r\n                        name=\"caf_number\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Ekyc Status\"\r\n                       \r\n                      />\r\n                    </div>\r\n                   \r\n                  </div>\r\n    \r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.email ,\r\n                        })}\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        ref = {register}\r\n    \r\n                        autocomplete=\"off\"\r\n                      />\r\n                     \r\n                     \r\n                    </div>\r\n                  </div>\r\n             </div>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">DOB<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.dob ,\r\n                        })}\r\n                        name=\"dob\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Date of Birth\"/>\r\n                    </div> \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary justify\">Submit</button>\r\n                  </div>\r\n             </div>\r\n              </form>\r\n    \r\n              </div>\r\n          </>\r\n    \r\n        </div>\r\n    \r\n      </div>\r\n      )\r\n   \r\n}\r\nexport default PaymentGateway;","D:\\Mazars\\src\\pages\\Admin\\Login\\Login.js",["1612","1613","1614"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport Cookies from \"js-cookie\"\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  let history = useHistory()\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"userid\", value.p_email);\r\n      formData.append(\"password\", value.password);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/login`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          setShow(true)\r\n          Cookies.set(\"adminName\", response.data.display_name)\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\r\n            \"icon\" : \"success\"\r\n          })\r\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data[\"user id\"])\r\n          logout()\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 36000000)\r\n  }\r\n  const handleChange = (e) => {\r\n  \r\n    setEmail(e.target.value);\r\n  };\r\n \r\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\r\n    window.location.href = window.location.href.replace('http:', 'https:')\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" noAdminSign = \"adminSign\"/>\r\n      <div class=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid}\r\n              loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div class=\"form\">\r\n              <div class=\"heading\">\r\n                <h2>ADMIN LOGIN</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        autocomplete=\"off\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/admin/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nexport default Login;","D:\\Mazars\\src\\pages\\Admin\\EditTP\\EditTP.js",["1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670"],"import React, { useState, useEffect , useRef} from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Select from \"react-select\";\r\n\r\nimport { Spinner } from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\n\r\nfunction EditTP() {\r\n  const { Option } = Select;\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [mdata, setmdata] = useState([]);\r\n  const [mdataName, setMdataname] = useState([]);\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [display, setDisplay] = useState(false);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [teamleader, setTeamLeader] = useState([]);\r\n  const [tl, setTl] = useState([])\r\n  const [post1, setPost1] = useState([])\r\n  const [show, setShow] = useState([])\r\n  const [post_na, setPost_na] = useState()\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDel, setShowDel] = useState(null)\r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  const selectInputRef = useRef();\r\n  const selectInputRef2 = useRef();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  var kk = []\r\n  var vv = []\r\n  var a;\r\n  var subdefval;\r\n  var dirvalue = []\r\n  var indirvalue = []\r\n  var allsubcatvalue = []\r\n  var vv = []\r\n  const options = tax.map(d => ({\r\n    \"value\": d.id,\r\n    \"label\": d.details\r\n  }))\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n\r\n \r\n\r\n  \r\n  var data1 = value.name;\r\n  var data2 = value.personal_email;\r\n  var data3 = value.phone;\r\n  var data4 = {\r\n    \"value\" : value.allpcat_id,\r\n    \"label\" : value.allpcat_id\r\n  }\r\n  var data5 = value.allcat_id;\r\n  var data6 = value.post_name;\r\n  var data7 = value.email;\r\n  var data8 = value.cat_id;\r\n  var data9 = value.pcat_id\r\n  var data10 = value.tl_id\r\n  var data11 = value.tl_name\r\n  var postEmmail = value.tl_post_email;\r\n \r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n  useEffect(() => {\r\n    getTutorial(id);\r\n  }, [id]);\r\n\r\n  const getTutorial = (id) => {\r\n   axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setValue(res.data.result[0]);\r\n          setStore(res.data.result[0].pcat_id);\r\n          setShowDel(res.data.result[0].is_delete)\r\n          categoryData(res.data.result[0].allcat_id)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n     \r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n          console.log(\"tax2\", res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onFinish = (value) => {\r\n\r\n\r\n    var categeryList = []\r\n    var categeryName = []\r\n    var kk = []\r\n    var parentCategoryName = []\r\n    subData.map((i) => {\r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n   \r\n    if (custCate.length < 1 && data4.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n    }\r\n    else if (subData.length < 1 && data5.length < 1) {\r\n\r\n      setError2(\"Please select at least one value\")\r\n    }\r\n    else if (invalid || wEmail || indNumError) {\r\n      setDisplay(false)\r\n    }\r\n\r\n    else {\r\n      setDisplay(true)\r\n     setLoading(true)\r\n      let formData = new FormData();\r\n      formData.append(\"personal_email\", value.email);\r\n      formData.append(\"name\", value.name);\r\n      formData.append(\"phone\", value.phone);\r\n    \r\n      formData.append(\"tp_id\", data10);\r\n      {email.length > 1 ? \r\n        formData.append(\"email\", email) :\r\n        formData.append(\"email\", data7)}\r\n        {postValue.length > 1 ?  \r\n          formData.append(\"post_name\", postValue) :\r\n          formData.append(\"post_name\", data6)}\r\n      // {\r\n      //   categeryList.length > 1 ? formData.append(\"pcat_id\", store) :\r\n      //   formData.append(\"pcat_id\", data8)\r\n      // }\r\n      {\r\n        categeryList.length === 0 ? formData.append(\"pcat_id\", data9)\r\n        : formData.append(\"pcat_id\", store)\r\n      }\r\n     \r\n\r\n\r\n      {\r\n        categoryData.length === 0 ? formData.append(\"cat_id\", data8) :\r\n        formData.append(\"cat_id\", categeryList)\r\n      }\r\n\r\n\r\n      {\r\n        categoryData.length === 0 ?\r\n        formData.append(\"allpcat_id\", data4.label) :\r\n        formData.append(\"allpcat_id\", categoryData.label)\r\n      }\r\n\r\n      {\r\n        categeryName.length > 0 ? formData.append(\"allcat_id\",categeryName) :\r\n        formData.append(\"allcat_id\", data5)\r\n      }\r\n      formData.append(\"id\", id);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tp/updateTP`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n           setLoading(false)\r\n          \r\n            Swal.fire({\r\n              \"title\": \"Success\",\r\n              \"html\": \"Tax Professional details updated successfully\",\r\n              \"icon\": \"success\"\r\n            })\r\n            history.goBack();\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n       \r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n     \r\n    }\r\n  }\r\n\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n    console.log(\"vvv\", v)\r\n    selectInputRef.current.select.clearValue();\r\n   \r\n    setCategoryData(v)\r\n    setError(\"\")\r\n    setCustcate(v)\r\n    setStore(v.value)\r\n    vv.push(v.value);\r\n    setmcategory(v.value)\r\n    setmcatname((oldData) => {\r\n      return [...oldData, v.label]\r\n    })\r\n    subdefval = {}\r\n    if (vv.length > 0) {\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n        \r\n      }\r\n      else if (vv.includes(\"1\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n  }\r\n\r\n  //eamil onchange\r\n  const emailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    data7 = e.target.value\r\n    if (e.target.value.length < 1) {\r\n      setWemail(\"\")\r\n    }\r\n  };\r\n\r\n\r\n  //email validaation with api\r\n  const emailValidation = (key) => {\r\n\r\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (email.match(validRegex)) {\r\n      setWemail(\"\");\r\n      let formData = new FormData();\r\n      formData.append(\"email\", email);\r\n      formData.append(\"type\", 1);\r\n      formData.append(\"id\", id)\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/validateEditRegistration`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          setValiemail(response.data.result)\r\n          setInvalid('')\r\n        } else if (response.data.code === 0) {\r\n          setInvalid(response.data.result)\r\n          setValiemail('')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n    }\r\n    else {\r\n      setWemail(\"Invalid email\")\r\n    }\r\n  }\r\n\r\n  \r\n const defSubValue = () => {\r\n var k;\r\n \r\n   var subcatgerydefvalue = value.allcat_id.split(\",\");\r\n   value.allpcat_id.includes(\"Indirect\") === true  ? k = 8 : k = 2\r\n \r\n  subdefval = subcatgerydefvalue.map((i => ({\r\n   \"value\" : String(++k),\r\n   \"label\" : i\r\n }) ))\r\n \r\n  }\r\n \r\n if(data5 != undefined){\r\n   defSubValue();\r\n }\r\n\r\n const checktlPost = (e) => {\r\n  setPostName(e.target.value)\r\n  data6 = e.target.value;\r\n  let a = e.target.value;\r\n  let formData = new FormData();\r\n  formData.append(\"tlpost\", a)\r\n  formData.append(\"id\", id )\r\n  axios({\r\n    method: \"POST\",\r\n    url : `${baseUrl}/tl/validateTLEditPost`,\r\n    data: formData,\r\n  })\r\n  .then(function (res) {\r\n    if(res.data.code === 1){\r\n      setposError({\r\n        available : \"Post Available\"\r\n      })\r\n    }\r\n    else{\r\n      setposError({\r\n        exits : \"Post already exits\"\r\n      })\r\n    }\r\n  })\r\n  }\r\n  const del = (e) => {\r\n    Swal.fire({\r\n     title: \"Are you sure?\",\r\n     text: \"It will permanently deleted !\",\r\n     type: \"warning\",\r\n     showCancelButton : true,\r\n     confirmButtonColor: \"#3085d6\",\r\n     cancelButtonColor: \"#d33\",\r\n     confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n     if (result.value) {\r\n       deleteCliente(id);\r\n     }\r\n   });\r\n  }\r\n  const deleteCliente = (id) => {\r\n   axios\r\n     .get(`${baseUrl}/tp/deleteTP?id=${id}`)\r\n     .then(function (response) {\r\n       \r\n       if (response.data.code === 1) {\r\n         Swal.fire(\"Taxprofessional has been deleted successfully\");\r\n         history.goBack();\r\n       } else {\r\n         Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n         history.goBack();\r\n       }\r\n \r\n     })\r\n     .catch((error) => {\r\n       \r\n     });\r\n };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex justify-content-between\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Edit Tax Professional</h4>\r\n            </div>\r\n            <div>\r\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\r\n              </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        {!data1 ? (\r\n          <CardHeader>loading ...</CardHeader>\r\n        ) : (\r\n          <CardHeader>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                <Form\r\n                  name=\"basic\"\r\n                  autoComplete=\"off\"\r\n                  initialValues={{\r\n                    name: `${data1}`,\r\n                    email: `${data2}`,\r\n                    phone: `${data3}`,\r\n                    category: `${data4}`,\r\n                    sub_category: `${data5}`,\r\n                  }}\r\n                  onFinish={onFinish}\r\n                >\r\n                   <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                  <label>Teamleader post name <span className=\"declined\">*</span></label>\r\n                  <input type=\"text\" className = \"form-control\" \r\n                  defaultValue = {data11} \r\n              disabled />   \r\n                    </div>\r\n                  </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"post_email\"\r\n                          defaultValue = {postEmmail}\r\n                         disabled\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.post_email,\r\n                          })}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      \r\n                      <label>TP post name <span className=\"declined\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"post_name\"\r\n                          onBlur={(e) => checktlPost(e)}\r\n                          disabled = {showDel == \"1\" ? true : \"\"}\r\n                          defaultValue={data6}\r\n                          onChange={(e) => data6= e.target.value}\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.post_name,\r\n                          })}\r\n                        />\r\n                         {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                    \r\n                  \r\n                    <label> TP post email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        disabled = {showDel == \"1\" ? true : \"\"}\r\n                      defaultValue={data7}\r\n                     \r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_email,\r\n                        })}\r\n                        onChange={(e) => emailHandler(e)}\r\n                        onBlur={emailValidation}\r\n                      />\r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      } \r\n                    </div>\r\n                  </div>\r\n                   \r\n                    \r\n                  </div>\r\n\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Name <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"name\">\r\n                          <input\r\n                            required\r\n                           \r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_name,\r\n                            })} />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone  <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"phone\">\r\n                          <Input\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_phone || indNumError || numExist,\r\n                            })}\r\n                            onChange={(e) => phoneHandler(e)}\r\n                            onBlur={phoneValidation} />\r\n                        </Form.Item>\r\n                      </div>\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> :\"\"}\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n               \r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Category <span className=\"declined\">*</span></label>\r\n                        <div class=\"form-group\">\r\n\r\n                          <Select  options={options}\r\n                            defaultValue={data4} onChange={category}\r\n                            styles={{\r\n                              option: (styles, { data }) => {\r\n                                return {\r\n                                  ...styles,\r\n                                  color: data.value == 2\r\n                                    ? \"green\"\r\n                                    : \"blue\"\r\n                                };\r\n                              },\r\n                              singleValue: (styles, { data }) => ({\r\n                                ...styles,\r\n                                color: data.label  == \"Indirect tax\"\r\n                                    ? \"green\"\r\n                                    : \"blue\"\r\n                              }),\r\n                            }}\r\n                            ref={selectInputRef2}\r\n                            // onFocus = {(e) => {\r\n                            //   selectInputRef2.current.select.clearValue();\r\n                            // }}\r\n                          >\r\n                          </Select>                  \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Sub Category <span className=\"declined\">*</span></label>\r\n\r\n                        <Select isMulti options={options2}\r\n                          onChange={subCategory}\r\n                          defaultValue = { subdefval}\r\n                          ref={selectInputRef}\r\n\r\n                          // value = {subData}\r\n                          styles={{\r\n                            option: (styles, { data }) => {\r\n                              return {\r\n                                ...styles,\r\n                                color: data.value > 8\r\n                                  ? \"green\"\r\n                                  : \"blue\"\r\n                              };\r\n                            },\r\n                            multiValueLabel: (styles, { data }) => ({\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            }),\r\n                          }}\r\n                         >\r\n                        </Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"email\">\r\n                          <Input\r\n                          type=\"email\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.email || wEmail ,\r\n                            })}/>\r\n                        </Form.Item>\r\n                        {\r\n                          wEmail ? <p className=\"declined\">{wEmail}</p> : \"\"\r\n                           \r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                        <Form.Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                        </Form.Item>  }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n        )}\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTP;","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\index.js",["1671","1672","1673"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\nimport AssignmentComponent from \"./AllAssignment\";\r\nimport DraftReport from \"./DraftReport\";\r\nimport FinalReport from \"./FinalReport\";\r\n\r\nfunction AssignmentTab(props) {\r\n \r\n\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n    const [draft, setDraft] = useState(\"\");\r\n    const [final, setFinal] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        CountAllAssignment();\r\n        CountDraftReport();\r\n        CountFinalReport();\r\n    }, []);\r\n\r\n\r\n    const CountAllAssignment = (data) => {\r\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n         \r\n            if (res.data.code === 1) {\r\n                setAllAssignmentCount(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountDraftReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n          ;\r\n            if (res.data.code === 1) {\r\n                setDraft(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountFinalReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n          ;\r\n            if (res.data.code === 1) {\r\n                setFinal(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"auto\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"auto\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Assignments ({allAssignmentCount})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Draft Reports  ({draft})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                        Inprogress; Delivery of Final Reports ({final})\r\n                        </Tab>\r\n\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AssignmentComponent />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <DraftReport />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <FinalReport />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js",["1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\nimport moment from 'moment';\r\nfunction QueriesRecevied(props) {\r\n \r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [accept, setAccept] = useState();\r\n  const [tlName2, setTlname] = useState();\r\n  const[tp22, setTp22] = useState();\r\n  const [tpStatus, setTpstatus] = useState();\r\n  const [declined2, setDeclined2] = useState();\r\n  const [declinedStatus, setDeclinedStatus] = useState(false)\r\n  const [finalDate, setFinalDate] = useState()\r\n  const [qstatus, setqStatus] = useState();\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    proposal_reactive_dates: \"\",\r\n    proposal_reactive_notes: \"\"\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          \r\n         setqStatus(res.data.result[0].query_status)\r\n          setTpstatus(res.data.result[0].tp_status);\r\n          setAccept(res.data.result[0].query_status)\r\n          setTlname(res.data.result[0].tlname);\r\n          setTp22(res.data.result[0].tpname);\r\n          if(res.data.history_queries[0] === undefined){\r\n\r\n          }\r\n          else{\r\n            setDisplayHistory({\r\n              tlname: res.data.proposal_queries,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          \r\n          }\r\n         \r\n         if(res.data.result[0].status ==\"Declined Query\"){\r\n        \r\n         let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\r\n           setDeclined2(a)\r\n          setDeclinedStatus(true)\r\n         }\r\n        \r\n          if (res.data.result) {\r\n            if (res.data.result[0].name == null) {\r\n             \r\n            }\r\n            else {\r\n              setSubmitData(res.data.result);\r\n            }\r\n          }\r\n          \r\n          if (res.data.additional_queries) {\r\n            setDisplaySpecific(res.data.additional_queries);\r\n          }\r\n          if (res.data.payment_detail) {\r\n            console.log(\"payDetails\", res.data.payment_detail)\r\n            setPaymentDetails(res.data.payment_detail);\r\n          }\r\n          if (res.data.feedback_detail) {\r\n            setFeedback(res.data.feedback_detail);\r\n          }\r\n          if (res.data.result[0].assign_no) {\r\n            setAssingmentNo(res.data.result[0].assign_no);\r\n          }\r\n\r\n          if (res.data.reports) {\r\n            setReports(res.data.reports);\r\n          }\r\n         \r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n         \r\n          \r\n          \r\n          try {\r\n           \r\n            var myYear = JSON.parse(assementItem);\r\n           \r\n            setYear(myYear);\r\n          } catch (e) {\r\n           \r\n          }\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            \r\n            setPurpose(myPurpose);\r\n           \r\n          } catch (e) {\r\n           \r\n          }\r\n         \r\n          if (res.data.proposal_queries.length > 0) {\r\n           \r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\r\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\r\n            });\r\n            let a = moment(res.data.result[0].final_date);\r\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\r\n            let c = a.diff(b)\r\n            let d = moment.duration(c)\r\n            let finalDate = d.days() + 1;\r\n           setFinalDate(finalDate)\r\n           \r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n          \r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n       \r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n      });\r\n    };\r\n  //  getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n                \r\n              </h2>\r\n            </div>\r\n\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                qstatus={qstatus}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n                accept = {accept}\r\n                tlName2={tlName2}\r\n                tp22 = {tp22}\r\n                tpStatus={tpStatus}\r\n                declined2={declined2}\r\n                declinedStatus={declinedStatus}\r\n                finalDate={finalDate}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n","D:\\Mazars\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js",["1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  // p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n\r\n});\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [display, setDisplay] = useState(false);\r\n  const [teamleader, setTeamLeader] = useState([]);\r\n  const [tl, setTl] = useState([])\r\n  const [post1, setPost1] = useState([])\r\n  const [post_na, setPost_na] = useState()\r\n  const [tpEmail, setTpEmail] = useState('')\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [email2, setEmail2] = useState([]);\r\n  \r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  var kk = []\r\n  var vv = []\r\n  var post_name;\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n  const teamleader1 = teamleader.map(v => (\r\n  {\r\n      \"value\": v.id,\r\n      \"label\": v.name\r\n    }))\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setTeamLeader(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  // OnSubmit Function\r\n  const onSubmit = (value) => {\r\n\r\n    var categeryList = []\r\n    var categeryName = []\r\n    var categeryName = []\r\n    var kk = []\r\n\r\n    var parentCategoryName = []\r\n    subData.map((i) => {\r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n   \r\n    if (custCate.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n    }\r\n    else if (subData.length < 1) {\r\n\r\n      setError2(\"Please select at least one value\")\r\n    }\r\n    else if (invalid || wEmail || indNumError) {\r\n      setDisplay(false)\r\n    }\r\n\r\n    else {\r\n\r\n      setLoading(true)\r\n    \r\n      let formData = new FormData();\r\n      formData.append(\"personal_email\", value.personal_email)\r\n      formData.append(\"name\", value.p_name);\r\n      formData.append(\"phone\", value.p_phone);\r\n      formData.append(\"tp_id\", tl);\r\n      formData.append(\"email\", email2);\r\n      formData.append(\"post_name\", value.post_name)\r\n      formData.append(\"pcat_id\", mcategory);\r\n      formData.append(\"cat_id\", categeryList);\r\n      formData.append(\"allpcat_id\", categoryData.label)\r\n      formData.append(\"allcat_id\", categeryName)\r\n      formData.append(\"type\", \"tp\");\r\n      formData.append(\"tlpost\", post_na)\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tp/AddTaxProfessional`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n    \r\n           \r\n\r\n            Swal.fire({\r\n              \"title\": \"success\",\r\n              \"html\": \"Tax Professional created successfully\",\r\n              \"icon\": \"success\"\r\n            })\r\n \r\n            history.goBack();\r\n            \r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    };\r\n  }\r\n\r\n\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n\r\n    setCategoryData(v)\r\n    setNn((oldData) => {\r\n      return [...oldData, mcategory]\r\n    })\r\n    setError(\"\")\r\n    setCustcate(v)\r\n    setStore(v.value)\r\n    vv.push(v.value);\r\n    setmcategory(v.value)\r\n    setmcatname((oldData) => {\r\n      return [...oldData, v.label]\r\n    })\r\n\r\n\r\n    if (vv.length > 0) {\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n\r\n      }\r\n      else if (vv.includes(\"1\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n\r\n  }\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n    \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digits can be entered\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n\r\n    }\r\n  }\r\n\r\n \r\n  // Tl Function \r\n  const tlFun = (e) => {\r\n    var a;\r\n \r\n    teamleader.filter((p) => {\r\n\r\n      if (p.id == e) {\r\n      \r\n        setTpEmail(p.email)\r\n        setTl(p.id)\r\n        setPost_na(p.post_name)\r\n        a = p.post_name\r\n       \r\n      }\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  const checktlPost = (e) => {\r\n    setPostName(e.target.value)\r\n    let a = e.target.value;\r\n    let formData = new FormData();\r\n    formData.append(\"tlpost\", a)\r\n  \r\n    axios({\r\n      method: \"POST\",\r\n      url : `${baseUrl}/tl/validateTLPost`,\r\n      data: formData,\r\n    })\r\n    .then(function (res) {\r\n      if(res.data.code === 1){\r\n        setposError({\r\n          available : \"Post available\"\r\n        })\r\n      }\r\n      else{\r\n        setposError({\r\n          exits : \"Post already exits\"\r\n        })\r\n      }\r\n    })\r\n    }\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                className=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i className=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div className=\"text-center ml-5\">\r\n              <h4>Add New Tax Professionals</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Teamleader post name <span className=\"declined\">*</span></label>\r\n\r\n                      <select\r\n                        name=\"p_teamleader\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_teamleader,\r\n                        })}\r\n                        onChange={(e) => tlFun(e.target.value)}\r\n                        ref={register}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {teamleader.map((p) =>\r\n                        (\r\n\r\n                          <option key={p.Id} value={p.id}>\r\n                            {p.post_name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.p_teamleader && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_teamleader.message}\r\n                        </div>\r\n                      )}\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"post_email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_email,\r\n                        })}\r\n                        disabled\r\n                        defaultValue={tpEmail}\r\n                       \r\n                        ref={register}\r\n\r\n                      />\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>TP post name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"post_name\"\r\n                        onBlur={(e) => checktlPost(e)}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_name,\r\n                        })}\r\n                        ref={register}\r\n                      />\r\n {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n\r\n\r\n                      <label> TP post email <span className=\"declined\">*</span></label>\r\n                      \r\n                       <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail2}\r\n                        name = \"taxprofessional\" />\r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Category <span className=\"declined\">*</span></label>\r\n                      <Select options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n                        onChange={category}>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Sub Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        onChange={subCategory}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n\r\n                      </Select>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Phone Number <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                        onChange={(e) => phoneHandler(e)}\r\n                        onBlur={phoneValidation}\r\n                      />\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n\r\n\r\n                      <label> Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"personal_email\"\r\n                        ref={register}\r\n\r\n\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.post_email,\r\n                        })}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                                 </div>\r\n                {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button> }\r\n              </form>\r\n            </div>\r\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\r\n            </div>\r\n\r\n            <Mandatory />\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\nexport default AddNew;","D:\\Mazars\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js",["1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"\"),\r\n  p_expdeldate: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryAssingment(props) {\r\n  let history22 = useHistory()\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\r\n  const [teamID, setTeamID] = useState(null);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [query, setQuery] = useState(true);\r\n\r\n  const [expectedDate, setExpectedDate] = useState(\"\");\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId } = queryData;\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    getTaxLeader();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setTaxLeaderDisplay(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n        });\r\n        // expectedDeliveryDate(res.data.result[0].Timelines);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setTeamID(e.target.value);\r\n    var value = taxLeaderDisplay.filter(function (item) {\r\n      return item.id == e.target.value;\r\n    });\r\n    \r\n    setTeamName(value[0].name);\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    setLoading(true)\r\n  \r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"who\", teamID);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"type\", \"admin\");\r\n    formData.append(\"types\", \"tl\");\r\n    formData.append(\"name\", teamName);\r\n    formData.append(\"timeline\", value.p_timelines);\r\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\r\n    formData.append(\"assignNo\", queryNo);\r\n    formData.append(\"customer_id\", custId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddQueryAssignment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Query assigned successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n        //  getQuery();\r\n          // props.history.push({\r\n          //   pathname: `/admin/queriestab`,\r\n          //   index: 2,\r\n          // });\r\n          history22.push(\"/admin/queriestab\")\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const expectedDeliveryDate = (key) => {\r\n  \r\n\r\n    const d = new Date();\r\n\r\n    if (key == \"Urgent, (4-5 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 432000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\r\n\r\n     \r\n      setExpectedDate(new_date);\r\n    } else if (key == \"Regular (10-12 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 1296000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n     \r\n      setExpectedDate(new_date);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/queriestab`,\r\n                  index: 1,\r\n                }}\r\n              >\r\n                <button class=\"btn btn-success ml-3\">\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th scope=\"col\">Query No.</th>\r\n                            <th scope=\"col\">Team Leaders<span className=\"declined\">*</span></th>\r\n                            <th scope=\"col\">Expected Timeline</th>\r\n                            <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {query ? (\r\n                            <tr>\r\n                              <th scope=\"row\">{queryNo}</th>\r\n                              <td>\r\n                                <select\r\n                                  className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_taxprof,\r\n                                  })}\r\n                                  name=\"p_taxprof\"\r\n                                  ref={register}\r\n                                  onChange={(e) => handleChange(e)}\r\n                                >\r\n                                  <option value=\"\">-select-</option>\r\n                                  {taxLeaderDisplay.map((p, index) => (\r\n                                    <option key={index} value={p.id}>\r\n                                      {p.postname}\r\n                                    </option>\r\n                                  ))}\r\n                                </select>\r\n                                {errors.p_taxprof && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.p_taxprof.message}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_timelines\"\r\n                                  value={timelines}\r\n                                  class=\"form-control\"\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  ref={register}\r\n                                  name=\"p_expdeldate\"\r\n                                  className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_expdeldate,\r\n                                  })}\r\n                                  min={item}\r\n                                />\r\n                                {errors.p_expdeldate && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.p_expdeldate.message}\r\n                                  </div>\r\n                                )}\r\n                              </td>\r\n\r\n                              <td>\r\n                                <button type=\"submit\" class=\"btn btn-success\">\r\n                                  Assign\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <tr>\r\n                              <th scope=\"row\">{queryNo}</th>\r\n                              <td>\r\n                                <select class=\"form-control w-75 p-0\" disabled>\r\n                                  <option>{hideQuery.name}</option>\r\n                                </select>\r\n                              </td>\r\n\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_timelines\"\r\n                                  class=\"form-control\"\r\n                                  value={hideQuery.timeline}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  ref={register}\r\n                                  name=\"p_expdeldate\"\r\n                                  class=\"form-control\"\r\n                                  value={hideQuery.expdeliverydate}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <button class=\"btn btn-success\" disabled>\r\n                                  Assigned\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </form>\r\n                    <Mandatory />\r\n\r\n                  </div>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n","D:\\Mazars\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js",["1725","1726","1727","1728","1729"],"import React, { useState, useEffect, useLayoutEffect , createContext} from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\r\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\r\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\r\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nfunction QueriesTab(props) {\r\n  \r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [allData, setAllData] = useState()\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setAllQueriesCount(res.data.result.length);\r\n        setAllData(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setPendingProposalCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n    \r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Allocation ({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData allData={allData}/>\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForProposals />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n     \r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;","D:\\Mazars\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js",["1730","1731","1732","1733","1734"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          props.history.push(`/admin/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n\r\n    \r\n    if (item == \"null\") {\r\n     \r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n\r\n          {\r\n            loading ?\r\n              <div class=\"col-md-12\">\r\n                <Spinner color=\"primary\" />\r\n              </div>\r\n              :\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Get OTP\r\n                </button>\r\n                <Link to=\"/admin/login\" style={{ \"margin\": \"10px\" }}>\r\n                  <button type=\"submit\" className=\"btn btn-secondary\">\r\n                    Cancel\r\n                  </button>\r\n                </Link>\r\n                <Mandatory />\r\n              </form>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js",["1735","1736","1737"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Paid from \"./Paid\";\r\nimport Unpaid from \"./Unpaid\";\r\n\r\n\r\n\r\n\r\nfunction PaymentStatus(props) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setAllPayment(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?status=1`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setPaid(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?status=2`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setUnpaid(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Schedule.js",["1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  \r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js",["1751","1752","1753","1754"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const adminEmail = window.localStorage.getItem(\"adminkey\");\r\n\r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id}\r\n      adminEmail = {adminEmail} />\r\n   \r\n   \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js",["1755","1756","1757","1758","1759"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                 {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\NewPassword.js",["1760","1761","1762","1763"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from \"../../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/admin/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    ref={register({ required: true })}\r\n                    autocomplete=\"off\"\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  {disabled === false ? \r\n                  <small class=\"text-center\">\r\n                  Note: OTP is valid for {time} seconds.\r\n                </small> : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled}\r\n              setTime={setTime}  loading = {loading} getTime={LoadingTime.timer2} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\Proposal\\Proposal.js",["1764","1765","1766","1767"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\r\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\r\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\r\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\r\n\r\nfunction Proposal(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setAllProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getAcceptedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setAcceptedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getDeclinedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setDeclinedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    const getPendingForAcceptence = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\r\n        .then((response) => {\r\n          \r\n          if (response.data.code === 1) {\r\n            setPendingProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          \r\n        });\r\n    };\r\n\r\n    getAllProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n    getPendingForAcceptence();\r\n  }, []);\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Client Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposalComponent />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAcceptence />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedPropoal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n// const allProposal = (data) => {\r\n//   setAllProposalCount(data);\r\n// };\r\n\r\n// const pendingProposal = (data) => {\r\n//   setPendingProposalCount(data);\r\n// };\r\n\r\n// const acceptedProposal = (data) => {\r\n//   setAcceptedProposalCount(data);\r\n// };\r\n\r\n// const declinedProposal = (data) => {\r\n//   setDeclinedProposalCount(data);\r\n// };\r\n","D:\\Mazars\\src\\pages\\Admin\\Chatting\\Chatting.js",["1768","1769","1770","1771","1772"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n  p_to: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n \r\n\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { query_id, query_No, routes } = data\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataAdmin\");\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n    formData.append(\"to\", value.p_to);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully. \"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.message_type,\r\n                            })}\r\n                            name=\"message_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.message_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.message_type.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>To<span className=\"declined\">*</span></label>\r\n                        <select\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_to,\r\n                          })}\r\n                          name=\"p_to\"\r\n                          ref={register}\r\n                          style={{ height: \"33px\" }}\r\n                        >\r\n                          <option value=\"\">--select--</option>\r\n                          <option value=\"customer\">Client</option>\r\n                          <option value=\"tl\">Team Leader</option>\r\n                          <option value=\"both\">Both</option>\r\n                        </select>\r\n                        {errors.p_to && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_to.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js",["1773","1774","1775","1776","1777","1778","1779"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl2 } from '../../../config/config';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n    };\r\n\r\n    getSubmittedAssingment();\r\n    // getQuery();\r\n  }, [assingNo]);\r\n\r\n \r\n\r\n  // const getQuery = () => {\r\n  //  if(assingNo === undefined){\r\n  //    return false\r\n  //  }\r\n  //  else{\r\n  //   axios\r\n  //   .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n  //   .then((res) => {\r\n      \r\n  //     if (res.data.code === 1) {\r\n  //       setDisplayQuery(res.data.result);\r\n  //     }\r\n  //   });\r\n  //  }\r\n  // };\r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n     \r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n    \r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Action</th>\r\n                    <td>\r\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\r\n                        <Link to={`/admin/queryassing/${p.id}`}>\r\n                        <i class=\"fa fa-share\"></i>\r\n                      </Link>\r\n                      ) : (                  \r\n                       null\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                 \r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","D:\\Mazars\\src\\pages\\Admin\\Message\\Message.js",["1780","1781","1782","1783","1784","1785","1786","1787"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useHistory } from \"react-router\";\r\n// import PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction Message(props) {\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\nconst history = useHistory();\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=all`\r\n            )\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        <Link to={`/admin/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display : \"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"\r\n                                          \r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ \r\n                                            cursor: \"pointer\",\r\n                                            display :\"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"\r\n                                        }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n        \r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n              \r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n{/* <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                                class=\"btn btn-primary\"\r\n                            // onClick={() => paymentHandler()}\r\n                            >\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting`,\r\n                                        obj: props.location.obj\r\n                                    }}\r\n\r\n                                >\r\n                                    Add Message\r\n                                </Link>\r\n                            </div>\r\n                        </Col> */}","D:\\Mazars\\src\\pages\\Admin\\Report\\Report.js",["1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useState , useEffect, useRef} from 'react';\r\nimport classNames from \"classnames\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\nimport { useHistory } from 'react-router';\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const selectInputRef = useRef();\r\n    const selectInputRef2 = useRef();\r\n    const selectInputRef3 = useRef();\r\n    const selectInputRef4 = useRef();\r\n    const selectInputRef5 = useRef();\r\n   \r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [subData, subCategeryData] = useState([])\r\n    const [custCate, setCustcate] = useState([])\r\n    const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [custCate2, setCustcate2] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [taxId, setTaxId] = useState(\"\");\r\n  const [teamleader44, setTeamleader44] = useState(\"\") \r\n  const [taxprofessional44, setTaxprofessional44] = useState(\"\")\r\n  const [custData, setcustData] = useState();\r\n  const [cname, setcName] = useState()\r\n  var kk = []\r\n  var pp = []\r\n  var vv = []\r\n\r\n  var allData1 = {}\r\n  var dir = []\r\n  var indir = []\r\n  const [dd, setDd] = useState([]);\r\nconst history = useHistory()\r\n    const { handleSubmit, register, errors, getValues , reset} = useForm();\r\n    let date = new Date()\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n const firstDay = new Date(date.getFullYear() + + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2));\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n       \r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n    getData();\r\n\r\n  }, []);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n    \r\n      var dd = []\r\n      if (res.data.code === 1) {\r\n        pp.push(res.data.result)\r\n        setData((res.data.result));\r\n       \r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, [taxId]);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${taxId}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setData2(res.data.result);\r\n         \r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n    .get(`${baseUrl}//admin/getAllList`)\r\n      .then((res) => {\r\n       \r\n        var a = res.data.result;\r\n        if (a) {\r\n          setcustData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\nconst mapAppointmentData = ((appiontmentData) => ({\r\n\"label\" : appiontmentData.name,\r\n\"value\" : appiontmentData.id\r\n}))\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n  const options3 = data.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.name\r\n    }))\r\n    const options4 = data2.map(d => (\r\n      {\r\n        \"value\": d.id,\r\n        \"label\": d.name\r\n      }))\r\n\r\n    const onSubmit = (value) => {\r\n      console.log(selectInputRef)\r\n      selectInputRef.current.select.clearValue();\r\n      selectInputRef2.current.select.clearValue();\r\n      selectInputRef3.current.select.clearValue();\r\n      selectInputRef4.current.select.clearValue();\r\n      selectInputRef5.current.select.clearValue();\r\n    \r\n      reset()\r\n\r\n     let basic_info = false\r\n     let proposal_info = false\r\n     let assignment_info = false\r\n     let payment_info = false\r\n     if(value.assessment || value.purpose_p || value.p_format || value.t_requested || value.spc_que || value.doa){\r\n      basic_info = true\r\n     }\r\n     if(value.dateProposal || value.proposedAmount || value.paymentTerms || value.proposal_status || value.acceptedAmount\r\n      || value.paymentDeclinedReason || value.date_acceptance || value.amountOutstanding\r\n      || value.amount_overdue || value.declinedDate){\r\n        proposal_info = true\r\n      }\r\n   if(value.assignDate || value.completionDate || value.assignStatus || value.completionQuery || value.assignTime){\r\n     assignment_info = true\r\n   }\r\n   if(value.receiptDate || value.amountReceived){\r\n     payment_info = true\r\n   }\r\n        let formData = new FormData();\r\n        formData.append(\"report_name\", value.report_name)\r\n        formData.append(\"basic_info\", Number(basic_info));\r\n        formData.append(\"proposal_info\", Number(proposal_info));\r\n        formData.append(\"assignment_info\", Number(assignment_info));\r\n        formData.append(\"payment_info\", Number(payment_info))\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n        formData.append(\"customer_name\", cname)\r\n        formData.append(\"teamleader\", teamleader44);\r\n        formData.append(\"taxprofessional\", taxprofessional44);\r\n        formData.append(\"category\", mcatname);\r\n        formData.append(\"subCategory\", dd);\r\n        formData.append(\"q_no\", Number(value.qno));\r\n        formData.append(\"date_query\", Number(value.dataQuery));\r\n        formData.append(\"cust_id\", Number(value.cust_id));\r\n        formData.append(\"basic_category\", Number(value.basicCategory));\r\n        formData.append(\"basic_sub_category\", Number(value.basic_sub_category));\r\n        formData.append(\"assessment\", Number(value.assessment));\r\n        formData.append(\"purpose\", Number(value.purpose_p));\r\n        formData.append(\"p_format\", Number(value.p_format));\r\n        formData.append(\"t_requested\", Number(value.t_requested));\r\n        formData.append(\"spc_que\", Number(value.spc_que));\r\n        formData.append(\"date_allocation\", Number(value.doa));\r\n        // formData.append(\"teamleader\", Number(value.tl_name));\r\n        // formData.append(\"taxprofessional\", Number(value.tp_name));\r\n        formData.append(\"date_proposal\", Number(value.dateProposal));\r\n        formData.append(\"proposed_amount\", Number(value.proposedAmount));\r\n        formData.append(\"payment_terms\", Number(value.paymentTerms));\r\n        formData.append(\"proposal_status\", Number(value.proposal_status));\r\n        formData.append(\"accepted_amount\", Number(value.acceptedAmount));\r\n        formData.append(\"payment_declined_reasen\", Number(value.paymentDeclinedReason));\r\n        formData.append(\"date_of_acceptance\", Number(value.date_acceptance));\r\n        // formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", Number(value.amountOutstanding));\r\n        formData.append(\"amount_overdue\", Number(value.amount_overdue));\r\n        formData.append(\"payment_declined\", Number(value.declinedDate));\r\n        // formData.append(\"assignment_number\", Number(value.assignNumber));\r\n        formData.append(\"assign_date\", Number(value.assignDate));\r\n        formData.append(\"proposed_completion_date\", Number(value.completionDate));\r\n        formData.append(\"assignment_status\", Number(value.assignStatus));\r\n        formData.append(\"date_complation\", Number(value.completionQuery));\r\n        formData.append(\"assign_time\", Number(value.assignTime));\r\n        formData.append(\"payment_recived_date\", Number(value.receiptDate));\r\n        formData.append(\"basic_amount\", Number(value.basic_amount));\r\n        formData.append(\"pocket_expensive\", Number(value.pocket_expensive));\r\n        formData.append(\"cget_tax\", Number(value.cget_tax));\r\n        formData.append(\"igst_tax\", Number(value.igst_tax));\r\n        formData.append(\"sgst_tax\", Number(value.sgst_tax));\r\n        formData.append(\"total_gst\", Number(value.total_gst));\r\n        formData.append(\"total_invoice\", Number(value.total_invoice));\r\n        formData.append(\"tds\", Number(value.tds));\r\n        formData.append(\"net_amount\", Number(value.net_amount));\r\n        formData.append(\"amount_received\", Number(value.amountReceived));\r\n        formData.append(\"uid\", JSON.parse(userid))\r\n        formData.append(\"t\", Math.floor(Math.random() * 110000))\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/report/generateReport?t=${JSON.stringify(Math.floor(Math.random() * 110000))}`,\r\n     data : formData\r\n\r\n   })\r\n   .then(function (response) {\r\n   if(response.data.code === 1){\r\n    window.open(`${baseUrl3}/${response.data.result}`)\r\n   }\r\n   })\r\n   .catch((error) => {\r\n  \r\n   });\r\n    }\r\n\r\n    // Category \r\n    const category2 = (v) => {\r\nlet cc = []\r\n      setCategoryData(v)\r\n      setNn((oldData) => {\r\n        return [...oldData, mcategory]\r\n      })\r\n      setError(\"\")\r\n      setCustcate(v)\r\n      v.map((val) => {\r\n        vv.push(val.value)\r\n        cc.push(val.value)\r\n        setmcategory(val.value);\r\n       \r\n        setStore(val.value)\r\n      })\r\n  \r\n  setmcatname(cc)\r\n      if (vv.length > 0) {\r\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n       \r\n        }\r\n        else if (vv.includes(\"1\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value < 9) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n        else if (vv.includes(\"2\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value > 8) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n      }\r\n  \r\n      else if (vv.length === 0) {\r\n        subCategeryData(\"\")\r\n      }\r\n  \r\n    }\r\n\r\n    // Sub Category Function \r\n    const subCategory22 = (e) => {\r\n  let kk = []\r\n      subCategeryData(e)\r\n      setCustcate2(e)\r\n      setError2(\"\")\r\n     \r\n      e.map((i) => {\r\n  \r\n      kk.push(i.value)\r\n      })\r\n     setDd(kk)\r\n      \r\n    }\r\n    const custName = (a) => {\r\n      let pk = []\r\n      a.map((r) => {\r\n        pk.push(r.value)\r\n      })\r\n      setcName(pk)\r\n    }\r\n  const teamLeader = (a) => {\r\n let tk = []\r\n    a.map((i) => {\r\n    \r\n      setTaxId(i.value) \r\n     tk.push(i.value)\r\n    })\r\n    setTeamleader44(tk)\r\n  \r\n  }\r\n  const taxProfessional = (e) => {\r\n    let kk2 = []\r\n    e.map((i) => {\r\n      \r\n      kk2.push(i.value)\r\n    })\r\n    setTaxprofessional44(kk2)\r\n  }\r\n    return (\r\n        <>\r\n          <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n          <div className=\"adminForm\">\r\n         <div className=\"row\">\r\n           <div className=\"col-md-6\">\r\n           <Typography variant=\"h4\">Admin Report</Typography>\r\n         \r\n             </div>\r\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\r\n             <button  className=\"btn btn-lg btn btn-success\" onClick = {() => history.goBack()}>Go Back </button>\r\n               </div>\r\n           </div>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n            defaultValue={item}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">Client Id</label>\r\n         <Select isMulti options={custData} ref={selectInputRef5} onChange={(e) => custName(e)}>\r\n\r\n         </Select>\r\n        </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Report Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"report_name\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.report_name,\r\n            })}\r\n           defaultValue=\"Report\"\r\n            placeholder=\"Enter report name\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n   </div> \r\n   <div className=\"row\">\r\n   <div className=\"col-md-3\">\r\n\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Teamleader</label>\r\n<Select  isMulti={true}\r\noptions={options3}\r\nref={selectInputRef}\r\nonChange= {(e) =>teamLeader(e)}/>\r\n</div>\r\n</div>\r\n\r\n<div className=\"col-md-3\">\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Taxprofessional</label>\r\n<Select isMulti = {true} \r\nref={selectInputRef2}\r\n options={options4} onChange={(e) => taxProfessional(e)}/>\r\n\r\n</div>\r\n</div>\r\n       <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        ref={selectInputRef3}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        onChange={category2}>\r\n                      </Select>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        ref={selectInputRef4}\r\n                        onChange={subCategory22}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n                      </Select>\r\n            </div>\r\n   </div>\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n           <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Query Date </label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Client Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assessment\">Assessment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose_p\" id=\"purpose_p\"></input>\r\n<label htmlFor=\"purpose_p\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"p_format\" id=\"p_format\"></input>\r\n<label htmlFor=\"p_format\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n{/* <span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span> */}\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assessnment</legend>\r\n            <div className=\"basicFeild\">\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"basic_amount\" id=\"basic_amount\"></input>\r\n<label htmlFor=\"basic_amount\">Basic Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"pocket_expensive\" id=\"pocket_expensive\"></input>\r\n<label htmlFor=\"pocket_expensive\">Out of pocket </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"cget_tax\" id=\"cget_tax\"></input>\r\n<label htmlFor=\"cget_tax\">Cgst Tax</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"igst_tax\" id=\"igst_tax\"></input>\r\n<label htmlFor=\"igst_tax\">Igst Tax </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"sgst_tax\" id=\"sgst_tax\"></input>\r\n<label htmlFor=\"sgst_tax\">Sgst Tax</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"total_gst\" id=\"total_gst\"></input>\r\n<label htmlFor=\"total_gst\">Total Gst </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"total_inovice\" id=\"total_invoice\"></input>\r\n<label htmlFor=\"total_invoice\">Invoice Amount</label>\r\n</span>\r\n          \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"tds\" id=\"tds\"></input>\r\n<label htmlFor=\"tds\">TDS Deducted</label>\r\n</span> \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"net_amount\" id=\"net_amount\"></input>\r\n<label htmlFor=\"net_amount\">Net Amount </label>\r\n</span> </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js",["1810","1811","1812","1813","1814"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import FeedbackService from \"../../../config/services/QueryDetails\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n  const [feedbackNumber, setfeedbackNumber] = useState();\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, [userid]);\r\n\r\n  const getFeedback = () => {\r\n    axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setFeedBackData(res.data.result);\r\n       if(res.data.result != undefined){\r\n         setfeedbackNumber(res.data.result.length)\r\n       }\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n     \r\n    },\r\n\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return <>{row.assign_no}</>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      dataField: \"feedback\",\r\n   \r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.admin_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\", wordBreak : \"break-word\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                   \r\n                    title=\"unread\"\r\n                  >\r\n                    <p  onClick={() => readNotification(row.id)}>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\",  display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"admin\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n       \r\n          getFeedback();\r\n          history.push(\"/admin/feedback\")\r\n        }\r\n    \r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid} feedbackNumber = {feedbackNumber}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\Admin\\Report\\Consalation.js",["1815","1816"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { baseUrl } from '../../../config/config';\r\nimport axios from 'axios';\r\nimport ConsaltSearch from './ConsaltSearch';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n  } from \"reactstrap\";\r\n  import { Link , useHistory} from 'react-router-dom';\r\n  import BootstrapTable from 'react-bootstrap-table-next';\r\n  import { Typography, Button } from '@material-ui/core';\r\nconst Consalation = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const [data, setData] = useState();\r\nlet history  = useHistory()\r\n  const proc = {\r\n      color : \"green\"\r\n  }\r\n  const unproc = {\r\n    color : \"red\"\r\n}\r\n    const getData = () => {\r\n        axios.get(`${baseUrl}/report/paymentReport`)\r\n        .then((res) => {\r\n          \r\n            if(res.data.code === 1) {\r\n                setData(res.data.result);\r\n            }\r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        getData()\r\n    }, [])\r\n    const columns = [\r\n        \r\n            {\r\n            dataFeild : \"\",\r\n            text : \"S.No\",\r\n            formatter : (cellContent, row, rowIndex) =>{\r\n              return rowIndex + 1\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n              },\r\n        },\r\n        {\r\n          text: \"Query No\",\r\n          dataField: \"assign_no\",\r\n          headerStyle: () => {\r\n            return { fontSize: \"12px\" };\r\n          },\r\n          formatter: function nameFormatter(cell, row) {\r\n            return (\r\n              <>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/queries/${row.id}`,\r\n                  \r\n                    routes: \"consalation\",\r\n                  }}\r\n                >\r\n                  {row.assign_no}\r\n                </Link>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n        {\r\n            dataField: \"first_name\",\r\n            text: \"Client Name\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\" };\r\n            },\r\n          },\r\n          {\r\n            dataField: \"customer_id\",\r\n            text: \"Client Id\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\" };\r\n            },\r\n          },\r\n          {\r\n            dataField : \"mobile\",\r\n            text : \"Mobile Number\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n          {\r\n           dataField : \"Invoice_Number\",\r\n           text : \"Invoice No\",\r\n           sort : true,\r\n           style : {\r\n                fontSize : \"11px\"\r\n           },\r\n           headerStyle : () => {\r\n               return {fontSize : \"11px\"}\r\n           }\r\n          },\r\n         \r\n          {\r\n              dataField : \"txn_date\",\r\n              text : \"Payment Date\",\r\n              sort : true,\r\n              style : {\r\n                  fontSize : \"11px\"\r\n              },\r\n              headerStyle : () => {\r\n                  return { fontSize : \"11px\"}\r\n              },\r\n              formatter : function formatterD (cell ,row) {\r\n                  let a = row.txn_date.split(\"-\").reverse().join(\"-\")\r\n                return(\r\n                  <p>{a}</p>\r\n                )\r\n              }\r\n          },\r\n          {\r\n            dataField : \"payment_type\",\r\n            text : \"Payment Type\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n        \r\n        // {\r\n        //    dataField : \"bill_due_date\",\r\n        //     text : \"Due Date\",\r\n        //     sort : true,\r\n        //     style : {\r\n        //         fontSize : \"11px\"\r\n        //     },\r\n        //     headerStyle : () => {\r\n        //         return { fontSize : \"11px\"}\r\n        //     }\r\n        // },\r\n     \r\n        {\r\n            dataField : \"TL_Post_Id\",\r\n            text : \"Tl Post\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n        {\r\n            dataField : \"Invoice_Amount\",\r\n            text : \"Invoice Amount\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n        {\r\n            dataField : \"Tds_Deducted\",\r\n            text : \"TDS Deducted\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n        {\r\n            dataField: \"Amt_Collected\",\r\n            text: \"Amount Paid\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\" };\r\n            },\r\n          },\r\n        {\r\n            dataField : \"delay\",\r\n            text : \"Delay Days\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            }\r\n        },\r\n        {\r\n            dataField : \"\",\r\n            text : \"Status\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            },\r\n            formatter : function formatterD (cell ,row) {\r\n              let a ;\r\n              if(row.status === \"1\"){\r\n                  a = \"Matched\"\r\n              }\r\n              else if(row.status === \"2\"){\r\n                a = \"Unmatched\"\r\n            }\r\n              return(\r\n                <p style= {row.status === \"1\" ? proc : unproc}>{a}</p>\r\n              )\r\n            }\r\n        },\r\n        {\r\n            dataField : \"receipt_url\",\r\n            text : \"Receipt\",\r\n            sort : true,\r\n            style : {\r\n                fontSize : \"11px\"\r\n            },\r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\"}\r\n            },\r\n            formatter : function formatterName (cell , row) {\r\n               return(\r\n                <a target=\"_blank\"\r\n                href= {row.receipt_url}\r\n              >\r\n               Payment Receipt\r\n              </a>\r\n               )\r\n            }\r\n        },\r\n    ]\r\n    return(\r\n  \r\n        <>\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n <Card>\r\n     <CardHeader>\r\n       <>\r\n       <div className=\"row\">\r\n           <div className=\"col-md-6\">\r\n           <Typography variant=\"h4\">Report Consolidate</Typography>\r\n         \r\n             </div>\r\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\r\n             <button  className=\"btn btn-lg btn btn-success\" onClick = {() => history.goBack()}>Go Back </button>\r\n               </div>\r\n           </div>\r\n<ConsaltSearch  setData = {setData} />\r\n</>\r\n     </CardHeader>\r\n     <CardBody>\r\n \r\n     <div className=\"tableFixHead\">\r\n     {data === undefined ? \"\" : \r\n     <BootstrapTable\r\n     bootstrap4\r\n     keyField=\"id\"\r\n     data={data}\r\n     columns={columns}\r\n     rowIndex\r\n     classes=\"table-responsivepayment\"\r\n   />}\r\n     </div>\r\n     </CardBody>\r\n </Card>\r\n        </Layout>\r\n      \r\n        </>\r\n    )\r\n}\r\nexport default Consalation;","D:\\Mazars\\src\\pages\\TL\\Dashboard\\Dashboard.js",["1817","1818","1819"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\nconst sessionTlId = window.sessionStorage.getItem(\"sessionTlid\")\r\nlet history = useHistory()\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid,\r\n    totalpayment } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n        \r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n         \r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n              totalpayment: response.data.result.totalpayment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"tlkey\")\r\n    localStorage.removeItem(\"tlEmail\")\r\n    history.push(\"/teamleader/login\")\r\n    \r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n    {sessionTlId ? \r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n\r\n    <div className=\"row\">\r\n\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n        <table className=\"table table-striped first main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Queries</th>\r\n              <th>{total}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <table className=\"table table-striped second main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Queries</th>\r\n              <th>{inprogress_queries}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Allocation</td>\r\n              <td>{inprogress_allocation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Proposals</td>\r\n              <td>{inprogress_proposal}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Assignments</td>\r\n              <td>{inprogress_assignment}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <table className=\"table table-striped third main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Completed; Queries</th>\r\n              <th>{complete_query}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Completed; Assignments</td>\r\n              <td>{complete_query}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <table className=\"table table-striped forth main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Declined; Queries</th>\r\n              <th>{declined_queries}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"table_body\">\r\n            {/* <tr>\r\n              <td className=\"left_side\">Admin Declined; Queries</td>\r\n              <td>{admin_declined_query}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\"> Customer Declined; Queries</td>\r\n              <td>{customer_declined_Query}</td>\r\n            </tr> */}\r\n            <tr>\r\n              <td className=\"left_side\">Client Declined; Proposals</td>\r\n              <td>{customer_declined_proposal}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Client Declined; Payment</td>\r\n              <td>{Customer_declined_payment}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n\r\n        <table className=\"table table-striped fifth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Proposals</th>\r\n              <th>{allproposal}</th>\r\n\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped sixth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Proposals</th>\r\n              <th>{InProgress}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody classNameName=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Preparation</td>\r\n              <td>{inprogress_preparation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Acceptance</td>\r\n              <td>{inprogress_acceptance}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table className=\"table table-striped seventh main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Accepted; Proposals </th>\r\n              <th>{accepted_proposals}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped eight main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Client Declined; Proposals</th>\r\n              <th>{declined}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n        <table className=\"table table-striped ninth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Assignments</th>\r\n              <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Assignments</th>\r\n              <th>{inprogress}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody classNameName=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Client Discussion</td>\r\n              <td>{client_discussion}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Draft Reports</td>\r\n              <td>{draft_report}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Final Discussion</td>\r\n              <td>{final_discussion}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Delivery of Final Reports</td>\r\n              <td>{final_report}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Awaiting Completion</td>\r\n              <td>{complete_inprocess}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Completed; Assignments</th>\r\n              <th>{complete}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Client Declined; Payment</th>\r\n              <th>{customer_declined_payment}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n\r\n        <table className=\"table table-striped twelvth main_table\">\r\n          <thead className=\"payment_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Payments</th>\r\n              <th>{totalpayment}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <table className=\"table table-striped thirteen main_table\">\r\n          <thead className=\"payment_thead2\">\r\n            <tr>\r\n              <th className=\"left_side\">Paid</th>\r\n              <th>{paid}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped thirteen main_table\">\r\n          <thead className=\"payment_thead2\">\r\n            <tr>\r\n              <th className=\"left_side\">Unpaid</th>\r\n              <th>{unpaid}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </Layout> : \r\n  <>\r\n  {logout()}\r\n  </>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js",["1820","1821","1822","1823","1824","1825"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\nimport History from './History.js';\r\nfunction TaxProfessionalsTab() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tpCount, setTpCount] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [myPurpose, setPurpose] = useState([])\r\n  var digit2 = [];\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, []);\r\n\r\n  const getTaxProf = () => {\r\n    axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\r\n    ;\r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n        setTpCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n    if(typeof(key) == \"object\") {\r\n     \r\n    }\r\n    else{\r\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"application/vnd.github.cloak-preview\",\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n         \r\n          setHistory(response.result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n    \r\n   \r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL post name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_post_email\",\r\n      text: \"TL post email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"post_name\",\r\n      text: \"TP post name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"email\",\r\n      text: \"TP post email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name of TP\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"personal_email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Mobile No\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      // dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n       \r\n        digit2 = row.allpcat_id.split(\",\")\r\n       \r\n        return(\r\n          <>\r\n          \r\n          {\r\n             digit2.map((e) => {\r\n             return(\r\n               <>\r\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>  \r\n               </>\r\n             ) \r\n           })\r\n          }\r\n           </>\r\n        )\r\n      }\r\n    },\r\n   \r\n   \r\n    {\r\n      \r\n     \r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit = [];\r\n         \r\n        digit = row.allcat_id.split(\",\")\r\n      let kk;\r\n      if(digit.length > 1){\r\n        kk = \",\"\r\n      }\r\n      else{\r\n        kk = \"\"\r\n      }\r\n      \r\n        return(\r\n          <>\r\n          \r\n         {\r\n            digit.map((e) => {\r\n            return(\r\n              <>\r\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + kk}</p>  \r\n              </>\r\n            ) \r\n          })\r\n         }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n   \r\n   \r\n    {\r\n      dataField: \"\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/edittp/${row.id}`}>\r\n              <i\r\n                className=\"fa fa-edit\"\r\n                style={{\r\n                  fontSize: 18,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                }}\r\n              ></i>\r\n            </Link>\r\n            {/* <i\r\n              className=\"fa fa-trash\"\r\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\r\n              onClick={() => del(row.id)}\r\n            ></i> */}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //check\r\n  const del = (id) => {\r\n  \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"It will permanently deleted !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n  \r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getTaxProf();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\">\r\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\r\n                Add New\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsivepayment\"\r\n          />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      <History history={history} toggle={toggle} modal={modal} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default TaxProfessionalsTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\TL\\AddNew\\AddNew.js",["1826","1827","1828"],"import React from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import './index.css'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\"; \r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required name\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_phone: yup\r\n//   .string()\r\n//   .required(\"required phone no\")\r\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\r\n//   .min(10, \"Must be exactly 10 digits\")\r\n//   .max(20, \"max 20 digits\"),\r\n// });\r\n\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AddTaxProfessional`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n           \r\n        if (response.data.code === 1) {\r\n          alert.success(\"TP created  !\");\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Add New Tax Professionals</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>   \r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      ref={register}\r\n                    />\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                    ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n","D:\\Mazars\\src\\pages\\Admin\\customer\\Customer.js",["1829","1830","1831","1832","1833","1834","1835","1836","1837","1838"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport CustomerListFilter from \"../../../components/Search-Filter/CustomerListFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\nimport History from \"./CustHistory\";\r\n\r\nfunction Customer() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tpCount, setTpCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [myPurpose, setPurpose] = useState([])\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  var digit2 = [];\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, []);\r\n\r\n  const getCustomer = () => {\r\n    axios.get(`${baseUrl}/admin/getAllList`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n        setTpCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n    if(typeof(key) == \"object\") {\r\n    \r\n    }\r\n    else{\r\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"application/vnd.github.cloak-preview\",\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          \r\n          setHistory(response.result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n    \r\n   \r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n        dataField: \"email\",\r\n        text: \"Email\",\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\", cursor: \"pointer\" };\r\n        },\r\n        \r\n      },\r\n      {\r\n        dataField: \"phone\",\r\n        text: \"Mobile No\",\r\n       \r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n        },\r\n      },\r\n      {\r\n        dataField: \"occupation\",\r\n        text: \"Occupation\",\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n        },\r\n      },\r\n    {\r\n      dataField: \"country\",\r\n      text: \"Country\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"state\",\r\n      text: \"State\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"city\",\r\n      text: \"City\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n       return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date of Registration\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    \r\n  \r\n   \r\n    {\r\n      dataField: \"\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n           \r\n            <i\r\n              className=\"fa fa-eye\"\r\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" , color : \"green\"}}\r\n              onClick={() => show(row.id)}\r\n            ></i>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n   \r\n  ];\r\n\r\n  //check\r\n  const show = (key) => {\r\n \r\n    setModal(!modal);\r\n\r\n   if(typeof(key) == \"object\") {\r\n    \r\n   }\r\n   else{\r\n    {\r\n      axios.\r\n      get(`${baseUrl}/customers/totalComplete?uid=${key}`)\r\n        \r\n        .then((response) => {\r\n         \r\n         if(response.data.code === 1){\r\n        \r\n           setHistory(response.data.result)\r\n         }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n   }\r\n   \r\n  \r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n  \r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getCustomer();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <CardTitle tag=\"h4\">Customer ({tpCount})</CardTitle>\r\n            </Col>\r\n           <Col md=\"6\">\r\n           \r\n           </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <CustomerListFilter\r\n        setData={setData}\r\n        searchQuery = \"SearchQuery\"\r\n        setRecords={setTpCount}\r\n         records={tpCount} \r\n         getCustomer = {getCustomer} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <History history={history} toggle={toggle} modal={modal} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\Report\\ReportList.js",["1839","1840","1841"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography , Button} from \"@material-ui/core\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\nconst ReportList = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const [data, setData] = useState()\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    const getData = () => {\r\n       axios.get(`${baseUrl}/report/getListOfReport?uid=${JSON.parse(userid)}`)\r\n       .then((res) => {\r\n           console.log(\"myResponse\", res.data.result)\r\n           setData(res.data.result)\r\n       })\r\n    }\r\n   const del = (id) => {\r\n    Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will permanently deleted !\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          delReprot(id);\r\n        }\r\n      });\r\n   }\r\n    const delReprot = (e) => {\r\n        axios.get(`${baseUrl}/report/deleteRecord?id=${e}&uid=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n                Swal.fire({\r\n                    title : \"success\", \r\n                    html : \"Report deleted successfully\",\r\n                    icon : \"success\"\r\n                })\r\n            }\r\n            getData()\r\n        })\r\n    }\r\n    const columns = [\r\n        {\r\n        dataFeild : \"\",\r\n        text : \"S.No\",\r\n        formatter : (cellContent, row, rowIndex) =>{\r\n          return rowIndex + 1\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"12px\", width: \"50px\" };\r\n          },\r\n    },\r\n    {\r\n        dataField: \"created_date\",\r\n        text: \"Created Date\",\r\n        sort: true,\r\n        headerStyle: () => {\r\n          return { fontSize: \"12px\", width : \"200px\" };\r\n        },\r\n        formatter : function formatter(cell, row) {\r\n          //  console.log(\"row\", row.split(\"\").reverse().join(\"-\"))\r\n          let a = row.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\r\n          let b = row.created_date.split(\" \")[1]\r\n\r\n          return(\r\n              <>\r\n            <div style={{display : \"flex\", justifyContent : \"space-around\"}}>\r\n            <span >{a}</span>\r\n              <span>{b}</span>\r\n            </div>\r\n              </>\r\n          )\r\n        }\r\n      },\r\n      {\r\n          dataField : \"\",\r\n          text : \"Action\",\r\n          headerStyle : () => {\r\n              return { fontSize : \"12px\", width : \"200px\" }\r\n          },\r\n          formatter : function nameFormatter(cell, row) {\r\n             \r\n              return(\r\n               <>\r\n                  <div style={{display : \"flex\", justifyContent : \"space-around\"}}>\r\n                \r\n               <div title=\"Download\">\r\n               <a href ={`${baseUrl3}/${row.report_path}`} target=\"_blank\">\r\n                <CloudDownloadIcon />\r\n                  </a>\r\n               </div>\r\n                  <i class=\"fa-thin fa-file-excel\"></i>\r\n\r\n<div title=\"Delete\">\r\n<DeleteIcon color = \"danger\" onClick = {() =>del(row.id)} />\r\n</div>\r\n                  </div>\r\n               </>\r\n              )\r\n          }\r\n      }\r\n    \r\n]\r\n    return (\r\n\r\n        <>\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n       <div className = \"row\">\r\n           <div className=\"col-md-4\">\r\n           <Typography variant = \"h4\">\r\n            Report List\r\n        </Typography>\r\n       </div>\r\n       <div className=\"col-md-4\">\r\n     \r\n          <Link to=\"/admin/reports\" class=\"btn btn-primary\">\r\n                                   Generate Report\r\n                                </Link>\r\n           </div>\r\n           <div className=\"col-md-4\">\r\n     \r\n     <Link to=\"/admin/consalation\" class=\"btn btn-primary\">\r\n                              Consolidate Payment\r\n                           </Link>\r\n      </div>\r\n       </div>\r\n{data === undefined ? \"\" : \r\n       <div className=\"tableFixHead\">\r\n       <BootstrapTable\r\n         bootstrap4\r\n         keyField=\"id\"\r\n         data={data}\r\n         columns={columns}\r\n         rowIndex\r\n         classes=\"table-responsivepayment\"\r\n       />\r\n       </div>}\r\n        </Layout>\r\n      \r\n        </>\r\n    )\r\n}\r\nexport default ReportList;","D:\\Mazars\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js",["1842","1843","1844","1845","1846","1847","1848","1849","1850"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport CommonServices from \"../../../common/common\"\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"\"),\r\n  p_expdeldate: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryAssingment() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\r\n  const [taxID, setTaxID] = useState(null);\r\n  const [teamName, setTeamName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const [query, setQuery] = useState(true);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n    expect_dd: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId, expect_dd } = queryData;\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    getTaxProfession();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxProfession = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}&&q_id=${id}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setTaxProfessionDisplay(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n          expect_dd: CommonServices.changeFormateDate(res.data.result[0].Exp_Delivery_Date),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          // setHideQuery(res.data.meta);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    setTaxID(e.target.value)\r\n    var value = taxProfessionDisplay.filter(function (item) {\r\n      return item.id == e.target.value\r\n    })\r\n  \r\n    setTeamName(value[0].name)\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"who\", taxID);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"types\", \"tp\");\r\n    formData.append(\"name\", teamName);\r\n    formData.append(\"timeline\", value.p_timelines);\r\n    formData.append(\"expdeliverydate\", expdeliverydate);\r\n    formData.append(\"assignNo\", queryNo);\r\n    formData.append(\"customer_id\", custId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddQueryAssignment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Query assigned successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n         \r\n          getQuery();\r\n          reset();\r\n          history.push('/teamleader/queriestab')\r\n        } if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/teamleader/queriestab`,\r\n                  index: 3,\r\n                }}\r\n              >\r\n                <button\r\n                  class=\"btn btn-success ml-3\"\r\n                >\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        {\r\n          loading ?\r\n            <Loader />\r\n            :\r\n            <>\r\n              <CardHeader>\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <table class=\"table\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Query No.</th>\r\n                              <th scope=\"col\">Tax Professional<span className=\"declined\">*</span></th>\r\n                              <th scope=\"col\">Expected Timeline</th>\r\n                              <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\r\n                              <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {query ? (\r\n                              <tr>\r\n                                <th scope=\"row\">{queryNo}</th>\r\n                                <td>\r\n                                  <select\r\n                                    className={classNames(\"form-control\", {\r\n                                      \"is-invalid\": errors.p_taxprof,\r\n                                    })}\r\n                                    name=\"p_taxprof\"\r\n                                    ref={register}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                  >\r\n                                    <option value=\"\">--select--</option>\r\n                                    {taxProfessionDisplay.map((p, index) => (\r\n                                      <option key={index} value={p.id}>\r\n                                        { p.post_name + \"-\"   + p.name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </select>\r\n                                  {errors.p_taxprof && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                      {errors.p_taxprof.message}\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_timelines\"\r\n                                    value={timelines}\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_expdeldate\"\r\n                                    className={classNames(\"form-control\", {\r\n                                      \"is-invalid\": errors.p_expdeldate,\r\n                                    })}\r\n                                    value={expect_dd}\r\n                                    min={item}\r\n                                  />\r\n                                  {errors.p_expdeldate && (\r\n                                    <div className=\"invalid-feedback\">\r\n                                      {errors.p_expdeldate.message}\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <button type=\"submit\" class=\"btn btn-success\">\r\n                                    Assign\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              <tr>\r\n                                <th scope=\"row\">{queryNo}</th>\r\n                                <td>\r\n                                  <select class=\"form-control w-75 p-0\" disabled>\r\n                                    <option>{hideQuery.name}</option>\r\n                                  </select>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    name=\"p_timelines\"\r\n                                    value={hideQuery.timeline}\r\n                                    disabled\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    ref={register}\r\n                                    name=\"p_expdeldate\"\r\n                                    value={hideQuery.expdeliverydate}\r\n                                    disabled\r\n                                    class=\"form-control\"\r\n                                  />\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <button class=\"btn btn-success\" disabled>\r\n                                    Assigned\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </form>\r\n                      <Mandatory />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n            </>\r\n        }\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n\r\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n","D:\\Mazars\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js",["1851","1852","1853","1854","1855","1856","1857","1858"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n    p_notes: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction QueryRejection(props) {\r\n    const { id } = useParams();\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm({\r\n        resolver: yupResolver(Schema),\r\n    });\r\n\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const onSubmit = (value) => {\r\n      \r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", id);\r\n        formData.append(\"notes\", value.p_notes);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/admin/setAdminreject`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n               \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"Query declined successfully.\")\r\n                    props.history.push({\r\n                        pathname: `/admin/queriestab`,\r\n                        index: 1,\r\n                    });\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"4\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/admin/queriestab`,\r\n                                    index: 1,\r\n                                }}\r\n                            >\r\n                                <button class=\"btn btn-success ml-3\">\r\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                                    Go Back\r\n                                </button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <h2>Decline Query</h2>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                {\r\n                    loading ?\r\n                        <Loader />\r\n                        :\r\n                        <>\r\n                            <CardHeader>\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                                    <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label>Notes<span className=\"declined\">*</span></label>\r\n                                                        <textarea\r\n                                                            className={classNames(\"form-control\", {\r\n                                                                \"is-invalid\": errors.p_notes,\r\n                                                            })}\r\n                                                            id=\"textarea\"\r\n                                                            rows=\"6\"\r\n                                                            name=\"p_notes\"\r\n                                                            ref={register}\r\n                                                        ></textarea>\r\n                                                        {errors.p_notes && (\r\n                                                            <div className=\"invalid-feedback\">\r\n                                                                {errors.p_notes.message}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                Submit\r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                                </div>\r\n                                <Mandatory />\r\n                            </CardHeader>\r\n                        </>\r\n                }\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default QueryRejection;","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Invoice.js",["1859","1860","1861","1862","1863","1864"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CreateInvoice from \"./CreateInvoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <CreateInvoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js",["1865","1866","1867","1868","1869"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\nimport moment from 'moment';\r\nfunction QueriesRecevied(props) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [accept, setAccept] = useState();\r\n  const [tlName2, setTlname] = useState();\r\n  const[tp22, setTp22] = useState();\r\n  const [tpStatus, setTpstatus] = useState();\r\n  const [declined2, setDeclined2] = useState();\r\n  const [declinedStatus, setDeclinedStatus] = useState(false)\r\n  const [finalDate, setFinalDate] = useState()\r\n  const [qstatus, setqStatus] = useState();\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    proposal_reactive_dates: \"\",\r\n    proposal_reactive_notes: \"\"\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setqStatus(res.data.result[0].query_status)\r\n          setTpstatus(res.data.result[0].tp_status);\r\n          setAccept(res.data.result[0].query_status)\r\n          setTlname(res.data.result[0].tlname);\r\n          setTp22(res.data.result[0].tpname);\r\n          if(res.data.history_queries[0] === undefined){\r\n\r\n          }\r\n          else{\r\n            setDisplayHistory({\r\n              tlname: res.data.proposal_queries,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n           \r\n          }\r\n          if(res.data.result[0].status ==\"Declined Query\"){\r\n          let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\r\n            setDeclined2(a)\r\n           setDeclinedStatus(true)\r\n          }\r\n          if (res.data.result) {\r\n            if (res.data.result[0].name == null) {\r\n            \r\n            }\r\n            else {\r\n              setSubmitData(res.data.result);\r\n            }\r\n          }\r\n\r\n          if (res.data.additional_queries) {\r\n            setDisplaySpecific(res.data.additional_queries);\r\n          }\r\n          if (res.data.payment_detail) {\r\n            setPaymentDetails(res.data.payment_detail);\r\n          }\r\n          if (res.data.feedback_detail) {\r\n            setFeedback(res.data.feedback_detail);\r\n          }\r\n          if (res.data.result[0].assign_no) {\r\n            setAssingmentNo(res.data.result[0].assign_no);\r\n          }\r\n\r\n          if (res.data.reports) {\r\n            setReports(res.data.reports);\r\n          }\r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n\r\n          \r\n          try {\r\n           \r\n            var myYear = JSON.parse(assementItem);\r\n           \r\n            setYear(myYear);\r\n          } catch (e) {\r\n           \r\n          }\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            \r\n            setPurpose(myPurpose);\r\n           \r\n          } catch (e) {\r\n           \r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\r\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\r\n            });\r\n            let a = moment(res.data.result[0].final_date);\r\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\r\n            let c = a.diff(b)\r\n            let d = moment.duration(c)\r\n            let finalDate = d.days() + 1;\r\n           setFinalDate(finalDate)\r\n          \r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          // if (res.data.history_queries.length > 0) {\r\n          //   setDisplayHistory({\r\n          //     tlname: res.data.history_queries[0].tname,\r\n          //     date_of_allocation:\r\n          //       res.data.history_queries[0].date_of_allocation,\r\n          //   });\r\n          // }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n  const getQuery = () => {\r\n   if(assingNo === undefined){\r\n     return false\r\n   }\r\n   else{\r\n    axios\r\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n    .then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        setDisplayQuery(res.data.result);\r\n      }\r\n    });\r\n   }\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/teamleader/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n                accept = {accept}\r\n                tpStatus={tpStatus}\r\n                tlName2={tlName2}\r\n                tp22 = {tp22}\r\n                finalDate={finalDate}\r\n                qstatus={qstatus}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js",["1870","1871","1872","1873","1874"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\nconst history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setFeedBackData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n    \r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n    \r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.tl_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\", wordBreak : \"break-word\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          // alert.success(\"successfully read!\");\r\n          getFeedback()\r\n          history.push(\"/teamleader/feedback\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\TL\\SendProposal\\SendProposal.js",["1875","1876"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ProposalComponent from \"./ProposalComponent\";\r\n\r\n\r\nfunction SendProposal() {\r\n    const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <ProposalComponent id={id}/>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendProposal;\r\n","D:\\Mazars\\src\\pages\\TL\\Login\\Login.js",["1877","1878","1879","1880"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"\")\r\n});\r\n\r\nfunction Login(props) {\r\n  let history = useHistory()\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n         \r\n          logout();\r\n          setShow(true)\r\n          setLoading(false)\r\n          Cookies.set(\"tlName\", response.data.display_name)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data.user_id)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    \r\n    setEmail(e.target.value);\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/admin/login\");\r\n    }, 36000000)\r\n  }\r\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\r\n    window.location.href = window.location.href.replace('http:', 'https:')\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" noTlSign = \"noSingIn\"/>\r\n      <div className=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid} loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div className=\"form\">\r\n              <div className=\"heading\">\r\n                <h2>MTL Login</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password</label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        autocomplete=\"off\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/teamleader/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\ProposalTab.js",["1881","1882","1883","1884","1885"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction ProposalTab(props) {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n    const [allProposal, setAllProposal] = useState(\"\");\r\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\r\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"atuo\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"auto\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const AllProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAllProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const InprogressProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setInprogressProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const AcceptedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAcceptedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const DeclinedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setDeclinedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        AllProposal();\r\n        InprogressProposal();\r\n        AcceptedProposal();\r\n        DeclinedProposal();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Proposals ({allProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Proposals ({inprogressProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                            Accepted; Proposals ({acceptedProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n                            Client Declined; Proposals ({declinedProposal})\r\n                        </Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AllProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <InprogressProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <AcceptedProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <DeclinedProposal />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js",["1886","1887","1888","1889"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport DraftReportTab from \"./DraftReportTab\";\r\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n  const [draft, setDraft] = useState(\"\");\r\n  const [final, setFinal] = useState();\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const AllAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setAllAssignmentCount(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getDraftReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setDraft(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getFinalReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setFinal(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    AllAssignment();\r\n    getDraftReports();\r\n    getFinalReports();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignments ({allAssignmentCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Draft Reports ({draft})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Delivery of Final ({final})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DraftReportTab />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeliveryFinalTab />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js",["1890","1891","1892","1893"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nfunction AddTeamProf() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, []);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setData(res.data.result);\r\n          setCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      dataField: \"post_name\",\r\n      text: \"TP post name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"email\",\r\n      text: \"TP post email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name of TP\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"personal_email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Mobile No\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      // dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit2 = [];\r\n        digit2 = row.allpcat_id.split(\",\")\r\n       \r\n        return(\r\n          <>\r\n          \r\n          {\r\n             digit2.map((e) => {\r\n             return(\r\n               <>\r\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \r\n               </>\r\n             ) \r\n           })\r\n          }\r\n           </>\r\n        )\r\n      }\r\n    },\r\n   \r\n   \r\n    {\r\n      \r\n     \r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit = [];\r\n         \r\n        digit = row.allcat_id.split(\",\")\r\n      \r\n      \r\n        return(\r\n          <>\r\n          \r\n         {\r\n            digit.map((e) => {\r\n            return(\r\n              <>\r\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \r\n              </>\r\n            ) \r\n          })\r\n         }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n   \r\n  ]\r\n  // delete data\r\n  const del = (id) => {\r\n    \r\n\r\n    axios\r\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\r\n      .then(function (response) {\r\n                alert.success(\"successfully deleted \");\r\n        getTaxProf();\r\n      })\r\n      .catch((error) => {\r\n              });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n\r\n          {/* <Table responsive=\"sm\" bordered>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">S.No</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone No.</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((p, i) => (\r\n                <tr>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{p.name}</td>\r\n                  <td>{p.email}</td>\r\n                  <td>{p.phone}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table> */}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddTeamProf;\r\n","D:\\Mazars\\src\\pages\\TL\\EditTP\\EditTP.js",["1894","1895"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction EditTP() {\r\n  const { id } = useParams();\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const { name, email, phone } = user;\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n\r\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setUser({\r\n            name: res.data.result[0].name,\r\n            email: res.data.result[0].email,\r\n            phone: res.data.result[0].phone,\r\n          });\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"id\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/updateTP`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(\"TL updated  !\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Edit Tax Professional</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      defaultValue={name}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                      defaultValue={email}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      defaultValue={phone}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTP;\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js",["1896","1897","1898","1899"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n       \r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n       \r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n       \r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\QueriesTab.js",["1900","1901","1902","1903","1904","1905"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\r\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\r\nimport CompleteData from \"../CompleteData/CompleteData\";\r\nimport AllQuery from \"./AllQuery\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  const [allQuery, setAllQuery] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const AllQuery = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setAllQuery(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getPendindForAccepttence = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setPendingForAcceptence(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n      axios\r\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const Declined = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setDeclined(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getPendindForAccepttence();\r\n    getIncomplete();\r\n    getComplete();\r\n    AllQuery();\r\n    Declined()\r\n  }, []);\r\n\r\n  const updateTab = (key) => {\r\n    setTabIndex(key)\r\n  }\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Query ({allQuery})\r\n            </Tab>\r\n           \r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries ({incomplete})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Pending For Acceptence ({pendindForAccepttence})\r\n            </Tab>\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n            Pending for assignment ({complete})\r\n            </Tab>\r\n            \r\n          </TabList>\r\n\r\n\r\n          <TabPanel>\r\n            <AllQuery\r\n            />\r\n          </TabPanel>\r\n         \r\n          <TabPanel>\r\n            <InCompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <PendingForAcceptence\r\n              updateTab={updateTab}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <CompleteData\r\n            />\r\n          </TabPanel>\r\n         \r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n  // const CountPendingForAcceptence = (data) => {\r\n  //   setPendingForAcceptence(data);\r\n  // };\r\n\r\n  // const CountIncomplete = (data) => {\r\n  //   setIncomplete(data);\r\n  // };\r\n\r\n  // const CountComplete = (data) => {\r\n  //   setComplete(data);\r\n  // };","D:\\Mazars\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js",["1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction AssignmentForm(props) {\r\n\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [assignNo, setAssignNo] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [store, setStore] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setAssignNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [assignNo]);\r\n\r\n  const getDetails = (value) => {\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    let formData = new FormData();\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n    formData.append(\"notes\", value.p_notes);\r\n    formData.append(\"receive_sent_date\", value.p_date);\r\n    formData.append(\"notes_type\", value.p_type);\r\n    formData.append(\"type_info\", value.p_info);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n    formData.append(\"send_received\", item);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/addAssignmentStages`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(<Msg />);\r\n          getDetails();\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>success</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Client Discussion Information</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          {props.location.clients == \"completed\" ? (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                        disabled\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {store == \"email\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {store == \"phone\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {store == \"other\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Notes info</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <h4>List</h4>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Documents</th>\r\n                  <th scope=\"row\">Titles</th>\r\n                  <th scope=\"row\">Notes type</th>\r\n                  <th scope=\"row\">Notes Info</th>\r\n                  <th scope=\"row\">Date</th>\r\n                  <th scope=\"row\">send/Received</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                      <td>{p.notes}</td>\r\n                      <td>{p.notes_type}</td>\r\n                      <td>{p.type_info}</td>\r\n                      <td>{p.receive_sent_date}</td>\r\n                      <td>{p.send_received}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentForm;\r\n","D:\\Mazars\\src\\pages\\TL\\ViewReport\\ViewReport.js",["1918","1919","1920","1921","1922","1923"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nfunction ViewReport() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getReport();\r\n  }, []);\r\n\r\n  const getReport = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>ViewReport</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Report</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js",["1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { result } from \"lodash\";\r\n\r\nfunction AddAssingmentStages() {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [assignmentStages, setAssignmentstages] = useState([]);\r\n  const [clientDiscussion, setClientDiscussion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n       \r\n\r\n        if (res.data.code === 1) {\r\n            setAssignmentstages(res.data.result);\r\n          reset(res.data.result[0]);\r\n          setClientDiscussion(res.data.result[0].client_discussion)\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n   \r\n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\r\n    {    \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding , Do you still want to proceed to complete this query?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.value === true) {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n    \r\n        formData.append(\"q_id\", id);\r\n        formData.append(\"user_id\", JSON.parse(userid));\r\n        formData.append(\"stage_1_status\", value.client_discussion);\r\n        formData.append(\"stage_2_status\", value.draft_report);\r\n        formData.append(\"stage_3_status\", value.final_discussion);\r\n        formData.append(\"stage_4_status\", value.delivery_report);\r\n        formData.append(\"stage_5_status\", value.other_stage);\r\n    \r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/postAssignmentStages`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n           \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\r\n              getAssignmentList();\r\n              history.push(\"/teamleader/assignment\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            \r\n          });\r\n      }\r\n      else{\r\n\r\n        history.push(\"/teamleader/assignment\");\r\n       return false;\r\n      }\r\n    });\r\n\treturn false;\r\n    }\r\n    else{\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n \r\n      formData.append(\"q_id\", id);\r\n      formData.append(\"user_id\", JSON.parse(userid));\r\n      formData.append(\"stage_1_status\", value.client_discussion);\r\n      \r\n       formData.append(\"stage_2_status\", value.draft_report);\r\n   \r\n      formData.append(\"stage_3_status\", value.final_discussion);\r\n    \r\n     formData.append(\"stage_4_status\", value.delivery_report);\r\n      \r\n      formData.append(\"stage_5_status\", value.other_stage);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/postAssignmentStages`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n            getAssignmentList();\r\n            history.push(\"/teamleader/assignment\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n       \r\n        });\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Assignment Stages</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            {assignmentStages.map((p, i) => (\r\n              <>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\" ? (\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-8\">\r\n                      <br />\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Client Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.client_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Draft Report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.draft_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Final Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.final_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Delivery of report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.delivery_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Awaiting Completion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.other_stage}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn btn-primary\"\r\n                            disabled\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Client Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                       {p.client_discussion === \"completed\" ? \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"client_discussion\"\r\n                            disabled\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            \r\n                          </select>\r\n                        </div>\r\n                      </div> : \r\n                       <div class=\"col-md-4\">\r\n                       <div class=\"form-group\">\r\n                         <select\r\n                           class=\"form-control\"\r\n                           ref={register}\r\n                           name=\"client_discussion\"\r\n                         >\r\n                           <option value=\"inprogress\">Inprogress</option>\r\n                           <option value=\"completed\">Completed</option>\r\n                           \r\n                         </select>\r\n                       </div>\r\n                     </div>}\r\n\r\n                       \r\n\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Draft Report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {\r\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\r\n                          <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"draft_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div> :\r\n                         <div class=\"col-md-4\">\r\n                         <div class=\"form-group\">\r\n                           <select\r\n                             class=\"form-control\"\r\n                             ref={register}\r\n                             disabled\r\n                             defaultValue = \"inprogress\"\r\n                             name=\"draft_report\"\r\n                           >\r\n                             <option value=\"inprogress\">Inprogress</option>\r\n                             <option value=\"completed\">Completed</option>\r\n                             \r\n                           </select>\r\n                         </div>\r\n                       </div>\r\n                        }\r\n                       \r\n                      \r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Final Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"final_discussion\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                           \r\n                          </select>\r\n                        </div>\r\n                      </div> : \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"final_discussion\"\r\n                            disabled\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                           \r\n                          </select>\r\n                        </div>\r\n                      </div> }\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Delivery of report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"delivery_report\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            \r\n                          </select>\r\n                        </div>\r\n                      </div> :\r\n                      <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <select\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                          name=\"delivery_report\"\r\n                          disabled\r\n                        >\r\n                          <option value=\"inprogress\">Inprogress</option>\r\n                          <option value=\"completed\">Completed</option>\r\n                          \r\n                        </select>\r\n                      </div>\r\n                    </div>}\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Awaiting Completion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \r\n                        ? <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"other_stage\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      : <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <select\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                          name=\"other_stage\"\r\n                          disabled\r\n                        >\r\n                          <option value=\"inprogress\">Inprogress</option>\r\n                          <option value=\"completed\">Completed</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>}\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-group\">\r\n                        {\r\n                          loading ?\r\n                            <Spinner color=\"primary\" />\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                              Submit\r\n                            </button>\r\n                        }\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddAssingmentStages;\r\n","D:\\Mazars\\src\\pages\\Admin\\EditTL\\EditTL.js",["1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from 'sweetalert2'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Card,\r\n  CardHeader\r\n} from \"reactstrap\";\r\nimport Reset from \"./Reset\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Select from \"react-select\";\r\nimport { Spinner } from \"reactstrap\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\n\r\nfunction EditTL() {\r\n  const { Option } = Select;\r\n  const { id } = useParams();\r\n  \r\n  const alert = useAlert();\r\n  let history = useHistory();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(null);\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [mdata, setmdata] = useState([]);\r\n  const [mdataName, setMdataname] = useState([]);\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [display, setDisplay] = useState(false);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [loading, setLoading] = useState(false);\r\n const [showDel, setShowDel] = useState(null)\r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [dd, setDd] = useState({\r\n    direct: [],\r\n    indirect: [],\r\n  });\r\n\r\n  var kk = []\r\n  var vv = []\r\n  var a;\r\n  var subdefval;\r\n  var dirvalue = []\r\n  var indirvalue = []\r\n  var allsubcatvalue = []\r\n  \r\n  const options = tax.map(d => ({\r\n    \"value\": d.id,\r\n    \"label\": d.details\r\n  }))\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n  }, [id]);\r\n\r\n \r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\r\n \r\n      if (res.data.code === 1) {\r\n       if(JSON.parse(res.data.result[0].allcat_id)){\r\n        setValue(res.data.result[0]);\r\n        setStore(res.data.result[0].pcat_id);\r\n        setShowDel(res.data.result[0].is_delete)\r\n       }\r\n       \r\n      }\r\n    });\r\n  };\r\n \r\n  const data1 = value.name;\r\n  const data2 = value.personal_email;\r\n  const data3 = value.phone;\r\n  const data4 = value.allpcat_id;\r\n  const data5 = value.allcat_id;\r\n  var data6 = value.post_name;\r\n  var data7 = value.email;\r\n  const data8 = value.cat_id;\r\n  const data9 = value.pcat_id;\r\n   \r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n   defValue()\r\n   \r\n    getCategory();\r\n    if(data5) {\r\n      defSubValue();\r\n    }\r\n  }, [showDel]);\r\n\r\n  useEffect(() => {\r\n\r\n    getSubCategory();\r\n   \r\n  }, [store]);\r\n\r\n  const getSubCategory = () => {\r\n  if(store !== null){\r\n    axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n       setTax2(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n  \r\n  const onFinish = (value) => {\r\n   \r\n    var categeryList = []\r\n    var categeryName = []\r\n    var kk = []\r\n    var parentCategoryName = []\r\n    subData.map((i) => {\r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n    categoryData.map((i) => {\r\n      kk.push(i.value)\r\n      parentCategoryName.push(i.label)\r\n    })\r\n   \r\n\r\n    if (custCate.length < 1 && data4.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n     \r\n    }\r\n    else if (subData.length < 1 && data5.length < 1) {\r\n      setError2(\"Please select at least one value\")\r\n     \r\n    }\r\n    else if (invalid || wEmail || indNumError || posError.exits) {\r\n      setDisplay(false)\r\n    \r\n    }\r\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\r\n    \r\n    }\r\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\r\n     \r\n    }\r\n    \r\n    else {\r\n   \r\n      setLoading(true)\r\n      setDisplay(true)\r\n      let formData = new FormData();\r\n      formData.append(\"personal_email\", value.email);\r\n      formData.append(\"name\", value.name);\r\n      formData.append(\"phone\", value.phone);\r\n     {email.length > 1 ? \r\n      formData.append(\"email\", email) :\r\n      formData.append(\"email\", data7)}\r\n      {postValue.length > 1 ?  \r\n        formData.append(\"post_name\", postValue) :\r\n        formData.append(\"post_name\", data6)}\r\n     {categeryList.length > 1 ?  formData.append(\"cat_id\", categeryList) : \r\n     formData.append(\"cat_id\", categeryList) }\r\n     {kk.length === 0 ?  formData.append(\"pcat_id\", data9) : \r\n     formData.append(\"pcat_id\", kk) }\r\n      { parentCategoryName.length > 0 ?\r\n      formData.append(\"allpcat_id\", parentCategoryName) : \r\n      formData.append(\"allpcat_id\", data4) } \r\n      \r\n    \r\n      formData.append(\"allcat_id\", JSON.stringify(dd)) \r\n      formData.append(\"id\", id);\r\nconsole.log(\"value\", categeryList)\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/updateTeamLeader`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Swal.fire({\r\n              \"title\": \"Success\",\r\n              \"html\": \"Team Leader Updated Successfully\",\r\n              \"icon\": \"success\"\r\n            })\r\n            history.goBack();\r\n         \r\n           \r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n       \r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n      \r\n    }\r\n  }\r\n\r\n  var dir = []\r\n  var indir = []\r\n\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n    e.map((i) => {\r\n      i.value < 9 ? dir.push(i.label) : indir.push(i.label)\r\n    })\r\n    setDd({\r\n      direct: dir,\r\n      indirect: indir\r\n    })\r\n    let pk = []\r\n    if(indir.length === 0 && dir.length === 0){\r\n      setCategoryData(\"\")\r\n    }\r\n   else if(dir.length === 0){\r\n      let bb = {\r\n        value : \"2\",\r\n        label : \"Indirect tax\"\r\n      }\r\n      pk.push(bb)\r\n      setCategoryData(pk)\r\n    }\r\n    else if(indir.length === 0){\r\n      let bb = {\r\n        value : \"1\",\r\n        label : \"Direct tax\"\r\n      }\r\n      pk.push(bb)\r\n      setCategoryData(pk)\r\n    }\r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n\r\n     setCategoryData(v)\r\n\r\n    setError(\"\")\r\n    setCustcate(v)\r\n\r\n    v.map((val) => {\r\n      vv.push(val.value)\r\n\r\n      setmcategory((oldData) => {\r\n        return [...oldData, val.value]\r\n      })\r\n      setmcatname((oldData) => {\r\n        return [...oldData, val.label]\r\n      })\r\n      setStore(val.value)\r\n    })\r\n\r\n\r\n    if (vv.length > 0) {\r\n      console.log(\"value\", vv)\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n        let dkkk = []\r\n        let pkk = []\r\n                for (let i = 0; i < subData.length; i++) {\r\n                                     kk.push(subData[i])\r\n                    dkkk.push(subData[i].label)\r\n                  \r\n                }\r\n                console.log(subData)\r\n                setDd({\r\n                  \"direct\" : dkkk,\r\n                  \"indirect\" : pkk\r\n                })\r\n                subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"1\")) {\r\nlet dkkk = []\r\nlet pkk = []\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n            dkkk.push(subData[i].label)\r\n          }\r\n        }\r\n        console.log(subData)\r\n        setDd({\r\n          \"direct\" : dkkk,\r\n          \"indirect\" : pkk\r\n        })\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n        let pkk = []\r\n        let dkkk = []\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n            dkkk.push(subData[i].label)\r\n          }\r\n        }\r\n        setDd({\r\n          \"direct\" : pkk,\r\n          \"indirect\" : dkkk\r\n        })\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n  }\r\n\r\n //eamil onchange\r\n const emailHandler = (e) => {\r\n   data7 = e.target.value;\r\n  setEmail(e.target.value);\r\n \r\n  if (e.target.value.length < 1) {\r\n    setWemail(\"\")\r\n  }\r\n};\r\n\r\n\r\n//email validaation with api\r\nconst emailValidation = (key) => {\r\n\r\n  var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  if (email.match(validRegex)) {\r\n    setWemail(\"\");\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"id\", id)\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/validateEditRegistration`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setValiemail(response.data.result)\r\n          setInvalid('')\r\n        } else if (response.data.code === 0) {\r\n          setInvalid(response.data.result)\r\n          setValiemail('')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n  else {\r\n    setWemail(\"invalid email\")\r\n  }\r\n}\r\n\r\n\r\nvar e = 0;\r\nconst defValue = () => {\r\n if(data4){\r\n  const data55 = data4.split(\",\")\r\n\r\n  if(data55[0].includes(\"Direct tax\")){\r\n    e = 1;\r\n  }\r\n  else if(data55[0].includes(\"Indirect tax\")){\r\n    e = 2;\r\n  }\r\n    a = data55.map((i => ({\r\n      \"value\" : String(e++),\r\n      \"label\" : i\r\n    }) ))\r\n  \r\n}\r\n\r\n  setCategoryData(a)\r\n}\r\nconst defSubValue = () => {\r\n  console.log(\"data\")\r\n   var dir1;\r\n   var dir2;\r\n   var kk = []\r\n   var d = 2;\r\n   var ind = 9;\r\n  \r\n   var subcatgerydefvalue = JSON.parse(value.allcat_id);\r\n   indirvalue = subcatgerydefvalue.indirect;\r\n   dirvalue = subcatgerydefvalue.direct;\r\n   if(Array.isArray(dirvalue)){\r\n    dirvalue.map((i) => {\r\n      allsubcatvalue.push(i)\r\n    })\r\n    dir1 = subcatgerydefvalue.direct.map((i => ({\r\n      \"value\" : String(d++),\r\n      \"label\" : i\r\n    }) ))\r\n   }\r\n   else{\r\n     return false\r\n   }\r\n  if(Array.isArray(indirvalue)){\r\n    indirvalue.map((o) => {\r\n      allsubcatvalue.push(o)\r\n    })\r\n    dir2 = subcatgerydefvalue.indirect.map((i => ({\r\n      \"value\" : String(ind++),\r\n      \"label\" : i\r\n    }) ))\r\n  }\r\n  else{\r\n    return false\r\n  }\r\n   \r\n   \r\n  \r\n  subdefval = [...dir1, ...dir2]\r\n  let dircat = [subcatgerydefvalue.direct[0]]\r\n  let indircat = [subcatgerydefvalue.indirect[0]]\r\n  subCategeryData(subdefval)\r\n  setDd({\r\n    \"direct\" : dircat,\r\n    \"indirect\" : indircat\r\n  })\r\n  }\r\n\r\n\r\n\r\nconst checktlPost = (e) => {\r\n  setPostName(e.target.value)\r\n  data6 = e.target.value;\r\n  let a = e.target.value;\r\n  let formData = new FormData();\r\n  formData.append(\"tlpost\", a)\r\n  formData.append(\"id\", id )\r\n  axios({\r\n    method: \"POST\",\r\n    url : `${baseUrl}/tl/validateTLEditPost`,\r\n    data: formData,\r\n  })\r\n  .then(function (res) {\r\n    if(res.data.code === 1){\r\n      setposError({\r\n        available : \"Post Available\"\r\n      })\r\n    }\r\n    else{\r\n      setposError({\r\n        exits : \"Post already exits\"\r\n      })\r\n    }\r\n  })\r\n  }\r\n const tlName22 = (e) => {\r\n   \r\n   data6 = e.target.value\r\n }\r\n const del = (e) => {\r\n   Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: \"It will permanently deleted !\",\r\n    type: \"warning\",\r\n    showCancelButton : true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n   }).then((result) => {\r\n    if (result.value) {\r\n      deleteCliente(id);\r\n    }\r\n  });\r\n }\r\n const deleteCliente = (id) => {\r\n  axios\r\n    .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n    .then(function (response) {\r\n      \r\n      if (response.data.code === 1) {\r\n        Swal.fire(\"Teamleader has been deleted successfully\");\r\n        history.goBack();\r\n        getTeamLeader();\r\n      } else {\r\n        Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        history.goBack();\r\n      }\r\n\r\n    })\r\n    .catch((error) => {\r\n      \r\n    });\r\n};\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex justify-content-between\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Edit Team Leader</h4>\r\n            </div>\r\n            <div>\r\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\r\n              </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        {!data1 ? (\r\n          <CardHeader>loading ...</CardHeader>\r\n        ) : (\r\n          <CardHeader>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                <Form\r\n                autoComplete=\"off\"\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    name: `${data1}`,\r\n                    email: `${data2}`,\r\n                    phone: `${data3}`,\r\n                    category: `${data4}`,\r\n                    sub_category: `${data5}`,\r\n                  }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      <label>Teamleader Post Name <span className=\"declined\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"post_name\"\r\n                          onBlur={(e) => checktlPost(e)}\r\n                          defaultValue={data6}\r\n                         disabled = {showDel == \"1\" ? true : \"\"}\r\n                          onChange = {(e) => tlName22(e)}\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.post_name || posError.exits,\r\n                          })}\r\n                        />\r\n                          {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      <label>Teamleader Post Email <span className=\"declined\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"post_email\"\r\n                          onBlur={(e) => emailValidation(e)}\r\n                          disabled = {showDel == \"1\" ? true : \"\"}\r\n                          defaultValue={data7}\r\n                          onChange={(e) => emailHandler(e)}\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.post_email,\r\n                          })}\r\n                        />\r\n                                              {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      } \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Name <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"name\">\r\n                          <Input\r\n                       required\r\n                           className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_name,\r\n                          })} />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone  <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"phone\">\r\n                          <Input\r\n                           className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_phone || indNumError || numExist,\r\n                          })}\r\n                            onChange={(e) => phoneHandler(e)}\r\n                            onBlur={phoneValidation}\r\n                             />\r\n                        </Form.Item>\r\n                      </div>\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                \r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Category <span className=\"declined\">*</span></label>\r\n                        <div class=\"form-group\">\r\n\r\n                        <Select isMulti options={options}\r\n                        value = {categoryData}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n                        \r\n                        onChange={category}>\r\n                      </Select>\r\n\r\n                         \r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Sub Category <span className=\"declined\">*</span></label>\r\n                        <Select isMulti options={options2}\r\n                      onChange={subCategory}\r\n                            value = {subData}\r\n                            styles={{\r\n                              option: (styles, { data }) => {\r\n                                return {\r\n                                  ...styles,\r\n                                  color: data.value > 8\r\n                                    ? \"green\"\r\n                                    : \"blue\"\r\n                                };\r\n                              },\r\n                              multiValueLabel: (styles, { data }) => ({\r\n                                ...styles,\r\n                                color: data.value > 8\r\n                                    ? \"green\"\r\n                                    : \"blue\"\r\n                              }),\r\n                            }}\r\n                          >\r\n                          </Select>\r\n                       \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email <span className=\"declined\">*</span></label>\r\n                        <Form.Item name=\"email\">\r\n                          <Input\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.email,\r\n                          })}\r\n                      \r\n                          />\r\n                        </Form.Item>\r\n                       \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                      {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                        <Form.Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                        </Form.Item>  }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n        )}\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTL;","D:\\Mazars\\src\\pages\\TL\\EditProposal\\EditProposal.js",["1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction EditComponent() {\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const[clearValue, setClearValue] = useState(true)\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [dateError, setDateError] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    fixed_amount: \"\",\r\n    payable: \"\",\r\n    description: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    payment : \"\"\r\n  });\r\n\r\n\r\n  const { query, name, description, fixed_amount,\r\n    due_date, installment_amount } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          fixed_amount: res.data.result.amount,\r\n          description: res.data.result.description,\r\n          installment_amount: res.data.result.installment_amount,\r\n          due_date: res.data.result.due_date,\r\n          payment : res.data.result.installment_amount\r\n        });\r\n\r\n        var payment_terms = res.data.result.payment_terms\r\n        var no_of_installment = res.data.result.no_of_installment\r\n\r\n        const data1 = {\r\n          label: payment_terms,\r\n          value: payment_terms,\r\n        }\r\n\r\n        const data2 = {\r\n          label: no_of_installment,\r\n          value: no_of_installment,\r\n        }\r\n\r\n        setPayment(data1);\r\n        setInstallment(data2);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n \r\nif(diserror.length > 0){\r\n  return false\r\n}\r\nelse if(dateError === true){\r\n  Alerts.ErrorNormal(\"Date must be unique\")\r\n }\r\nelse{\r\n  var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n\r\n    if (payment.length < 1) {\r\n     \r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n          } else if (amount && date) {\r\n\r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n             \r\n              for (let i = 0; i < a; i++) {\r\n\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n\r\n              } else {\r\n               \r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tl/updateProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n\r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      var variable = \"Proposal updated successfully\"\r\n                      Alerts.SuccessNormal(variable)\r\n                      history.push(\"/teamleader/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                  \r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n\r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/updateProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n         \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal Updated Successfully \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/teamleader/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n          \r\n          });\r\n      }\r\n}\r\n    \r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter number only\");\r\n    }\r\n    else if(e.target.value == \"0\"){\r\n      setdiserror(\"Amount should be greater than zero\")\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n   \r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1.slice(0, installment.value));\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n   \r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n\r\n    setDate(array2.slice(0, installment.value));\r\n    if(new Set(array2).size !== array2.length){\r\n      setDateError(true)\r\n     Alerts.ErrorNormal(\"Date must be unique\")\r\n    }\r\n    else{\r\n      setDateError(false)\r\n    }\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n\r\n    setInstallment(key)\r\n    setClearValue(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed || diserror,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    defaultValue={fixed_amount}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    defaultValue={description}\r\n                    ref={register({ required: true })}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Client Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    onChange={setPayment}\r\n                    value={payment}\r\n                    options={paymentsTerms}\r\n                  />\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date,\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      defaultValue={due_date}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(e => installmentHandler(e))}\r\n                        value={installment}\r\n                        options={noInstallments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    installment_amount && due_date &&\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      installment_amount={installment_amount}\r\n                      due_date={due_date}\r\n                      getQuery={getQuery}\r\n                      item={item}\r\n                      clearValue={clearValue}\r\n                    />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditComponent;\r\n\r\nconst paymentsTerms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst noInstallments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\Recording\\Recording.js",["2009","2010"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n   \r\n} from \"reactstrap\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useParams } from \"react-router\";\r\nimport {Link} from 'react-router-dom'\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\nimport RecordingEdit from './RecordingEdit';\r\nimport './recording.css';\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const getId = useParams()\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const [showEditModal, setShowEditModal] = useState(false)\r\n    const [editData, setEditData] = useState({\r\n        participant : '',\r\n        editMessage : '',\r\n        assignid : '',\r\n        id : ''\r\n    })\r\n    const openModal = (videoContent) => {\r\n      \r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\n    const videoIcon = {\r\n        display : \"flex\", \r\n        justifyContent : \"space-around\", \r\n        alignItems : \"center\"\r\n    }\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const editRecording = (participants, assign_id, message, id) => {\r\n   \r\n        setShowEditModal(!showEditModal)\r\n        setEditData({\r\n            participant : participants,\r\n            editMessage : message,\r\n            assignid : assign_id,\r\n            id : id\r\n        })\r\n    }\r\n   \r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n            formatter : function formatter(cell, row){\r\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\r\n                return <>\r\n                <Link\r\n                to = {{\r\n                    pathname : `/admin/queries/${a}`,\r\n                    routes : \"recording\"\r\n                }}>\r\n                {row.assign_id}\r\n                </Link>\r\n                </>\r\n            }\r\n        },\r\n        \r\n\r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                console.log(row.file.split(\",\"))\r\n                return (\r\n                    <>\r\n                   <div>\r\n                    {row.record_by === JSON.parse(userid) && row.message === null ?\r\n                             <i\r\n                             className=\"fa fa-edit\"\r\n                             style={{\r\n                               fontSize: 18,\r\n                               cursor: \"pointer\",\r\n                               marginLeft: \"8px\",\r\n                             }}\r\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\r\n                           ></i> : \"\"}\r\n                    </div>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                <>\r\n                                <p style={videoIcon}>\r\n                               {record.length === 0 ? \"\" : \r\n                               <>\r\n                                 <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                              \r\n                               </>}\r\n                              \r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n     <>\r\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n           <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                <RecordingFilter\r\n                       setData={setFeedBackData}\r\n                    //    getData={getInCompleteAssingment}\r\n                       SearchQuery=\"SearchQuery\"\r\n                      setRecords={setRecords}\r\n                       records={records} \r\n                       userid = {userid}\r\n                       getRecording = {getRecording}\r\n                    /> \r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n\r\n            </Card>\r\n          \r\n           </div>\r\n            \r\n          \r\n          <RecordingEdit \r\n          isOpen = {showEditModal}\r\n          recordingHandler = {editRecording}\r\n          participants = {editData.participant}\r\n          message = {editData.editMessage}\r\n          assignid = {editData.assignid}\r\n          editId = {editData.id}\r\n          recList = {getRecording}/>\r\n                   {isOpen === true ?\r\n          \r\n                 \r\n          <div className=\"modalBox\">\r\n          <div className=\"boxContainer\">\r\n          <div className=\"canBtn\"  title=\"cancel\">\r\n              <h4>Recording Player</h4>\r\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\r\n         \r\n\r\n         <div className=\"my2\">\r\n         <ReactPlayer\r\n           url={videoid}\r\n           controls={true}\r\n           playing={true}\r\n           width='100%'\r\n           height='100%'\r\n          />\r\n             </div>\r\n          </div>\r\n     \r\n    </div>\r\n  : \"\"}\r\n         </Layout>\r\n\r\n           </>\r\n\r\n    );\r\n}\r\n\r\nexport default Recording;","D:\\Mazars\\src\\pages\\Admin\\Dashboard\\Dashboard.js",[],"D:\\Mazars\\src\\pages\\TL\\PendingReceived\\PendingReceived.js",["2011","2012","2013","2014","2015"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl , baseUrl2} from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getQueryDetails();\r\n    getAdditionalQuery();\r\n  }, [assingNo]);\r\n\r\n  const getQueryDetails = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setSubmitData(res.data.result);\r\n        setDisplaySpecific(res.data.additional_queries);\r\n        setAssingmentNo(res.data.result[0].assign_no);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getAdditionalQuery = () => {\r\n  if(assingNo === undefined){\r\n    return false\r\n  }\r\n  else{\r\n    axios\r\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n    .then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDisplayQuery(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n\r\n\r\n\r\n\r\n  const acceptHandler = (key) => {\r\n    \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query accepted\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n    \r\n      });\r\n  };\r\n\r\n  const rejectHandler = (key) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query rejected\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n    \r\n      });\r\n  };\r\n\r\n \r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n      \r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <th scope=\"row\">Accept / Reject</th>\r\n                    <td>\r\n                    <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"#6967ce\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        id=\"div1\"\r\n                      >\r\n                        <div\r\n                          id=\"accept\"\r\n                          title=\"Accept Assignment\"\r\n                          onClick={() => acceptHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\r\n                        </div>\r\n                        <div\r\n                          id=\"reject\"\r\n                          title=\"Reject Assignment\"\r\n                          onClick={() => rejectHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PayDetails.js",["2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { baseUrl2, baseUrl3 } from \"../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PayModal from \"./PayModal\";\r\nimport { Typography } from \"antd\";\r\nimport './index.css';\r\nconst PayDetails = () => {\r\n    let history = useHistory();\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const { id } = useParams();\r\n    const [paymentDetail, setPaymentDetail] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState()\r\n    const [showTable, setShowTable] = useState(null);\r\n    const paydetails2 = () => {\r\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\r\n.then((res) => {\r\n    if(res.data.code === 1){\r\n       \r\n        setPaymentDetail(res.data.payment_detail)\r\n        //console.log(res.data.payment_detail.length)\r\n       // setShowTable(res.data.payment_detail[0].invoice_generated)\r\n       if(res.data.payment_detail.length > 0){\r\n           setShowTable(true)\r\n       }\r\n       else {\r\n           setShowTable(false)\r\n       }\r\n    }\r\n   \r\n})\r\n    }\r\n    useEffect(() => {\r\n        paydetails2()\r\n    }, [])\r\n const openModal = (key) => {\r\n   if(key){\r\n       setModalData(key)\r\n   \r\n   }\r\nsetModal(!modal)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Q.No\",\r\n            \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"installment_no\",\r\n            text: \"Installment No\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"80px\" };\r\n            },\r\n           \r\n           \r\n        },\r\n        {\r\n            dataField: \"billno\",\r\n            text: \"Invoice No\",\r\n           \r\n            \r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.invoice_generated == \"0\" ? \"\" : \r\n                    <p>{row.billno}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"due_date\",\r\n            text: \"Due Date\",\r\n           sort : true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n       \r\n        {\r\n            dataField: \"invoice_amount\",\r\n            text: \"Invoice Amount\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.invoice_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p>{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField : \"tds_amount\",\r\n            text : \"Tds Deducted\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n           \r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.tds_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                  <>\r\n                  {row.is_paid == \"1\" ?\r\n                   <p>{nfObject.format(x)}</p> : \"\"}\r\n                  </>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField : \"amount\",\r\n            text : \"Amount Paid\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                  <>\r\n                  {row.is_paid == \"1\" ?\r\n                   <p>{nfObject.format(x)}</p> : \"\"}\r\n                  </>\r\n                 )\r\n               }\r\n        },\r\n        \r\n        {\r\n            dataField: \"invoice\",\r\n            text: \"Invoice / Pay\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                return(\r\n                   <>\r\n                  <div style={{display : \"flex\", alignItems: \"center\", justifyContent : \"space-between\"}}>\r\n                  {row.invoice_generated == \"1\" ? \r\n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\r\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\r\n                          \r\n                          {row.is_paid == \"0\" ? \r\n            <div title=\"Pay\">\r\n                    <i\r\n                class=\"fa fa-mail-forward\"\r\n                style={{\r\n                    fontSize: \"14px\",\r\n                    cursor: \"pointer\",\r\n                    color: \"blue\"\r\n                }}\r\n                onClick={() => openModal(row)}\r\n            ></i> \r\n                </div>: \"\"}\r\n                  </div>\r\n                   </>\r\n                )\r\n            },\r\n           \r\n        },\r\n        \r\n       \r\n       \r\n        {\r\n            dataField: \"\",\r\n            text: \"Pay Receipt\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n           \r\n           formatter: function dateFormat(cell, row){\r\n           \r\n               return(\r\n                <>\r\n                \r\n             \r\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"_blank\">Payment receipt</a> \r\n            : \"\"}\r\n           {row.is_paid == \"2\" ? \r\n           <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p>  : \"\"}\r\n                </>\r\n                  \r\n                   \r\n               )\r\n           }\r\n        },\r\n           \r\n      ];\r\n    \r\n      const Container = styled.div `\r\n      dispaly : flex;\r\n      width : 100%;\r\n      height : 100%;\r\n      justify-content : center;\r\n      align-items : center;\r\n      color: red`\r\nreturn(\r\n   <>\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n    {paymentDetail === undefined ? \"\" : \r\n  <Card>\r\n      <CardHeader>\r\n         <Row>\r\n         <Col md=\"8\">\r\n              <h4>Payment Details</h4>\r\n              </Col>\r\n      <Col md=\"4\">\r\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n         </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n   {showTable == true ? \r\n     <div className=\"tableFixHead\">\r\n  <BootstrapTable\r\n  bootstrap4\r\n  keyField=\"id\"\r\n  data={paymentDetail}\r\n  columns={columns}\r\n  classes=\"table-responsive\"\r\n/>  \r\n</div> : \r\n<Container>\r\n    <p>Invoice not generated</p>\r\n    </Container>}\r\n<PayModal \r\nshowModal = {modal}\r\nmodalToggle = {openModal}\r\nmodalData = {modalData}/>\r\n</CardBody>\r\n</Card>}\r\n</Layout>                  \r\n   </>\r\n)\r\n}\r\nexport default PayDetails;","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paydetails.js",["2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Typography } from \"antd\";\r\n\r\nconst PayDetails = () => {\r\n    let history = useHistory();\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const { id } = useParams();\r\n    const [paymentDetail, setPaymentDetail] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState(false)\r\n    const [showTable, setShowTable] = useState(null);\r\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\r\n   \r\n    const paydetails2 = () => {\r\n          console.log(\"done22\")\r\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\r\n\r\n.then((res) => {\r\n    if(res.data.code === 1){\r\n      \r\n        setPaymentDetail(res.data.payment_detail)\r\n       \r\n       if(res.data.payment_detail.length > 0){\r\n           setShowTable(true)\r\n       }\r\n       else {\r\n           setShowTable(false)\r\n       }\r\n    }\r\n   \r\n})\r\n    }\r\n    useEffect(() => {\r\n        paydetails2()\r\n    }, [])\r\n const openModal = (key) => {\r\n   if(key){\r\n       setModalData(key)\r\n   \r\n   }\r\nsetModal(!modal)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Q.No\",\r\n            \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"installment_no\",\r\n            text: \"Installment No\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"80px\" };\r\n            },\r\n           \r\n           \r\n        },\r\n        {\r\n            dataField: \"billno\",\r\n            text: \"Invoice No\",\r\n           \r\n            \r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.invoice_generated == \"0\" ? \"\" : \r\n                    <p>{row.billno}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"due_date\",\r\n            text: \"Due Date\",\r\n           sort : true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n       \r\n        {\r\n            dataField: \"invoice_amount\",\r\n            text: \"Invoice Amount\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField : \"tds_amount\",\r\n            text : \"Tds Deducted\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.tds_amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField : \"amount\",\r\n            text : \"Amount Paid\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter: function (cell,row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        \r\n        {\r\n            dataField: \"invoice\",\r\n            text: \"Invoice\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                return(\r\n                   <>\r\n                   {row.invoice_generated == \"1\" ? \r\n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\r\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\r\n                   </>\r\n                )\r\n            },\r\n           \r\n        },\r\n        \r\n       \r\n        {\r\n            dataField: \"\",\r\n            text: \"Payment Receipt\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n           \r\n           formatter: function dateFormat(cell, row){\r\n           \r\n               return(\r\n                <>\r\n                {row.invoice_generated == \"1\" ? \r\n              <>\r\n              {row.is_paid == \"0\" ? \r\n               \"\":   <>\r\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"blank\">Payment receipt</a> \r\n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\r\n            </>}\r\n              </>\r\n               : \"\"}\r\n                </>\r\n                  \r\n                   \r\n               )\r\n           }\r\n        },\r\n           \r\n      ];\r\n      \r\n      \r\n      \r\n  \r\n      const Container = styled.div `\r\n      dispaly : flex;\r\n      width : 100%;\r\n      height : 100%;\r\n      justify-content : center;\r\n      align-items : center;\r\n      color: red`\r\nreturn(\r\n   <>\r\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n    {paymentDetail === undefined ? \"\" : \r\n  <Card>\r\n      <CardHeader>\r\n         <Row>\r\n         <Col md=\"8\">\r\n              <h4>Payment Details</h4>\r\n              </Col>\r\n      <Col md=\"4\">\r\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n         </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n  \r\n  \r\n  <BootstrapTable\r\n  bootstrap4\r\n  keyField=\"id\"\r\n  data={paymentDetail}\r\n  columns={columns}\r\n  classes=\"table-responsive\"\r\n/> \r\n\r\n</CardBody>\r\n</Card>}\r\n</Layout>                  \r\n   </>\r\n)\r\n}\r\nexport default PayDetails;","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js",["2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nimport History from './History.js';\r\nfunction TeamLeaderTab() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tlCount, setTlCount] = useState(\"\");\r\n  const [subCat, setsubCat] = useState([])\r\n  const [history, setHistory] = useState([]);\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  var kk = []\r\n  var pp = []\r\n  \r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n\r\n   if(typeof(key) == \"object\") {\r\n    \r\n   }\r\n   else{\r\n    {\r\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"application/vnd.github.cloak-preview\",\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n         \r\n          setHistory(response.result);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n   }\r\n   \r\n   \r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"post_name\",\r\n      text: \"TL post name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"50px\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      dataField: \"email\",\r\n      text: \"TL post email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\",  width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name of TL\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"50px\"};\r\n      },\r\n    },\r\n    {\r\n      dataField: \"personal_email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"50px\"};\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Mobile No\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\"  , width: \"50px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        var digit2 = [];\r\n        var digit3 = []\r\n        digit2 = row.allpcat_id.split(\",\")\r\n        if(row.allpcat_id.split(\",\")[0] === \"Indirect tax\"){\r\n        \r\n          digit3 = row.allpcat_id.split(\",\")\r\n        }\r\n        else{\r\n          digit3 =  row.allpcat_id.split(\",\").reverse()\r\n        }\r\n      \r\n        return (\r\n          <>\r\n            {\r\n              digit3.map((e) => {\r\n                return (\r\n                  <>\r\n                 \r\n                 <p className={e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      dataField: \"allcat_id\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"50px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        var digit = [];\r\n\r\n         digit = JSON.parse(row.allcat_id);\r\nlet k, pp;\r\n\r\nif(digit.direct.length -1 == \"1\"){\r\n  k = \", \";\r\n}\r\nelse{\r\n  k = \"\";\r\n}\r\nif(digit.indirect.length -1 == \"1\"){\r\n  pp = \", \";\r\n}\r\nelse{\r\n  pp = \"\";\r\n}\r\n        return (\r\n          <>\r\n           \r\n           {digit.indirect.length == \"0\" ? \"\" :\r\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>}\r\n         {digit.direct.length == \"0\" ? \"\" : \r\n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> }\r\n          </>\r\n\r\n        )\r\n      }\r\n    },\r\n\r\n    {\r\n      dataField: \"\",\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/edittl/${row.id}`}>\r\n              <i\r\n                className=\"fa fa-edit\"\r\n                style={{\r\n                  fontSize: 18,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          \r\n          </>\r\n        );\r\n\r\n      },\r\n\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n\r\n  }, []);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n    \r\n      var dd = []\r\n      if (res.data.code === 1) {\r\n        pp.push(res.data.result)\r\n        setData((res.data.result));\r\n        setTlCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n   \r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"It will permanently deleted !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getTeamLeader();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n     \r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\">\r\n              <Link to={\"/admin/addnewtl\"} className=\"btn btn-primary\">\r\n                Add New\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            classes=\"table-responsivepayment\"\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      <History history={history} toggle={toggle} modal={modal} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default TeamLeaderTab","D:\\Mazars\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js",["2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n\r\n});\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [subData, subCategeryData] = useState([])\r\n  const [custCate, setCustcate] = useState([])\r\n  const [custCate2, setCustcate2] = useState([])\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [phone, setPhone] = useState('');\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [postValue, setPostName] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [emailPost, setEmailPost] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [valiEmailPost, setValiemailPost] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [invalidPost, setInvalidPost] = useState(null)\r\n  const [wEmail, setWemail] = useState();\r\n  const [wEmailPost, setWemailPost] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [display, setDisplay] = useState(false);\r\n  const [posError, setposError] = useState({\r\n    available : '',\r\n    exits : ''\r\n  });\r\n  const [dd, setDd] = useState({\r\n    direct: [],\r\n    indirect: [],\r\n  });\r\n\r\n  var kk = []\r\n  var vv = []\r\n\r\n\r\n\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n          \r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  // OnSubmit Function\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n   \r\n    var categeryList = []\r\n    var categeryName = []\r\n    var categeryName = []\r\n    var kk = []\r\n    var parentCategoryName = []\r\n  \r\n    subData.map((i) => {\r\n   \r\n      categeryList.push(i.value)\r\n      categeryName.push(i.label)\r\n    })\r\n    categoryData.map((i) => {\r\n      kk.push(i.value)\r\n      parentCategoryName.push(i.label)\r\n    })\r\n   \r\n    if (custCate.length < 1) {\r\n      setError(\"Please select at least one value\")\r\n    }\r\n    else if (subData.length < 1) {\r\n\r\n      setError2(\"Please select at least one value\")\r\n    }\r\n    else if (invalid || wEmail || indNumError || posError.exits) {\r\n      setDisplay(false)\r\n    }\r\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\r\n    \r\n    }\r\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\r\n     \r\n    }\r\n    else {\r\n      setDisplay(true)\r\n      setLoading(true)\r\n    \r\n      let formData = new FormData();\r\n\r\n      formData.append(\"personal_email\", value.p_email);\r\n      formData.append(\"name\", value.p_name);\r\n      formData.append(\"phone\", value.p_phone);\r\n      formData.append(\"type\", \"tl\");\r\n      formData.append(\"cat_id\", categeryList)\r\n      formData.append(\"post_name\", value.post_name)\r\n      formData.append(\"email\", email)\r\n      formData.append(\"pcat_id\", kk)\r\n      formData.append(\"allpcat_id\", parentCategoryName)\r\n      formData.append(\"allcat_id\", JSON.stringify(dd))\r\n\r\n\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/AddTeamLead`,\r\n        data: formData,\r\n      })\r\n\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Swal.fire({\r\n              \"title\": \"Success\",\r\n              \"html\": \"Teamleader created successfully.\",\r\n              \"icon\": \"success\"\r\n            })\r\n\r\n            history.goBack();\r\n          }\r\n          if (response.data.code === 0) {\r\n            setLoading(false)\r\n            response.data.message.map((i) => {\r\n              Swal.fire({\r\n                \"title\": \"Error\",\r\n                \"html\": \"Something went wrong, please try again.\",\r\n                \"icon\": \"error\"\r\n              })\r\n            })\r\n            history.goBack();\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n\r\n  };\r\n  var allData1 = {}\r\n  var dir = []\r\n  var indir = []\r\n  // Sub Category Function\r\n  const subCategory = (e) => {\r\n  \r\n    subCategeryData(e)\r\n    setCustcate2(e)\r\n    setError2(\"\")\r\n  \r\n    e.map((i) => {\r\n\r\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\r\n    })\r\n   \r\n    setDd({\r\n      direct: dir,\r\n      indirect: indir\r\n    })\r\n    let pk = []\r\n    if(indir.length === 0 && dir.length === 0){\r\n      setCategoryData(\"\")\r\n    }\r\n   else if(dir.length === 0){\r\n      let bb = {\r\n        value : \"2\",\r\n        label : \"Indirect tax\"\r\n      }\r\n      pk.push(bb)\r\n      setCategoryData(pk)\r\n    }\r\n    else if(indir.length === 0){\r\n      let bb = {\r\n        value : \"1\",\r\n        label : \"Direct tax\"\r\n      }\r\n      pk.push(bb)\r\n      setCategoryData(pk)\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  // Category Function\r\n  const category = (v) => {\r\n\r\n    setCategoryData(v)\r\n    setNn((oldData) => {\r\n      return [...oldData, mcategory]\r\n    })\r\n    setError(\"\")\r\n    setCustcate(v)\r\n    v.map((val) => {\r\n      vv.push(val.value)\r\n      setmcategory(val.value);\r\n      setmcatname((oldData) => {\r\n        return [...oldData, val.label]\r\n      })\r\n      setStore(val.value)\r\n    })\r\n\r\n\r\n    if (vv.length > 0) {\r\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n        let dkkk = []\r\n        let pkk = []\r\n                for (let i = 0; i < subData.length; i++) {\r\n                                     kk.push(subData[i])\r\n                    dkkk.push(subData[i].label)\r\n                  \r\n                }\r\n                console.log(subData)\r\n                setDd({\r\n                  \"direct\" : dkkk,\r\n                  \"indirect\" : pkk\r\n                })\r\n                subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"1\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value < 9) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n      else if (vv.includes(\"2\")) {\r\n\r\n        for (let i = 0; i < subData.length; i++) {\r\n          if (subData[i].value > 8) {\r\n            kk.push(subData[i])\r\n          }\r\n        }\r\n        subCategeryData(kk)\r\n      }\r\n    }\r\n\r\n    else if (vv.length === 0) {\r\n      subCategeryData(\"\")\r\n    }\r\n\r\n  }\r\n  // Phone onChange \r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n    }\r\n    else {\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  // Phone Validation function \r\n  const phoneValidation = () => {\r\n   \r\n    if (phone.length > 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 digit should be enter\")\r\n    }\r\n    else if (phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 15 digit should be enter\")\r\n    }\r\n\r\n    else {\r\n      setIndNumError(\"\")\r\n\r\n    }\r\n  }\r\n\r\n  //eamil onchange\r\n  const emailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  \r\n    if (e.target.value.length < 1) {\r\n      setWemail(\"\")\r\n    }\r\n  };\r\n\r\n\r\n  //email validaation with api\r\n  const emailValidation = (key) => {\r\n\r\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (email.match(validRegex)) {\r\n      setWemail(\"\");\r\n      let formData = new FormData();\r\n      formData.append(\"email\", email);\r\n      formData.append(\"type\", 1);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/validateregistration`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setValiemail(response.data.result)\r\n            setInvalid('')\r\n          } else if (response.data.code === 0) {\r\n            setInvalid(response.data.result)\r\n            setValiemail('')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n    else {\r\n      setWemail(\"invalid email\")\r\n    }\r\n\r\n  }\r\n \r\n  const checktlPost = (e) => {\r\n  setPostName(e.target.value)\r\n  let a = e.target.value;\r\n  let formData = new FormData();\r\n  formData.append(\"tlpost\", a)\r\n\r\n  axios({\r\n    method: \"POST\",\r\n    url : `${baseUrl}/tl/validateTLPost`,\r\n    data: formData,\r\n  })\r\n  .then(function (res) {\r\n    if(res.data.code === 1){\r\n      setposError({\r\n        available : \"Post Available\"\r\n      })\r\n    }\r\n    else{\r\n      setposError({\r\n        exits : \"Post already exits\"\r\n      })\r\n    }\r\n  })\r\n  }\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                className=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i className=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div className=\"text-center ml-5\">\r\n              <h4>Add New Team Leader</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                    <label>Teamleader Post Name <span className=\"declined\">*</span></label>\r\n                      \r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name || posError.exits,\r\n                        })}\r\n                        onBlur={(e) => checktlPost(e)}\r\n                        name=\"post_name\"\r\n                        ref={register}\r\n                      />\r\n                    {posError.available ? \r\n                    <p className=\"completed\"> {posError.available}</p> : \r\n                    <p className=\"declined\">{posError.exits}</p>}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                    <label>Teamleader Post Email <span className=\"declined\">*</span></label>\r\n                    \r\n                   \r\n                    <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail} \r\n                        name=\"teamleader\"/>\r\n                        \r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      } \r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Name <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Phone Number <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone ,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                        onChange={(e) => phoneHandler(e)}\r\n                         onBlur={phoneValidation}\r\n                      />\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options}\r\n                        value = {categoryData}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        onChange={category}>\r\n                      </Select>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Sub Category <span className=\"declined\">*</span></label>\r\n                      <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        onChange={subCategory}\r\n                        value = {subData}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <label>Email <span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                       \r\n                      />\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button> }\r\n              </form>\r\n            </div>\r\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\r\n\r\n            </div>\r\n\r\n            <Mandatory />\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\views\\SignUpForm\\SignUp.js",["2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport classNames from \"classnames\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { professionName, country, states } from './data';\r\nimport { cities } from './city';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\n\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\nimport EmailValidation from \"../../components/Common/EmailValidation\";\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n  \r\n  const { handleSubmit, register, errors, getValues } = useForm();\r\n\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const [load, setLoad] = useState(false);\r\n\r\n  const [password, setPassword] = useState(false);\r\n  const [passError, setpassError] = useState()\r\n  const [repassword, setRepassword] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n \r\n  const [State, setState] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  const [countryCode, setCountryCode] = useState('')\r\n  const [showPlus, setShowPlus] = useState(false)\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [valiEmail, setValiemail] = useState(null)\r\n  const [invalid, setInvalid] = useState(null)\r\n  const [numExist, setNumExist] = useState(null)\r\n  const [numAvail, setNumAvail] = useState(null)\r\n  const [countryName, setCountryName] = useState(null)\r\n  const [stateName, setStateName] = useState(null)\r\n\r\n  const [countryId, setCountryId] = useState(null)\r\n  const [indNumError, setIndNumError] = useState(null)\r\n  const [zipCode, setZipCode] = useState('')\r\n  const [zipError, setZipError] = useState(null)\r\n\r\n  const [wEmail, setWemail] = useState();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [valiOtp, setvaliOtp] = useState()\r\n  const [emailError, setEmailError] = useState(null)\r\n  const [phoneError, setPhoneError] = useState(null)\r\n  const [zipError1, setZipError1] = useState(null);\r\n  const [subm, setSub] = useState(false)\r\nconst [email2, setEmail2] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //Css\r\n  const CountryNumStyle = {\r\n    \"display\": \"flex\",\r\n    \"width\": \"76px\",\r\n    \"textAlign\": \"center\"\r\n  }\r\n  // cusSub\r\n  const cusSub = {\r\n    \"display\": \"flex\",\r\n    \"alignItems\": \"center\"\r\n  }\r\n  // Toggle Password\r\n  const togglePasssword = () => {\r\n    setPassword(!password)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setRepassword(!repassword)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n    \r\n    if (load) {\r\n      var timerOn = true;\r\n      function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n        // setDisplay(false)\r\n      }\r\n      timer(180);\r\n    }\r\n  }\r\n\r\n  //get country\r\n  const getcountry = (key) => {\r\n    setCountryName(key)\r\n    setShowPlus(true)\r\n    setPhone(\"\")\r\n    setIndNumError(\"\")\r\n    setNumAvail(\"\")\r\n    // setInvalid(\"\")\r\n    if (key == 101) {\r\n      setCountryId(key)\r\n    }\r\n    else {\r\n      setCountryId(\"\")\r\n    }\r\n\r\n    var arrayState = []\r\n    states.filter((data) => {\r\n      if (data.country_id == key) {\r\n        arrayState.push(data)\r\n      }\r\n    });\r\n    setState(arrayState)\r\n\r\n    country.filter((data) => {\r\n      if (key == data.id) {\r\n        setCountryCode(data.phoneCode)\r\n        setCountryName(data.name)\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  //get city\r\n  const getCity = (key) => {\r\n    states.filter((p) => {\r\n      if (p.id == key) {\r\n        setStateName(p.name)\r\n      }\r\n    });\r\n\r\n    var arrayCity = []\r\n    cities.filter((data) => {\r\n      if (data.state_id === key) {\r\n        arrayCity.push(data)\r\n      }\r\n    });\r\n    setCity(arrayCity)\r\n  }\r\n\r\n\r\n\r\n\r\n  //phone onchange\r\n  const phoneHandler = (e) => {\r\n\r\n    if (isNaN(e.target.value)) {\r\n      setIndNumError(\"\")\r\n      setNumAvail(\"\");\r\n      setNumExist('Please enter number only')\r\n      e.target.value = \"\"\r\n      setPhone(\"\")\r\n      setPhoneError(true)\r\n    }\r\n    else {\r\n      setPhoneError(false)\r\n      setNumAvail(\"\");\r\n      setNumExist(\"\");\r\n      setPhone(e.target.value)\r\n    }\r\n  };\r\n\r\n  //phone validaation with api\r\n  const phoneValidation = () => {\r\n    setPhoneError(false)\r\n    \r\n    if (countryId && phone.length > 10) {\r\n   \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Maximum 10 value should be entered.\")\r\n      setPhoneError(true)\r\n    }\r\n    else if (countryId && phone.length < 10) {\r\n     \r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setIndNumError(\"Minimum 10 value should be entered.\")\r\n      setPhoneError(true)\r\n    }\r\n    else if (!countryId && phone.length > 15) {\r\n      setNumAvail(\"\")\r\n      setNumExist(\"\")\r\n      setPhoneError(true)\r\n      setIndNumError(\"Maximum 15 value should be entered.\")\r\n    }\r\n\r\n    else {\r\n      setPhoneError(false)\r\n      setIndNumError(\"\")\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"phone\", phone);\r\n      formData.append(\"type\", 2);\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/validateregistration`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            // setValiphone(response.data.result)\r\n            \r\n            setPhoneError(false)\r\n            setNumExist('')\r\n            setNumAvail(response.data.result);\r\n\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setPhoneError(true)\r\n            \r\n            setNumAvail('')\r\n            setNumExist(response.data.result)\r\n\r\n         \r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //zip oncahnge\r\n  const zipValue = (e) => {\r\n   \r\n    if (isNaN(e.target.value) && countryId.length > 0) {\r\n\r\n      setZipError(\"Please enter number only\")\r\n      setZipError1(true)\r\n      e.target.value = \"\"\r\n    }\r\n    else if (e.target.value.length == 0) {\r\n      setZipError1(true)\r\n    }\r\n    else {\r\n      setZipCode(e.target.value)\r\n      setZipError(\"\")\r\n      setZipError1(false)\r\n    }\r\n  }\r\n\r\n\r\n  // onblur\r\n  const zipVali2 = (e) => {\r\n\r\n    if (countryId && zipCode && zipCode.length < 6 && countryId.length > 0) {\r\n      setZipError1(true)\r\n      setZipError(\"Minumum 6 digit should be there\")\r\n\r\n    }\r\n\r\n    else if (countryId && zipCode && zipCode.length > 6 && countryId.length > 0) {\r\n      setZipError1(true)\r\n      setZipError(\"Maximum 6 digit allowed\")\r\n    \r\n    }\r\n    else {\r\n      setZipError1(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const otpVali = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      setvaliOtp(\"Please enter number only\")\r\n      e.target.value = \"\"\r\n    }\r\n    else {\r\n      setvaliOtp(\"\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"email\", email2);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"occupation\", value.p_profession);\r\n    formData.append(\"city\", value.p_city)\r\n    formData.append(\"pincode\", value.p_zipCode);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_otp);\r\n    formData.append(\"country\", countryName);\r\n    formData.append(\"state\", stateName);\r\n    formData.append(\"stdcode\", countryCode);\r\n    formData.append(\"gstin_no\", value.p_gstIn);\r\n\r\n    if (display === true && subm === false) {\r\n      setLoading(true)\r\n      let formData = new FormData();\r\n      formData.append(\"email\", email2);\r\n      formData.append(\"phone\", phone);\r\n      formData.append(\"p\", \"registration\");\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/forgototp`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            setLoad(true)\r\n            setShow(true)\r\n            Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            Alerts.ErrorNormal(\"Error\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n\r\n    }\r\n    else if (emailError === false && phoneError === false && zipError1 === false && subm === true) {\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/signup`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var variable = \"Signup successfully.\"\r\n            Alerts.SuccessNormal(variable)\r\n            localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\r\n            localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\r\n            props.history.push(\"/customer/select-category\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          \r\n            setLoad(false);\r\n            Alerts.ErrorNormal(\"Incorrect OTP , please try again.\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  //setotp\r\n  const setOtp = () => {\r\n\r\n    setSub(true)\r\n  }\r\n\r\n  //get OTP\r\n  const getOtp = () => {\r\n    if (emailError === true || phoneError === true || zipError1 === true) {\r\n      setDisplay(false)\r\n    }\r\n    else {\r\n      setDisplay(true)\r\n    }\r\n  }\r\n\r\n// getEmailValue \r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Client Register</h2>\r\n          </div>\r\n          <>\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_name\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Name\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                     <EmailValidation\r\n                     setWemail = {setWemail}\r\n                      wEmail = {wEmail} \r\n                      invalid = {invalid}\r\n                       setEmailError = {setEmailError}\r\n                        setValiemail = {setValiemail} \r\n                        emailError = {emailError} \r\n                        setInvalid = {setInvalid}  \r\n                        setEmail2 = {setEmail2} />\r\n                      {\r\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\r\n                          {valiEmail ?\r\n                            <p className=\"completed\">\r\n                              {valiEmail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{invalid}</p>}\r\n                        </>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\r\n                      <br />\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_profession,\r\n                        })}\r\n                        name=\"p_profession\"\r\n                        aria-label=\"Default select example\"\r\n                        ref={register({ required: true })}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {professionName.map((p, index) => (\r\n                          <option key={index} value={p.city}>\r\n                            {p.city}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        id=\"state\"\r\n                        name=\"p_country\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_country,\r\n                        })}\r\n                        ref={register({ required: true })}\r\n                        onChange={(e) => getcountry(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {country.map((p) => (\r\n                          <option key={p.id} value={p.id}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">State<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        id=\"state\"\r\n                        name=\"p_state\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_state,\r\n                        })}\r\n                        ref={register({ required: true })}\r\n                        onChange={(e) => getCity(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {State.map((p) => (\r\n                          <option key={p.id} value={p.id}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">City<span className=\"declined\">*</span></label>\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_city,\r\n                        })}\r\n                        name=\"p_city\"\r\n                        ref={register({ required: true })}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {city.map((p, index) => (\r\n                          <option key={index} value={p.city}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\r\n                      <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\r\n                        <select\r\n                          name=\"p_code\"\r\n                          disabled={true}\r\n                          ref={register({ required: true })}\r\n                        >\r\n                          <option>\r\n                            {showPlus ? \"+\" + countryCode : null}\r\n                          </option>\r\n                        </select>\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_phone || phoneError === true || indNumError,\r\n                          })}\r\n                          name=\"p_phone\"\r\n                          value={phone}\r\n\r\n                          ref={register({ required: true })}\r\n                          placeholder=\"Mobile number\"\r\n                          onChange={(e) => phoneHandler(e)}\r\n                          onBlur={phoneValidation}\r\n                        />\r\n\r\n                      </div>\r\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\r\n                        {\r\n                          numAvail ?\r\n                            <p className=\"completed\"> {numAvail}\r\n                            </p>\r\n                            :\r\n                            <p className=\"declined\">{numExist}</p>\r\n                        }\r\n                      </>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_zipCode || zipError1 === true || zipError,\r\n                        })}\r\n                        name=\"p_zipCode\"\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Enter Zipcode\"\r\n                        onChange={(e) => zipValue(e)}\r\n                        onBlur={zipVali2}\r\n                      />\r\n                    </div>\r\n                    <p className=\"declined\">{zipError}</p>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">GST IN</label>\r\n                      <input\r\n                        type=\"text\"\r\n                       className=\"form-control\"\r\n                        name=\"p_gstIn\"\r\n                        ref={register}\r\n                        placeholder=\"Enter GST Code\"\r\n                       \r\n                      />\r\n                    </div>\r\n                    <p className=\"declined\">{zipError}</p>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={password ? \"text\" : \"password\"}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_password || passError,\r\n                        })}\r\n                        name=\"p_password\"\r\n                        placeholder=\"Enter Your Password\"\r\n                        ref={register({\r\n                          required: true,\r\n                          pattern: {\r\n                            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                            message:\r\n                              \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\r\n                          },\r\n                        })}\r\n\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      <i\r\n                        className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.p_password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={repassword ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_confirm_password,\r\n                        })}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"p_confirm_password\"\r\n                        ref={register({\r\n                          required: true,\r\n                          validate: (value) =>\r\n                            value === getValues(\"p_password\") ||\r\n                            \"Password doesn 't match.\",\r\n                        })}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                      <i\r\n                        className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword2}\r\n                      />\r\n                      {errors.p_confirm_password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_confirm_password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    show ?\r\n                      <div class=\"col-md-6\">\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_otp,\r\n                            })}\r\n                            name=\"p_otp\"\r\n                            ref={register({ required: true })}\r\n                            onChange={otpVali}\r\n                            placeholder=\"Enter your OTP\"\r\n                            autocomplete=\"off\"\r\n                          />\r\n                          <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\r\n                          {\r\n                            disabled ? null\r\n                              :\r\n                              <small class=\"text-center\">\r\n                                Note: OTP is valid for {time} seconds.\r\n                              </small>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      : null\r\n                  }\r\n                  {\r\n                    loading ?\r\n                      <div class=\"col-md-12\" style={cusSub}>\r\n                        <Spinner color=\"primary\" />\r\n                      </div>\r\n                      :\r\n                      <div class=\"col-md-6\" style={cusSub}>\r\n                        {\r\n                          show ?\r\n                            <div>\r\n                              {\r\n                                disabled ? null\r\n                                  :\r\n                                  <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\r\n                              }\r\n                            </div>\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\r\n                        }\r\n                      </div>\r\n                  }\r\n                </div>\r\n              </form>\r\n\r\n              {\r\n                disabled ?\r\n                  <ResendOtp setDisabled={setDisabled} disabled={disabled} getTime={getTime}\r\n                    email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\r\n                    wEmail={wEmail} zipError={zipError} passError={passError}\r\n                    setLoading={setLoading} loading={loading}\r\n                    display={display}\r\n                    emailError={emailError}\r\n                    phoneError={phoneError} zipError1={zipError1} />\r\n                  :\r\n                  null\r\n              }\r\n              <Mandatory />\r\n            </div>\r\n          </>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Mazars\\src\\views\\Message\\PaymentModal.js",["2116","2117","2118","2119"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\views\\ChangePassword\\ResendOtp.js",["2120","2121"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ResendOtp({ email, setDisabled, getTime, setLoad, setLoading, loading }) {\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/regenrateotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n\r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                    setLoad(true)\r\n                } if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              ShowError.LoadingError(setLoading)\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\components\\Layout\\Layout.js",["2122"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\r\nimport Header from \"../Admin-Header/Admin-Header\";\r\nimport Footer from \"../Admin-Footer/Admin-Footer\";\r\n\r\n\r\n\r\nfunction Layout(props) {\r\n\r\n  const {\r\n    custDashboard, adminDashboard, TLDashboard,\r\n    TPDashboard,\r\n    custUserId, adminUserId, TLuserId, TPuserId, feedbackNumber } = props\r\n    \r\n  return (\r\n    <>\r\n      <Header\r\n        custUserId={custUserId}\r\n        adminUserId={adminUserId}\r\n        TLuserId={TLuserId}\r\n        TPuserId={TPuserId}\r\n        feedbackNumber = {feedbackNumber}\r\n      />\r\n\r\n      <Sidebar\r\n        custDashboard={custDashboard}\r\n        adminDashboard={adminDashboard}\r\n        TLDashboard={TLDashboard}\r\n        TPDashboard={TPDashboard}\r\n        feedbackNumber = {feedbackNumber}\r\n      />\r\n\r\n      <div className=\"app-content content\" style={{ marginTop: \"75px\" }}>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content-body\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","D:\\Mazars\\src\\pages\\TL\\EditProposal\\Payment.js",["2123","2124","2125","2126"],"import React from \"react\";\r\n\r\n\r\nexport default class YourComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n\r\n    amount = this.props.installment_amount\r\n    installment_amount = this.amount.split(',');\r\n    temp = this.installment_amount\r\n    tamp2;\r\n    handleChange1(i, e) {\r\n        const { value } = e.target\r\n        this.temp[i] = value\r\n\r\n    \r\n        this.setState({\r\n            values: {\r\n              ...this.temp.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n    }\r\n\r\n\r\n    due_date = this.props.due_date;\r\n     installment_due_dates = this.due_date.split(',')\r\n    installmentDueDate = this.installment_due_dates;\r\n\r\n    handleChange2(i, e) {\r\n        const { value } = e.target\r\n        this.installmentDueDate[i] = value\r\n\r\n        this.setState({\r\n            dates: {\r\n              ...this.installmentDueDate.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: false });\r\n        \r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n\r\n        this.props.paymentAmount(installment_amount);\r\n       this.props.paymentDate(due_date)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n        var fieldsArray = [];\r\n\r\n\r\n        for (var i = 0; i < this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    {this.props.clearValue == true ? \r\n                   <div class=\"col-md-6 my-2\">\r\n                       \r\n                   <input\r\n                       type=\"text\"\r\n                       className=\"form-control\"\r\n                       name={this.state.values[i]}\r\n                       onChange={this.handleChange1.bind(this, i)}\r\n                      defaultValue={installment_amount[i]}\r\n                   />\r\n               </div> :   \"\"\r\n}\r\n{this.props.clearValue == false ? \r\n    <div class=\"col-md-6 my-2\">\r\n                       \r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           name={this.state.values[i]}\r\n                           onChange={this.handleChange1.bind(this, i)}\r\n                           defaultValue=\"\"\r\n                       />\r\n                   </div> : \"\"}\r\n          {this.props.clearValue == true ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue={due_date[i]}\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}  \r\n       {this.props.clearValue == false ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue= \"\"\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}         \r\n                   \r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\components\\Common\\Mandatory.js",[],"D:\\Mazars\\src\\config\\config.js",[],"D:\\Mazars\\src\\common\\common.js",["2127","2128"],"//change date format\r\n\r\nconst changeFormateDate = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//remove time with date\r\nconst removeTime = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//removeDATE with TIME\r\nconst removeDate = (oldDate) => {\r\n  if (oldDate == null) {\r\n    return null;\r\n  } else {\r\n    var split = oldDate.split(\" \");\r\n    var a = split[0];\r\n    var b = split[1];\r\n    return b;\r\n  }\r\n};\r\n\r\n\r\n//capitalizeFirstLetter\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nexport default {\r\n  changeFormateDate,\r\n  removeTime,\r\n  removeDate,\r\n  capitalizeFirstLetter\r\n};\r\n\r\n// var updatedate = oldDate.split(\" \")[0];\r\n// var updatedate = oldDate.slice(0, 10);\r\n","D:\\Mazars\\src\\common\\Alerts.js",["2129"],"import Swal from \"sweetalert2\";\r\n\r\n// SuccessLogin\r\nconst SuccessLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            'Login successfully',\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Oops...\",\r\n            \"Error : Incorrect Email OR Password\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorOTP = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            \"Oops...\",\r\n            ` ${variable} </br> `,\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// Success\r\nconst SuccessMsg = (variable, key) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable ? variable : \"\"} </br> </br>\r\n             ${key.faill ? key.faill : \"\"} </br></br> \r\n              ${key.success ? key.success : \"\"}`,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// Success\r\nconst SuccessReport = (message) => {\r\n    if (message.invalid) {\r\n        Swal.fire(\r\n            \"Error\",\r\n            `${message.invalid}`,\r\n            \"error\"\r\n        )\r\n    } else if (message.faill && message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.faill} <br/><br/> \r\n            ${message.success}`,\r\n            'success'\r\n        )\r\n    } else if (message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.success}`,\r\n            'success'\r\n        )\r\n    }\r\n    else if (message.faill) {\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${message.faill} <br/>`,\r\n            'error'\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorDelete = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n// ErrorLogin\r\nconst ErrorEdit = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// SuccessNormal\r\nconst SuccessNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable} </br> `,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorNormal\r\nconst ErrorNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${variable} </br> `,\r\n            'error'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    SuccessLogin,\r\n    ErrorLogin,\r\n    SuccessMsg,\r\n    SuccessNormal,\r\n    SuccessReport,\r\n    ErrorDelete,\r\n    ErrorEdit,\r\n    ErrorNormal,\r\n    ErrorOTP,\r\n};\r\n\r\n\r\n\r\n\r\n// Swal.fire(`oops : ${response.data.result}`)","D:\\Mazars\\src\\pages\\Admin\\Recording\\RecordingEdit.js",["2130","2131"],"import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\nimport { baseUrl } from '../../../config/config';\r\nimport Swal from 'sweetalert2';\r\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\r\n   const userid = localStorage.getItem(\"adminkey\")\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (value) => {\r\n       let formData = new FormData();\r\n       formData.append(\"uid\", JSON.parse(userid))\r\n       formData.append(\"message\", value.p_message);\r\n       formData.append(\"message_type\", value.msg_type)\r\n        formData.append(\"assign_id\", assignid);\r\n        formData.append(\"participants\", value.p_participants);\r\n        formData.append(\"id\", editId)\r\n        axios({\r\n            method : \"POST\",\r\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\r\n            data: formData,\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n                recordingHandler()\r\n                Swal.fire({\r\n                    title : \"success\",\r\n                    html : \"Message edited successfully\",\r\n                    icon : \"success\"\r\n                })\r\n                recList()\r\n            }\r\n        })\r\n    }\r\n   \r\nreturn (\r\n \r\n    <>\r\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\r\n        <ModalHeader toggle={recordingHandler}>\r\n        <h1>Recording Edit</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n       <form onSubmit = {handleSubmit(onSubmit)}>\r\n<div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Participants Name</label>\r\n        <input \r\n        className=\"form-control\"\r\n        name=\"p_participants\"\r\n        ref = {register}\r\n        defaultValue = {participants}/>\r\n        </div>\r\n        \r\n</div>\r\n<div className = \"row\">\r\n<div className=\"col-md-12\">\r\n    <label>Message Type</label>\r\n<select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            required\r\n                            \r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                          </select>\r\n    </div>\r\n    </div>\r\n    <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Message</label>\r\n        <textarea \r\n        className=\"form-control\"\r\n        style={{height : \"100px\"}}\r\n        name=\"p_message\"\r\n        ref = {register}\r\n        defaultValue = {message}/>\r\n        </div>\r\n</div>\r\n<button className=\"btn btn-primary my-2\">\r\n    Submit\r\n</button>\r\n       </form>\r\n        </ModalBody>\r\n    </Modal>\r\n    \r\n    </>\r\n)\r\n}\r\nexport default RecordingEdit;","D:\\Mazars\\src\\components\\LoadingTime\\LoadingTime.js",["2132","2133"],"import Swal from \"sweetalert2\";\r\n const LoadingError = (setLoading) => {\r\nsetTimeout(() =>{\r\n    setLoading(false)\r\n    Swal.fire({\r\n        title : \"error\",\r\n        html : \"Something went wrong, Please try again\",\r\n        icon : \"error\"\r\n    })\r\n}, 30000)\r\n}\r\n\r\nvar timerOn = true;\r\nconst timer2 = (setTime, setDisabled) => {\r\n    function timer(remaining) {\r\n        var s = remaining % 60;\r\n        s = s < 10 ? '0' + s : s;\r\n        setTime(remaining)\r\n        remaining -= 1;\r\n        if (remaining >= 0 && timerOn) {\r\n          setTimeout(function () {\r\n            timer(remaining);\r\n          }, 1000);\r\n          return;\r\n        }\r\n        setDisabled(true)\r\n       \r\n      }\r\n      timer(180);\r\n}\r\nexport default {\r\n    LoadingError, timer2\r\n  };","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Unpaid.js",["2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport moment from 'moment';\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n\r\n    // UseState end \r\n    // Global veriable \r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n    \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=1`).then((res) => {\r\n            \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n       \r\n        setModal(!modal);\r\n\r\n        if(typeof(key) == \"object\"){\r\n\r\n        }\r\n        else{\r\n            fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       {row.paid_status === \"2\" ? \r\n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                    \r\n                      \r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>\r\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                            <Link\r\n              to={{\r\n                pathname: `/teamleader/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/teamleader/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                       </div>\r\n                       <div title=\"Send Message\">\r\n                           <Link\r\n                               to={{\r\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                   obj: {\r\n                                       message_type: \"5\",\r\n                                       query_No: row.assign_no,\r\n                                       query_id: row.assign_id,\r\n                                       routes: `/teamleader/proposal`\r\n                                   }\r\n                               }}\r\n                           >\r\n                               <i\r\n                                   class=\"fa fa-comments-o\"\r\n                                   style={{\r\n                                       fontSize: 18,\r\n                                       cursor: \"pointer\",\r\n                                       color: \"blue\"\r\n                                   }}\r\n                               ></i>\r\n                           </Link>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               row.paid_status == \"0\" ?\r\n                                   <div title=\"Payment decline\"\r\n                                       onClick={() => rejectHandler(row)}\r\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                   >\r\n                                       <PaymentIcon />\r\n                                   </div>\r\n                                   : null\r\n                           }\r\n                       </div>\r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>}                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Unpaid=\"Unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        rowStyle = {rowStyle2}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TL\\QueriesTab\\AllQuery.js",["2149","2150","2151","2152","2153","2154","2155","2156","2157","2158"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllQuery() {\r\n\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const [incompleteData, setInCompleteData] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInCompleteAssingment();\r\n    }, []);\r\n\r\n    const getInCompleteAssingment = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setInCompleteData(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"120px\"};\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n              \r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width :\"120px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queriestab\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width :\"120px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Client Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"150px\"};\r\n            },\r\n        },\r\n        {\r\n            text: \"\tExp. Delivery Date\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"140px\"};\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"120px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"100px\"};\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                      {row.status_code == \"1\" ? null :\r\n                      \r\n                      <div\r\n                      style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"green\",\r\n                      }}\r\n                  >\r\n                     \r\n\r\n                      {row.status == \"Declined Query\" ? null :\r\n                      <div title=\"Send Message\">\r\n                      <Link\r\n                          to={{\r\n                              pathname: `/teamleader/chatting/${row.id}`,\r\n                              obj: {\r\n                                  message_type: \"4\",\r\n                                  query_No: row.assign_no,\r\n                                  query_id: row.id,\r\n                                  routes: `/teamleader/queriestab`\r\n                              }\r\n                          }}\r\n                      >\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  marginLeft: \"8px\",\r\n                                  color: \"blue\"\r\n                              }}\r\n                          ></i>\r\n                      </Link>\r\n                  </div>}\r\n\r\n                      <div title=\"View Discussion Message\">\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  color: \"orange\"\r\n                              }}\r\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                      </div>\r\n                  </div>\r\n}                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setInCompleteData}\r\n                        getData={getInCompleteAssingment}\r\n                        AllQuery=\"AllQuery\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={incompleteData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getInCompleteAssingment}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuery;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\RecordingFilter.js",["2159","2160","2161","2162","2163","2164","2165","2166","2167","2168"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction RecordingFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getRecording,\r\n    SearchQuery,\r\n   userid,\r\n  \r\n \r\n  } = props;\r\n  // const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n \r\n\r\n  \r\n \r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n   getRecording();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n \r\nif(SearchQuery == \"SearchQuery\") {\r\n  \r\n    axios\r\n        .get(\r\n          `${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}&assign_id=${data.queryNo}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n}\r\n\r\n   \r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-inline\">\r\n          \r\n             <input\r\n                    type=\"text\"\r\n                    name=\"queryNo\"\r\n                    ref={register}\r\n                    className=\"form-select form-control\"\r\n                    \r\n                  />\r\n                <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecordingFilter;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\CompleteData\\CompleteData.js",["2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport History from \"../../../components/PendingForAllocation/History\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nfunction CompletedQuery() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\nconst hist = useHistory();\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n \r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const ViewDiscussionToggel = (key) => {\r\n      setViewDiscussion(!ViewDiscussion);\r\n      setAssignNo(key)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n  const toggle = (key) => {\r\n  \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n     \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"120px\" };\r\n      },\r\n      formatter : function(cell, row){\r\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n     \r\n        return(\r\n           \r\n            <>\r\n      {dueDate}\r\n            </>\r\n        )\r\n    }\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width : \"120px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 3,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n          return (\r\n              <>\r\n                  <div>\r\n                      {row.status}/\r\n                      {\r\n                          row.status == \"Inprogress Query\" ?\r\n                              <p className=\"inprogress\">\r\n\r\n                                  {row.statusdescription}\r\n                              </p>\r\n                              :\r\n                              row.status == \"Declined Query\" ?\r\n                                  <p className=\"declined\">\r\n\r\n                                      {row.statusdescription}\r\n                                  </p> :\r\n                                  row.status == \"Completed Query\" ?\r\n                                      <p className=\"completed\">\r\n\r\n                                          {row.statusdescription}\r\n                                      </p> : \r\n                                      null\r\n                                  \r\n                                    \r\n                      }\r\n                  </div>\r\n              </>\r\n          );\r\n      },\r\n  },\r\n  \r\n  {\r\n    text: \"Action\",\r\n    dataField: \"\",\r\n    headerStyle: () => {\r\n      return { fontSize: \"12px\" };\r\n    },\r\n    formatter: function (cell, row) {\r\n      return (\r\n        <>\r\n          {row.statuscode === \"0\" || row.statuscode === \"3\"? (\r\n           \r\n           <i onClick ={() => assignConfirm(row.id, row.assign_no)} class=\"fa fa-share\" style={{color : \"blue\", cursor : \"pointer\"}}></i>\r\n          ) : (\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              {/* <div title=\"Assign to\">\r\n               \r\n\r\n              </div>\r\n              <div title=\"Decline Query\">\r\n                <Link\r\n                  to={`/teamleader/query_rejection/${row.id}`}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-trash\"\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n  <p style={{ color: \"green\", fontSize: \"10px\" }}>\r\n\r\n Allocated to {row.tname} on\r\n<p>{row.allocation_time}</p>\r\n</p>\r\n              {/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/teamleader/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"4\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/teamleader/queriestab`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n\r\n            </div>\r\n\r\n\r\n\r\n          )}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    text: \"History\",\r\n    dataField: \"\",\r\n    headerStyle: () => {\r\n      return { fontSize: \"12px\" };\r\n    },\r\n    formatter: function (cell, row) {\r\n      return (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-info btn-sm\"\r\n            onClick={() => toggle(row.id)}\r\n          >\r\n            History\r\n          </button>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  ];\r\n\r\n\r\n\r\n  const  assignConfirm = (id, assign_number) => {\r\n \r\n   \r\nSwal.fire({\r\n  title: \"Are you sure?\",\r\n   text: `do you want to assign ${assign_number} to taxprofessional`,\r\n        type: 'warning',\r\n        showCloseButton:true,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '\"#3085d6\"',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, assign it!',\r\n        cancelButtonText: 'No'\r\n    }).then(function(result){\r\n      console.log(\"resutl\", result)\r\n        if(result.value){\r\n          hist.push(`/teamleader/queryassing/${id}`)\r\n        }else if(result.dismiss == 'cancel'){\r\n          \r\n           axios.get(`${baseUrl}/tl/workby?uid=${JSON.parse(userid)}&qid=${id}`).then((res) => {\r\n                   if(res.data.code === 1){\r\n                     hist.push(`/teamleader/proposal`)\r\n                   \r\n                   }\r\n                 })\r\n        }\r\n\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n            <History history={history} toggle={toggle} modal={modal} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompletedQuery;\r\n","D:\\Mazars\\src\\components\\Common\\EmailValidation.js",["2181","2182","2183","2184"],"import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { Spinner } from \"reactstrap\"\r\nconst EmailValidation = (props) => {\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\nconst [email, setEmail] = useState([])\r\n   \r\n    const emailHandler = (e) => {\r\n      setEmail(e.target.value);\r\n      props.setEmail2(e.target.value)\r\n        if (e.target.value.length < 1) {\r\n          props.setWemail(\"\")\r\n        }\r\n      };\r\n\r\n      const emailValidation = (key) => {\r\n\r\n        var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email.length > 0 && email.match(validRegex)) {\r\n          props.setWemail(\"\");\r\n          props.setEmailError(false)\r\n          let formData = new FormData();\r\n          formData.append(\"email\", email);\r\n          formData.append(\"type\", 1);\r\n    if(props.name === \"teamleader\" || props.name ==\"taxprofessional\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/validateregistration`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n             \r\n        if (response.data.code === 1) {\r\n          props.setValiemail(response.data.result)\r\n          props.setInvalid('')\r\n          props.setEmailError(false)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          props.setInvalid(response.data.result)\r\n          props.setValiemail('')\r\n          props.setEmailError(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n    }\r\n    else{\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/customers/validateregistration`,\r\n        data: formData,\r\n      })\r\n      .then(function (response) {\r\n             \r\n        if (response.data.code === 1) {\r\n          props.setValiemail(response.data.result)\r\n          props.setInvalid('')\r\n          props.setEmailError(false)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          props.setInvalid(response.data.result)\r\n          props.setValiemail('')\r\n          props.setEmailError(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n    }\r\n        \r\n          \r\n        }\r\n        else {\r\n          props.setEmailError(true)\r\n          props.setWemail(\"invalid email\")\r\n        }\r\n    \r\n      }\r\n    \r\nreturn(\r\n    \r\n    <>\r\n    <input\r\n                        type=\"text\"\r\n                        name=\"p_email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email || props.emailError === true || props.wEmail || props.invalid,\r\n                        })}\r\n                        onChange={(e) => emailHandler(e)}\r\n                        onBlur={(e) => emailValidation(e)}\r\n                        placeholder=\"Enter Your Password\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      \r\n    </>\r\n)\r\n}\r\nexport default EmailValidation;","D:\\Mazars\\src\\pages\\TL\\InCompleteData\\InCompleteData.js",["2185","2186","2187","2188","2189","2190","2191","2192","2193"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction InCompleteData({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"150px\" };\r\n      },\r\n      formatter : function(cell, row){\r\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\r\n      \r\n        return(\r\n           \r\n            <>\r\n      {dueDate}\r\n            </>\r\n        )\r\n    }\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"100px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"100px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Acutal Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {row.status_code == \"1\" ? null :\r\n            <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              color: \"green\",\r\n            }}\r\n          >\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/teamleader/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/teamleader/queriestab`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n\r\n            <div title=\"View Discussion Message\">\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"orange\"\r\n                }}\r\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n              ></i>\r\n            </div>\r\n          </div>}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            InprogressQuery=\"InprogressQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getInCompleteAssingment}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InCompleteData;\r\n","D:\\Mazars\\src\\views\\SignUpForm\\ResendOtp.js",["2194","2195"],"\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction ResendOtp({ invalid, wEmail, disabled, indNumError, zipError, passError, email,\r\n    phone, setDisabled, getTime, setLoad, loading, emailError, phoneError, zipError1, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        if (emailError === true || phoneError === true || zipError1 === true)  {\r\n           return false\r\n              }\r\n              else {\r\n                setLoading(true)\r\n                let formData = new FormData();\r\n                formData.append(\"email\", value.p_email);\r\n                formData.append(\"phone\", phone);\r\n                formData.append(\"p\", \"registration\");\r\n        \r\n                if (invalid || wEmail || indNumError || zipError || passError) {\r\n                    \r\n                    setLoad(false)\r\n                }\r\n                else {\r\n                    \r\n                    axios({\r\n                        method: \"POST\",\r\n                        url: `${baseUrl}/customers/forgototp`,\r\n                        data: formData,\r\n                    })\r\n                        .then(function (response) {\r\n                            \r\n                            if (response.data.code === 1) {\r\n                                Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n                                setDisabled(false)\r\n                                getTime();\r\n                                setLoad(true)\r\n                                setLoading(false)\r\n                            } if (response.data.code === 0) {\r\n                                setLoading(false)\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                           \r\n                        });\r\n                    }\r\n                   }\r\n     \r\n        \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                \r\n                {\r\n                      disabled ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <div style={{ paddingTop: \"10px\" }}>\r\n                        <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                    </div>\r\n                    }\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js",["2196"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    id: \"\",\r\n    allocation_id: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      id: key.id,\r\n      allocation_id: key.allocation_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingforAcceptance();\r\n  }, []);\r\n\r\n  const getPendingforAcceptance = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setPendingData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n         \r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.query_created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width  : \"100px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Accept / Reject\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                color: \"#6967ce\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              id=\"div1\"\r\n            >\r\n              <div\r\n                id=\"accept\"\r\n                title=\"Accept Assignment\"\r\n                onClick={() => acceptHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-check\"\r\n                  style={{ color: \"green\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n              <div\r\n                id=\"reject\"\r\n                title=\"Reject Assignment\"\r\n                // onClick={() => rejectHandler(row)}\r\n                onClick={() => rejectHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-times\"\r\n                  style={{ color: \"red\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const acceptHandler = (key) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\r\n          getPendingforAcceptance();\r\n          updateTab(3);\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setPendingData}\r\n            getData={getPendingforAcceptance}\r\n            pendingForAcceptence=\"pendingForAcceptence\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Spinner color=\"primary\" />\r\n              :\r\n              <div className=\"tableFixHead\">\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={pendingData}\r\n                columns={columns}\r\n                rowIndex\r\n                classes=\"table-responsive\"\r\n              />\r\n              </div>\r\n          }\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getPendingforAcceptance={getPendingforAcceptance}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paid.js",["2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const rejectHandler = (key) => {\r\n      \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=2`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n  \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n            \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n          \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 2, \r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n          \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text: \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                            <div title=\"Payment History\"\r\n                           \r\n                                style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                            >\r\n                              <Link\r\n              to={{\r\n                pathname: `/teamleader/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/teamleader/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                              \r\n                            ></i>\r\n                            </Link>\r\n                            </div>\r\n                            <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                        obj: {\r\n                                            message_type: \"5\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.assign_id,\r\n                                            routes: `/teamleader/proposal`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 18,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    row.paid_status == \"0\" ?\r\n                                        <div title=\"Payment decline\"\r\n                                            onClick={() => rejectHandler(row)}\r\n                                            style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                        >\r\n                                            <PaymentIcon />\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n      \r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>             \r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Paid=\"Paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n<DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\AllPayment.js",["2209","2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [addPaymentModal, setPaymentModal] = useState(false); \r\n\r\n\r\n    // Use State end\r\n    //Global veriable\r\n    var rowStyle2 = {}\r\n\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\r\n        \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n   \r\n        setModal(!modal);\r\n\r\n       if(typeof(key) == \"object\"){\r\n\r\n       }\r\n       else{\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n       }\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                       {row.paid_status === \"2\" ? \r\n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                      \r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>\r\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                       <div title=\"Payment History\"\r\n                         \r\n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                       >\r\n                          <Link\r\n              to={{\r\n                pathname: `/teamleader/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/teamleader/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                              \r\n                            ></i>\r\n                            </Link>\r\n                       </div>\r\n                       <div title=\"Send Message\">\r\n                           <Link\r\n                               to={{\r\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                   obj: {\r\n                                       message_type: \"5\",\r\n                                       query_No: row.assign_no,\r\n                                       query_id: row.assign_id,\r\n                                       routes: `/teamleader/proposal`\r\n                                   }\r\n                               }}\r\n                           >\r\n                               <i\r\n                                   class=\"fa fa-comments-o\"\r\n                                   style={{\r\n                                       fontSize: 18,\r\n                                       cursor: \"pointer\",\r\n                                       color: \"blue\"\r\n                                   }}\r\n                               ></i>\r\n                           </Link>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               row.paid_status == \"0\" ?\r\n                                   <div title=\"Payment decline\"\r\n                                       onClick={() => rejectHandler(row)}\r\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                   >\r\n                                       <PaymentIcon />\r\n                                   </div>\r\n                                   : null\r\n                           }\r\n                       </div>\r\n\r\n\r\n                       <div title=\"View Discussion Message\">\r\n                           <i\r\n                               class=\"fa fa-comments-o\"\r\n                               style={{\r\n                                   fontSize: 16,\r\n                                   cursor: \"pointer\",\r\n                                   color: \"orange\"\r\n                               }}\r\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                           ></i>\r\n                       </div>\r\n\r\n                   </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={payment}\r\n            columns={columns}\r\n            \r\n            classes = \"table-responsive\"\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n          />\r\n          </div>\r\n\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\Admin\\TeamLeaderTab\\History.js",["2224","2225","2226","2227","2228","2229","2230","2231"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history, toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n   \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">From</th>\r\n                <th scope=\"row\">To</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Email</th>\r\n                <th scope=\"row\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.from_date}</td>\r\n                      <td>{p.to_date}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.personal_email}</td>\r\n                      <td>{p.phone}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\components\\Footer\\Footer.js",[],"D:\\Mazars\\src\\components\\Header\\Header.js",["2232"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport \"../../assets/css/style.css\";\r\nimport mazars from \"../../assets/images/mazars-logo.png\";\r\n\r\nfunction Header({ id, cust_sign, noAdminSign, noTlSign, noTpSign, admin, mtl, mtp, noSign, loginOTP }) {\r\n  let history = useHistory();\r\n\r\n  const custLogout = () => {\r\n    localStorage.removeItem(\"userid\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"uid\");\r\n    localStorage.removeItem(\"category\");\r\n    history.push(\"/customer/signin\");\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        {id && (\r\n          <div>\r\n            <Link to=\"/customer/questionnaire-page\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {cust_sign && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {noSign && (\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n\r\n        {loginOTP && (\r\n          <div>\r\n            <img src={mazars} className=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\r\n          </div>\r\n        )}\r\n\r\n        {admin && (\r\n          <div>\r\n            <Link to=\"/admin/start\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {mtl && (\r\n          <div>\r\n            <Link to=\"/teamleader/start\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {mtp && (\r\n          <div>\r\n            <Link to=\"/taxprofessional/start\">\r\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          {id && (\r\n            <ul className=\"menu\">\r\n              <li style={{ color: \"#fff\" }}>{id}</li>\r\n              <li onClick={custLogout} style={{ color: \"#fff\" }}>\r\n                <i className=\"fa fa-sign-out\">logout</i>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {cust_sign && (\r\n            <div>\r\n              <ul className=\"menu\">\r\n                <li>\r\n                  <Link to=\"/\">Signin</Link>\r\n                </li>             \r\n              </ul>\r\n            </div>\r\n          )}\r\n         \r\n          {admin && !noAdminSign && (\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/admin/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {mtl && !noTlSign && (\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/teamleader/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {mtp && !noTpSign && (\r\n            <ul className=\"menu\">\r\n              <li>\r\n                <Link to=\"/taxprofessional/login\">Signin</Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n {/* <li>\r\n                  <Link to=\"/customer/signup\">SignUp</Link>\r\n                </li> */}","D:\\Mazars\\src\\views\\SignUpForm\\data.js",[],"D:\\Mazars\\src\\components\\Search-Filter\\tlFilter.js",["2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction TeamFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    AllQuery,\r\n   \r\n    InprogressQuery,\r\n    DeclinedQuery,\r\n    pendingForAcceptence,\r\n    completeAssignment,\r\n    AllProposal,\r\n    InprogressProposal,\r\n    proposal,\r\n    assignment,\r\n    AllPayment,\r\n    Unpaid,\r\n    Paid\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData.length != 0){\r\n      \r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n\r\n\r\n    if (AllQuery == \"AllQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\r\n     \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQuery == \"InprogressQuery\") {\r\n\r\n     \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllProposal == \"AllProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressProposal == \"InprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if(proposal == \"proposal\"){\r\n      axios\r\n      .get(\r\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=3&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setData(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Unpaid == \"Unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Paid == \"Paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-inline\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n\r\n                  {AllQuery == \"AllQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Queries</option>\r\n                      <option value=\"2\">Completed; Queries</option>\r\n                      <option value=\"3\">Declined; Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressQuery == \"InprogressQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      onChange={(e) => setStatus1(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                      <option value=\"4\">Client Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllProposal == \"AllProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Proposals</option>\r\n                      <option value=\"2\">Accepted; Proposals</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressProposal == \"InprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\">Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamFilter;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DiscardReport.js",["2253","2254","2255","2256","2257","2258"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  \r\n  const getHistory = () => {\r\n   \r\n  if(report != undefined && report.length > 0){\r\n   \r\n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js",["2259","2260","2261","2262"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  assignNo,\r\n  getPaymentStatus,\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"notes\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/declinePayment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\r\n          getPaymentStatus();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Please provide the reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\components\\Admin-Footer\\Admin-Footer.js",[],"D:\\Mazars\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js",["2263","2264","2265"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  pay,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { id, allocation_id } = pay;\r\n\r\n  \r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", id);\r\n    formData.append(\"allocation_id\", allocation_id);\r\n    formData.append(\"reject_reason\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js",["2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281"],"import { NavLink } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ima from \"../../logo.jpeg\"\r\nimport Collapse from '@mui/material/Collapse';\r\n\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport { useHistory } from \"react-router\";\r\nimport './list.css';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard , feedbackNumber}) {\r\n  const [toggleState, setToggleState] = useState(false);\r\n  const [feedbackNumber2, setfeedbackNumber2] = useState();\r\n  const [feedbackNumbertl, setfeedbackNumbertl] = useState();\r\n  const [feedbackNumbertp, setfeedbackNumbertp] = useState();\r\n  const [open, setOpen] = useState(false)\r\n  const [logo, setLogo] = useState(\"customer/dashboard\")\r\n  const tlkey= window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\");\r\n  const adminkey = window.localStorage.getItem(\"adminkey\")\r\n  let history = useHistory()\r\n  const toggleTab = (index) => {\r\n  \r\n    setToggleState(index);\r\n  };\r\nconst feedNumber = {\r\n  fontSize: \"10.5px\",\r\n  height: \"15px\",\r\n  backgroundColor: \"green\",\r\n  color: \"white\",\r\n  display: \"inline-block\",\r\n  margin: \"0px 0px 20px 0px\",\r\n  padding: \"9px 10px\",\r\n    borderRadius: \"50%\"\r\n}\r\nuseEffect(() => {\r\n  getFeedback4();\r\n}, [custDashboard])\r\n\r\n\r\nuseEffect(() => {\r\n  getFeedback2();\r\n}, [adminDashboard])\r\n\r\nconst getFeedback4 = () => {\r\n  setLogo(\"/#/customer/dashboard\")\r\n}\r\nconst getFeedback2 = () => {\r\n  if(adminDashboard != undefined){\r\n    axios.get(`${baseUrl}/admin/getFeedback?uid=${JSON.parse(adminkey)}&&type=total`).then((res) => {\r\nsetLogo(\"admin/dashboard\")\r\n      if (res.data.code === 1) {\r\n       \r\n       if(res.data.result != undefined){\r\n         setfeedbackNumber2(res.data.result[0].total)\r\n         setLogo(\"/#/admin/dashboard\")\r\n       }\r\n      }\r\n    });\r\n  }\r\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n    setOpen(true)\r\n  }\r\n\r\n};\r\nconst getFeedbacktl = () => {\r\n if(TLDashboard != undefined){\r\n  axios\r\n  .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(tlkey)}&&type=total`)\r\n  .then((res) => {\r\n    setLogo(\"teamleader/dashboard\")\r\n    if(res.data.result != undefined){\r\n      setfeedbackNumbertl(res.data.result[0].total)\r\n      setLogo(\"/#/teamleader/dashboard\")\r\n    }\r\n  });\r\n }\r\n if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n  setOpen(true)\r\n}\r\n};\r\nuseState(() => {\r\n  getFeedbacktl();\r\n}, [TLDashboard])\r\n\r\nconst getFeedbacktp = () => {\r\n  if(TPDashboard != undefined){\r\n    axios\r\n    .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(tpkey)}&&type=total`)\r\n    .then((res) => {\r\n      setLogo(\"taxprofessional/dashboard\")\r\n      if(res.data.result != undefined){\r\n        setfeedbackNumbertp(res.data.result[0].total)\r\n        setLogo(\"/#/taxprofessional/dashboard\")\r\n      }\r\n    });\r\n  }\r\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\r\n    setOpen(true)\r\n  }\r\n};\r\nuseState(() => {\r\n  getFeedbacktp();\r\n}, [TPDashboard])\r\n\r\nconst handleClick = () => {\r\n\r\n  setOpen(!open);\r\n};\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\r\n        data-scroll-to-active=\"true\"\r\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\r\n      >\r\n        <div className=\"navbar-header\">\r\n          <ul className=\"nav navbar-nav flex-row\">\r\n            <li className=\"nav-item mr-auto\">\r\n              <a className=\"navbar-brand\" href={logo}>\r\n                <img\r\n                style={{display : \"flex\", margin: \"auto\", width : \"50%\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                  className=\"brand-logo\"\r\n                  alt=\"Chameleon admin logo\"\r\n                  src={`${ima}`}\r\n                />\r\n               \r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item d-md-none\">\r\n              <a className=\"nav-link close-navbar\">\r\n                <i className=\"fa fa-times\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"main-menu-content\">\r\n          {custDashboard && (\r\n            <ul\r\n              className=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li className=\"nav-item active\">\r\n                <NavLink to={\"/customer/dashboard\"}>\r\n                  <i className=\"fa fa-home\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\r\n                <NavLink to={\"/customer/queries\"}>\r\n                  <i className=\"fa fa-clone\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/customer/proposal\"}>\r\n                  <i className=\"fa fa-envelope\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/customer/paymentstatus\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/customer/assignment\"}>\r\n                  <i className=\"fa fa-file\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/customer/schedule\"}>\r\n                  <i className=\"fa fa-rss-square\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/customer/feedback-data\"}>\r\n                  <i className=\"fa fa-rss-square\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Feedback\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n            </ul>\r\n          )}\r\n\r\n          {adminDashboard && (\r\n            <ul\r\n              className=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/dashboard\"}>\r\n                  <i className=\"fa fa-home\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/queriestab\"}>\r\n                  <i className=\"fa fa-clone\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/proposal\"}>\r\n                  <i className=\"fa fa-envelope\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Proposals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/adinvoice\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/paymentstatus\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/assignment\"}>\r\n                  <i className=\"fa fa-file\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                 \r\n              <ListItemButton  onMouseEnter={() => handleClick()}>\r\n        \r\n      <span className=\"listStyle\">\r\n      <ListItemIcon>\r\n          <ScheduleIcon />\r\n        </ListItemIcon>\r\n\r\n\r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n                </span>\r\n\r\n      \r\n       \r\n      </ListItemButton>\r\n\r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/admin/schedule\"}>\r\n                  \r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/admin/recording\"}>\r\n                  \r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n\r\n            \r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/teamleaders\"}>\r\n                  <i className=\"fa fa-users\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Team Leaders\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/taxprofessionals\"}>\r\n                  <i className=\"fa fa-users\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Tax Professionals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n               <li className =\"nav-item\">\r\n                 <NavLink to={\"/admin/customers\"}>\r\n                   <i className=\"fa fa-users\"></i>\r\n                   <span className=\"menu-title\" data-i18n=\"\">\r\n                  Client\r\n                  </span>\r\n                 </NavLink>\r\n               </li>\r\n               <li className =\"nav-item\">\r\n                 <NavLink to={\"/admin/reportlist\"}>\r\n                   <i className=\"fa fa-users\"></i>\r\n                   <span className=\"menu-title\" data-i18n=\"\">\r\n                   Report\r\n                  </span>\r\n                 </NavLink>\r\n               </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/admin/feedback\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                 Feedback <sup style={feedNumber}>{feedbackNumber2}</sup> \r\n          \r\n                  </span>\r\n                  {/* Feedback  <span className=\"badge\">{feedbackNumber2}</span> */}\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {TLDashboard && (\r\n            <ul\r\n              className=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li className=\"active nav-item\">\r\n                <NavLink to={\"/teamleader/dashboard\"}>\r\n                  <i className=\"fa fa-home\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/queriestab\"}>\r\n                  <i className=\"fa fa-clone\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/proposal\"}>\r\n                  <i className=\"fa fa-envelope\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/tlinvoice\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/paymentstatus\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/assignment\"}>\r\n                  <i className=\"fa fa-file\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                 \r\n              <ListItemButton onMouseEnter={() => handleClick()}>\r\n        \r\n        <span className=\"listStyle\">\r\n        <ListItemIcon>\r\n            <ScheduleIcon />\r\n          </ListItemIcon>\r\n  \r\n  \r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </span>\r\n  \r\n        \r\n         \r\n        </ListItemButton>\r\n  \r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/teamleader/schedule\"}>\r\n                 \r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/teamleader/recording\"}>\r\n                 \r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/reports\"}>\r\n                  <i className=\"fa fa-users\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Reports\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/addteamprof\"}>\r\n                  <i className=\"fa fa-users\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    View T.P\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/teamleader/feedback\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                  Feedback <sup style={feedNumber}>{feedbackNumbertl}</sup>\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              \r\n            \r\n            </ul>\r\n          )}\r\n\r\n          {TPDashboard && (\r\n            <ul\r\n              className=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/dashboard\"}>\r\n                  <i className=\"fa fa-clone\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/queriestab\"}>\r\n                  <i className=\"fa fa-clone\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/proposal\"}>\r\n                  <i className=\"fa fa-envelope\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/tpinvoice\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                   Invoice\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/paymentstatus\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/assignment\"}>\r\n                  <i className=\"fa fa-file\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                 \r\n              <ListItemButton onMouseEnter={() => handleClick()}>\r\n        \r\n        <span className=\"listStyle\">\r\n        <ListItemIcon>\r\n            <ScheduleIcon />\r\n          </ListItemIcon>\r\n  \r\n  \r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                  {open ? <ExpandLess /> : <ExpandMore />}\r\n                  </span>\r\n  \r\n        \r\n         \r\n        </ListItemButton>\r\n  \r\n      <Collapse in={open}  unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <ul>\r\n                  <li>\r\n                  <NavLink to={\"/taxprofessional/schedule\"}>\r\n                 \r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                  Schedule\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                  <li>\r\n                  <NavLink to={\"/taxprofessional/recording\"}>\r\n\r\n                <span className=\"menu-title\" data-i18n=\"\">\r\n                Recording\r\n                </span>\r\n                </NavLink>\r\n                  </li>\r\n                </ul>\r\n        </List>\r\n      </Collapse>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/reports\"}>\r\n                  <i className=\"fa fa-users\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                    Reports\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/feedback\"}>\r\n                  <i className=\"fa fa-file-text\"></i>\r\n                  <span className=\"menu-title\" data-i18n=\"\">\r\n                  Feedback <sup style={feedNumber}>{feedbackNumbertp}</sup> \r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <div className=\"navigation-background\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Mazars\\src\\components\\Admin-Header\\Admin-Header.js",["2282","2283"],"import React from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NavWrapper from \"./NavWrapper\";\r\n\r\n\r\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId , feedbackNumber}) {\r\n  let history = useHistory();\r\n\r\n  const custLogout = () => {\r\n    localStorage.removeItem(\"userid\");\r\n    localStorage.removeItem(\"custEmail\");\r\n    localStorage.removeItem(\"category\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const adminLogout = () => {\r\n    localStorage.removeItem(\"adminkey\");\r\n    localStorage.removeItem(\"adminEmail\");\r\n    history.push(\"/admin/login\");\r\n  };\r\n\r\n  const tlLogout = () => {\r\n    localStorage.removeItem(\"tlkey\");\r\n    localStorage.removeItem(\"tlEmail\");\r\n    history.push(\"/teamleader/login\");\r\n  };\r\n\r\n  const tpLogout = () => {\r\n    localStorage.removeItem(\"tpkey\");\r\n    history.push(\"/taxprofessional/login\");\r\n  };\r\n\r\n  const nm = window.localStorage.getItem(\"name\");\r\n \r\n  var name = JSON.parse(nm);\r\n  \r\n\r\n\r\n  const CustEmail = window.localStorage.getItem(\"custEmail\");\r\n  const adminEmail = window.localStorage.getItem(\"adminEmail\");\r\n  const tlEmail = window.localStorage.getItem(\"tlEmail\");\r\n  const tpEmail = window.localStorage.getItem(\"tpEmail\")\r\n \r\n  \r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\r\n        sty\r\n      >\r\n        {custUserId && (\r\n          <NavWrapper \r\n         \r\n          color=\"#5E96AE\" logout={custLogout}\r\n            name=\"customer\" email={CustEmail}\r\n          />\r\n        )}\r\n\r\n        {adminUserId && (\r\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\r\n            name=\"admin\" email={adminEmail}\r\n            feedbackNumber= {feedbackNumber}\r\n          />\r\n        )}\r\n\r\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout}\r\n          name=\"teamleader\" email={tlEmail}\r\n        />}\r\n\r\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout}\r\n          name=\"taxprofessional\" email={tpEmail}\r\n        />}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PayModal.js",["2284","2285","2286"],"\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nconst PayModal = (props) => {\r\n    const userid = window.localStorage.getItem(\"userid\")\r\n    const [payValue, setpayValue] = useState()\r\n    const [tdsRate, setTdsRate] = useState();\r\n    const [tdsAmount, setTdsAmount] = useState()\r\n    \r\n \r\n    useEffect(() => {\r\n       if(props.modalData !== undefined){\r\n          \r\n\r\n            setTdsRate(parseFloat(props.modalData.tds_rate))\r\n          \r\n           \r\n           setTdsAmount(props.modalData.tds_amount)\r\n           setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(props.modalData.tds_amount))\r\n\r\n   \r\n    }\r\n    }, [props.modalData])\r\n   \r\n    const payFun = (e) => {\r\n  \r\n         \r\n        let formData = new FormData();\r\n        formData.append(\"id\", props.modalData.id);\r\n        formData.append(\"cid\", JSON.parse(userid));\r\n        formData.append(\"tds_rate\", tdsRate);\r\n        formData.append(\"tds_amount\", tdsAmount)\r\n       \r\n        axios({\r\n            method :\"POST\", \r\n            url : `${baseUrl}/customers/payCall`,\r\n            data : formData\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n             \r\n                window.open(res.data.result, \"_blank\")\r\n            }\r\n        })\r\n       \r\n    window.location.hash=\"customer/paymentstatus\"\r\n    }\r\n    const inVal = (e) => {\r\n       if(e.target.value.length > 7){\r\n           return false\r\n       }\r\n       else{\r\n        if(e.target.value > 100){\r\n            setTdsRate(100)\r\n            let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\r\n                  \r\n                  \r\n            let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\r\n            setTdsAmount(Number((100 * tdAmount) / 100).toFixed(0))\r\n            let b = Number((100 * tdAmount) / 100).toFixed(0)\r\n            \r\n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\r\n                   }\r\n                   else{\r\n                    setTdsRate(e.target.value)\r\n                    let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\r\n                  \r\n                  \r\n                    let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\r\n            setTdsAmount(Number((e.target.value * tdAmount) / 100).toFixed(0))\r\n            let b = Number((e.target.value * tdAmount) / 100).toFixed(0)\r\n            \r\n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\r\n                   }\r\n       }\r\n       \r\n    }\r\nreturn(\r\n    <Modal isOpen={props.showModal} toggle={props.modalToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n    <ModalHeader toggle={props.modalToggle}> Payment</ModalHeader>\r\n    <ModalBody style={{display :\"flex\", flexDirection :\"column\", overflow : \"wrap\"}}>\r\n\r\n{props.modalData === undefined ? \"\" :\r\n<table className=\"table\">\r\n    \r\n    <tbody className=\"tbody\">\r\n\r\n<tr>\r\n    <td>Invoice Amount</td>\r\n    <td></td>\r\n    <td>{parseInt(props.modalData.invoice_amount)}</td>\r\n</tr>\r\n<tr>\r\n    <td>TDS</td>\r\n    <td style={{display :\"flex\"}}><input type=\"number\"  step=\"0.00001\" style={{display : \"flex\", width: \"50px\"}} value={tdsRate} onChange= {(val) => inVal(val)}/> % </td>\r\n    <td>{tdsAmount}</td>\r\n</tr>\r\n<tr>\r\n    <td>Payable Amount</td>\r\n   <td></td>\r\n   <td>{payValue}</td>\r\n</tr>\r\n    </tbody>\r\n    </table> }\r\n\r\n<ModalFooter>\r\n    <button onClick={() => payFun()} className=\"btn btn-success\">Pay Now</button>\r\n</ModalFooter>\r\n    </ModalBody>\r\n  </Modal>\r\n)\r\n}\r\nexport default PayModal;","D:\\Mazars\\src\\pages\\TL\\Proposal\\AcceptedProposal.js",["2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n    \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 2,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n\r\n                            {\r\n                                row.status == \"Accepted; Proposal\" ?\r\n                                    <p className=\"completed\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\AllProposal.js",["2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\n\r\n\r\n\r\nfunction AllProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState(null);\r\n    const [id2, setId2] = useState(null)\r\n    const [tds, setTds] = useState(false)\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const chatHandler = (key) => {\r\n         setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n   const addTdsToggle = (key) => {\r\n     \r\n       setTdsForm(!tdsForm)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n      \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 0,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Client Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n                                            {row.status}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.status}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\r\n                            <>\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                  \r\n                                </div>\r\n                              \r\n                                </>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                              \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        AllProposal=\"AllProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProposal;\r\n\r\n\r\n\r\n\r\n{/* <div>\r\n                                {row.revised_text && (\r\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\r\n                                            onClick={() => chatHandler(row)}\r\n                                        ></i>\r\n                                    </div>\r\n                                )}\r\n                            </div> */}","D:\\Mazars\\src\\pages\\TL\\Proposal\\InprogressProposal.js",["2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n       setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n            .then((res) => {\r\n          \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 1,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n           {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" &&  row.work_by != \"0\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                           \r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        InprogressProposal=\"InprogressProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Login\\VerifyOtpLogin.js",["2334"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n\r\n\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n\r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"tlkey\", JSON.stringify(response.data.user_id));\r\n          localStorage.setItem(\"tlEmail\", JSON.stringify(response.data.name));\r\n          sessionStorage.setItem(\"sessionTlid\", JSON.stringify(response.data.user_id))\r\n          history.push(\"/teamleader/dashboard\");\r\n        } else {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"uid\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\DeclinedProposal.js",["2335","2336","2337","2338","2339","2340","2341","2342","2343","2344"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n         \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index : 3,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Client Declined; Proposal\" ?\r\n                                    <p className=\"declined\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                          \r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n<div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/teamleader/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/teamleader/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                \r\n                            </div>\r\n\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js",["2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [count, setCount] = useState(\"\");\r\n  const [assignment, setAssignment] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [finalId, setFinalId] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n  const [fianlModal, setFianlModal] = useState(false);\r\n  const [draftModal, setDraftModal] = useState(false);\r\n  const [dataItem, setDataItem] = useState({});\r\n  const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [loading, setLoading] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n\r\n  const [item] = useState(current_date);\r\n  let des = false;\r\n  var rowStyle2 = {}\r\n  const ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n  \r\n  \r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAssignment(res.data.result);\r\n          setCount(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData != undefined){\r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    \r\n    setStatus(value);\r\n  };\r\n\r\n\r\n  //columns\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.q_id}`,\r\n                index : 0,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n            {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected date of delivery\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Actual date of delivery\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Assignment Stage\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              title=\"Add Assignment stages\"\r\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n            >\r\n             {row.paid_status == \"2\" ? null : \r\n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n              <i class=\"fa fa-tasks\"></i>\r\n            </Link> }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"90px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n         {\r\n           row.paid_status == \"2\" ? \"\" : \r\n           <div\r\n           style={{\r\n             display: \"flex\",\r\n             justifyContent: \"space-between\",\r\n           }}\r\n         >\r\n           \r\n           \r\n              {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n            {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n{\r\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n\r\n<div title=\"upload Pdf\">\r\n <p\r\n   style={{ cursor: \"pointer\", color: \"red\" }}\r\n   onClick={() => uploadFinalReport(row)}\r\n >\r\n \r\n       <div>\r\n         <i\r\n           class=\"fa fa-upload\"\r\n           style={{ fontSize: \"16px\" }}\r\n         ></i>\r\n         final\r\n       </div>\r\n    \r\n </p>\r\n</div> : null\r\n}\r\n          \r\n\r\n           <div title=\"View Discussion Message\">\r\n             <i\r\n               class=\"fa fa-comments-o\"\r\n               style={{\r\n                 fontSize: 16,\r\n                 cursor: \"pointer\",\r\n                 color: \"orange\"\r\n               }}\r\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n             ></i>\r\n           </div>\r\n           <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/teamleader/chatting/${row.q_id}`,\r\n                 obj: {\r\n                   message_type: \"3\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.q_id,\r\n                   routes: `/teamleader/assignment`\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n\r\n         </div>\r\n         }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n  // draft modal\r\n \r\n  const uploadDraftReport = (id) => {\r\n    if(typeof(id) == \"object\"){\r\n      \r\n      let des = true;\r\n      setLoading(false)\r\n      setDraftModal(!draftModal);\r\n    }\r\n    else{\r\n      setDraftModal(!draftModal);\r\n      setId(id);\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  // final modal\r\n  \r\n    const uploadFinalReport = (id) => {\r\nif(id && id.id === undefined){\r\n    \r\n  let des = true;\r\n  setLoading(false)\r\n  setFianlModal(!fianlModal);\r\n}\r\nelse{\r\n  setFianlModal(!fianlModal);\r\n      setFinalId(id);\r\n}\r\n    \r\n    };\r\n  \r\n    \r\n\r\n  const onSubmit = (data) => {\r\n  \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&assignment_status=${status}&stages_status=${data.p_status\r\n        }&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignment(res.data.result);\r\n            setRecords(res.data.result.length);\r\n\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Pending</option>\r\n                  <option value=\"2\">Complete</option>\r\n                  <option value=\"3\">Payment Decline</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Draft report</div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of report\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Completed</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n              }\r\n\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignment}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n\r\n          <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentList}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;","D:\\Mazars\\src\\components\\PendingForAllocation\\History.js",["2373","2374","2375","2376","2377","2378","2379","2380"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history,toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n\r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Query No</th>\r\n                <th scope=\"row\">Status</th>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <th scope=\"row\">Notes</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.assign_no}</td>\r\n                      <td>{p.status}</td>\r\n                      <td>{p.date_of_allocation}</td>\r\n                      <td>{p.notes}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js",["2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396","2397","2398","2399","2400","2401","2402"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport moment from \"moment\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n\r\n    const [item] = useState(current_date);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [fianlModal, setFianlModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    var rowStyle2 = {}\r\n    let des = false;\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n       \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n       \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n       \r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n       \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n   \r\n    const uploadFinalReport = (id) => {\r\n        if(id && id.id === undefined){\r\n            \r\n          let des = true;\r\n          setLoading(false)\r\n          setFianlModal(!fianlModal);\r\n        }\r\n        else{\r\n          setFianlModal(!fianlModal);\r\n              setFinalId(id);\r\n        }\r\n            \r\n            };\r\n// view report \r\nconst ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                index : 2,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                   {row.paid_status == \"2\" ? null : \r\n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n                    <i class=\"fa fa-tasks\"></i>\r\n                  </Link> }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\", width: \"90px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n               {\r\n                 row.paid_status == \"2\" ? \r\n               \"\" : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    \r\n      {\r\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n      \r\n      <div title=\"upload Pdf\">\r\n       <p\r\n         style={{ cursor: \"pointer\", color: \"red\" }}\r\n         onClick={() => uploadFinalReport(row)}\r\n       >\r\n       \r\n             <div>\r\n               <i\r\n                 class=\"fa fa-upload\"\r\n                 style={{ fontSize: \"16px\" }}\r\n               ></i>\r\n               final\r\n             </div>\r\n          \r\n       </p>\r\n      </div> : null\r\n      }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/teamleader/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/teamleader/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n    ];\r\n\r\n\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n       \r\n    \r\n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n        else if(row.paid_status != \"2\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n    \r\n    const onSubmit = (data) => {\r\n      \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=${status}&stages_status=${data.p_status\r\n                }&pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowStyle={ rowStyle2 }\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n <ViewAllReportModal\r\n\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                     <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js",["2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420","2421","2422","2423"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n   \r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n   \r\n    const [item] = useState(current_date);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [draftModal, setDraftModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    var rowStyle2 = {}\r\n    let des = false;\r\n    const uploadDraftReport = (id) => {\r\n    \r\n        if(typeof(id) == \"object\"){\r\n      \r\n            let des = true;\r\n            setLoading(false)\r\n            setDraftModal(!draftModal);\r\n          }\r\n          else{\r\n            setDraftModal(!draftModal);\r\n            setId(id);\r\n          }\r\n    };\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n       \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n  \r\n// view report \r\nconst ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n// row Style \r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                index : 1,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                   {row.paid_status == \"2\" ? null : \r\n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n                    <i class=\"fa fa-tasks\"></i>\r\n                  </Link> }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\", width: \"90px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n               {\r\n                 row.paid_status == \"2\" ? \r\n                \"\" : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                  {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/teamleader/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/teamleader/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n    ];\r\n\r\n\r\n    const onSubmit = (data) => {\r\n      \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=\"Draft_Report\"&stages_status=1\r\n               &pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowStyle={ rowStyle2 }\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n  <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TL\\SendProposal\\ProposalComponent.js",["2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437","2438","2439","2440","2441","2442","2443","2444","2445","2446","2447","2448"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const [paymentError, setpaymentError] = useState();\r\n\r\n  const [date, setDate] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [dateError, setDateError] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n\r\n   if(diserror.length > 0 ){\r\n     return false\r\n   }\r\n   else if(dateError === true){\r\n    Alerts.ErrorNormal(\"Date must be unique\")\r\n   }\r\n   else{\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n    \r\n    // var arrAmount = []\r\n    // var arrDate = []\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", assignId);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n    if (payment.length < 1) {\r\n     \r\n      setpaymentError(\"Please select at lease one\")\r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        \r\n        } \r\n        else if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n            \r\n          } else if (amount && date) {\r\n            \r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n                // arrAmount.push(amount[i])\r\n                // arrDate.push(date[i])\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n               \r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                \r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n              \r\n              } else {\r\n               \r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tl/uploadProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n               \r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      Alerts.SuccessNormal(\"Proposal created successfully\")\r\n                      history.push(\"/teamleader/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                   \r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n     \r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/uploadProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n          \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal sent successfully. \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/teamleader/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n          \r\n          });\r\n      }\r\n\r\n\r\n\r\n   }\r\n  };\r\n\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n   \r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n  \r\n   \r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n   \r\n    if(new Set(array2).size !== array2.length){\r\n      setDateError(true)\r\n     Alerts.ErrorNormal(\"Date must be unique\")\r\n    }\r\n    else{\r\n      setDateError(false)\r\n    }\r\n   \r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter number only\");\r\n    }\r\n    else if(e.target.value == \"0\"){\r\n      setdiserror(\"Amount should be greater than zero\")\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n    setTotalAmount(e.target.value);\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n   \r\n    setInstallment(key)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div>\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    className=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed || diserror,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Proposal Description\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Client Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    className=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    className={paymentError ? \"customError\" : \"\"}\r\n                    onChange={(e) => {\r\n                      setPayment(e)\r\n                      setpaymentError(\"\")\r\n                    }}\r\n                    options={payment_terms}\r\n                  />\r\n\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        onChange={(e => installmentHandler(e))}\r\n                        options={no_installments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      totalAmount={totalAmount}\r\n                      min={item}\r\n                      item={item}\r\n                      dateError = {dateError}\r\n                    />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\n\r\nconst payment_terms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst no_installments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Generated.js",["2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    const [showCopyUrl, setShowCopyUrl] = useState(\"click\")\r\n let copyTitle = \"\"\r\n let copied = true\r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"80px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"adinvoice\",\r\n                                \r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                justifyContent : \"center\",\r\n                border: \"0px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return {fontSize: \"11px\" ,  width : \"150px\"};\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width : \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"invoice_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.invoice_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                var x = row.tds_amount;\r\n                \r\n                 \r\n                 return(\r\n                     <>\r\n                     {row.is_paid == \"0\" ?\r\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\r\n                     </>\r\n                 \r\n                 )\r\n               }\r\n        }, \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n      \r\n          \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                copyTitle = row.paymenturl\r\n                return (\r\n                    <>\r\n                       {showCopyUrl === \"click\" ? \r\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                            \r\n                          \r\n                              {row.is_paid == \"0\" \r\n                ?   \r\n               \r\n                  \r\n                    <span title={copyTitle}>\r\n                    <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}}  style={noPointer} />\r\n                                   </span> \r\n                  \r\n                \r\n                   \r\n              \r\n                    : \"\" }\r\n                        </div> : \"\"}\r\n                       \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    \r\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\r\n    const copyFun = (e)  =>{\r\n   \r\n        navigator.clipboard.writeText(e)\r\n    setShowCopyUrl(\"clicked\")\r\n      }\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n      \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"admingenerated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <Records records={records} />\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                   \r\n                  \r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\Admin\\Invoice\\CreateInvoice.js",["2470","2471","2472","2473"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nconst CreateInvoice = () => {\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n    const [proposal, setProposal] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    const [records, setRecords] = useState([]);\r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"200px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width: \"200px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"adinvoice\",\r\n                                \r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                border: \"0px\",\r\n                justifyContent : \"center\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width: \"200px\"};\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"200px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"200px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        }, \r\n        \r\n       \r\n       \r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     invoice = \"admincreate\" \r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <Records records={records} />\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default CreateInvoice;","D:\\Mazars\\src\\components\\QueryDetails\\QueryDetails.js",["2474","2475","2476","2477","2478","2479","2480"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport BasicQuery from \"./BasicQuery\";\r\nimport ProposalDetails from \"./ProposalDetails\";\r\nimport AssignmentDetails from \"./AssignmentDetails\";\r\nimport AdditionalQuery from \"./AdditionalQuery\";\r\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\r\nimport DraftReports from \"./DraftReports\";\r\nimport CommonServices from \"../../common/common\";\r\nimport QueryRecording from \"./QueryRecording\";\r\nimport {\r\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Row, Col\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport Feedback from './Feedback'\r\n\r\n\r\nfunction QueryDetails({\r\n  p,\r\n  diaplaySpecific,\r\n  diaplayProposal,\r\n  diaplayHistory,\r\n  diaplayAssignment,\r\n  displayQuery,\r\n  assingNo,\r\n  getQuery,\r\n  customerQuery,\r\n  queryDocs,\r\n  purpose,\r\n  paymentDetails,\r\n  year,\r\n  feedback,\r\n  reports, \r\n  submitData,\r\n  accept,\r\n  tlName2,\r\n  tp22,\r\n  tpStatus,\r\n  declined2,\r\n  declinedStatus, \r\n  finalDate, \r\n  qstatus\r\n}) {\r\n \r\n\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '1' })}\r\n              onClick={() => { toggle('1'); }}\r\n            >\r\n              Basic Query Information\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '2' })}\r\n              onClick={() => { toggle('2'); }}\r\n            >\r\n              Proposal\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '3' })}\r\n              onClick={() => { toggle('3'); }}\r\n            >\r\n              Assignment\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '4' })}\r\n              onClick={() => { toggle('4'); }}\r\n            >\r\n              Feedback\r\n            </NavLink>\r\n          </NavItem>\r\n          {customerQuery === \"customerQuery\" ? null :\r\n          <NavItem>\r\n            <NavLink\r\n            className = {classnames({ active : activeTab === '5'})}\r\n            onClick = {() => { toggle('5');}} >\r\n              Recording\r\n            </NavLink>\r\n          </NavItem> }\r\n         \r\n\r\n        </Nav>\r\n\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <BasicQuery\r\n                    p={p}\r\n                    diaplaySpecific={diaplaySpecific}\r\n                    purpose={purpose}\r\n                    queryDocs={queryDocs}\r\n                    year={year}\r\n                    declined2={declined2}\r\n                    declinedStatus={declinedStatus}\r\n                    qstatus={qstatus}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <ProposalDetails\r\n                    diaplayProposal={diaplayProposal}\r\n                    diaplayHistory={diaplayHistory}\r\n                    paymentDetails={paymentDetails}\r\n                    p={p}\r\n                    accept={accept}\r\n                    tlName2={tlName2}\r\n                    tp22 = {tp22}\r\n                    tpStatus={tpStatus}\r\n                    \r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"3\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <AssignmentDetails\r\n                    diaplayAssignment={diaplayAssignment}\r\n                    p={p}\r\n                    diaplayProposal={diaplayProposal}\r\n                    reports={reports}\r\n                    assingNo={assingNo}\r\n                    submitData = {submitData}\r\n                    customerQuery = {customerQuery}\r\n                    finalDate={finalDate}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n\r\n          <TabPane tabId=\"4\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <Feedback\r\n                    feedback={feedback}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n       <TabPane tabId=\"5\">\r\n         <Row>\r\n           <Col sm=\"12\">\r\n             <Card body>\r\n               <QueryRecording\r\n  assingNo={p.assign_no}/>\r\n             </Card>\r\n           </Col>\r\n           </Row>\r\n       </TabPane>\r\n          \r\n\r\n        </TabContent>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QueryDetails;\r\n\r\n","D:\\Mazars\\src\\components\\Loader\\Loader.js",[],"D:\\Mazars\\src\\pages\\TL\\Proposal\\Tds.js",["2481","2482","2483","2484","2485","2486","2487","2488","2489","2490"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router\";\r\nimport { parseInt } from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./porposalStyle.css\";\r\n\r\nfunction Tds (props)  {\r\n  const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\")\r\n    const f2 = useRef(null);\r\n    const [sac33, setSac] = useState([])\r\n    const [services2, setServices2] = useState();\r\n    const [services, setServices] = useState();\r\n    const [cgetTotal, setCgstTotal] = useState()\r\n    const [sgetTotal, setSgstTotal] = useState()\r\n    const [igetTotal, setIgstTotal] = useState()\r\n    const [gst, setGst] = useState()\r\n    const [tds2, setTds] = useState()\r\n    const [grandTotal, setgrandTotal] = useState();\r\n   const [total, setTotal] = useState()\r\n   const [pocketExp, setPocketExp] = useState()\r\n   const [cgetRate, setCgetRate] = useState()\r\n   const [igetRate, setIgetRate] = useState();\r\n   const [sgetRate, setSgetRate] = useState();\r\n   const [basicAmount, setBasicAmount] = useState()\r\n   const [billNo, setBillNo] = useState();\r\n   const [gstNum , setGstNum] = useState();\r\n   const [tdsR, setTdsR] = useState();\r\n   const [disabled, setDisabled] = useState(false)\r\n  const [description, setDiscription] = useState()\r\n\r\nvar tdsRate = 10;\r\nconst percent = {\r\n  display : \"flex\", \r\n  justifyContent : \"space-between\",\r\n  flexDirection : \"row\",\r\n  alignItems : \"center\"\r\n}\r\n  const getServices = () => {\r\n    axios.get(`${baseUrl}/tl/getServices`)\r\n    .then((res) => {\r\n\r\n      if(res.data.code === 1){\r\n        setServices(res.data.result);\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getServices();\r\n  }, [])\r\n  useEffect(() => {\r\n    if(props.generated == \"edited\"){\r\n    getDataild();\r\n    }\r\n    else {\r\n   \r\n      setTdsR(10)\r\n      setCgetRate(18);\r\n      setIgetRate(0);\r\n      setSgetRate(0)\r\n      setGstNum(props.gstNo);\r\n    setBillNo(props.billNo)\r\n    setBasicAmount(props.paidAmount)\r\n    setPocketExp(0)\r\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\r\n    setIgstTotal(parseInt(0));\r\n    setSgstTotal(parseInt(0))\r\n    setGst(parseInt(props.paidAmount * 18 / 100))\r\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\r\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\r\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\r\n    }\r\n  }, [props.paidAmount])\r\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\r\n\r\nconst getDataild = () => {\r\n  axios\r\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\r\n.then((res) => {\r\n\r\nif(res.data.payment_detail){\r\n  res.data.payment_detail.map((i) => {\r\n  setSac(i.serviceCode)\r\n     setGstNum(i.gstin_no)\r\n setBillNo(i.billno)\r\n setDiscription(i.description)\r\nsetTdsR(parseFloat(i.tds_rate))\r\n setBasicAmount(parseInt(i.paid_amount))\r\n setPocketExp(parseFloat(i.opt_expenses));\r\n setCgstTotal(parseFloat(i.cgst_amount));\r\n setIgstTotal(parseFloat(i.igst_amount));\r\n setSgstTotal(parseFloat(i.sgst_amount));\r\n setCgetRate(parseFloat(i.cgst_rate));\r\n setIgetRate(parseFloat(i.igst_rate));\r\n setSgetRate(parseFloat(i.sgst_rate));\r\nsetTds(parseFloat(i.tds_amount))\r\n setgrandTotal(parseFloat(i.payable_amount))\r\n setTotal(parseFloat(i.invoice_amount))\r\n setGst(parseFloat(i.gst));\r\n setDisabled(true);\r\n  })\r\n}\r\n\r\n})\r\n}\r\n  // Cgst Tax function\r\nconst cgstFun = (e) => {\r\n \r\n    setCgetRate(e.target.value);\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = Math.round(a * e.target.value / 100)\r\n   setCgstTotal(parseInt(cget));\r\n   setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\r\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\r\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\r\n  \r\n\r\n}\r\n// Sgst tax function\r\nconst sgstFun = (e) => {\r\n \r\n    setSgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = Math.round(a * e.target.value / 100)\r\n        setSgstTotal(parseInt(cget))\r\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\r\n        setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\r\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\r\n  \r\n }\r\n// Igst tax function\r\n const igstFun = (e) => {\r\n \r\n    setIgetRate(e.target.value)\r\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = Math.round(a * e.target.value / 100) \r\n           setIgstTotal(cget) \r\n           setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\r\n           setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\r\n           setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\r\n  \r\n        \r\n }\r\n // Tds function\r\n const tdsFun = (e) => {\r\n if(e.target.value > 100){\r\n   setTdsR(100);\r\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = Math.round((a * 100 / 100))\r\n      setTds(cget)\r\n    setgrandTotal(parseInt(total) - parseInt(cget))\r\n  \r\n }  \r\n else{\r\n  setTdsR(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = Math.round((a * e.target.value / 100))\r\n      setTds(cget)\r\n    setgrandTotal(parseInt(total) - parseInt(cget))  \r\n }\r\n } \r\n\r\n const pocketExpFun = (e) => {\r\n  \r\n  setPocketExp(e.target.value)\r\n\r\n  let a;\r\n  if(e.target.value){\r\n    if(basicAmount.length == \"0\"){\r\n       a = Math.round(e.target.value) + parseInt(0);\r\n    }\r\n    else{\r\n      a = Math.round(e.target.value) + parseInt(basicAmount);\r\n    }\r\n   \r\n  \r\n \r\n  let cget1 = parseInt(Math.round(a * cgetRate / 100))\r\n  let sget1 = parseInt(Math.round(a * sgetRate / 100))\r\n  let iget1 = parseInt(Math.round(a * igetRate / 100))\r\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\r\n    setCgstTotal(Math.round(a * cgetRate / 100));\r\n   setSgstTotal(Math.round(a * sgetRate / 100));\r\n   setIgstTotal(Math.round(a * igetRate / 100));\r\n   \r\n setGst((oldData) => {\r\n  return(parseInt(parseInt(cget1) + parseInt(sget1) + parseInt(iget1)))\r\n })\r\n  setTotal((oldData) => {\r\n    return(parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(tdsamount))\r\n  })\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\r\n  })\r\n \r\n}\r\n}\r\n\r\nconst basicFun = (e) => {\r\n \r\n  let a = Math.round(parseInt(e.target.value) + parseInt(pocketExp));\r\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\r\n  setBasicAmount(e.target.value);\r\n  if(e.target.value > 0){\r\n    setCgstTotal(Math.round(a * cgetRate / 100));\r\n   setSgstTotal(Math.round(a * sgetRate / 100));\r\n   setIgstTotal(Math.round(a * igetRate / 100));\r\n   setGst((oldData) => {\r\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\r\n   })\r\n  setTotal((oldData) => {\r\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(tdsamount))\r\n  })\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\r\n  })\r\n \r\n}\r\n}\r\n    const onSubmit= (value) => {\r\n      \r\n        let formData = new FormData();\r\n       formData.append(\"tl_id\", JSON.parse(userid));\r\n         formData.append(\"id\", props.id)\r\n         formData.append(\"qno\", props.report)\r\n         formData.append(\"description\", description);\r\n         formData.append(\"serviceCode\", sac33);\r\n        formData.append(\"basic_amount\", basicAmount);\r\n        formData.append(\"cgst_rate\", cgetRate);\r\n        formData.append(\"opt_expenses\", pocketExp);\r\n        formData.append(\"cgst_total\", cgetTotal)\r\n        formData.append(\"sgst_rate\", sgetRate);\r\n       \r\n        formData.append(\"sgst_total\", sgetTotal)\r\n        formData.append(\"igst_rate\", igetRate);\r\n      \r\n        formData.append(\"igst_total\", igetTotal)\r\n        formData.append(\"total\", total);\r\n        formData.append(\"tds_rate\", tdsR);\r\n        formData.append(\"gst\", gst);\r\n        formData.append(\"tds_total\", tds2)\r\n        formData.append(\"netpaid_amount\", grandTotal)\r\n        formData.append(\"gstin_no\", gstNum);\r\n        formData.append(\"bill_no\", billNo);\r\n        formData.append(\"invoice_by\", JSON.parse(userid))\r\n        axios({\r\n            method : \"POST\",\r\n            data : formData,\r\n            url : `${baseUrl}/tl/generateInvoive`\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n              Swal.fire({\r\n                title : \"success\", \r\n                html : \"Invoice generated successfully\",\r\n                icon : \"success\"\r\n              })\r\n                history.push(\"/teamleader/tlinvoice\")\r\n            }\r\n          \r\n        })\r\n      \r\n    }\r\n  const serviceFun = (e) => {\r\n    setDiscription(e)\r\n   services.map((k) => {\r\n    \r\nif(k.service == e) {\r\nsetSac(k.sac)\r\nsetServices2(k.service)\r\n}\r\n   })\r\n     \r\n  }\r\n\r\n  \r\n    return(\r\n      \r\n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \r\n        \r\n        </ModalHeader>\r\n        <ModalBody>\r\n    \r\n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\r\n    <div className=\"container gutter-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>GSTIN</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         maxLength=\"24\"\r\n         ref={register}\r\n         name=\"gst_in\"\r\n         value={gstNum}\r\n         onChange= {(e) => setGstNum(e.target.value)}\r\n         className=\"form-control\"\r\n          />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n          <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>Invoice No</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"bill_no\"\r\n         value={billNo}\r\n         disabled \r\n         className=\"form-control\"\r\n       //  onChange= {(e) => (setBillNo(e.target.value))}\r\n          />\r\n            </div>\r\n          </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"row my-2\">\r\n              {services === undefined ? \"\" : \r\n              <div className=\"col-md-6\">\r\n              <label>Description <span className=\"declined\">*</span></label>\r\n          <select \r\n      \r\n       value={description}\r\n           ref={register({ required: true })}\r\n           name=\"description\"\r\n        style={{height : \"33.5px\"}}\r\n          onChange = {(e) => serviceFun(e.target.value)}\r\n          className={classNames(\"form-control\", {\r\n            \"is-invalid\": errors.p_name,\r\n            \r\n          })}>\r\n              <option value=\"\">please select value</option>\r\n          {services.map((i) => (\r\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\r\n          ))}\r\n            </select>\r\n              </div>}\r\n                  <div className=\"col-md-6\">\r\n                  <label>Basic Amount</label>\r\n                    <input \r\n                    type=\"number\"\r\n\r\n                    name=\"basic_amount\"\r\n                    ref={register({required : true})}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Amount\" \r\n                    disabled\r\n                    onChange= {(e) => basicFun(e)}\r\n                  value={basicAmount}/>\r\n                    </div> \r\n            </div>\r\n           <div className=\"row my-2\">\r\n             <div className=\"col-md-6 headCenter\">\r\n               <h5>Out of Pocket Expenses</h5>\r\n               </div>\r\n               <div className=\"col-md-6\">\r\n               <input \r\n                    type=\"number\"\r\n                    name=\"pocket_amount\"\r\n                    step=\"0.00001\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    onChange={(e) => pocketExpFun(e)}\r\n                    value={pocketExp}\r\n                    placeholder=\"Pocket Amount\"  />\r\n               </div>\r\n             </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4\">\r\n              <h6>CGST</h6>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\" style={percent}>\r\n              <input \r\n                    type=\"number\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    value={cgetRate}\r\n                    name=\"cgst_rate\"\r\n                    onChange= {(e) => cgstFun(e)} /> %\r\n                \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"0\" \r\n                    disabled \r\n                    name=\"cgst_total\"\r\n                    value = {cgetTotal}/>\r\n                  </div>\r\n                 </div>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                  <h6>SGST/UTGST </h6>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-6\" style={percent}>\r\n                  <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    step=\"0.00001\"\r\n                    name=\"sgst_rate\"\r\n                    placeholder=\"Rate\" \r\n                   value = {sgetRate}\r\n                    onChange= {(e) => sgstFun(e)}/> %\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_total\" \r\n                    disabled\r\n                    value={sgetTotal}/>\r\n                          </div>\r\n                  </div>\r\n            \r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n              <h6>IGST</h6>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-6\" style={percent}>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    ref={register}\r\n                    name=\"igst_rate\"\r\n                   value={igetRate}\r\n                    onChange= {(e) => igstFun(e)} /> %\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-6\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    name=\"igst_total\"\r\n                    disabled\r\n                    ref={register}\r\n                    value={igetTotal} />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n                \r\n          <hr/>\r\n          \r\n            <div className=\"row my-2\">\r\n                <div className=\"col-md-4 headCenter\">\r\n                  <h5>Total GST</h5>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"total\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(gst)} />\r\n                            </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row my-2\">\r\n                <div className=\"col-md-8 headCenter\">\r\n                  <h5>Total Invoice Amount</h5>\r\n                    </div>\r\n                   \r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"totalAmount\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(total)} />\r\n                            </div>\r\n                </div>\r\n           \r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4 my-1 headCenter\">\r\n              <h5>TDS </h5>\r\n                  </div>\r\n                <div className=\"col-md-4 my-1\">\r\n               <div className = \"row\">\r\n                \r\n                   <div className=\"col-md-6\"  style={percent}>\r\n                   <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    name=\"tds_rate\"\r\n                    value={tdsR}\r\n                    ref={register}\r\n                    onChange= {(e) => tdsFun(e)} /> %\r\n                     </div>\r\n                     <div className=\"col-md-6\">\r\n                   </div>\r\n                 </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                    value={Math.round(tds2)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-6 my-1 headCenter\">\r\n              <h5>Net Payable Amount</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 my-1\"></div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                  value={Math.round(grandTotal)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n        <ModalFooter>\r\n       \r\n             <>\r\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\r\n          \r\n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \r\n             </>\r\n        </ModalFooter>\r\n          </div>\r\n        </form>\r\n       \r\n           \r\n      \r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n}\r\nexport default Tds;","D:\\Mazars\\src\\components\\Admin-Header\\NavWrapper.js",["2491","2492","2493","2494","2495","2496","2497","2498","2499","2500"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CustomerNotification from \"./CustomerNotification\";\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport './index.css'\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction NavWrapper(props) {\r\n  const { color, logout, name, email, feedbackNumber} = props;\r\n\r\n  const history = useHistory();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const adminkey = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\")\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar-wrapper\">\r\n        <div className=\"navbar-container\" style={{ background: color }}>\r\n          <div className=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\r\n            <ul className=\"nav navbar-nav mr-auto float-left\">\r\n              <li className=\"nav-item d-block d-md-none\">\r\n                <a\r\n                  className=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\r\n                  href=\"#\"\r\n                >\r\n                  <i className=\"fa fa-bars\"></i>\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item dropdown navbar-search\">\r\n                <ul className=\"dropdown-menu\">\r\n                  <li className=\"arrow_box\">\r\n                    <form>\r\n                      <div className=\"input-group search-box\">\r\n                        <div className=\"position-relative has-icon-right full-width\">\r\n                          <input\r\n                            className=\"form-control\"\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search here...\"\r\n                          />\r\n                          <div className=\"form-control-position navbar-search-close\">\r\n                            <i className=\"fa fa-times\"> </i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              <li>\r\n                <h4 className=\"brand-text text-white\">{name == \"customer\" ? CommonServices.capitalizeFirstLetter(\"client\") : CommonServices.capitalizeFirstLetter(name)}: {JSON.parse(email)} </h4>\r\n              </li>\r\n             \r\n            </ul>\r\n\r\n            <ul className=\"nav navbar-nav float-right\">\r\n\r\n              {name == \"customer\" && (\r\n                <CustomerNotification tokenKey={userId} name={name} />\r\n              )}\r\n\r\n              {name == \"admin\" && (\r\n                <CustomerNotification tokenKey={adminkey} name={name} />\r\n              )}\r\n\r\n              {name == \"teamleader\" && (\r\n                <CustomerNotification tokenKey={tlkey} name={name} />\r\n              )}\r\n               {name == \"taxprofessional\" && (\r\n                <CustomerNotification tokenKey={tpkey} name={name} />\r\n              )}\r\n\r\n\r\n              <li className=\"dropdown dropdown-user nav-item\">\r\n                <a\r\n                  className=\"dropdown-toggle nav-link dropdown-user-link\"\r\n                  href=\"#\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <span className=\"avatar avatar-online\">\r\n                    <img\r\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <i style={{ paddingLeft: \"6px\" }}></i>\r\n                  </span>\r\n                </a>\r\n\r\n                <div className=\"dropdown-menu dropdown-menu-right\">\r\n                  <div className=\"arrow_box_right\">\r\n\r\n                    {name == \"customer\" && (\r\n                      <Link to=\"/customer/change-password\">\r\n                        <div className=\"dropdown-item\"\r\n                          style={{ cursor: \"pointer\" }}>\r\n                          <VpnKeyIcon />\r\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\r\n                        </div>\r\n                      </Link>\r\n                    )}\r\n\r\n                    <div\r\n                      className=\"dropdown-item\"\r\n                      onClick={logout}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <LockOpenIcon />\r\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavWrapper;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\ChatHistory.js",["2501","2502"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\r\n  const [notification, setNotification] = useState([]);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getNotification();\r\n  }, [qno]);\r\n\r\n  const getNotification = () => {\r\n   if(qno != null){\r\n    axios\r\n    .get(\r\n      `${baseUrl}/customers/getNotification?id=${JSON.parse(\r\n        userId\r\n      )}&type=2&q_no=${qno}`\r\n    )\r\n    .then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setNotification(res.data.result);\r\n      }\r\n    });\r\n   }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\r\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Message</th>\r\n                <th scope=\"row\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            {notification.length > 0\r\n              ? notification.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.message}</td>\r\n                      <td>{p.setdate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHistory;\r\n","D:\\Mazars\\src\\views\\SignUpForm\\city.js",[],"D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js",["2503","2504","2505","2506","2507"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n \r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\ndes = false;\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_draft;\r\n   \r\n\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"draft_report[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"id\", id);\r\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then(response => {\r\n    \r\n      if (response.data.code === 1 && des === false) {\r\n        des = true\r\n        setLoading(false)\r\n        var message = response.data.message\r\n        if (message.invalid) {\r\n          Swal.fire({\r\n            title: 'Error !',\r\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n          })\r\n        } else if (message.faill && message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n            icon: 'success',\r\n          })\r\n        } else if (message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p>${message.success}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        else if (message.faill) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        getAssignmentList();\r\n        uploadDraftReport();\r\n      } else if (response.data.code === 0) {\r\n        setLoading(false)\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\r\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_draft\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\SendProposal\\Payment.js",["2508","2509"],"import { values } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport default class Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        if (isNaN(e.target.value)) {\r\n            this.setState({ error: \"Please insert only digit\" })\r\n        }\r\n        else {\r\n            this.setState({ error: \"\" })\r\n        }\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n\r\n    }\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 1; i <= this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                        />\r\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            min={this.props.item}\r\n                        />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// import React from \"react\";\r\n\r\n// export default class Payment extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],\r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         if (isNaN(e.target.value)) {\r\n//             this.setState({ error: \"Please insert only digit\" })\r\n//         }\r\n//         else {\r\n//             this.setState({ error: \"\" })\r\n//         }\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n\r\n//     }\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 1; i <= this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                         />\r\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n//                     </div>\r\n\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             min={this.props.item}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n//             );\r\n//         }\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\ViewAllReport.js",["2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"./DiscardReport\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    // setDocData(report)\r\n  }\r\n\r\n\r\n  //check\r\n  const toggleDiscard = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to discard ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, discard it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 2);\r\n    formData.append(\"docid\", id.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          getData()\r\n          Alerts.SuccessNormal(\"Discarded Successfully\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                     \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                 <br>\r\n                 </br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\r\n                    <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\r\n                                    <i\r\n                                      class=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          class=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          class=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\InvoiceFilter.js",["2528","2529","2530","2531","2532","2533","2534","2535","2536","2537","2538"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst InvoiceFilter = (props) => {\r\n\r\n   const { handleSubmit, register, errors, reset } = useForm();\r\n   var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n  \r\n  const onSubmit = (data) => {\r\n  \r\n    let formData = new FormData();\r\n    formData.append(\"qno\", data.query_no);\r\n    formData.append(\"from\", data.p_dateFrom);\r\n    formData.append(\"to\", data.p_dateTo);\r\n    formData.append(\"installment_no\", data.installment_no)\r\n    formData.append(\"status\", data.opt)\r\n    if(props.invoice == \"generated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"create\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=0&ststus=${data.opt}`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n       props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"tpcreate\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=0`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n       props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if(props.invoice == \"tpgenerated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if(props.invoice == \"admingenerated\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=1`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    }\r\n    else if (props.invoice == \"admincreate\"){\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=0`,\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n       if(res.data.code === 1){\r\n        props.setData(res.data.payment_detail);\r\n        props.setRec(res.data.payment_detail.length)\r\n       }\r\n      })\r\n    } \r\n    \r\n  }\r\n  const resetData = () => {\r\n    reset();\r\n    props.getData()\r\n  }\r\n    return(\r\n       <>\r\n      \r\n        <form onSubmit={handleSubmit(onSubmit)}> \r\n           <div className=\"row\">\r\n               <div className=\"col-md-3\">\r\n               <input   \r\n            type = \"text\"\r\n            name=\"query_no\"\r\n            ref={register}\r\n            placeholder=\"Enter Query Number\" \r\n            className=\"form-control\"/>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                  <select\r\n                   ref={register}\r\n                    className=\"form-select form-control\"\r\n                    style={{ height: \"33px\" }}\r\n                    name=\"installment_no\">\r\n                      <option value=\"\">Please select installment</option>\r\n                     <option value=\"1\">1</option>\r\n                     <option value=\"2\">2</option>\r\n                     <option value=\"3\">3</option>\r\n                     <option value=\"4\">4</option>\r\n                     <option value=\"5\">5</option>\r\n                     <option value=\"6\">6</option>\r\n                  </select>\r\n                       </div>\r\n                  <div className=\"col-md-7\">\r\n                  <div className=\"form-inline\">\r\n             \r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">From</label>\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateFrom\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n               \r\n               />\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">To</label>\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateTo\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                defaultValue={item}\r\n               \r\n               />\r\n             </div>\r\n</div>\r\n                    </div>    \r\n                        \r\n                \r\n                      \r\n           </div>\r\n          <div className=\"mt-3\">\r\n        \r\n           <div className=\"form-group mx-sm-1  mb-2\">\r\n         <div className=\"row\">\r\n      {props.invoice ==\"tpcreate\" || props.invoice == \"admincreate\" || props.invoice == \"create\" ? \"\" :\r\n        <div className=\"col-md-2\">\r\n        <select name=\"opt\" className=\"form-select form-control\" ref={register}  style={{ height: \"33px\" }}>\r\n        <option value=\"\">Select </option>\r\n           <option value=\"0\">Unpaid</option>\r\n           <option value=\"1\">Paid</option>\r\n           <option value=\"2\">Declined</option>\r\n           </select>\r\n          </div> }\r\n           <div className=\"col-md-3\">\r\n         \r\n          <button className=\"btn btn-success\" type=\"submit\"  style={{ height: \"33px\" }}>Search</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={() => resetData()}  style={{ height: \"33px\" }}>Reset</button>\r\n            </div>\r\n        \r\n                 <div className=\"col-md-4\">\r\n                 <span style={{display : \"flex\"}}>\r\n                 <label className=\"form-select form-control\"\r\n                  >Total Records : {props.records}</label>\r\n                 </span>\r\n                   </div>\r\n           </div>\r\n                </div>\r\n          </div>\r\n         \r\n        </form>\r\n       </>\r\n    )\r\n\r\n}\r\nexport default InvoiceFilter;","D:\\Mazars\\src\\components\\QueryDetails\\Feedback.js",["2539"],"import React, { useState } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction Feedback({ feedback }) {\r\n  \r\n\r\n    return (\r\n        <div className=\"queryBox\">\r\n            <p\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                }}\r\n            >\r\n                Feedback\r\n            </p>\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: \"80px\" }}>S.No</th>\r\n                        <th style={{ width: \"200px\" }}>Date</th>\r\n                        <th>Feedback</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        feedback.map((p, i) => (\r\n                            <tr>\r\n                                <td>{i + 1}</td>\r\n                                <td style={{ display: \"flex\" }}>\r\n                                    <p>{CommonServices.removeTime(p.created)}</p>\r\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\r\n                                </td>\r\n                                <td>{p.feedback}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feedback;","D:\\Mazars\\src\\components\\QueryDetails\\QueryRecording.js",["2540","2541","2542","2543","2544","2545"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport ReactHlsPlayer from 'react-hls-player'\r\nimport ReactPlayer from 'react-player';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction QueryRecording(assingNo) {\r\n    // const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getRecording();\r\n    }, []);\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"absolute\",\r\n        top : \"10%\",\r\n        left : \"0%\",\r\n        botttom: \"0%\", \r\n        right: \"0%\",\r\n       \r\n        width : \"100%\", \r\n        height: \"auto\"\r\n    }\r\n    const videoIcon = {\r\n        display : \"flex\", \r\n        justifyContent : \"space-around\", \r\n        alignItems : \"center\"\r\n    }\r\nconst canBtn = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"10px\",\r\n    left: \"90%\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\",\r\n    color : \"red\"\r\n}\r\n\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?assign_id=${assingNo.assingNo}`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                }\r\n            });\r\n    };\r\n   \r\n   \r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_id\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                <>\r\n                                <p style={videoIcon}>\r\n                                <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n  \r\n   \r\n    return (\r\n     \r\n           <div className=\"queryBox\">\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n            {isOpen === true ?\r\n          \r\n                 \r\n          <div style={modalBox}>\r\n          <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\r\n         {/* <ReactHlsPlayer\r\n     src={videoid}    autoPlay={false}\r\n     controls={true}\r\n     width=\"100%\"\r\n     height=\"100%\"\r\n     hlsConfig={{\r\n         maxLoadingDelay: 4,\r\n         minAutoBitrate: 0,\r\n         lowLatencyMode: true,\r\n       }}\r\n   /> */}\r\n\r\n   <div style={{margin: \"50px 0 0 0\"}}>\r\n   <ReactPlayer\r\n     url={videoid}\r\n     controls={true}\r\n     playing={true}\r\n     width='100%'\r\n     height='100%'\r\n    />\r\n       </div>\r\n     \r\n    </div>\r\n  : \"\"}\r\n           \r\n           </div>\r\n\r\n    );\r\n}\r\n\r\nexport default QueryRecording;","D:\\Mazars\\src\\components\\QueryDetails\\DraftReports.js",["2546","2547"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction DraftReports({ id }) {\r\n\r\n    \r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAssignmentData();\r\n    }, []);\r\n\r\n    const getAssignmentData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\r\n            )\r\n            .then((res) => {\r\n                if (res) {\r\n                  \r\n                    setAssignmentDisplay(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        color: \"black\",\r\n                        fontSize: \"18px\",\r\n                    }}\r\n                >\r\n                    Draft Reports\r\n                </p>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n                            <th scope=\"col\">Data</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Draft Reports</th>\r\n                            <td>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Name</th>\r\n                                </tr>\r\n                                {assignmentDisplay.map((p, i) => (\r\n                                    <tr>\r\n                                        <td>{CommonServices.removeTime(p.date)}</td>\r\n                                        <td>\r\n                                            <a\r\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {p.name}\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DraftReports;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AddAdditionalQuery.js",["2548","2549"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\r\n\r\n \r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"File uploaded successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          getQuery();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\r\n        <ModalHeader toggle={addHandler}>\r\n          UPLOAD DOCUMENTS\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    onClick={addHandler}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddAdditionalQuery;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AdditionalQuery.js",["2550","2551"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction AdditionalQuery({ displayQuery }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          ADDITIONAL QUERIES\r\n        </p>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n             \r\n              <th scope=\"col\">Date Submission</th>\r\n              <th scope=\"col\">Documents</th>\r\n            </tr>\r\n          </thead>\r\n          {displayQuery.map((p, i) => (\r\n            <tbody>\r\n              <tr key={i}>\r\n                {/* <td>{p.additional_queries}</td> */}\r\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\r\n                <td>\r\n                  {p.upload_doc == \"\" ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <p style={{ display: \"flex\" }}>\r\n                      <a\r\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <i className=\"fa fa-photo\"></i>\r\n                      </a>\r\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\r\n                    </p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdditionalQuery;\r\n","D:\\Mazars\\src\\components\\Records\\Records.js",[],"D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\RejectModal.js",["2552","2553","2554"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  nestedModal,\r\n  toggleNested,\r\n  dataItem,\r\n  docData,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", docData.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          toggleNested();\r\n          getData();\r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\r\n        <ModalHeader>Discussion</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n\r\n","D:\\Mazars\\src\\components\\Admin-Header\\CustomerNotification.js",["2555","2556"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction CustomerNotification({ tokenKey, name }) {\r\n\r\n\r\n\r\n   \r\n    const [countNotification, setCountNotification] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n        getNotification();\r\n       \r\n    }, [tokenKey]);\r\n   \r\n    const getNotification = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                   \r\n                   if(res.data.result[0] != undefined){\r\n                    setCountNotification(res.data.result[0].total);\r\n                   }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\r\n                <li className=\"dropdown dropdown-notification nav-item\">\r\n                    {countNotification ? (\r\n                     \r\n                           \r\n                                <Link to={`/${name}/message`} style={{color : \"white\"}} className=\"notification\">\r\n                                Inbox\r\n                                    <span className=\"badge\">{countNotification}</span>\r\n                                    \r\n                                </Link>\r\n                           \r\n                         \r\n                           \r\n                                \r\n                        \r\n                    ) : null}\r\n                </li>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default CustomerNotification;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\AssignmentDetails.js",["2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { ReportUrl } from \"../../config/config\";\r\n\r\nfunction AssignmentDetails({ p, finalDate, submitData, customerQuery , diaplayAssignment, diaplayProposal, reports, assingNo }) {\r\n\r\n  const {\r\n    assignment_number,\r\n    assignment_date,\r\n    date_of_delivery,\r\n  } = diaplayAssignment;\r\n\r\n  const { cust_accept_date } = diaplayProposal;\r\n\r\n  const timeTaken = (a, b) => {\r\n    var date2 = CommonServices.removeTime(a);\r\n    var date1 = CommonServices.removeTime(b);\r\n\r\n  \r\n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\r\n   \r\n   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"queryBox\">\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Assignment Details\r\n        </p>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"300px\", overflow: \"wrap\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Number</th>\r\n              <td>{assignment_number}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Date</th>\r\n              <td>{CommonServices.removeTime(assignment_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposed Date of Completion</th>\r\n              <td>\r\n                {p.query_status >= 9 ? (\r\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n            {/* {p.query_status >= 9 ? ( */}\r\n            <tr>\r\n              <th scope=\"row\">Assignment Status</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Assignment Stage</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>Client Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Draft Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Final Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Delivery of Final Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Awaiting Completion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td>\r\n                </tr>\r\n              </td>\r\n            </tr>\r\n            {/* ) : null} */}\r\n            <tr>\r\n              <th scope=\"row\">Time taken to complete the assignment</th>\r\n              <td>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\"\r\n               \r\n                  ? finalDate + \" Days\"\r\n                  : null}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Reports</th>\r\n              <td>\r\n                {\r\n                  reports.map((p, i) => (\r\n                    \r\n                    <div>\r\n                      {customerQuery == \"customerQuery\" && submitData[0].paid_status == \"2\" ? null :\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <a\r\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className=\"fa fa-photo\"></i> {p.document}\r\n                          </a>\r\n                        </td>\r\n                        <td style={{ marginLeft: \"15px\", color: \"green\" }}>\r\n                          {p.stages_type == 2 && p.revise_report == null && \"Draft Report\" || p.stages_type == 3 && p.revise_report == null && \"Final Report\" || p.revise_report != null && \"Reviewed Report\"}\r\n                        </td>\r\n                        <td>\r\n                          {p.status == \"3\"\r\n                            ?\r\n                            <p className=\"declined\">Discarded</p>\r\n                            : null}\r\n                        </td>\r\n                      </tr> }\r\n                    </div>\r\n                  ))\r\n                }\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentDetails;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\BasicQuery.js",["2577","2578","2579","2580","2581","2582","2583","2584","2585"],"import React, { useState, useEffect } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { ImageUrl } from \"../../config/config\";\r\nimport { Markup } from 'interweave';\r\nimport './queryStyle.css';\r\n\r\nfunction BasicQuery({qstatus, p, diaplaySpecific, queryDocs, year, purpose, declined2,\r\n  declinedStatus }) {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"queryBox\">\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Basic Query Information\r\n        </p>\r\n        <table className=\"table table-bordered p-2\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"300px\", overflow: \"wrap\" }}>Titles</th> \r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Query No</th>\r\n              <td>{p.assign_no}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Query Date</th>\r\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Client ID</th>\r\n              <td>{p.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Category</th>\r\n              <td>{p.cat_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Sub- Category</th>\r\n              <td>{p.sub_cat_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name of the Case</th>\r\n              <td>{p.case_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Assessment Year(s)</th>\r\n              <td>\r\n                {year.map((p, i) => (\r\n                  <p key={i}>{p.value}</p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Brief fact of the case</th>\r\n           <td className=\"tableStyle\"> <Markup content={p.fact_case} /></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Uploaded Documents</th>\r\n              <td>\r\n                {queryDocs.map((p, i) => (\r\n                  <p style={{ display: \"flex\" }}>\r\n                    <a\r\n                      href={`${ImageUrl}/${p.assign_no}/${p.name}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                    <span>  {i + 1 } </span><i className=\"fa fa-photo\"></i>\r\n                    </a>\r\n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\r\n                  </p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Specific questions</th>\r\n              <td>\r\n                {diaplaySpecific.map((p, i) => (\r\n                  <div>{i + 1}. {p.text}</div>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Purpose of the query</th>\r\n              <td colspan=\"1\">\r\n                {purpose.map((p, i) => (\r\n                  <p key={i}>{p.value}</p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Format in which Opinion is required</th>\r\n              <td colspan=\"1\">\r\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                <p>\r\n                  {p.softcopy_digitally_assigned === \"1\" &&\r\n                    \"SoftCopy- Digitally Signed\"}\r\n                </p>\r\n\r\n                <p>\r\n                  {p.printout_physically_assigned === \"1\" &&\r\n                    \"Printout- Physically Signed\"}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\r\n              <td colspan=\"1\">{p.Timelines}</td>\r\n            </tr>\r\n            {qstatus == \"-1\" || p.is_delete == \"1\" ? \r\n            <tr>\r\n              <th scope=\"row\">Date of Decline</th>\r\n              <td>{qstatus == \"-1\" || p.is_delete == \"1\" ? declined2 : \"\"}</td>\r\n              </tr> : \"\"}\r\n            {\r\n              p.query_status == \"-1\" ?\r\n                <tr>\r\n                  <th scope=\"row\">Reasons for Admin Decline Query</th>\r\n                  <td colspan=\"1\">\r\n                    {\r\n                      p.decline_notes\r\n                    }\r\n                  </td>\r\n                </tr>\r\n                : null\r\n            }\r\n            {\r\n              p.is_delete == \"1\" ?\r\n                <tr>\r\n                  <th scope=\"row\">Reasons for client Decline Query</th>\r\n                  <td colspan=\"1\">\r\n                    {\r\n                      p.decline_notes\r\n                    }\r\n                  </td>\r\n                </tr>\r\n                : null\r\n            }\r\n             \r\n            \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BasicQuery;\r\n","D:\\Mazars\\src\\components\\QueryDetails\\ProposalDetails.js",["2586","2587","2588","2589","2590","2591","2592","2593","2594","2595","2596","2597","2598","2599","2600"],"import React, { useState } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { baseUrl, baseUrl3 } from \"../../config/config\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\n\r\nfunction ProposalDetails({\r\n  diaplayProposal,\r\n  diaplayHistory,\r\n  paymentDetails,\r\n  p,\r\n  accept,\r\n  tlName2,\r\n  tpStatus,\r\n  tp22\r\n}) {\r\n\r\n  const {\r\n    amount,\r\n    accepted_amount,\r\n    payment_received,\r\n    cust_accept_date,\r\n    proposal_date,\r\n    description,\r\n\r\n    amount_type,\r\n    amount_fixed,\r\n    amount_hourly,\r\n\r\n    payment_terms,\r\n    no_of_installment,\r\n    installment_amount,\r\n    due_date,\r\n    proposal_reactive_dates,\r\n    proposal_reactive_notes\r\n    \r\n  } = diaplayProposal;\r\n\r\n  const { tlname, date_of_allocation } = diaplayHistory;\r\n\r\n  var nfObject = new Intl.NumberFormat('hi-IN')\r\n\r\n\r\n  //installment\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n   \r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n  const installAmount2 = (data) => {\r\n    var item = data.split(',')\r\n   \r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{nfObject.format(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n  // curent date\r\n  var date = new Date();\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n\r\n  const [currentDate] = useState(convert(date));\r\n \r\n\r\n  const dataCheck = (dateArr) => {\r\n\r\n    for (let i = 0; i < dateArr.length; i++) {\r\n      if (dateArr[i] === currentDate) {\r\n\r\n        return i\r\n      }\r\n    }\r\n  }\r\n\r\n  const dueDate = (a, b) => {\r\n    var item1 = a.split(',')\r\n    var item2 = b.split(',')\r\n\r\n    var due = dataCheck(item2);\r\n\r\n   \r\n\r\n    //total installment\r\n\r\n    var total_Installment = 0;\r\n    for (var i = 0; i <= due; i++) {\r\n      // total_Installment = total_Installment + item1[i];\r\n      total_Installment += +item1[i];\r\n    }\r\n\r\n\r\n    //total payment history\r\n    var total_Payment_History = paymentDetails.reduce(function (prev, current) {\r\n      return prev + +current.paid_amount\r\n    }, 0);\r\n\r\n\r\n    \r\n\r\n    var amount = total_Installment - total_Payment_History\r\n\r\n\r\n    if (amount > 0) {\r\n      return amount\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"queryBox\">\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Proposal and Payment Details\r\n        </p>\r\n\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"300px\", overflow: \"wrap\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Date of Allocation</th>\r\n              <td>{accept > \"1\" ? CommonServices.changeFormateDate(date_of_allocation) : \"\"}</td>\r\n            </tr>\r\n            \r\n            \r\n            <tr>\r\n              <th scope=\"row\">Name of Team Leader</th>\r\n              <td>{accept > \"1\" ? tlName2 : \"\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name of Tax Professional(s)</th>\r\n              <td>{tpStatus == \"2\" ? tp22 : \"\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Date of Proposal</th>\r\n              <td>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  {CommonServices.removeTime(proposal_date)}\r\n                  {proposal_date && (\r\n                    <a\r\n                      className=\"btn btn-primary btn-sm\"\r\n                      href={`${baseUrl}/customers/dounloadpdf?id=${p.id}`}\r\n                      role=\"button\"\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Scope of Work</th>\r\n              <td>{description}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Amount</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Amount Type</th>\r\n                  <th>Price</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\r\n                  <td align=\"right\">\r\n                    {\r\n                      amount_type == \"fixed\" ?\r\n                       nfObject.format(amount_fixed)\r\n                        :\r\n                        amount_type == \"hourly\" ?\r\n                        nfObject.format(amount_hourly) \r\n                          :\r\n                          amount_type == \"mixed\" ?\r\n                            <div>\r\n                              <p>Fixed : {nfObject.format(amount_fixed)}</p>\r\n                              <p>Hourly : {nfObject.format(amount_hourly)}</p>\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Payment Terms</th>\r\n              {\r\n                payment_terms == \"lumpsum\" ?\r\n                  <td>\r\n                    <tr>\r\n                      <th>Payment Type</th>\r\n                      <th>Due Dates</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\r\n                      <td>\r\n                        {CommonServices.removeTime(due_date)}\r\n                      </td>\r\n                    </tr>\r\n                  </td>\r\n                  :\r\n                  payment_terms == \"installment\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Payment Type</th>\r\n                        <th>No of Installments</th>\r\n                        <th>Installment Amount</th>\r\n                        <th>Due Dates</th>\r\n                      \r\n                      </tr>\r\n                      <tr>\r\n                       \r\n                        <td>{payment_terms}</td>\r\n                        <td style={{display : \"flex\", justifyContent : \"center\", border : \"0px\"}}>{no_of_installment}</td>\r\n                        <td align=\"right\">{installAmount2(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                        \r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    \"\"\r\n              }\r\n\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposed Amount</th>\r\n              <td>{nfObject.format(amount)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposal Status</th>\r\n              <td>\r\n                {p.query_status == \"4\" && \"Inprogress\"}\r\n                {p.query_status == \"6\" && \"Declined\"}\r\n                {(p.query_status == \"5\" || p.query_status > 6) && \"Accepted\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Amount Accepted</th>\r\n              <td>{nfObject.format(accepted_amount)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Date of Acceptance / Decline</th>\r\n              <td>{CommonServices.removeTime(cust_accept_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment History</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Date</th>\r\n                 \r\n                    <th>Invoice Amount</th>\r\n                    <th>Tds Deducted</th>\r\n                    <th>Amount Paid </th>\r\n                    <th>Payment Receipt</th>\r\n                </tr>\r\n                {paymentDetails.map((pay, i) => (\r\n                  <tr>\r\n                    {pay.is_paid == \"1\" ?\r\n                  \r\n                    <>\r\n                     <td>{CommonServices.removeTime(pay.payment_date)}</td> \r\n                    <td align=\"right\">{pay.invoice_amount}</td>\r\n                    <td align=\"right\">{pay.tds_amount}</td>\r\n                    <td align=\"right\">{pay.amount}</td>\r\n                    <td>\r\n\r\n                    <a href={pay.paymenturl} target=\"_blank\">\r\n                    <span title=\"view receipt\" style={{margin: \"0 2px\"}}>\r\n                    <i \r\n                   className=\"fa fa-eye\"\r\n                   style={{color : \"green\", \r\n                   fontSize : \"16px\", \r\n                   pointer : \"cursor\"}}>\r\n                     </i></span></a>\r\n                    </td>\r\n                    </> :\r\n                      \"\" \r\n                    }\r\n                  \r\n                  </tr>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Received</th>\r\n              <td>{nfObject.format(payment_received)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Due</th>\r\n              <td>{dueDate(installment_amount, due_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Outstanding</th>\r\n              <td>{nfObject.format(accepted_amount - payment_received)}</td>\r\n            </tr>\r\n         \r\n            \r\n            {\r\n              p.paid_status == \"2\" && \r\n              <>\r\n              <tr>\r\n              <th scope=\"row\">Payment declined reason</th>\r\n              <td>{p.notes}</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">Payment Decline Date</th>\r\n                <td>{CommonServices.removeTime(p.declined_date)}</td>\r\n              </tr>\r\n              </>\r\n             \r\n            }\r\n             {\r\n             p.decline_notes !== null && p.decline_notes.length > 0 ?\r\n                <tr>\r\n                  <th scope=\"row\">Reasons for proposal Decline</th>\r\n                  <td colspan=\"1\">\r\n                    {\r\n                      p.decline_notes\r\n                    }\r\n                  </td>\r\n                </tr>\r\n                : null\r\n            }\r\n             {\r\n               proposal_reactive_notes.length > 0 ?\r\n                 <tr>\r\n                   <th scope=\"row\"> Date of restoring proposal</th>\r\n                   <td colspan=\"1\">\r\n                     {\r\n                      proposal_reactive_dates\r\n                     }\r\n                   </td>\r\n                 </tr>\r\n                 : null\r\n             }\r\n                          {\r\n               proposal_reactive_notes.length > 0  ?\r\n           \r\n           <tr>\r\n                   <th scope=\"row\"> Reason of restoring proposal </th>\r\n                   <td colspan=\"1\">\r\n                     {\r\n                       proposal_reactive_notes\r\n                     }\r\n                   </td>\r\n                 </tr>\r\n                 : null\r\n             }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalDetails;\r\n\r\n\r\n\r\n\r\n \r\n","D:\\Mazars\\src\\pages\\Admin\\Invoice\\Tds.js",["2601","2602","2603","2604","2605","2606","2607"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router\";\r\nimport { parseInt } from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Tds (props)  {\r\n  const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    const f2 = useRef(null);\r\n    const [sac33, setSac] = useState([])\r\n    const [services2, setServices2] = useState();\r\n    const [services, setServices] = useState();\r\n    const [cgetTotal, setCgstTotal] = useState()\r\n    const [sgetTotal, setSgstTotal] = useState()\r\n    const [igetTotal, setIgstTotal] = useState()\r\n    const [gst, setGst] = useState()\r\n    const [tds2, setTds] = useState()\r\n    const [grandTotal, setgrandTotal] = useState();\r\n   const [total, setTotal] = useState()\r\n   const [pocketExp, setPocketExp] = useState()\r\n   const [cgetRate, setCgetRate] = useState()\r\n   const [igetRate, setIgetRate] = useState();\r\n   const [sgetRate, setSgetRate] = useState();\r\n   const [basicAmount, setBasicAmount] = useState()\r\n   const [billNo, setBillNo] = useState();\r\n   const [gstNum , setGstNum] = useState();\r\n   const [disabled, setDisabled] = useState(false)\r\n  \r\n\r\nvar tdsRate = 10;\r\nconst percent = {\r\n  display : \"flex\", \r\n  justifyContent : \"space-between\",\r\n  flexDirection : \"row\",\r\n  alignItems : \"center\"\r\n}\r\n  const getServices = () => {\r\n    axios.get(`${baseUrl}/tl/getServices`)\r\n    .then((res) => {\r\n\r\n      if(res.data.code === 1){\r\n        setServices(res.data.result);\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getServices();\r\n  }, [])\r\n  useEffect(() => {\r\n    if(props.generated == \"edited\"){\r\n    getDataild();\r\n    }\r\n    else {\r\n      setCgetRate(18);\r\n      setIgetRate(0);\r\n      setSgetRate(0)\r\n      setGstNum(props.gstNo);\r\n    setBillNo(props.billNo +\"/\" + props.id)\r\n    setBasicAmount(props.paidAmount)\r\n    setPocketExp(0)\r\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\r\n    setIgstTotal(parseInt(0));\r\n    setSgstTotal(parseInt(0))\r\n    setGst(parseInt(props.paidAmount * 18 / 100))\r\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\r\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\r\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\r\n    }\r\n  }, [props.paidAmount])\r\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\r\n\r\nconst getDataild = () => {\r\n  axios\r\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\r\n.then((res) => {\r\n\r\nif(res.data.payment_detail){\r\n  res.data.payment_detail.map((i) => {\r\n   \r\n     setGstNum(i.gstin_no)\r\n setBillNo(i.billno)\r\n\r\n setBasicAmount(parseInt(i.paid_amount))\r\n setPocketExp(parseInt(i.opt_expenses));\r\n setCgstTotal(parseInt(i.cgst_amount));\r\n setIgstTotal(parseInt(i.igst_amount));\r\n setSgstTotal(parseInt(i.sgst_amount));\r\n setCgetRate(parseInt(i.cgst_rate));\r\n setIgetRate(parseInt(i.igst_rate));\r\n setSgetRate(parseInt(i.sgst_rate));\r\nsetTds(parseInt(i.tds_amount))\r\n setgrandTotal(parseInt(i.payable_amount))\r\n setTotal(parseInt(i.invoice_amount))\r\n setGst(parseInt(i.gst));\r\n setDisabled(true);\r\n  })\r\n}\r\n\r\n})\r\n}\r\n  // Cgst Tax function\r\nconst cgstFun = (e) => {\r\n  setCgetRate(e.target.value);\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = parseInt(a * e.target.value / 100)\r\n   setCgstTotal(parseInt(cget));\r\n   setGst(parseInt(cget + igetTotal + sgetTotal))\r\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\r\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\r\n\r\n}\r\n// Sgst tax function\r\nconst sgstFun = (e) => {\r\n  setSgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = parseInt(a * e.target.value / 100)\r\n        setSgstTotal(parseInt(cget))\r\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\r\n        setGst(parseInt(cget + igetTotal + cgetTotal))\r\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\r\n }\r\n// Igst tax function\r\n const igstFun = (e) => {\r\n   setIgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n      let cget = parseInt(a * e.target.value / 100) \r\n         setIgstTotal(cget) \r\n         setGst(parseInt(cget + sgetTotal + cgetTotal));\r\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\r\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\r\n        \r\n }\r\n // Tds function\r\n const tdsFun = (e) => {\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = (a * e.target.value / 100)\r\n      setTds(cget)\r\n    setgrandTotal(parseInt(total) - parseInt(cget))    \r\n } \r\n\r\n // Pocket Function\r\n const pocketExpFun = (e) => {\r\n  setPocketExp(e.target.value)\r\n  let a = parseInt(e.target.value) + parseInt(basicAmount);\r\n  if(e.target.value > 0){\r\n    setCgstTotal(a * cgetRate / 100);\r\n   setSgstTotal(a * sgetRate / 100);\r\n   setIgstTotal(a * igetRate / 100);\r\n   // })\r\n setGst((oldData) => {\r\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\r\n })\r\n  setTotal((oldData) => {\r\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\r\n  })\r\n  }\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(a * tdsRate / 100))\r\n  })\r\n}\r\n\r\nconst basicFun = (e) => {\r\n  let a = parseInt(e.target.value) + parseInt(pocketExp);\r\n  setBasicAmount(e.target.value);\r\n  if(e.target.value > 0){\r\n    setCgstTotal(a * cgetRate / 100);\r\n   setSgstTotal(a * sgetRate / 100);\r\n   setIgstTotal(a * igetRate / 100);\r\n setGst((oldData) => {\r\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\r\n })\r\n  setTotal((oldData) => {\r\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\r\n  })\r\n  }\r\n  setgrandTotal((oldData) => {\r\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\r\n  })\r\n  setTds((oldData) => {\r\n    return(parseInt(a * tdsRate / 100))\r\n  })\r\n}\r\n    const onSubmit= (value) => {\r\n      \r\n        let formData = new FormData();\r\n       formData.append(\"tl_id\", JSON.parse(userid));\r\n         formData.append(\"id\", props.id)\r\n         formData.append(\"qno\", props.report)\r\n         formData.append(\"description\", services2);\r\n         formData.append(\"serviceCode\", sac33);\r\n        formData.append(\"basic_amount\", basicAmount);\r\n        formData.append(\"cgst_rate\", cgetRate);\r\n        formData.append(\"opt_expenses\", pocketExp);\r\n        formData.append(\"cgst_total\", cgetTotal)\r\n        formData.append(\"sgst_rate\", sgetRate);\r\n       \r\n        formData.append(\"sgst_total\", sgetTotal)\r\n        formData.append(\"igst_rate\", igetRate);\r\n      \r\n        formData.append(\"igst_total\", igetTotal)\r\n        formData.append(\"total\", total);\r\n        formData.append(\"tds_rate\", tdsRate);\r\n        formData.append(\"gst\", gst);\r\n        formData.append(\"tds_total\", tds2)\r\n        formData.append(\"netpaid_amount\", grandTotal)\r\n        formData.append(\"gstin_no\", gstNum);\r\n        formData.append(\"bill_no\", billNo)\r\n        axios({\r\n            method : \"POST\",\r\n            data : formData,\r\n            url : `${baseUrl}/tl/generateInvoive`\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n              Swal.fire({\r\n                title : \"success\", \r\n                html : \"Invoice generated successfully\",\r\n                icon : \"success\"\r\n              })\r\n                history.push(\"/admin/adinvoice\")\r\n            }\r\n          \r\n        })\r\n      \r\n    }\r\n  const serviceFun = (e) => {\r\n    \r\n   services.map((k) => {\r\n    \r\nif(k.id == e) {\r\nsetSac(k.sac)\r\nsetServices2(k.service)\r\n}\r\n   })\r\n     \r\n  }\r\n\r\n  \r\n    return(\r\n      \r\n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \r\n        \r\n        </ModalHeader>\r\n        <ModalBody>\r\n    \r\n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\r\n    <div className=\"container gutter-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>GSTIN</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"gst_in\"\r\n         value={gstNum}\r\n         onChange= {(e) => setGstNum(e.target.value)}\r\n         className=\"form-control\"\r\n          />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n          <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>Invoice No</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"bill_no\"\r\n         value={billNo}\r\n         disabled = {disabled}\r\n         className=\"form-control\"\r\n         onChange= {(e) => (setBillNo(e.target.value) + \"/id\")}\r\n          />\r\n            </div>\r\n          </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"row my-2\">\r\n              {services === undefined ? \"\" : \r\n              <div className=\"col-md-6\">\r\n              <label>Descirption <span className=\"declined\">*</span></label>\r\n          <select \r\n           ref={register({ required: true })}\r\n           name=\"description\"\r\n        style={{height : \"33.5px\"}}\r\n          onChange = {(e) => serviceFun(e.target.value)}\r\n          className={classNames(\"form-control\", {\r\n            \"is-invalid\": errors.p_name,\r\n          })}>\r\n              <option value=\"\">--select--</option>\r\n          {services.map((i) => (\r\n               <option value={i.id} key={i.id} className=\"form-control\"> {i.service}</option>\r\n          ))}\r\n            </select>\r\n              </div>}\r\n                  <div className=\"col-md-6\">\r\n                  <label>Basic Amount</label>\r\n                    <input \r\n                    type=\"text\"\r\n\r\n                    name=\"basic_amount\"\r\n                    ref={register({required : true})}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Amount\" \r\n                    onChange= {(e) => basicFun(e)}\r\n                  value={basicAmount}/>\r\n                    </div> \r\n            </div>\r\n           <div className=\"row my-2\">\r\n             <div className=\"col-md-6\">\r\n               <h5>Out of Pocket Expenses</h5>\r\n               </div>\r\n               <div className=\"col-md-6\">\r\n               <input \r\n                    type=\"text\"\r\n                    name=\"pocket_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    onChange={(e) => pocketExpFun(e)}\r\n                    value={pocketExp}\r\n                    placeholder=\"Pocket Amount\"  />\r\n               </div>\r\n             </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4\">\r\n              <h4>CGST</h4>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\" style={percent}>\r\n              <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    \r\n                    placeholder=\"Rate\"\r\n                    value={cgetRate}\r\n                    name=\"cgst_rate\"\r\n                    onChange= {(e) => cgstFun(e)} /> %\r\n                \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"0\" \r\n                    disabled \r\n                    name=\"cgst_total\"\r\n                    value = {Math.round(cgetTotal)}/>\r\n                  </div>\r\n                 </div>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                  <h4>SGST/UTGST </h4>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-6\" style={percent}>\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_rate\"\r\n                    placeholder=\"Rate\" \r\n                   value = {sgetRate}\r\n                    onChange= {(e) => sgstFun(e)}/> %\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_total\" \r\n                    disabled\r\n                    value={Number(sgetTotal).toFixed(0)}/>\r\n                          </div>\r\n                  </div>\r\n            \r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n              <h4>IGST</h4>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-6\" style={percent}>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    placeholder=\"Rate\"\r\n                    ref={register}\r\n                    name=\"igst_rate\"\r\n                   value={igetRate}\r\n                    onChange= {(e) => igstFun(e)} /> %\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-6\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    name=\"igst_total\"\r\n                    disabled\r\n                    ref={register}\r\n                    value={Number(igetTotal).toFixed(0)} />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n                \r\n          <hr/>\r\n          \r\n            <div className=\"row my-2\">\r\n                <div className=\"col-md-4\">\r\n                  <h4>Total GST</h4>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"total\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(gst)} />\r\n                            </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row my-2\">\r\n                <div className=\"col-md-8\">\r\n                  <h4>Total Invoice Amount</h4>\r\n                    </div>\r\n                   \r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"totalAmount\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Number(total).toFixed(0)} />\r\n                            </div>\r\n                </div>\r\n           \r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4 my-1\">\r\n              <h4>TDS </h4>\r\n                  </div>\r\n                <div className=\"col-md-4 my-1\">\r\n               <div className = \"row\">\r\n                \r\n                   <div className=\"col-md-6\"  style={percent}>\r\n                   <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                   \r\n                    placeholder=\"Rate\"\r\n                    name=\"tds_rate\"\r\n                    defaultValue={tdsRate}\r\n                    ref={register}\r\n                    onChange= {(e) => tdsFun(e)} /> %\r\n                     </div>\r\n                     <div className=\"col-md-6\">\r\n                   </div>\r\n                 </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                    value={Number(tds2).toFixed(0)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-6 my-1\">\r\n              <h4>Net Payable Amount</h4>\r\n                  </div>\r\n                  <div className=\"col-md-2 my-1\"></div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                  value={Number(grandTotal).toFixed(0)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n        <ModalFooter>\r\n       \r\n             <>\r\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\r\n          \r\n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \r\n             </>\r\n        </ModalFooter>\r\n          </div>\r\n        </form>\r\n       \r\n           \r\n      \r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n}\r\nexport default Tds;","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DiscardReport.js",["2608","2609","2610","2611","2612","2613"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  \r\n\r\n  const getHistory = () => {\r\n   \r\n      if(report != undefined && report.length > 0){\r\n        axios.get(`${baseUrl}/admin/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setData(res.data.result);\r\n          }\r\n        });\r\n      }\r\n   \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i className=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i className=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js",["2614","2615","2616","2617","2618"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    des = false;\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.p_final;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"final_report[]\", file);\r\n      }\r\n    }\r\n\r\n\r\n    formData.append(\"id\", id.id);\r\n    formData.append(\"q_id\", id.q_id);\r\n    axios\r\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n   \r\n        if (response.data.code === 1  && des === false) {\r\n          \r\n          setLoading(false)\r\n          des = true\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          getAssignmentList();\r\n          uploadFinalReport();\r\n          \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\r\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_final\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n // formData.append(\"final_report\", value.p_final[0]);","D:\\Mazars\\src\\pages\\Admin\\TaxProfessionalsTab\\History.js",["2619","2620","2621","2622","2623","2624","2625","2626"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history,toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n   \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">From</th>\r\n                <th scope=\"row\">To</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Email</th>\r\n                <th scope=\"row\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                      <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.from_date}</td>\r\n                      <td>{p.to_date}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.personal_email}</td>\r\n                      <td>{p.phone}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","D:\\Mazars\\src\\pages\\Admin\\customer\\CustHistory.js",["2627","2628","2629","2630","2631","2632","2633","2634","2635"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction CustHistory({ history, toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n  \r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Query Details</ModalHeader>\r\n        <ModalBody>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n               \r\n             \r\n                \r\n                <th scope=\"row\">Query Stages</th>\r\n                <th scope=\"row\">Total</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history != undefined \r\n              ? \r\n                  <tbody>\r\n                      <tr>\r\n                      <th scope=\"row\">Query Raised</th>\r\n                      <td>{history.total}</td>\r\n                      </tr>\r\n                      <tr>\r\n                      <th scope=\"row\">Query Completed</th>\r\n                      <td>{history.complete_query}</td>\r\n                     </tr>\r\n                     <tr>\r\n                     <th scope=\"row\">Query Inprogress</th>\r\n                     <td>{history.inprogress_queries}</td>\r\n                   \r\n                     </tr>\r\n                     <tr>\r\n                     <th scope=\"row\">Query Declined</th>\r\n                     <td>{history.declined_queries}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                \r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustHistory;\r\n","D:\\Mazars\\src\\components\\Search-Filter\\CustomerListFilter.js",["2636","2637","2638","2639","2640","2641","2642"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction CustomerListFilter(props) {\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n\r\n  const { setData, searchQuery, setRecords, records, getCustomer  } = props;\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n  \r\n  const resetData = () => {\r\n   \r\n    reset();\r\n   getCustomer();\r\n  };\r\n\r\n  \r\n\r\n  \r\n  const onSubmit = (data) => {\r\n\r\nif(searchQuery == \"SearchQuery\")\r\naxios\r\n.get(\r\n  `${baseUrl}/admin/getAllList?&name=${data.name}&country=${data.country}&state=${data.state}&city=${data.city2\r\n  }&email=${data.email}&occupation=${data.occupation}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n)\r\n.then((res) => {\r\n\r\n  if (res.data.code === 1) {\r\n    if (res.data.result) {\r\n      setData(res.data.result);\r\n    setRecords(res.data.result.length)\r\n    }\r\n  }\r\n});     \r\n};\r\n\r\n  return (\r\n    <>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12 d-flex\">\r\n        <div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n          <div className=\"row my-3\">\r\n        <div className=\"col-sm-3\">\r\n            \r\n          <input \r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"form-control\"\r\n          ref={register}\r\n          />\r\n      </div>\r\n      <div className=\"col-sm-3\">\r\n            \r\n            <input \r\n            placeholder=\"Country\"\r\n            type=\"country\"\r\n            name=\"country\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n            />\r\n        </div>\r\n        <div className=\"col-sm-3\">\r\n            \r\n            <input \r\n            placeholder=\"City\"\r\n            type=\"text\"\r\n            name=\"city2\"\r\n            className=\"form-control\"\r\n            ref={register}\r\n            />\r\n        </div>\r\n              <div className=\"col-sm-3\">\r\n                  \r\n                  <input \r\n                  placeholder=\"State\"\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  className=\"form-control\"\r\n                  ref={register}/>\r\n              </div>\r\n             \r\n              \r\n          \r\n          </div>\r\n          <div className=\"row my-3\">\r\n          <div className=\"col-sm-3\">\r\n                \r\n                <input \r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                ref={register}/>\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n              \r\n              <input \r\n              placeholder=\"Occupation\"\r\n              type=\"text\"\r\n              name=\"occupation\"\r\n              className=\"form-control\"\r\n              ref={register}/>\r\n          </div>\r\n          <div className=\"form-inline\">\r\n             \r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">From</label>\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateFrom\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                 max={item}\r\n               />\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <label className=\"form-select form-control\">To</label>\r\n             </div>\r\n\r\n             <div className=\"form-group mx-sm-1  mb-2\">\r\n               <input\r\n                 type=\"date\"\r\n                 name=\"p_dateTo\"\r\n                 className=\"form-select form-control\"\r\n                 ref={register}\r\n                 defaultValue={item}\r\n                 max={item}\r\n               />\r\n             </div>\r\n</div>\r\n          </div>\r\n             \r\n              <div className=\"row my-3\">\r\n             \r\n             <div className=\"col-sm-6\">\r\n             <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n              <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n        <div className=\"form-group d-inline-block\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n             </div>\r\n              \r\n              </div>\r\n \r\n           \r\n\r\n           \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default CustomerListFilter;\r\n","D:\\Mazars\\src\\config\\services\\TaxProffesional.js",["2643"],"import http from \"../http/http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/tp/getTaxProfessional\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/tutorials\", data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\r\n};\r\n\r\nconst editTL = (id) => {\r\n  return http.get(`/tl/getTeamLeader?id=212`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  remove,\r\n  editTL\r\n};\r\n","D:\\Mazars\\src\\pages\\Admin\\Report\\ConsaltSearch.js",["2644","2645","2646","2647","2648"],"import React , {useState, useEffect} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport { baseUrl, baseUrl3 } from '../../../config/config';\r\nconst ConsaltSearch = ({setData, getData}) => {\r\n    const [data2, setData2] = useState([]);\r\n    const [teamleader44, setTeamleader44] = useState(\"\")\r\n   \r\n    const today = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n    const prevDay = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + (new Date().getDate() - 1 )).slice(-2)\r\n    const [fDate, setFdate] = useState(prevDay)\r\n    const [tDate, settdate] = useState(today)\r\n    const [clientId, setClientId] = useState();\r\n    const [invoiceNum, setInvoiceNum] = useState()\r\n    const userid = window.localStorage.getItem(\"adminkey\")\r\n    var pp = []\r\n   \r\n    const { handleSubmit, register, errors, reset } = useForm()\r\n \r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n    \r\n      var dd = []\r\n      if (res.data.code === 1) {\r\n          console.log(\"res\", res.data.result)\r\n        pp.push(res.data.result)\r\n        setData2((res.data.result));\r\n       \r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n      getTeamLeader()\r\n  }, [])\r\n    const options3 = data2.map(d => (\r\n        {\r\n          \"value\": d.post_name,\r\n          \"label\": d.postname\r\n        }))\r\n        const teamLeader = (a) => {\r\n            let tk = []\r\n               a.map((i) => {\r\n               \r\n              \r\n                tk.push(i.value)\r\n               })\r\n               setTeamleader44(tk)\r\n             \r\n             }\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n       formData.append(\"to_date\", value.to_date);\r\n       formData.append(\"form_date\", value.form_date);\r\n       formData.append(\"client_id\", value.client_id);\r\n       formData.append(\"invoice_number\", value.invoice_number);\r\n       formData.append(\"tl_post\", teamleader44)\r\n       formData.append(\"uid\", JSON.parse(userid));\r\n       axios({\r\n           method : \"POST\",\r\n           url : `${baseUrl}/report/paymentReport`,\r\n           data : formData\r\n       })\r\n       .then((res) => {\r\n           console.log(\"res\", res)\r\n           if(res.data.code === 1){\r\n               setData(res.data.result)\r\n           }\r\n       })\r\n    }\r\n    const downloadReport = () => {\r\n        let formData = new FormData();\r\n        formData.append(\"to_date\", tDate);\r\n        formData.append(\"form_date\", fDate);\r\n        formData.append(\"tl_post\", teamleader44 )\r\n        formData.append(\"client_id\", clientId);\r\n        formData.append(\"invoice_number\", invoiceNum);\r\n        formData.append(\"uid\", JSON.parse(userid));\r\n        axios({\r\n            method : \"POST\",\r\n            url : `${baseUrl}/report/downloadpaymentReport`,\r\n            data : formData\r\n        })\r\n        .then(function (response) {\r\n           if(response.data.code === 1){\r\n            window.open(`${baseUrl3}/${response.data.result}`)\r\n           }\r\n          // window.location.assign(`${baseUrl}/report/generateReport`)\r\n          })\r\n    }\r\n    const fromDate = (e) => {\r\n        setFdate(e.target.value)\r\n      \r\n    }\r\n    const toDate = (e) => {\r\n    \r\n      \r\n      settdate(e.target.value)\r\n    }\r\n    const refrehData = () => {\r\n     \r\n     axios.get(`${baseUrl}/tl/mobilpayTodayCall`)\r\n     .then((res) => {\r\n         if(res.data.code === 1) {\r\n            // getData()\r\n         }\r\n     })   \r\n    }\r\n    const clientFun = (e) => {\r\n  setClientId(e.target.value)    \r\n    }\r\n    const invoiceFun = (e) => {\r\n      setInvoiceNum(e.target.value)\r\n    }\r\n    return (\r\n      <form onSubmit = {handleSubmit(onSubmit)}>\r\n         <div className=\"row\">\r\n             <div className=\"col-md-3\">\r\n                 <label>From Date </label>\r\n                 <input\r\n          type=\"date\"\r\n          ref = {register}\r\n          onChange= {(e) => fromDate(e)}\r\n          defaultValue={prevDay}\r\n          max= {today}\r\n          name=\"form_date\"\r\n          className=\"form-control\" />\r\n                 </div>\r\n                 <div className=\"col-md-3\">\r\n                     <label>To Date </label>\r\n             <input\r\n          type=\"date\"\r\n          ref = {register}\r\n          onChange= {(e) => toDate(e)}\r\n          defaultValue={today}\r\n          max= {today}\r\n          name=\"to_date\"\r\n          className=\"form-control\" />\r\n                 </div>\r\n                 <div className=\"col-md-2\">\r\n                 <label>Client Id </label>\r\n                 <input\r\n          type=\"text\"\r\n          ref = {register}\r\n          onChange = {(e) => clientFun(e)}\r\n          name=\"client_id\"\r\n          className=\"form-control\" />\r\n                 </div> <div className=\"col-md-2\">\r\n                 <label>Invoice Number </label>\r\n                 <input\r\n          type=\"text\"\r\n          onChange = {(e) => invoiceFun(e)}\r\n          ref = {register}\r\n          name=\"invoice_number\"\r\n          className=\"form-control\" />\r\n                 </div>\r\n                 <div className=\"col-md-2\" style={{zIndex : \"1000\"}}>\r\n<label className=\"form-label\">Teamleader</label>\r\n<Select  isMulti={true}\r\noptions={options3}\r\n\r\nonChange= {(e) =>teamLeader(e)}/>\r\n</div>\r\n               \r\n         </div>\r\n         <div className=\"row\">\r\n           <div className=\"col-md-6\">\r\n           <button className=\"btn btn-primary\">Search</button>\r\n           \r\n             </div>\r\n             <div className=\"col-md-6 my-2\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\r\n             <button type=\"button\" onClick={() => downloadReport()} className=\"btn btn-success mx-2\">Download</button>\r\n             <button type=\"button\" onClick={() => refrehData()} className=\"btn btn-secondary mx-2\">Pull payment data</button>\r\n             </div>\r\n         </div>\r\n      </form>\r\n    )\r\n}\r\nexport default ConsaltSearch;","D:\\Mazars\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js",["2649","2650","2651","2652","2653","2654","2655","2656","2657"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\r\nimport RetviewModal from \"../../pages/Admin/AllProposalComponent/RetviewModal\"\r\n\r\nfunction PendingForAcceptence({ pendingProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [retview, setRetview] = useState(false)\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPendingAcceptedProposal();\r\n  }, []);\r\n\r\n  const getPendingAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // pendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const retviewProposal = (e) => {\r\n    setRetview(!retview);\r\n    setAssignNo(e)\r\n  }\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 1,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.ProposedAmount;\r\n        \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n        \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n\r\n              {row.statuscode > \"3\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n{\r\n  row.statuscode == \"6\" ? \r\n  <>\r\n<div title=\"Retview Proposal\"\r\n onClick={(e) => retviewProposal(row.q_id)}> \r\n<i\r\n                    className=\"fa fa-share\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"red\"\r\n                    }}\r\n                   \r\n                  ></i>\r\n</div>\r\n  </> : \"\"\r\n}\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getPendingAcceptedProposal}\r\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getPendingAcceptedProposal}\r\n          />\r\n           <RetviewModal \r\n          retview = {retview}\r\n          retviewProposal  = {retviewProposal }\r\n          getProposalData  ={ getPendingAcceptedProposal}\r\n          assignNo = {assignNo}\r\n         />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n","D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js",["2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport RetviewModal from \"./RetviewModal\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport ViewComponent from \"../ViewProposal/ViewComponent\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AllProposalComponent({ allProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [viewData, setViewData] = useState({});\r\n  const [viewModal, setViewModal] = useState(false);\r\n  const [retview, setRetview] = useState(false)\r\n  \r\n  const ViewHandler = (key) => {\r\n   \r\n    setViewModal(!viewModal);\r\n    setViewData(key);\r\n  };\r\n\r\n\r\n  \r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProposalData();\r\n  }, []);\r\n\r\n  const getProposalData = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\nconst retviewProposal = (e) => {\r\n  setRetview(!retview);\r\n  setAssignNo(e)\r\n}\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 0,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance / decline of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <div>\r\n                    {row.status}/\r\n                    <p className=\"inprogress\">\r\n                      {row.statusdescription}\r\n                    </p>\r\n                  </div>\r\n                  :\r\n                  row.status == \"Client Declined; Proposal\" ?\r\n                    <p className=\"declined\">\r\n                      {row.status}\r\n                    </p> :\r\n                    row.status == \"Accepted; Proposal\" ?\r\n                      <p className=\"completed\">\r\n                        {row.status}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n       var nfObject = new Intl.NumberFormat('hi-IN')\r\n        var x = row.ProposedAmount;\r\n        \r\n        return(\r\n          <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n         \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"135px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n{\r\n  row.statuscode == \"6\" ? \r\n  <>\r\n<div title=\"Restore Proposal\"\r\n onClick={(e) => retviewProposal(row.q_id)}> \r\n<i\r\n                    className=\"fa fa-share\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                   \r\n                  ></i>\r\n</div>\r\n  </> : \"\"\r\n}\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getProposalData}\r\n            allProposal=\"allProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsivepayment\"\r\n          />\r\n          </div>\r\n\r\n          <ViewComponent\r\n            ViewHandler={ViewHandler}\r\n            viewModal={viewModal}\r\n            viewData={viewData}\r\n            getProposalData={getProposalData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getProposalData}\r\n          />\r\n          <RetviewModal \r\n          retview = {retview}\r\n          retviewProposal  = {retviewProposal }\r\n          getProposalData  ={getProposalData}\r\n          assignNo = {assignNo}\r\n         />\r\n          \r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllProposalComponent;\r\n","D:\\Mazars\\src\\config\\http\\http-common.js",[],"D:\\Mazars\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js",["2669","2670","2671","2672","2673","2674","2675","2676","2677"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport RetviewModal from \"../AllProposalComponent/RetviewModal\";\r\nfunction DeclinedProposal({ declinedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [retview, setRetview] = useState(false)\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // declinedProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const retviewProposal = (e) => {\r\n    setRetview(!retview);\r\n    setAssignNo(e)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 3,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Declined of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Client Declined; Proposal\" ?\r\n                  <p className=\"declined\">\r\n                    {row.status}\r\n                  </p> :\r\n                  null\r\n              }\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.ProposedAmount;\r\n        \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n       \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n{\r\n  row.statuscode == \"6\" ? \r\n  <>\r\n<div title=\"Restore Proposal\"\r\n onClick={(e) => retviewProposal(row.q_id)}> \r\n<i\r\n                    class=\"fa fa-share\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                   \r\n                  ></i>\r\n</div>\r\n  </> : \"\"\r\n}\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getDeclinedProposal}\r\n            declinedProposal=\"declinedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getDeclinedProposal}\r\n          />\r\n            <RetviewModal \r\n          retview = {retview}\r\n          retviewProposal  = {retviewProposal }\r\n          getProposalData  ={ getDeclinedProposal}\r\n          assignNo = {assignNo}\r\n         />\r\n          \r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","D:\\Mazars\\src\\pages\\Admin\\NewPassword\\ResendOtp.js",["2678","2679"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setTime, setDisabled, loading, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/admin/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime(setTime, setDisabled);\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n             \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n{loading === true ? \"\" :\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n            </div>}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js",["2680","2681","2682","2683","2684","2685","2686","2687","2688"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AcceptedProposal({ acceptedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAcceptedProposal();\r\n  }, []);\r\n  const getAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\r\n   \r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n           <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 2,\r\n                routes: \"proposal\",\r\n              }}\r\n            >{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n\r\n              {\r\n                row.status == \"Accepted; Proposal\" ?\r\n                  <p className=\"completed\">\r\n                    {row.status}\r\n                  </p> :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.ProposedAmount;\r\n         \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n         \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"95px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\r\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                  <a\r\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-eye\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"2\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/proposal`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getAcceptedProposal}\r\n            acceptedProposal=\"acceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAcceptedProposal}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js",["2689","2690","2691","2692","2693","2694","2695"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction Unpaid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    \r\n    const toggle = (key) => {\r\n       \r\n        setModal(!modal);\r\n\r\n      if(typeof(key) == \"object\"){\r\n\r\n      }\r\n      else{\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n      }\r\n    };\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 2,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n<div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n<Link\r\n              to={{\r\n                pathname: `/admin/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.id,\r\n                  routes: `/admin/paymentstatus`,\r\n                  index : 1\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n</div>\r\n\r\n\r\n<div title=\"View Discussion Message\">\r\n    <i\r\n        class=\"fa fa-comments-o\"\r\n        style={{\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            color: \"orange\"\r\n        }}\r\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n    ></i>\r\n</div>\r\n\r\n\r\n\r\n                            <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.assign_id}`,\r\n                    obj: {\r\n                      message_type: \"5\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.assign_id,\r\n                      routes: `/admin/paymentstatus`,\r\n                      index : 1\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        paid=\"paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsivepayment\"\r\n                        rowIndex\r\n                    />\r\n</div>\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Unpaid;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js",["2696","2697","2698","2699","2700","2701","2702","2703"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction Paid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=1`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    \r\n    const toggle = (key) => {\r\n     \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\", diaplay : \"flex\", justifyContent: \"space-between\", width: \"100px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.paid_status == \"2\" ? \r\n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\" }}>\r\n\r\n\r\n                         <div style={{ cursor: \"pointer\",  diaplay :\"flex\", marginRight : \"5px\" }} title=\"Payment History\">\r\n                         <Link\r\n              to={{\r\n                pathname: `/admin/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  index: 2,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                         </div>\r\n \r\n \r\n                         <div title=\"View Discussion Message\">\r\n                             <i\r\n                                 class=\"fa fa-comments-o\"\r\n                                 style={{\r\n                                     fontSize: 16,\r\n                                     cursor: \"pointer\",\r\n                                     color: \"orange\"\r\n                                 }}\r\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                             ></i>\r\n                         </div>\r\n \r\n \r\n                         <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/admin/chatting/${row.assign_id}`,\r\n                 obj: {\r\n                   message_type: \"5\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.assign_id,\r\n                   routes: `/admin/paymentstatus`,\r\n                   index: 2\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n \r\n                     </div> :\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"40px\" }}>\r\n\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                        <Link\r\n              to={{\r\n                pathname: `/admin/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  index: 2,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                         \r\n                        </div>\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"Send Message\">\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/chatting/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.id,\r\n                  routes: `/admin/paymentstatus`,\r\n                  index : 2\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n\r\n                    </div> }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        unpaid=\"unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsivepayment\"\r\n                        rowIndex\r\n                    />\r\n</div>\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paid;\r\n","D:\\Mazars\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js",["2704","2705","2706","2707","2708","2709","2710","2711"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\r\n            \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = (key) => {\r\n    \r\n        setModal(!modal);\r\n        if(typeof(key) == \"object\"){\r\n\r\n        }\r\n       else{\r\n        fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}&&status=1`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n               \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n       }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Amount Outstanding\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\", diaplay : \"flex\", justifyContent: \"space-between\", width: \"100px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\"}}>\r\n\r\n\r\n                        <div style={{ cursor: \"pointer\" , diaplay :\"flex\", marginRight : \"5px\"}} title=\"Payment History\">\r\n                        <Link\r\n              to={{\r\n                pathname: `/admin/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  index : 0,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n\r\n                        <div title=\"Send Message\">\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/chatting/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/admin/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n\r\n                    </div> \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsivepayment\"\r\n                        rowIndex\r\n                    />\r\n</div>\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>Payment History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\pages\\Admin\\Schedule\\Demo.js",["2712","2713","2714","2715","2716","2717","2718","2719","2720","2721","2722","2723","2724","2725","2726","2727","2728","2729"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport {makeStyles} from \"@material-ui/styles\"\r\nconst useStyle = makeStyles(() => ({\r\n  rchStyle : {\r\n    color : \"green\",\r\n    display : \"flex\",\r\n    overflow: \"hidden\"\r\n  },\r\n  OverlayBase : {\r\n    display : \"flex\", \r\n    width : \"670px\"\r\n  }\r\n}))\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const classes = useStyle()\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n   const userEmail = window.localStorage.getItem(\"adminEmail\")\r\n   // const userEmail = null\r\n  const em = JSON.parse(userEmail)\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [showVideoIcon, setShowVideoIcon] = useState(false)\r\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n    .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\r\n      .then((res) => {\r\n\r\n   \r\n         var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        \r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n    .get(`${baseUrl}/admin/getAllQuery`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n       \r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n\r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n       \r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      search: true,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\nconst closeFun = () => {\r\n  alert(\"done\")\r\n}\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const B = (key) => {\r\n    setRead(!key)\r\n  }\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <div onDoubleClick={() => B(data.owner)}>\r\n      <Appointments.Appointment {...restProps}>\r\n        <div style={{ display: \"flex\" }}>\r\n       {showVideoIcon === false ? \r\n        <i\r\n        class=\"fa fa-video-camera\"\r\n        onClick={() => handleJoin(data)}\r\n        style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n      ></i> : \"\"}\r\n          <div>{children}</div>\r\n          \r\n          <div\r\n          \r\n          >\r\n          </div>\r\n        </div>\r\n      </Appointments.Appointment>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (data) => {\r\n    console.log(\"dtat22\", data)\r\n// //  console.log(\"data\", data)\r\n// // console.log(data.startDate)\r\n//   var dt = new Date(data.startDate)\r\n//   var dt2 = new Date()\r\n//   let ck = dt.getMonth();\r\n \r\n//   let pp = dt2.getMonth();\r\n//   let rr = dt2.getHours();\r\n//   let ss = dt.getHours()\r\n//   let mm = dt2.getMinutes() + 20\r\n//   let dd = dt.getMinutes()\r\n//   let ee = dt.getDate();\r\n//   let eee = dt2.getDate()\r\n// //   console.log(\"dt\", dt)\r\n// //   console.log(dt2.getDate())\r\n// //  console.log(dt.getMinutes())\r\n// //  console.log(dt2.getMinutes() + 20)\r\n// //  console.log(\"ck\", ck)\r\n// //   console.log(\"dt2\", dt2)\r\n// //   console.log(\"pp\", pp)\r\n// //   console.log(\"mm\", mm)\r\n// //   console.log(\"dd\", dd)\r\n// //   console.log(\"ss\", ss)\r\n// //   console.log(\"rr\", rr)\r\n// //   console.log(ck == pp)\r\n// //   console.log(ee === eee)\r\n// //   console.log(ss == rr)\r\n// //   console.log(mm > dd)\r\n  \r\n \r\n//   if(ck == pp && ss == rr && ee == eee){\r\n \r\n \r\n//   if(mm > dd){\r\n//     console.log(\"passed\")\r\n//     setShowVideoIcon(true)\r\n//     Cookies.set(\"channel_2\", data.question_id);\r\n//     Cookies.set(\"baseMode_2\", baseMode);\r\n//     Cookies.set(\"transcode_2\", transcode);\r\n//     Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n//     Cookies.set(\"videoProfile_2\", videoProfile);\r\n//     // history.push(\"/teamleader/meeting/\");\r\n//     history.push(`/admin/meeting/${data.id}`);\r\n\r\n//   }\r\n//   else{\r\n//   // return false\r\n//   setShowVideoIcon(true)\r\n//   Cookies.set(\"channel_2\", data.question_id);\r\n//   Cookies.set(\"baseMode_2\", baseMode);\r\n//   Cookies.set(\"transcode_2\", transcode);\r\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n//   Cookies.set(\"videoProfile_2\", videoProfile);\r\n//   // history.push(\"/teamleader/meeting/\");\r\n//   history.push(`/admin/meeting/${data.id}`);\r\n//   }\r\n//   }\r\nconsole.log(\"data\", data)\r\nCookies.set(\"channel_2\", data.question_id);\r\nCookies.set(\"baseMode_2\", baseMode);\r\nCookies.set(\"transcode_2\", transcode);\r\nCookies.set(\"attendeeMode_2\", attendeeMode);\r\nCookies.set(\"videoProfile_2\", videoProfile);\r\nCookies.set(\"adminid\", data.id)\r\n\r\n// history.push(\"/teamleader/meeting/\");\r\nhistory.push(`/admin/meeting/${data.id}`);\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n\r\n    if (typeof d === 'object') {\r\n   \r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n    \r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n\r\n    if (added) {\r\n      setLoading(true)\r\n      \r\n\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n        \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n    if (changed) {\r\n  \r\n      setLoading(true)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n     \r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n     \r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n         \r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var msg = \"Call details updated successfully.\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n         \r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n     \r\n      setLoading(true)\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n         \r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n   \r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n              setLoading(false)\r\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              setLoading(false)\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n        else{\r\n          setLoading(false);\r\n          history.push(\"/admin/schedule\")\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n\r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n          \r\n        <div style ={{display : \"flex\", height : \"700px\"}}>\r\n\r\n        <Paper >\r\n            <Scheduler data={data}>\r\n                <ViewState className = {classes.rchStyle}\r\n                  defaultCurrentDate={currentDate}\r\n                  defaultCurrentViewName=\"Week\"\r\n                />\r\n                <EditingState  className = {classes.OverlayBase} onCommitChanges={commitChanges}   />\r\n                <EditRecurrenceMenu  />\r\n\r\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24} TimeTableLayoutProps={8} />\r\n                \r\n                <Appointments appointmentComponent={myAppointment} />\r\n\r\n                <Toolbar />\r\n                <DateNavigator />\r\n                <TodayButton />\r\n                <ViewSwitcher  />\r\n                <table>\r\n                <th>Testing</th>\r\n              </table>\r\n                <AppointmentTooltip showOpenButton  />\r\n                {\r\n                  read ?\r\n              \r\n                    \r\n                    <AppointmentForm \r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                      onClose= {() => closeFun()}\r\n                      readOnly\r\n                    />\r\n                    \r\n                    :\r\n                   \r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                    \r\n                    />\r\n                      \r\n                }\r\n                <Resources\r\n                  data={resources}\r\n                />\r\n              </Scheduler>\r\n            \r\n            </Paper>\r\n        </div>\r\n        \r\n       \r\n          </>\r\n  );\r\n}\r\nexport default Demo;","D:\\Mazars\\src\\components\\PendingForAllocation\\PendingForAllocation.js",["2730","2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Allocation.css';\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport History from \"./History\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingAllocation({ CountPendingForAllocation }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n       \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPendingForAllocation();\r\n  }, []);\r\n\r\n  const getPendingForAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        // CountPendingForAllocation(res.data.result.length);\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n         \r\n          <>\r\n            {row.is_assigned === \"1\" ? (\r\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\r\n                Allocated to {row.tname} on\r\n                <p>{row.allocation_time}</p>\r\n              </p>\r\n            ) : (\r\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                <div title=\"Assign to\">\r\n                  <Link\r\n                    to={`/admin/queryassing/${row.id}`}\r\n                  >\r\n                    <i className=\"fa fa-share\"></i>\r\n                  </Link>\r\n\r\n                </div>\r\n                <div title=\"Decline Query\">\r\n                  <Link\r\n                    to={`/admin/query_rejection/${row.id}`}\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-trash\"\r\n                    ></i>\r\n                  </Link>\r\n                </div>\r\n\r\n\r\n\r\n              </div>\r\n\r\n\r\n\r\n            )}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForAllocation}\r\n            pendingAlloation=\"pendingAlloation\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody className = \"card-body\">\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"assign_no\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          /> </div>\r\n          <History history={history} toggle={toggle} modal={modal} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(PendingAllocation);","D:\\Mazars\\src\\components\\AllQueriesData\\AllQueriesData.js",["2745","2746","2747","2748","2749","2750","2751"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllQueriesData({allData}) {\r\n\r\n  const [allQueriesData, setAllQueriesData] = useState([])\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getAllQueriesData();\r\n  }, [allData]);\r\n\r\n  const getAllQueriesData = () => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n       // setAllQueriesData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n    setAllQueriesData(allData)\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n\r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"80px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"130px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"130px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"120px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"180px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"120px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"85px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n           {row.status == \"Declined Query\"  ? \r\n           <div title=\"View Discussion Message\">\r\n           <i\r\n             className=\"fa fa-comments-o\"\r\n             style={{\r\n               fontSize: 16,\r\n               cursor: \"pointer\",\r\n               color: \"orange\"\r\n             }}\r\n             onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n           ></i>\r\n         </div> : \r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/admin/queriestab`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n\r\n            <div title=\"View Discussion Message\">\r\n              <i\r\n                className=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"orange\"\r\n                }}\r\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n              ></i>\r\n            </div>\r\n          </div>\r\n}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n   \r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setAllQueriesData}\r\n            getData={getAllQueriesData}\r\n            allQueries=\"allQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n         {allQueriesData != undefined ? \r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={allQueriesData}\r\n          columns={columns}\r\n          rowIndex\r\n          wrapperClasses=\"table-responsive\"\r\n        />  </div> : \"\"}\r\n\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAllQueriesData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(AllQueriesData);","D:\\Mazars\\src\\components\\DeclinedQueries\\DeclinedQueries.js",["2752","2753","2754","2755","2756","2757","2758","2759","2760","2761"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../../pages/TL/AssignmentTab/DiscardReport\";\r\nfunction DeclinedQueries({ CountPendingForPayment }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  useEffect(() => {\r\n    getPendingForPayment();\r\n  }, []);\r\n\r\n  const getPendingForPayment = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n\r\n        // CountPendingForPayment(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n     \r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 3,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                    <p className=\"completed\">\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function forma(cell, row) {\r\n        return(\r\n          <>\r\n           <div title=\"View Discussion Message\">\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  color: \"orange\"\r\n                              }}\r\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                      </div>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForPayment}\r\n            declinedQueries=\"declinedQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n        <Records records={records} />\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          /> \r\n          </div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getPendingForPayment}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;","D:\\Mazars\\src\\components\\PendingForProposals\\PendingForProposals.js",["2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingForProposals({ CountPendingProposal }) {\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const [nonpendingData, setNonPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n   \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n     \r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingForProposals();\r\n  }, []);\r\n\r\n  const getPendingForProposals = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setNonPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // CountPendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n            <Link\r\n          \r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tname\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setNonPendingData}\r\n            getData={getPendingForProposals}\r\n            pendingForProposal=\"pendingForProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={nonpendingData}\r\n            columns={columns}\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n          </div>\r\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>History</ModalHeader>\r\n            <ModalBody>\r\n              <table className=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"row\">S.No</th>\r\n                    <th scope=\"row\">Name</th>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <th scope=\"row\">Status</th>\r\n                    <th scope=\"row\">Date of Allocation</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {history.length > 0\r\n                  ? history.map((p, i) => (\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{p.name}</td>\r\n                        <td>{p.assign_no}</td>\r\n                        <td>{p.status}</td>\r\n                        <td>{p.date_of_allocation}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ))\r\n                  : null}\r\n              </table>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggle}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForProposals;","D:\\Mazars\\src\\pages\\Admin\\meeting\\index.jsx",[],"D:\\Mazars\\src\\pages\\Admin\\AllProposalComponent\\RetviewModal.js",["2775","2776","2777"],"import React from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Swal from \"sweetalert2\";\r\nconst RetviewModal = ({\r\n    retview,\r\n    retviewProposal,\r\n    getProposalData,\r\n    assignNo\r\n}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const userId = localStorage.getItem(\"adminkey\")\r\n    const Schema = yup.object().shape({\r\n        p_reason: yup.string().required(\"\"),\r\n      });\r\n      \r\n    const { handleSubmit, register, reset, errors } = useForm({\r\n        resolver: yupResolver(Schema),\r\n      });\r\n      const onSubmit = (value) => {\r\n          setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"qid\", assignNo);\r\n        formData.append(\"notes\", value.p_reason);\r\n    \r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/admin/reactiveProposal`,\r\n          data: formData,\r\n        })\r\n      .then((response) => {\r\n         if(response.data.code === 1){\r\n             setLoading(false)\r\n\r\n             retviewProposal()\r\n             getProposalData()\r\n             Swal.fire({\r\n                 \"title\" : \"success\",\r\n                 \"html\" : \"Proposal restored successfully\",\r\n                 \"icon\" : \"success\"\r\n             })\r\n         }\r\n         else{\r\n             setLoading(false)\r\n             retviewProposal()\r\n             getProposalData()\r\n             Swal.fire({\r\n                 \"title\" : \"error\",\r\n                 \"html\" : \"something went wrong , please try again\",\r\n                 \"icon\" :\"error\"\r\n             })\r\n         }\r\n      })\r\n    }\r\n    return(\r\n        <Modal isOpen={retview} toggle={retviewProposal}>\r\n            <ModalHeader toggle={retviewProposal }>\r\n<Typography variant=\"h6\">\r\n    Please provide the reason\r\n</Typography>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n  <form onSubmit={handleSubmit(onSubmit)}>\r\n <div className=\"mb-3\">\r\n<textarea\r\n  className={classNames(\"form-control\", {\r\n    \"is-invalid\": errors.p_reason,\r\n  })}\r\nname=\"p_reason\" \r\nid=\"textarea\"\r\nref={register}\r\nplaceholder=\"Enter text here...\"\r\nrows=\"6\">\r\n</textarea>\r\n</div>\r\n<div className=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n</form>\r\n\r\n            </ModalBody>\r\n           \r\n        </Modal>\r\n    )\r\n\r\n}\r\nexport default RetviewModal;","D:\\Mazars\\src\\components\\Search-Filter\\AdminFilter.js",["2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797","2798"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction AdminFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    acceptedProposal,\r\n    pendingAcceptedProposal,\r\n    declinedProposal,\r\n    declinedQueries,\r\n    pendingForProposal,\r\n    pendingAlloation,\r\n    allQueries,\r\n    assignment,\r\n    allProposal,\r\n    AllPayment,\r\n    paid,\r\n    unpaid,\r\n  } = props;\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined && selectedData.length > 0){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n   \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setTax2([])\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n   \r\n\r\n\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedQueries == \"declinedQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingForProposal == \"pendingForProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allQueries == \"allQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAlloation == \"pendingAlloation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (unpaid == \"unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (paid == \"paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allProposal == \"allProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-inline\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  {allQueries == \"allQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingForProposal == \"pendingForProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Preparation</option>\r\n                      <option value=\"2\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {allProposal == \"allProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Client Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {declinedQueries == \"declinedQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Client Declined; Queries</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                      <option value=\"4\">Client Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n\r\n               \r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminFilter;\r\n\r\n\r\n   ","D:\\Mazars\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js",["2799","2800","2801","2802","2803","2804"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","D:\\Mazars\\src\\agora.config.js",[],"D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx",["2805","2806","2807","2808","2809","2810","2811","2812","2813","2814","2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport RecordingModal from \"./RecordingModal\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green ,red} from '@material-ui/core/colors';\r\nimport recImg from \"../../../loader.gif\";\r\nimport Cookies from \"js-cookie\";\r\nimport CommonServices from \"../../../common/common\"\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"8\": [\r\n    \"span 3/span 4/13/3\",\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 3/span 4/13/27\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"9\": [\r\n    \"span 3/span 4/13/1\",\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 3/span 4/13/29\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.adminName = Cookies.get(\"adminName\")\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      resID: '',\r\n      showModal: false,\r\n      recordDisplay: false,\r\n      data: {},\r\n      item:{},\r\n      articleId : [],\r\n      articleId2 : [],\r\n      showRecBtn : false,\r\n      showButton : '',\r\n      clickDisable : false,\r\n      addRemote : null,\r\n      disabledVedio : false,\r\n      getAdId :'',\r\n      remoteRemove22: false,\r\n     \r\n      shareValue : false,\r\n      vedTrack : null,\r\n      vedOffer : '',\r\n     \r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  // userId = window.localStorage.getItem(\"tlkey\");\r\n  allrecording = [];\r\n  teamKey = window.localStorage.getItem(\"adminkey\");\r\n  adminEmail2 = window.localStorage.getItem(\"adminEmail\");\r\n  uid = Math.floor((Math.random() * 10000) + 1);\r\n  channelName = this.props.channel\r\n  tempArray = []\r\n  hostId ;\r\n vendor = 1\r\n region = 14;\r\n bucket = \"vride-multitvm\";\r\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n secretKey = \"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\";\r\nallrecording;\r\nlocalVedioTrack;\r\nremoteShare2 = false\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    console.log(\"join\", $)\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n     \r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n      \r\n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.adminName;\r\n   axios.get(`${data_post_api}`).\r\n   then((res) => {\r\n    \r\n   \r\n   })\r\n   this.setState({getAdId : uid})\r\n  \r\n     \r\n      \r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n               \r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n          \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n \r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.getSchedulerData()\r\n    this.accuire();\r\n    // this.accuire()\r\n  }\r\n\r\n  getSchedulerData =() =>{\r\n       axios\r\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n            .then((res) => {\r\n                       \r\n                if (res.data.code === 1) {\r\n                 if(res.data.result.items){\r\n                  this.setState({\r\n                    item:res.data.result.items[0],\r\n                   showButton : res.data.result.items[0].owner_id\r\n                  })  \r\n                 }\r\n                        \r\n                }\r\n            });\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n   \r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      \r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n     \r\n        let txtColor = \"myPartName\";\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if(dom && this.state.disabledVedio === true){\r\n          dom.setAttribute(\"class\", \"ag-item2\");\r\n        }\r\n        else if (dom && this.state.disabledVedio === false) {\r\n         dom.setAttribute(\"class\", \"ag-item\");\r\n        }\r\n        let dd;\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          var box22 = document.getElementById(\"ag-item-\" + id)\r\n          dd = document.createElement(\"input\")\r\n          dd.setAttribute(\"id\", \"name\" + id)\r\n          dd.setAttribute(\"class\", txtColor)\r\n        box22.appendChild(dd)\r\n        item.play(\"ag-item-\" + id);\r\n        }\r\n       \r\n         \r\n       \r\n       \r\n        if (index === no - 1) {\r\n         \r\n       \r\n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n         \r\n         \r\n          } else {\r\n           \r\n            let f = false;\r\n            dom.setAttribute(\r\n              \"style\",\r\n              `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                      z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n            );\r\n            dom.addEventListener('click', function (e){\r\n              if(f === false){\r\n                f = true\r\n                dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n                let list;\r\n             \r\n                list = Array.from(\r\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n                );\r\n                list.map((item) => {\r\n                  \r\n                    item.style.display = \"none\"\r\n                  }) \r\n              }\r\n              else{\r\n                f = false\r\n                dom.setAttribute(\r\n                  \"style\",\r\n                  `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                          z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n                );\r\n                let list;\r\n             \r\n                list = Array.from(\r\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n                );\r\n                list.map((item) => {\r\n                  \r\n                    item.style.display = \"block\"\r\n                  }) \r\n              }\r\n            })\r\n          }\r\n  if(item.player === undefined){\r\n  \r\n  }\r\n       else{\r\n        item.player.resize && item.player.resize();\r\n       }\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let f = false;\r\n      let no = this.state.streamList.length;\r\n      let txtColor = \"myPartName\";\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if(dom && this.state.disabledVedio === true){\r\n          dom.setAttribute(\"class\", \"ag-item2\");\r\n        }\r\n        else if (dom && this.state.disabledVedio === false) {\r\n         dom.setAttribute(\"class\", \"ag-item\");\r\n        }\r\n        let dd;\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          var box22 = document.getElementById(\"ag-item-\" + id)\r\n          dd = document.createElement(\"input\")\r\n          dd.setAttribute(\"id\", \"name\" + id)\r\n          dd.setAttribute(\"class\", txtColor)\r\n        box22.appendChild(dd)\r\n        item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        dom.addEventListener('click', function (e){\r\n            \r\n          if(f === false){\r\n            f = true\r\n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n            let list;\r\n             \r\n            list = Array.from(\r\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n            );\r\n            list.map((item) => {\r\n              \r\n                item.style.display = \"none\"\r\n              }) \r\n          }\r\n          else{\r\n            f = false\r\n            dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n            let list;\r\n             \r\n            list = Array.from(\r\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n            );\r\n            list.map((item) => {\r\n              \r\n                item.style.display = \"block\"\r\n              }) \r\n          }\r\n        })\r\n        if(item.player === undefined){\r\n  \r\n        }\r\n               else{\r\n                item.player.resize && item.player.resize();\r\n               }\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    \r\n    }\r\n  }\r\n    componentWillUnmount() {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            \r\n          },\r\n          () => {\r\n                    }\r\n        );\r\n    }\r\n  \r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n \r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"one\")\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"onee\")\r\n  \r\n      rt.removeStream(evt.uid);\r\n     \r\n      \r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n     \r\n      let stream = evt.stream;\r\n \r\n       \r\n     rt.addStream(stream)\r\n       }.bind(this));\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"oneeee\")\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    console.log(\"remote\", this.remoteShare2)\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n    // console.log(\"showButton\", this.state.showButton)\r\n \r\n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${this.state.showButton}&chname=${this.channelName}`)\r\n      .then((res) => {\r\n        console.log(\"evt id\", uid)\r\n        if(res.data.result.rtc_id == uid){\r\n          console.log(\"evt id\", res.data.result.rtc_id)\r\n          Swal.fire({\r\n            title: \"success\",\r\n            html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\r\n            icon : \"success\"\r\n          })\r\n            setTimeout((e) => {\r\n              window.location.hash = \"/admin/schedule\";\r\n            }, 500)\r\n           \r\n           }\r\n          \r\n          \r\n      })\r\n     \r\n   if(this.remoteShare2 === true){\r\n   \r\n     this.remoteShare2 = false\r\n   }   \r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n   \r\n    this.hostId = stream.getId()\r\n \r\n  \r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\r\n    axios.get(`${apiData}`)\r\n    .then((res) =>{\r\n     \r\n\r\n \r\n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\r\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\r\n        praticipantVar.setAttribute(\"disabled\", true)\r\n      }\r\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\r\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n         praticipantVar.setAttribute(\"value\", \"You\");\r\n         praticipantVar.setAttribute(\"disabled\", true)\r\n       }\r\n       \r\n      else{\r\n        this.remoteShare2 = true\r\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\r\n        praticipantVar.setAttribute(\"disabled\", true)\r\n        }\r\n     })};\r\n\r\n  handleCamera = (e) => {\r\n   if(this.state.readyState === false){\r\n     return false\r\n   }\r\n   else{\r\n    this.setState({disabledVedio : !this.state.disabledVedio})\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n   }\r\n  };\r\n\r\n  handleMic = (e) => {\r\n   if(this.state.readyState === false){\r\n\r\n   }\r\n   else{\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n   }\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    \r\n   if(e.currentTarget === undefined){\r\n\r\n   }\r\n   else{\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n     this.state.streamList.length <= 1\r\n   ) {\r\n     return;\r\n   }\r\n   let list;\r\n   let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n   list = Array.from(\r\n     document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n   );\r\n   list.map((item) => {\r\n     if (item.style.display !== \"none\") {\r\n       item.style.display = \"none\";\r\n     } else {\r\n       item.style.display = \"block\";\r\n     }\r\n   });\r\n   }\r\n  };  \r\n  \r\n  handleExit = async() => {\r\n    if(this.state.clickDisable === false){\r\n      this.setState({clickDisable : true})\r\n     var resourceId = localStorage.getItem(\"resourceId\");\r\n     var sid = localStorage.getItem(\"sid\");\r\n   \r\n     var data = JSON.stringify({\r\n       \"cname\":this.channelName,\r\n       \"uid\":JSON.stringify(this.uid),\r\n       \"clientRequest\":{ }});\r\n     axios({\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"application/json;charset=utf-8\",\r\n         \"authorization\": \"Basic \"+this.encodedString,\r\n         \"cache-control\": \"no-cache\",\r\n       },\r\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n       data: data,\r\n     })\r\n     .then(response => {\r\n       \r\n       this.tempArray.push(response.data.serverResponse.fileList)\r\n       this.setState({showRecBtn : true})\r\n     })\r\n         .catch((error) => {\r\n        \r\n       });\r\n    \r\n    }\r\n \r\n     \r\n   }\r\n   sharingScreen = (e) => {\r\n   if(this.remoteShare2 === true && this.state.stateSharing === false){\r\n     Swal.fire({\r\n       title : \"error\",\r\n       html : \"Only one screen can be share at a time\",\r\n       icon : \"error\"\r\n     })\r\n   }\r\n   else if(this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.setState({stateSharing : false})\r\n    }\r\n     else {\r\n     \r\n      this.setState({stateSharing : true})\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n      \r\n\r\n       //  this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n         \r\n         \r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  \r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n             \r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: false,\r\n      video:  false,\r\n      screen: true,\r\n    };\r\n \r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(\"1080p_2\");\r\n    return stream;\r\n  };\r\n\r\n\r\n  CreateS3Folder = (uid) =>{\r\n    axios\r\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n            .then((res) => {\r\n                \r\n            });\r\n  }\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\nsleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n//get recording status\r\nasync GetRecordingStatus(json){\r\n  await this.sleep(3000); \r\n  var resourceId = json.data.resourceId;\r\n  var sid = json.data.sid;\r\n  localStorage.setItem(\"resourceId\", resourceId);\r\n  localStorage.setItem(\"sid\", sid);\r\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n})\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n        this.setState({\r\n          data:response,\r\n          recordDisplay:!this.state.recordDisplay\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({clickDisable : false})\r\n        }, 1000)\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n//start recording\r\nasync startRecording(key){   \r\n    var resourceId = key.data.resourceId \r\n    this.CreateS3Folder(JSON.stringify(this.uid));\r\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n  await axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n      data: data,    \r\n    })\r\n    .then(json => this.GetRecordingStatus(json)) \r\n      .catch((error) => {\r\n      });\r\n  };\r\n\r\n  //recording  acquire\r\n  accuire = () =>{\r\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      data: data,\r\n    })\r\n      .then(json => \r\n        this.startRecording(json)) \r\n      .catch((error) => {\r\n      });\r\n  };\r\n// Start recording button\r\n  recStart = () => {\r\n    this.localStream.enableAudio();\r\n    this.localStream.enableVideo();\r\n    this.accuire();\r\n    this.setState({ showRecBtn: false  });\r\n    \r\n  }\r\n\r\n  //toggelStop\r\n  toggleModal = (key) =>{\r\n  \r\n  this.setState({\r\n    showModal: !this.state.showModal,\r\n    recordDisplay:false\r\n  })\r\n}\r\n\r\n\r\n //stop recording \r\n stopRecording = () => {\r\n  if(this.state.showRecBtn === true){\r\nthis.del();\r\n  }\r\n  else if(this.state.showButton == JSON.parse(this.teamKey)){\r\n    if(resourceId === undefined){\r\n      var resourceId = localStorage.getItem(\"resourceId\");\r\n    var sid = localStorage.getItem(\"sid\");\r\n    }\r\n  var data = JSON.stringify({\r\n    \"cname\":this.channelName,\r\n    \"uid\":JSON.stringify(this.uid),\r\n    \"clientRequest\":{ }});\r\n  axios({\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n    data: data,\r\n  })\r\n  .then(json => \r\n  \r\n    this.setState({vedOffer : json}),\r\n     this.setState({showRecBtn : true}),\r\n   \r\nthis.del(),\r\n    ) \r\n    .catch((error) => {   \r\n    });\r\n}\r\nelse{\r\n  this.localStream.disableVideo()\r\n  window.location.hash = \"/admin/schedule\";\r\n}\r\n};\r\n\r\n del = (e) => {\r\n  \r\n  var serverResponse = this.state.data.serverResponse.fileList\r\n  var completeRecording;\r\n  if(this.tempArray === undefined || this.tempArray.length === 0){\r\n      completeRecording =  serverResponse;\r\n  }\r\n  else if(this.tempArray != undefined || this.tempArray.length > 0){\r\n      completeRecording = this.tempArray + \",\" + serverResponse;\r\n  }\r\n  else{\r\n      completeRecording = serverResponse;\r\n  }\r\n   let formData = new FormData()\r\n   formData.append(\"fileList\", completeRecording)\r\n  formData.append(\"schedule_id\", this.props.id);\r\n  formData.append(\"uid\", JSON.parse(this.teamKey));\r\n  formData.append(\"assign_id\", this.state.item.assign_no);\r\n  formData.append(\"participants\", this.state.item.username);\r\n  axios({\r\n    method: \"POST\",\r\n    url: `${baseUrl}/tl/callRecordingPost`,\r\n    data: formData,\r\n})\r\n  Swal.fire({\r\n  title: \"End this vedio call for everyone?\",\r\n  // text: \"End this vedio call for everyone\",\r\n  showCloseButton:true,\r\n   type: \"warning\",\r\n   showCancelButton : true,\r\n   confirmButtonColor: \"#3085d6\",\r\n   cancelButtonColor: \"#d33\",\r\n   confirmButtonText: \"End the call\",\r\n   cancelButtonText : \"Just leave the meeting\"\r\n  }).then((result) => {\r\n    if (result.value) {\r\n      axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&rtc_id=${this.state.getAdId}&uid=${JSON.parse(this.teamKey)}`)\r\n      .then((res) =>{\r\n        if(res){\r\n          this.client && this.client.unpublish(this.localStream);\r\n          this.localStream && this.localStream.close();\r\n          this.toggleModal()\r\n        }\r\n      })\r\n     \r\n     }\r\n   else if(result.dismiss === \"backdrop\" || result.dismiss === \"close\"){\r\n     return false\r\n   }\r\n   else{\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/callRecordingPost`,\r\n      data: formData,\r\n   })\r\n    window.location.hash = \"/admin/schedule\";\r\n   }\r\n });\r\n}\r\n  render() {\r\n\r\n    \r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className={this.state.readyState ? \"ag-btn videoControlBtn\" : \"ag-btn videoControlBtn disabled\"}\r\n         \r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n      onClick={this.stopRecording}\r\n             className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n       \r\n     <i className=\"ag-icon ag-icon-leave\"></i> \r\n      </span>\r\n    );\r\n\r\n//recording btn on\r\n\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recStart}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record On\"\r\n      >{\r\n        this.state.showRecBtn === true ?\r\n      \r\n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n      </span>\r\n    );\r\n\r\n\r\n//recording btn off\r\nconst recordingBtnOff = (\r\n  <span\r\n  onClick={this.handleExit}\r\n\r\n    \r\n    className={\r\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    }\r\n    title=\"Record Off\"\r\n  >\r\n     {\r\n      this.state.showButton == JSON.parse(this.teamKey) ?\r\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\r\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n    }\r\n            \r\n  </span>\r\n);\r\n\r\n\r\n    return (\r\n      <>\r\n      <div id=\"ag-canvas\" style={style}>   \r\n        <div className=\"ag-btn-group\">\r\n\r\n        <RecordingModal \r\n        isOpen={this.state.showModal}\r\n         toggle={this.toggleModal}\r\n         data={this.state.data}\r\n         item={this.state.item}\r\n         allrecording = {this.tempArray}\r\n         schId = {this.props.id}\r\n         uid = {this.state.getAdId}\r\n         ownerId = {this.state.showButton}\r\n         />\r\n\r\n                \r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n\r\n          {\r\n             this.state.showRecBtn === true ? recordingBtn : null\r\n          }\r\n\r\n          {\r\n             this.state.showRecBtn === false ? recordingBtnOff : null\r\n          }\r\n        </div>\r\n      </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\Admin\\AgoraVideoCall\\RecordingModal.js",["2827","2828","2829","2830","2831","2832","2833"],"import React from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nfunction RecordingModal({\r\n    isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording,\r\n    schId,\r\n    uid,\r\n    ownerId\r\n}) {\r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n \r\n\r\n    const { assign_no, id, username, start } = item\r\n  \r\n\r\n    //submit\r\n    const onSubmit = (value) => {\r\n        var serverResponse = data.serverResponse.fileList\r\n        var completeRecording;\r\n        if(allrecording === undefined || allrecording.length === 0){\r\n            completeRecording =  serverResponse;\r\n        }\r\n        else if(allrecording != undefined || allrecording.length > 0){\r\n            completeRecording = allrecording + \",\" + serverResponse;\r\n        }\r\n        else{\r\n            completeRecording = serverResponse;\r\n        }\r\n                const { fileList } = serverResponse\r\n              \r\n        let formData2 = new FormData();\r\n                let formData = new FormData();\r\n                formData.append(\"uid\", JSON.parse(userId));\r\n                formData.append(\"fileList\", completeRecording);\r\n                formData.append(\"message_type\", value.msg_type);\r\n                formData.append(\"message\", value.p_message);\r\n                formData.append(\"assign_id\", assign_no);\r\n                formData.append(\"participants\", username);\r\n                formData.append(\"schedule_id\", id);\r\n        \r\n        \r\n\r\naxios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    toggle()\r\n                    history.push(\"/admin/schedule\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n               \r\n            });\r\n    };\r\n \r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\r\n                <ModalHeader >\r\n                 Minutes of meeting\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"col-md-10\">\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                              \r\n                                <button type=\"submit\" className=\"btn btn-primary mx-3\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js",["2834","2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction DraftReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [report, setReport] = useState();\r\nvar rowStyle2 = {}\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n   \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n   \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n   \r\n    setStatus(value);\r\n  };\r\n  // view report\r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        \r\n        return (\r\n          <>\r\n           \r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 1,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n    \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-inline\">\r\n              <div className=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n\r\n\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"card-body\">\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n          </div>\r\n  <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js",["2851","2852","2853","2854","2855","2856","2857","2858","2859","2860","2861","2862","2863","2864","2865","2866","2867"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport moment from \"moment\";\r\nfunction FinalReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [reportModal, setReportModal] = useState(false);\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n  const [report, setReport] = useState();\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  var rowStyle2 = {}\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n   \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    \r\n    setStatus(value);\r\n  };\r\n // View Report \r\n \r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 2,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n   \r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n    else if(row.paid_status != \"2\" && warningDate > aa){\r\n      style.backgroundColor = \"#fff\";\r\n      style.color = \"#000\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-inline\">\r\n              <div className=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"card-body\">\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex \r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n          </div>\r\n  <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalReport;\r\n\r\n","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js",["2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881","2882","2883","2884","2885"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\nfunction AssignmentComponent() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n   var rowStyle2 = {}\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n  const [assignNo, setAssignNo] = useState(null);\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  const [viewData, setViewData] = useState({});\r\n  const [viewModal, setViewModal] = useState(false);\r\n  const ViewHandler = (key) => {\r\n  \r\n    setViewModal(!viewModal);\r\n    setViewData(key);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n  \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n  \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n  \r\n    setStatus(value);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n        \r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index : 0,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/admin/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  className=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n \r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n  const onSubmit = (data) => {\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-inline\">\r\n              <div className=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Inprogress</option>\r\n                  <option value=\"2\">Completed</option>\r\n                  <option value=\"3\">Payment Declined</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div className=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Draft reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of Final Reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n\r\n              }\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"card-body\">\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n</div>\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentComponent;\r\n","D:\\Mazars\\src\\pages\\Admin\\Login\\VerifyOtpLogin.js",["2886"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n  \r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n   LoadingTime.timer2(setTime, setDisabled)\r\n  \r\n   \r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n  \r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n\r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"adminkey\", JSON.stringify(response.data[\"user id\"]));\r\n          sessionStorage.setItem(\"adminIdsession\", JSON.stringify(response.data[\"user id\"]));\r\n          localStorage.setItem(\"adminEmail\", JSON.stringify(response.data.name));\r\n          history.push(\"/admin/dashboard\");\r\n\r\n        } else {\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          setLoading(false)\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(!num)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"uid\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\AllPayment.js",["2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PaymentComponent from './PaymentComponent';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport './index.css';\r\n\r\n\r\nfunction Paid() {\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [pay, setPay] = useState({\r\n    pay: \"\",\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    paid_amount: \"\",\r\n    assign_id: '',\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      amount: key.accepted_amount,\r\n      assign_id: key.assign_id,\r\n      accepted_amount: key.accepted_amount,\r\n      paid_amount: key.paid_amount,\r\n\r\n      amount_type: key.amount_type,\r\n      amount_fixed: key.amount_fixed,\r\n      amount_hourly: key.amount_hourly,\r\n\r\n\r\n      payment_terms: key.payment_terms,\r\n      no_of_installment: key.no_of_installment,\r\n      installment_amount: key.installment_amount,\r\n      due_date: key.due_date,\r\n\r\n    });\r\n  };\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n\r\n  const toggle = (key) => {\r\n\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n       \r\n        setPay(response.payment_detail);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n        dataField: \"\",\r\n        text: \"S.No\",\r\n        formatter: (cellContent, row, rowIndex) => {\r\n            return rowIndex + 1;\r\n        },\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n    },\r\n    {\r\n        dataField: \"query_created_date\",\r\n        text: \"Date\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n        formatter: function dateFormat(cell, row) {\r\n         \r\n            var oldDate = row.query_created_date;\r\n            if (oldDate == null) {\r\n                return null;\r\n            }\r\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n        },\r\n    },\r\n    {\r\n        dataField: \"assign_no\",\r\n        text: \"Query No\",\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n        formatter: function nameFormatter(cell, row) {\r\n         \r\n            return (\r\n                <>\r\n                       <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        dataField: \"parent_id\",\r\n        text: \"Category\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n    },\r\n    {\r\n        dataField: \"cat_name\",\r\n        text: \"Sub Category\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n    },\r\n    {\r\n        text: \"Date of acceptance of Proposal\",\r\n        dataField: \"cust_accept_date\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n        formatter: function dateFormat(cell, row) {\r\n        \r\n            var oldDate = row.cust_accept_date;\r\n            if (oldDate == null) {\r\n                return null;\r\n            }\r\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n        },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      style: {\r\n          fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n          return { fontSize: \"11px\" };\r\n      },\r\n      formatter : function (cell, row) {\r\n          return(\r\n              <>\r\n              {row.paid_status == \"2\"  ?\r\n              <p style={{color : \"red\"}}>{row.status} </p> : \r\n              <p>{row.status}</p>}\r\n              </>\r\n          )\r\n      }\r\n  },\r\n  {\r\n    dataField: \"accepted_amount\",\r\n    text: \"Accepted Amount \",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"#21a3ce\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n{\r\n    text: \"Amount Paid\",\r\n    dataField: \"paid_amount\",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"#064606\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"#064606\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.paid_amount;\r\n         console.log(nfObject.format(x))\r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n\r\n{\r\n    text : \"Amount Outstanding\",\r\n    dataField: \"amount_outstanding\",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"darkred\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"darkred\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.amount_outstanding;\r\n         \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n    {\r\n        text: \"Date of Payment\",\r\n        dataField: \"cust_paid_date\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n        formatter: function dateFormat(cell, row) {\r\n          \r\n            var oldDate = row.cust_paid_date;\r\n            if (oldDate == null) {\r\n                return null;\r\n            }\r\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n        },\r\n    },\r\n    {\r\n        dataField: \"tl_name\",\r\n        text: \"TL name\",\r\n        sort: true,\r\n        style: {\r\n            fontSize: \"11px\",\r\n        },\r\n        headerStyle: () => {\r\n            return { fontSize: \"11px\" };\r\n        },\r\n    },\r\n  {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      style: {\r\n        fontSize: \"11px\"\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n          {row.paid_status === \"2\" ?  <div title=\"View Discussion Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <i\r\n              class=\"fa fa-comments-o\"\r\n              style={{\r\n                fontSize: 16,\r\n                cursor: \"pointer\",\r\n                color: \"orange\"\r\n              }}\r\n              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n            ></i>\r\n          </div>\r\n          :  <div style={{display : \"flex\"}}>\r\n          <div>\r\n            {\r\n              row.paid_status == \"0\" ?\r\n                <div\r\n                  style={{ cursor: \"pointer\", margin: \"0 3px\" }}\r\n                  title=\"Pay Amount\"\r\n                 >\r\n                    <Link\r\n              to={{\r\n                pathname: `/customer/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.q_id,\r\n                  routes: `/customer/payment`\r\n                }\r\n              }}\r\n            >\r\n                                      <PaymentIcon color=\"primary\" />\r\n                  </Link>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            {\r\n              row.paid_amount > 0 && row.paid_status > 0 ?\r\n                <div style={{ cursor: \"pointer\", margin: \"0 5px\" }} title=\"Payment History\">\r\n               <Link\r\n              to={{\r\n                pathname: `/customer/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.q_id,\r\n                  routes: `/customer/payment`\r\n                }\r\n              }}\r\n            >\r\n                               <i\r\n                    class=\"fa fa-credit-card\"\r\n                    style={{ color: \"green\", fontSize: \"16px\" }}\r\n                   \r\n                  ></i>\r\n                  </Link>    \r\n                </div>\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n\r\n\r\n          <div title=\"Send Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/chatting/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/customer/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n          <div title=\"View Discussion Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <i\r\n              class=\"fa fa-comments-o\"\r\n              style={{\r\n                fontSize: 16,\r\n                cursor: \"pointer\",\r\n                color: \"orange\"\r\n              }}\r\n              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n            ></i>\r\n          </div>\r\n\r\n          </div>\r\n      }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultSorted = [{\r\n    dataField: 'accepted_amount',\r\n    order: 'desc'\r\n  }];\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Card>\r\n\r\n          <CardHeader>\r\n            <CustomerFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              allPayment=\"allPayment\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n              id={userId}\r\n            />\r\n          </CardHeader>\r\n\r\n\r\n          <CardBody>\r\n            <Records records={records} />\r\n            <div className=\"tableFixHead\">\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"accepted_amount\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsivepayment\"\r\n              defaultSortDirection=\"asc\"\r\n            />\r\n</div>\r\n            <PaymentComponent\r\n              paymentHandler={paymentHandler}\r\n              addPaymentModal={addPaymentModal}\r\n              pay={pay}\r\n              getPaymentStatus={getPaymentStatus}\r\n            />\r\n\r\n            <DiscardReport\r\n              ViewDiscussionToggel={ViewDiscussionToggel}\r\n              ViewDiscussion={ViewDiscussion}\r\n              report={assignNo}\r\n              getData={getPaymentStatus}\r\n            />\r\n\r\n\r\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>History</ModalHeader>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\">S.No</th>\r\n                      <th scope=\"row\">Date</th>\r\n                      <th scope=\"row\">Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {pay.length > 0\r\n                    ? pay.map((p, i) => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{i + 1}</td>\r\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                          <td>{p.paid_amount}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                    : null}\r\n                </table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Paid;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\Paid.js",["2898","2899","2900","2901","2902","2903","2904","2905"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PaymentComponent from './PaymentComponent';\r\nimport './index.css';\r\n\r\nfunction Unpaid() {\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [pay, setPay] = useState({\r\n        pay: \"\",\r\n        amount: \"\",\r\n        accepted_amount: \"\",\r\n        paid_amount: \"\",\r\n        assign_id: '',\r\n\r\n        amount_type: \"\",\r\n        amount_fixed: \"\",\r\n        amount_hourly: \"\",\r\n\r\n        payment_terms: \"\",\r\n        no_of_installment: \"\",\r\n        installment_amount: \"\",\r\n        due_date: \"\",\r\n    });\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n        setPaymentModal(!addPaymentModal);\r\n        setPay({\r\n            amount: key.accepted_amount,\r\n            assign_id: key.assign_id,\r\n            accepted_amount: key.accepted_amount,\r\n            paid_amount: key.paid_amount,\r\n\r\n            amount_type: key.amount_type,\r\n            amount_fixed: key.amount_fixed,\r\n            amount_hourly: key.amount_hourly,\r\n\r\n\r\n            payment_terms: key.payment_terms,\r\n            no_of_installment: key.no_of_installment,\r\n            installment_amount: key.installment_amount,\r\n            due_date: key.due_date,\r\n\r\n        });\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`).then((res) => {\r\n\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const toggle = (key) => {\r\n    \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n             \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                                index : 2,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n          text: \"Status\",\r\n          dataField: \"\",\r\n          style: {\r\n              fontSize: \"11px\",\r\n          },\r\n          headerStyle: () => {\r\n              return { fontSize: \"11px\" };\r\n          },\r\n          formatter : function (cell, row) {\r\n              return(\r\n                  <>\r\n                  {row.paid_status == \"2\"  ?\r\n                  <p style={{color : \"red\"}}>{row.status} </p> : \r\n                  <p>{row.status}</p>}\r\n                  </>\r\n              )\r\n          }\r\n      },\r\n      {\r\n        dataField: \"accepted_amount\",\r\n        text: \"Accepted Amount \",\r\n        sort: true,\r\n        style: {\r\n          fontSize: \"11px\",\r\n          color: \"#21a3ce\",\r\n        },\r\n        sortFunc: (a, b, order, dataField) => {\r\n          if (order === 'asc') {\r\n            return b - a;\r\n          }\r\n          return a - b; // desc\r\n        },\r\n        headerStyle: () => {\r\n          return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n        },\r\n        formatter: function nameFormatter(cell, row){\r\n            var nfObject = new Intl.NumberFormat('hi-IN')\r\n             var x = row.accepted_amount;\r\n             console.log(nfObject.format(x))\r\n             return(\r\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n             )\r\n           }\r\n    },\r\n    {\r\n        text: \"Amount Paid\",\r\n        dataField: \"paid_amount\",\r\n        sort: true,\r\n        style: {\r\n          fontSize: \"11px\",\r\n          color: \"#064606\",\r\n        },\r\n        sortFunc: (a, b, order, dataField) => {\r\n          if (order === 'asc') {\r\n            return b - a;\r\n          }\r\n          return a - b; // desc\r\n        },\r\n        headerStyle: () => {\r\n          return { fontSize: \"11px\", color: \"#064606\" };\r\n        },\r\n        formatter: function nameFormatter(cell, row){\r\n            var nfObject = new Intl.NumberFormat('hi-IN')\r\n             var x = row.paid_amount;\r\n            \r\n             return(\r\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n             )\r\n           }\r\n    },\r\n\r\n    {\r\n        text : \"Amount Outstanding\",\r\n        dataField: \"amount_outstanding\",\r\n        sort: true,\r\n        style: {\r\n          fontSize: \"11px\",\r\n          color: \"darkred\",\r\n        },\r\n        sortFunc: (a, b, order, dataField) => {\r\n          if (order === 'asc') {\r\n            return b - a;\r\n          }\r\n          return a - b; // desc\r\n        },\r\n        headerStyle: () => {\r\n          return { fontSize: \"11px\", color: \"darkred\" };\r\n        },\r\n        formatter: function nameFormatter(cell, row){\r\n            var nfObject = new Intl.NumberFormat('hi-IN')\r\n             var x = row.amount_outstanding;\r\n         \r\n             return(\r\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n             )\r\n           }\r\n    },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n              fontSize: \"11px\"\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                 <div style={{display : \"flex\"}}>\r\n                    <div>\r\n                      {\r\n                        row.paid_status == \"0\" ?\r\n                          <div\r\n                            style={{ cursor: \"pointer\", margin: \"0 3px\" }}\r\n                            title=\"Pay Amount\"\r\n                           >\r\n                              <Link\r\n                        to={{\r\n                          pathname: `/customer/paydetails/${row.assign_id}`,\r\n                          obj: {\r\n                            message_type: \"5\",\r\n                            query_No: row.assign_no,\r\n                            query_id: row.q_id,\r\n                            routes: `/customer/payment`\r\n                          }\r\n                        }}\r\n                      >\r\n                                                <PaymentIcon color=\"primary\" />\r\n                            </Link>\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </div>\r\n      \r\n                    <div>\r\n                      {\r\n                        row.paid_amount > 0 && row.paid_status > 0 ?\r\n                          <div style={{ cursor: \"pointer\", margin: \"0 5px\" }} title=\"Payment History\">\r\n                         <Link\r\n                        to={{\r\n                          pathname: `/customer/paydetails/${row.assign_id}`,\r\n                          obj: {\r\n                            message_type: \"5\",\r\n                            query_No: row.assign_no,\r\n                            query_id: row.q_id,\r\n                            routes: `/customer/payment`\r\n                          }\r\n                        }}\r\n                      >\r\n                                         <i\r\n                              class=\"fa fa-credit-card\"\r\n                              style={{ color: \"green\", fontSize: \"16px\" }}\r\n                             \r\n                            ></i>\r\n                            </Link>    \r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </div>\r\n      \r\n      \r\n                    <div title=\"Send Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/customer/chatting/${row.assign_id}`,\r\n                          obj: {\r\n                            message_type: \"5\",\r\n                            query_No: row.assign_no,\r\n                            query_id: row.assign_id,\r\n                            routes: `/customer/paymentstatus`\r\n                          }\r\n                        }}\r\n                      >\r\n                        <i\r\n                          class=\"fa fa-comments-o\"\r\n                          style={{\r\n                            fontSize: 16,\r\n                            cursor: \"pointer\",\r\n                            color: \"blue\"\r\n                          }}\r\n                        ></i>\r\n                      </Link>\r\n                    </div>\r\n                    <div title=\"View Discussion Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n                      <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                          fontSize: 16,\r\n                          cursor: \"pointer\",\r\n                          color: \"orange\"\r\n                        }}\r\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                      ></i>\r\n                    </div>\r\n      \r\n                    </div>\r\n                \r\n                </>\r\n              );\r\n            },\r\n          },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CustomerFilter\r\n                            setData={setPayment}\r\n                            getData={getPaymentStatus}\r\n                            unpaid=\"unpaid\"\r\n                            setRecords={setRecords}\r\n                            records={records}\r\n                            id={userId}\r\n                        />\r\n                    </CardHeader>\r\n\r\n                    <CardBody>\r\n                        <Records records={records} />\r\n                        <div className=\"tableFixHead\">\r\n                        <BootstrapTable\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={payment}\r\n                            columns={columns}\r\n                            classes=\"table-responsive\"\r\n                        />\r\n                        </div>\r\n\r\n                        <PaymentComponent\r\n                            paymentHandler={paymentHandler}\r\n                            addPaymentModal={addPaymentModal}\r\n                            pay={pay}\r\n                            getPaymentStatus={getPaymentStatus}\r\n                        />\r\n\r\n                        <DiscardReport\r\n                            ViewDiscussionToggel={ViewDiscussionToggel}\r\n                            ViewDiscussion={ViewDiscussion}\r\n                            report={assignNo}\r\n                            getData={getPaymentStatus}\r\n                        />\r\n\r\n                        <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                            <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                            <ModalBody>\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"row\">S.No</th>\r\n                                            <th scope=\"row\">Date</th>\r\n                                            <th scope=\"row\">Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {pay.length > 0\r\n                                        ? pay.map((p, i) => (\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                    <td>{p.paid_amount}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        ))\r\n                                        : null}\r\n                                </table>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\" onClick={toggle}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Unpaid;\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\Unpaid.js",["2906","2907","2908","2909","2910","2911","2912","2913","2914","2915"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PaymentComponent from './PaymentComponent';\r\nimport './index.css';\r\n\r\nfunction Paid() {\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [pay, setPay] = useState({\r\n    pay: \"\",\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    paid_amount: \"\",\r\n    assign_id: '',\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      amount: key.accepted_amount,\r\n      assign_id: key.assign_id,\r\n      accepted_amount: key.accepted_amount,\r\n      paid_amount: key.paid_amount,\r\n\r\n      amount_type: key.amount_type,\r\n      amount_fixed: key.amount_fixed,\r\n      amount_hourly: key.amount_hourly,\r\n\r\n\r\n      payment_terms: key.payment_terms,\r\n      no_of_installment: key.no_of_installment,\r\n      installment_amount: key.installment_amount,\r\n      due_date: key.due_date,\r\n\r\n    });\r\n  };\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`).then((res) => {\r\n   \r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggle = (key) => {\r\n  \r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n    \r\n        setPay(response.payment_detail);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n          return rowIndex + 1;\r\n      },\r\n      style: {\r\n          fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n          return { fontSize: \"11px\" };\r\n      },\r\n  },\r\n    {\r\n      dataField: \"query_created_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.query_created_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                index : 1,\r\n                routes: \"paymentstatus\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      style: {\r\n          fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n          return { fontSize: \"11px\" };\r\n      },\r\n      formatter : function (cell, row) {\r\n          return(\r\n              <>\r\n              {row.paid_status == \"2\"  ?\r\n              <p style={{color : \"red\"}}>{row.status} </p> : \r\n              <p>{row.status}</p>}\r\n              </>\r\n          )\r\n      }\r\n  },\r\n  {\r\n    dataField: \"accepted_amount\",\r\n    text: \"Accepted Amount \",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"#21a3ce\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.accepted_amount;\r\n        \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n{\r\n    text: \"Amount Paid\",\r\n    dataField: \"paid_amount\",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"#064606\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"#064606\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.paid_amount;\r\n       \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n\r\n{\r\n    text : \"Amount Outstanding\",\r\n    dataField: \"amount_outstanding\",\r\n    sort: true,\r\n    style: {\r\n      fontSize: \"11px\",\r\n      color: \"darkred\",\r\n    },\r\n    sortFunc: (a, b, order, dataField) => {\r\n      if (order === 'asc') {\r\n        return b - a;\r\n      }\r\n      return a - b; // desc\r\n    },\r\n    headerStyle: () => {\r\n      return { fontSize: \"11px\", color: \"darkred\" };\r\n    },\r\n    formatter: function nameFormatter(cell, row){\r\n        var nfObject = new Intl.NumberFormat('hi-IN')\r\n         var x = row.amount_outstanding;\r\n     \r\n         return(\r\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n         )\r\n       }\r\n},\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      style: {\r\n        fontSize: \"11px\"\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n          {row.paid_status === \"2\" ?  <div title=\"View Discussion Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <i\r\n              class=\"fa fa-comments-o\"\r\n              style={{\r\n                fontSize: 16,\r\n                cursor: \"pointer\",\r\n                color: \"orange\"\r\n              }}\r\n              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n            ></i>\r\n          </div>\r\n          :  <div style={{display : \"flex\"}}>\r\n          <div>\r\n            {\r\n              row.paid_status == \"0\" ?\r\n                <div\r\n                  style={{ cursor: \"pointer\", margin: \"0 3px\" }}\r\n                  title=\"Pay Amount\"\r\n                 >\r\n                    <Link\r\n              to={{\r\n                pathname: `/customer/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.q_id,\r\n                  routes: `/customer/payment`\r\n                }\r\n              }}\r\n            >\r\n                                      <PaymentIcon color=\"primary\" />\r\n                  </Link>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            {\r\n              row.paid_amount > 0 && row.paid_status > 0 ?\r\n                <div style={{ cursor: \"pointer\", margin: \"0 5px\" }} title=\"Payment History\">\r\n               <Link\r\n              to={{\r\n                pathname: `/customer/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.q_id,\r\n                  routes: `/customer/payment`\r\n                }\r\n              }}\r\n            >\r\n                               <i\r\n                    class=\"fa fa-credit-card\"\r\n                    style={{ color: \"green\", fontSize: \"16px\" }}\r\n                   \r\n                  ></i>\r\n                  </Link>    \r\n                </div>\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n\r\n\r\n          <div title=\"Send Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/chatting/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/customer/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"blue\"\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </div>\r\n          <div title=\"View Discussion Message\" style={{pointer : \"cursor\", margin: \"0 5px\"}}>\r\n            <i\r\n              class=\"fa fa-comments-o\"\r\n              style={{\r\n                fontSize: 16,\r\n                cursor: \"pointer\",\r\n                color: \"orange\"\r\n              }}\r\n              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n            ></i>\r\n          </div>\r\n\r\n          </div>\r\n      }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Card>\r\n\r\n          <CardHeader>\r\n            <CustomerFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              paid=\"paid\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n              id={userId}\r\n            />\r\n          </CardHeader>\r\n\r\n          <CardBody>\r\n            <Records records={records} />\r\n            <div className=\"tableFixHead\">\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsive\"\r\n            />\r\n            </div>\r\n\r\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>History</ModalHeader>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\">S.No</th>\r\n                      <th scope=\"row\">Date</th>\r\n                      <th scope=\"row\">Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {pay.length > 0\r\n                    ? pay.map((p, i) => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{i + 1}</td>\r\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                          <td>{p.paid_amount}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                    : null}\r\n                </table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            <PaymentComponent\r\n              paymentHandler={paymentHandler}\r\n              addPaymentModal={addPaymentModal}\r\n              pay={pay}\r\n              getPaymentStatus={getPaymentStatus}\r\n            />\r\n\r\n            <DiscardReport\r\n              ViewDiscussionToggel={ViewDiscussionToggel}\r\n              ViewDiscussion={ViewDiscussion}\r\n              report={assignNo}\r\n              getData={getPaymentStatus}\r\n            />\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Paid;\r\n","D:\\Mazars\\src\\views\\EditQuery\\DeleteQuery.js",["2916","2917","2918"],"import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction DeleteQuery({ id, setLoading }) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Want to delete query ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n          history.push(\"/customer/queries\");\r\n        } else {\r\n          setLoading(false)\r\n          Swal.fire(\"Oops...\", \"Query not deleted\", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteQuery;\r\n\r\n{\r\n  /* <i\r\n        className=\"fa fa-trash\"\r\n        style={{\r\n          fontSize: 16,\r\n          cursor: \"pointer\",\r\n        }}\r\n        \r\n      ></i> */\r\n}\r\n","D:\\Mazars\\src\\views\\ProposalView\\RejectedModal22.js",["2919","2920","2921","2922","2923","2924"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router\";\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal22({\r\n    showRejectedBox,\r\n    rejectedBox,\r\n    deleteCliente,\r\n    getQueriesData,\r\n    assignNo\r\n}) {\r\nlet history = useHistory()\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", assignNo);\r\n    formData.append(\"status\", 6);\r\n    formData.append(\"notes\", value.p_chat);\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/ProposalAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Swal.fire(\"Rejected\", \"\", \"success\");\r\n          history.push({\r\n            pathname: `/customer/proposal`,\r\n            index: 0,\r\n          });\r\n        } else {\r\n          setLoading(false)\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\r\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal22;\r\n","D:\\Mazars\\src\\views\\ProposalView\\TermsConditions.js",["2925","2926","2927"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  readTerms,\r\n  id\r\n}) {\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\r\n        <ModalHeader toggle={readTerms}>Engagement Letter</ModalHeader>\r\n        <ModalBody>\r\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${id}&viewpdf=1`}\r\n            height=\"100%\" width=\"100%\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={readTerms}>Ok</Button>\r\n        </ModalFooter>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\views\\NewPassword\\ResendOtp.js",["2928","2929"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\n\r\nfunction ResendOtp({ id, setDisabled, getTime, setLoad, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n        formData.append(\"p\", \"forgot\");\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n            \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\r\n                    setDisabled(false)\r\n                    setLoad(true)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              ShowError.LoadingError(setLoading)\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\views\\ProposalTab\\AcceptedProposal.js",["2930","2931","2932","2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.q_id}`,\r\n                                index: 2,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div className=\"completed\">\r\n                            {row.status}\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\r\n\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        acceptedProposal=\"acceptedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","D:\\Mazars\\src\\views\\ProposalTab\\DeclinedProposal.js",["2944","2945","2946","2947","2948","2949","2950","2951","2952","2953","2954","2955","2956"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n// import ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.q_id}`,\r\n                                index: 3,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div className=\"declined\">\r\n                            {row.status}\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function formatterFun(cell, row) {\r\n<div style={{display : \"flex\", justifyContent : \"space-between\"}}>\r\n<div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n</div>\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        declinedProposal=\"declinedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n                    {/* <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    /> */}\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","D:\\Mazars\\src\\components\\meeting\\index.jsx",[],"D:\\Mazars\\src\\views\\ProposalTab\\AllProposal.js",["2957","2958","2959","2960","2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport ViewComponent from \"./ViewComponent\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction ProposalTab() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [viewData, setViewData] = useState({});\r\n    const [viewModal, setViewModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewHandler = (key) => {\r\n\r\n        setViewModal(!viewModal);\r\n        setViewData(key);\r\n    };\r\n\r\n\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\nconst rightAli = {\r\n    display : \"flex\", \r\n    justifyContent : \"flex-end\", \r\n    Border : \"0px\"\r\n}\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.q_id}`,\r\n                                index: 0,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Declined; Proposal\" ?\r\n                                        <div>\r\n                                            <p className=\"declined\">\r\n                                                {row.status}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                <p className=\"completed\">\r\n                                                    {row.status}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\"  };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? <div style={{display : \"flex\", justifyContent : \"space-between\"}}>\r\n                        <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                        </div> : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\" }}>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {\r\n                                        row.statuscode > 6 ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"View EL\">\r\n                                                <a\r\n                                                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <i\r\n                                                        class=\"fa fa-eye\"\r\n                                                        style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                                    />\r\n                                                </a>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        row.statuscode == 4\r\n                                            ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"Decision on Proposal\">\r\n                                                <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                    <i\r\n                                                        class=\"fa fa-share\"\r\n                                                        style={{\r\n                                                            color: \"blue\",\r\n                                                            fontSize: \"13px\",\r\n                                                        }}\r\n                                                    ></i>\r\n                                                </Link>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        proposal=\"proposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                   <div className=\"tableFixHead\">\r\n                   <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                       </div>\r\n\r\n                    <ViewComponent\r\n                        ViewHandler={ViewHandler}\r\n                        viewModal={viewModal}\r\n                        viewData={viewData}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n{/* <div style={{ cursor: \"pointer\" }} title=\"Rejected\">\r\n                                            <i\r\n                                                class=\"fa fa-times\"\r\n                                                style={{ color: \"red\", fontSize: \"16px\" }}\r\n                                                onClick={() => rejected(row.q_id)}\r\n                                            ></i>\r\n                                        </div> */}\r\n//   {row.negotiated_amount === \"0\" &&\r\n// row.accepted_amount === \"0\"","D:\\Mazars\\src\\components\\InputRoom\\index.js",["2977","2978"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nimport \"../../assets/fonts/css/icons.css\";\r\n// import Validator from \"../../utils/Validator\";\r\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\r\nimport \"./index.css\";\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channel: \"\",\r\n      baseMode: \"avc\",\r\n      transcode: \"interop\",\r\n      attendeeMode: \"video\",\r\n      videoProfile: \"480p_4\",\r\n    };\r\n  }\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"wrapper index\">\r\n        <div className=\"ag-header\"></div>\r\n        <div className=\"ag-main\">\r\n          <section className=\"login-wrapper\">\r\n            <div className=\"login-header\"></div>\r\n\r\n            \r\n\r\n            <div className=\"login-footer\">\r\n              <a\r\n              \r\n                className=\"ag-rounded button is-info\"\r\n              >\r\n                Join\r\n              </a>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\InprogressProposal.js",["2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport CommonServices from \"../../common/common\";\r\nimport moment from \"moment\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport './index.css';\r\nfunction InprogressProposal() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"180px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"180px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n       \r\n        return (\r\n          <>\r\n             <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.id}`,\r\n                                index: 2,\r\n                                routes: \"queries\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width :\"180px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"180px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"180px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div className=\"completed\">\r\n              {row.status}\r\n            \r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"180px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n\r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\"\r\n                ? null\r\n                :\r\n                row.status_code >= \"1\" ?\r\n                  CommonServices.removeTime(row.exp_delivery_date)\r\n                  :\r\n                  null\r\n            }\r\n          </>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"180px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n        var curDate = moment().format(\"YYYY-MM-DD\")\r\n     \r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\" ?\r\n                null\r\n                :\r\n                <div>\r\n                 \r\n\r\n                                {\r\n                                    row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                                      \r\n                                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                            {dateMnsFive > curDate === true ?\r\n                                            <div title=\"Send Feedback\"\r\n                                            style={{\r\n                                                cursor: \"pointer\",\r\n                                            }}>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/customer/feedback/${row.assign_no}`,\r\n                                                    obj: {\r\n                                                        routes: `/customer/queries`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <FeedbackIcon />\r\n                                            </Link>\r\n                                        </div> : \"\"}\r\n                                      \r\n                    \r\n                    \r\n                    {/* <div title=\"View Discussion Message\">\r\n                      <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                          fontSize: 16,\r\n                          cursor: \"pointer\",\r\n                          color: \"orange\"\r\n                        }}\r\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                      ></i>\r\n                    </div> */}\r\n                  </div>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n\r\n        }\r\n      </>\r\n    );\r\n  },\r\n},\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressQueryProposal=\"InprogressQueryProposal\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\InprogressAllocation.js",["2996","2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport CommonServices from \"../../common/common\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\nimport './index.css';\r\nfunction InprogressAllocation() {\r\n\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [additionalQuery, setAdditionalQuery] = useState(false);\r\n  const additionalHandler = (key) => {\r\n    setAdditionalQuery(!additionalQuery);\r\n    setAssignNo(key)\r\n  };\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width: \"80px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width: \"130px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n           \r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.id}`,\r\n                index: 1,\r\n                routes: \"queries\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width: \"130px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width: \"130px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,  width: \"180px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <div>\r\n                    {row.status}/\r\n                    <p className=\"inprogress\">\r\n                      {row.status_message}\r\n                    </p>\r\n                  </div>\r\n                  :\r\n                  row.status == \"Inprogress; Allocation\" ?\r\n                    <p>\r\n                      {row.status}\r\n                    </p>\r\n                    :\r\n                    row.status == \"Inprogress; Proposals\" ?\r\n                      <p>\r\n                        {row.status}\r\n                      </p>\r\n                      :\r\n                      row.status == \"Inprogress; Assignments\" ?\r\n                        <p>\r\n                          {row.status}\r\n                        </p>\r\n                        :\r\n                        null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected / Actual Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" ,  width: \"180px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n         \r\n     \r\n          return (\r\n            \r\n              <>\r\n                  {\r\n                      row.status == \"Declined Query\"\r\n                          ? null\r\n                          :\r\n                          row.status_code != \"3\" && row.status_code > \"1\" ?\r\n                              CommonServices.removeTime(row.exp_delivery_date)\r\n                              :\r\n                              null\r\n                  }\r\n              </>\r\n          )\r\n      },\r\n  },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n        var curDate = moment().format(\"YYYY-MM-DD\")\r\n     \r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\" ?\r\n                null\r\n                :\r\n                <div>\r\n                  {\r\n                    row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                        <div title=\"Update Query\">\r\n                          <Link to={`/customer/edit-query/${row.id}`}>\r\n                            <i\r\n                              className=\"fa fa-edit\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div title=\"Delete Query\">\r\n                          <i\r\n                            className=\"fa fa-trash\"\r\n                            style={{\r\n                              fontSize: 16,\r\n                              cursor: \"pointer\",\r\n\r\n                            }}\r\n                            onClick={() => del(row.id)}\r\n                          ></i>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}&type=4`,\r\n                              obj: {\r\n                                message_type: \"4\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/queries`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                color: \"blue\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                        <div title=\"View Discussion Message\">\r\n                                                    <i\r\n                                                        class=\"fa fa-comments-o\"\r\n                                                        style={{\r\n                                                            fontSize: 16,\r\n                                                            cursor: \"pointer\",\r\n                                                            color: \"orange\"\r\n                                                        }}\r\n                                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                                    ></i>\r\n                                                </div>\r\n\r\n                      </div> :\r\n                      null\r\n                  }\r\n\r\n                                    {\r\n                                        row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                                          \r\n                                          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                                {dateMnsFive > curDate === true ?\r\n                                                <div title=\"Send Feedback\"\r\n                                                style={{\r\n                                                    cursor: \"pointer\",\r\n                                                }}>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                                        obj: {\r\n                                                            routes: `/customer/queries`\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <FeedbackIcon />\r\n                                                </Link>\r\n                                            </div> : \"\"}\r\n                                          \r\n                        {\r\n                          row.delivery_report == \"completed\" ? null :\r\n                            <div title=\"Upload Additional Documents\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={() => additionalHandler(row.assign_no)}\r\n                            >\r\n                              <PublishIcon color=\"secondary\" />\r\n                            </div>\r\n                        }\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}&type=4`,\r\n                              obj: {\r\n                                message_type: \"4\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/queries`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                color: \"blue\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                          <i\r\n                            class=\"fa fa-comments-o\"\r\n                            style={{\r\n                              fontSize: 16,\r\n                              cursor: \"pointer\",\r\n                              color: \"orange\"\r\n                            }}\r\n                            onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      null\r\n                  }\r\n                </div>\r\n\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n   \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete query ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n          getQueriesData();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressAllocation=\"InprogressAllocation\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <AdditionalQueryModal\r\n            additionalHandler={additionalHandler}\r\n            additionalQuery={additionalQuery}\r\n            assignNo={assignNo}\r\n            getQueriesData={getQueriesData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getQueriesData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressAllocation;\r\n\r\n\r\nconst arr = [\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n  { name: \"nitin\", add: \"noida\" },\r\n\r\n  { name: \"nitin\", add: \"noida\" },\r\n]","D:\\Mazars\\src\\views\\ProposalTab\\InprogressProposal.js",["3021","3022","3023","3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n            \r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.q_id}`,\r\n                                index: 1,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\"completed\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 console.log(nfObject.format(x))\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"80px\" }}>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\r\n                                            obj: {\r\n                                                message_type: \"3\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.q_id,\r\n                                                routes: `/customer/proposal`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {\r\n                                        row.statuscode > 6 ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"View EL\">\r\n                                                <a\r\n                                                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <i\r\n                                                        class=\"fa fa-eye\"\r\n                                                        style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                                    />\r\n                                                </a>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        row.statuscode == 4\r\n                                            ?\r\n                                            <div style={{ cursor: \"pointer\" }} title=\"Proposal Accepted/Rejected\">\r\n                                                <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                    <i\r\n                                                        class=\"fa fa-share\"\r\n                                                        style={{\r\n                                                            color: \"blue\",\r\n                                                            fontSize: \"13px\",\r\n                                                        }}\r\n                                                    ></i>\r\n                                                </Link>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    //rejected\r\n    const rejected = (id) => {\r\n     \r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to delete query ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, reject it!\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    // delete data\r\n    const deleteCliente = (key) => {\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", key);\r\n        formData.append(\"status\", 6);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/ProposalAccept`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                \r\n                if (response.data.code === 1) {\r\n                    setRejected(false);\r\n                    Swal.fire(\"Rejected\", \"Proposal rejected successfully.\", \"success\");\r\n                    getProposalData();\r\n                } else {\r\n                    Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        inprogressProposal=\"inprogressProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    /> \r\n                    </div>\r\n                \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","D:\\Mazars\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js",["3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052","3053"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport DiscardReport from \"./DiscardReport\";\r\nimport './modalSty.css';\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n  }\r\nconst viewStyle = {\r\n  display: \"block\",\r\n    width: \"100%\",\r\n    border: \"1px solid black\"\r\n}\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button className=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n               \r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className=\"modalTable\">\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                    <td className=\"table2\">\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                    \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    </td>\r\n                  \r\n                   \r\n\r\n                    <td>\r\n                  <p>    {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                  \r\n                  <br>\r\n                  </br> \r\n                  {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }</td>\r\n                  <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\r\n                                    <i\r\n                                      className=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          className=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          // onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          className=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          // onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\DeclinedQueries.js",["3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport CommonServices from \"../../common/common\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport './index.css';\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction DeclinedQueries() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\",   width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n              \r\n        return (\r\n            <>\r\n                <Link\r\n                    to={{\r\n                        pathname: `/customer/my-assingment/${row.id}`,\r\n                        index: 3,\r\n                        routes: \"queries\",\r\n                    }}\r\n                >\r\n                    {row.assign_no}\r\n                </Link>\r\n            </>\r\n        );\r\n    },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"150px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"140px\"  };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"140px\"  };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width: \"150px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n   \r\n\r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\"\r\n                ? null\r\n                :\r\n                row.status_code >= \"1\" ?\r\n                  CommonServices.removeTime(row.exp_delivery_date)\r\n                  :\r\n                  null\r\n            }\r\n          </>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\", textAlign: \"center\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n          var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n        \r\n         \r\n          var curDate = moment().format(\"YYYY-MM-DD\")\r\n       \r\n         \r\n        \r\n          \r\n       \r\n          return (\r\n              <>\r\n                  {   \r\n                      row.status == \"Declined Query\" ?\r\n                      <>\r\n                     <div className=\"declinedPayment\">\r\n                     {dateMnsFive > curDate === true ?\r\n                          <div title=\"Send Feedback\"\r\n                          style={{\r\n                              cursor: \"pointer\",\r\n                          }}>\r\n                          <Link\r\n                              to={{\r\n                                  pathname: `/customer/feedback/${row.assign_no}`,\r\n                                  obj: {\r\n                                      routes: `/customer/queries`,\r\n                                      index: 3\r\n                                  }\r\n                              }}\r\n                          >\r\n                              <FeedbackIcon />\r\n                          </Link>\r\n                      </div>\r\n                       : \"\"} \r\n                      \r\n                          <div title=\"View Discussion Message\">\r\n                              <i\r\n                                  className=\"fa fa-comments-o\"\r\n                                  style={{\r\n                                      fontSize: 16,\r\n                                      cursor: \"pointer\",\r\n                                      color: \"orange\"\r\n                                  }}\r\n                                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                              ></i>\r\n                          </div>\r\n\r\n                     </div>\r\n                      </>\r\n                          :\r\n                       \"\"}\r\n                       \r\n              </>\r\n          );\r\n      },\r\n  },\r\n];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n          <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getQueriesData}\r\n                    />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;","D:\\Mazars\\src\\views\\QueriesTab\\AllQueriesData.js",["3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport { date } from \"yup\";\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport './index.css';\r\n\r\n\r\nfunction AllQueriesData() {\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n   const [assignNo2, setAssignNo2] = useState()\r\n    const [queriesCount, setCountQueries] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n   \r\n    const [loading2, setLoading2] = useState(false);\r\n    const [additionalQuery, setAdditionalQuery] = useState(false)\r\n   let des = false;\r\n    const additionalHandler = (key) => {\r\n       \r\n       if(typeof(key) == \"object\"){\r\n        setAdditionalQuery(!additionalQuery);\r\n\r\n        des = true\r\n        setLoading2(false)\r\n        return false\r\n       }\r\n       else{\r\n        setAdditionalQuery(!additionalQuery);\r\n        setAssignNo(key)\r\n       }\r\n        \r\n    };\r\n    const [rejectedBox, showRejectedBox] = useState(false)\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n       \r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQueriesData();\r\n    }, []);\r\n\r\n   \r\n    const getQueriesData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                    setCountQueries(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" ,  width: \"80px\"};\r\n            },\r\n           \r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" ,  width: \"130px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queries\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\",  width: \"130px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" ,  width: \"120px\"};\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" ,  width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n                                        {row.status_message}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.status_message}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.status_message}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected / Actual Delivery Date\",\r\n            dataField: \"exp_delivery_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" ,  width: \"180px\"};\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n           \r\n                return (\r\n                  \r\n                    <>\r\n                        {\r\n                            row.status == \"Declined Query\"\r\n                                ? null\r\n                                :\r\n                                row.status_code != \"3\" && row.status_code > \"1\" ?\r\n                                    CommonServices.removeTime(row.exp_delivery_date)\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", textAlign: \"center\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\r\n              \r\n               \r\n                var curDate = moment().format(\"YYYY-MM-DD\")\r\n             \r\n               \r\n              \r\n                \r\n             \r\n                return (\r\n                    <>\r\n                        {   \r\n                            row.status == \"Declined Query\" ?\r\n                            <>\r\n                           <div className=\"declinedPayment\">\r\n                           {dateMnsFive > curDate === true ?\r\n                                <div title=\"Send Feedback\"\r\n                                style={{\r\n                                    cursor: \"pointer\",\r\n                                }}>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                        obj: {\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <FeedbackIcon />\r\n                                </Link>\r\n                            </div>\r\n                             : \"\"} \r\n                            \r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        className=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                           </div>\r\n                            </>\r\n                                :\r\n                                <div>\r\n                    {\r\n                        row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <div title=\"Update Query\">\r\n                                    <Link to={`/customer/edit-query/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div title=\"Delete Query\">\r\n                                    <i\r\n                                        className=\"fa fa-trash\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n\r\n                                        }}\r\n                                        onClick={() => del(row.id)}\r\n                                    ></i>\r\n                                </div>\r\n                                <div title=\"Send Message\">\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/customer/chatting/${row.id}&type=4`,\r\n                                            obj: {\r\n                                                message_type: \"4\",\r\n                                                query_No: row.assign_no,\r\n                                                query_id: row.id,\r\n                                                routes: `/customer/queries`\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <i\r\n                                            className=\"fa fa-comments-o\"\r\n                                            style={{\r\n                                                fontSize: 16,\r\n                                                cursor: \"pointer\",\r\n                                                color: \"blue\"\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                </div>\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        className=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n\r\n                            </div> :\r\n                            null\r\n                    }\r\n\r\n                    {\r\n                        row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\r\n                            \r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                {dateMnsFive > curDate === true ?\r\n                                <div title=\"Send Feedback\"\r\n                                style={{\r\n                                    cursor: \"pointer\",\r\n                                }}>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/feedback/${row.assign_no}`,\r\n                                        obj: {\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <FeedbackIcon />\r\n                                </Link>\r\n                            </div> : \"\"}\r\n                                {\r\n                                    row.delivery_report == \"completed\" ? null :\r\n                                        <div title=\"Upload Additional Documents\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={() => additionalHandler(row.assign_no)}\r\n                                        >\r\n                                            <PublishIcon color=\"secondary\" />\r\n                                        </div>\r\n                                }\r\n                                {row.status_code == \"10\" ? null \r\n                                : \r\n                                <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting/${row.id}&type=4`,\r\n                                        obj: {\r\n                                            message_type: \"4\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.id,\r\n                                            routes: `/customer/queries`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        className=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n}\r\n                                <div title=\"View Discussion Message\">\r\n                                    <i\r\n                                        className=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            color: \"orange\"\r\n                                        }}\r\n                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                    ></i>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n\r\n        }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    //check\r\n    const del = (id) => {\r\n \r\n\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Want to delete query? Yes, delete it!\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteCliente = (id) => {\r\n        // setLoading(true)\r\n        setAssignNo2(id)\r\n      showRejectedBox(!rejectedBox)\r\n       \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <Link to=\"/customer/select-category\" className=\"btn btn-primary\">\r\n                                    Fresh Query\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setQuery}\r\n                        getData={getQueriesData}\r\n                        id={userId}\r\n                        query=\"query\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                  \r\n                               <div className=\"tableFixHead\">\r\n                                <BootstrapTable\r\n                                    bootstrap4\r\n                                    keyField=\"assign_no\"\r\n                                    data={query}\r\n                                    columns={columns}\r\n                                  rowIndex\r\n                                    classes=\"table-responsive\"\r\n                                />\r\n                               \r\n                                </div>\r\n                            \r\n                    <AdditionalQueryModal\r\n                        additionalHandler={additionalHandler}\r\n                        additionalQuery={additionalQuery}\r\n                        assignNo={assignNo}\r\n                        getQueriesData={getQueriesData}\r\n                        setLoading2={setLoading2}\r\n                        loading2={loading2}\r\n                       \r\n                        des = {des}\r\n                    />\r\n\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getQueriesData}\r\n                    />\r\n                    <RejectedModal\r\n                    showRejectedBox = {showRejectedBox} \r\n                    rejectedBox = {rejectedBox}\r\n                    getQueriesData = {getQueriesData}\r\n                    assignNo={assignNo2}\r\n                    deleteCliente = {deleteCliente}/>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllQueriesData;","D:\\Mazars\\src\\components\\CategorySelect\\CategorySelect.js",["3093","3094"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/bootstrap.min.css\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport mazars from \"../../assets/images/mazars-logo.png\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Mandatory from \"../../components/Common/Mandatory\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_tax: yup.string().required(\"\"),\r\n  p_tax2: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction CategorySelect({ addfreshbtn, startbtn }, props) {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    if (store2 && store) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n      setModal(!modal);\r\n    } else {\r\n      // alert(\"please select category and subcategory\")\r\n    }\r\n  };\r\n  const validation = () => {\r\n    toggle()\r\n  }\r\n  const validation2 = () => {\r\n    toggle2()\r\n  }\r\n\r\n  const toggle2 = () => {\r\n    if (store2 && store) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n      history.push(\"/customer/addFresh\");\r\n    }\r\n  };\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(store.length != -1){\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n     }\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\r\n      >\r\n        <div className=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label>Category <span className=\"declined\">*</span></label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"p_tax\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_tax,\r\n                })}\r\n                ref={register}\r\n                onChange={(e) => setStore(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Category--</option>\r\n                {tax.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Sub Category <span className=\"declined\">*</span></label>\r\n              <select\r\n                name=\"p_tax2\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_tax2,\r\n                })}\r\n                ref={register}\r\n                onChange={(e) => setStore2(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Sub-Category--</option>\r\n                {tax2.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax2 && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax2.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n\r\n              {startbtn && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary  btn-block\"\r\n                  onClick={e => validation()} //\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n\r\n              {addfreshbtn && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary  btn-block\"\r\n                  onClick={e => validation2()} //\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n\r\n            </div>\r\n\r\n          </form>\r\n\r\n\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>\r\n              <img\r\n                src={mazars}\r\n                style={{ height: \"auto\", width: \"25%\" }}\r\n                alt=\"\"\r\n              />\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n              <div className=\"modal-body\">\r\n                <h4>Would you like to post a Query ?</h4>\r\n              </div>\r\n            </ModalBody>\r\n\r\n            <div className=\"modal-footer m-auto\">\r\n              <Link to=\"/customer/register-yourself\" className=\"btn btn-primary\">\r\n                Yes\r\n              </Link>\r\n              <Link to=\"/customer/signin\" className=\"btn btn-secondary\">\r\n                No\r\n              </Link>\r\n            </div>\r\n          </Modal>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <Mandatory />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategorySelect;\r\n\r\n","D:\\Mazars\\src\\views\\Schedule\\demo.js",["3095","3096","3097","3098","3099","3100","3101","3102","3103","3104"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  ViewState,\r\n  EditingState,\r\n  IntegratedEditing,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  DayView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  TodayButton,\r\n  Resources,\r\n  EditRecurrenceMenu,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [owner, setOwner] = useState([]);\r\n\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\r\n\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n     \r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    assign_no: appointment.assign_no,\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getAllQuery?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          \r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n       \r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n   \r\n  ];\r\n\r\n\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n   \r\n  };\r\n\r\n\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <Appointments.Appointment {...restProps}>\r\n      <div style={{ display: \"flex\" }}>\r\n      <i\r\n            class=\"fa fa-video-camera\"\r\n            onClick={() => handleJoin(data)}\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n        <div>{children}</div>\r\n        <div\r\n         \r\n        >\r\n          \r\n        </div>\r\n      </div>\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n  const handleJoin = (data) => {\r\n    // console.log(\"data\", data);\r\n//  console.log(\"data\", data)\r\n// // console.log(data.startDate)\r\n// var dt = new Date(data.startDate)\r\n// var dt2 = new Date()\r\n// let ck = dt.getMonth();\r\n\r\n// let pp = dt2.getMonth();\r\n// let rr = dt2.getHours();\r\n// let ss = dt.getHours()\r\n// let mm = dt2.getMinutes() + 20\r\n// let dd = dt.getMinutes()\r\n// let ee = dt.getDate();\r\n// let eee = dt2.getDate()\r\n//   console.log(\"dt\", dt)\r\n//   console.log(dt2.getDate())\r\n//  console.log(dt.getMinutes())\r\n//  console.log(dt2.getMinutes() + 20)\r\n//  console.log(\"ck\", ck)\r\n//   console.log(\"dt2\", dt2)\r\n//   console.log(\"pp\", pp)\r\n//   console.log(\"mm\", mm)\r\n//   console.log(\"dd\", dd)\r\n//   console.log(\"ss\", ss)\r\n//   console.log(\"rr\", rr)\r\n//   console.log(ck == pp)\r\n//   console.log(ee === eee)\r\n//   console.log(ss == rr)\r\n//   console.log(mm > dd)\r\n\r\n\r\n//if(ck == pp && ss == rr && ee == eee){\r\n\r\n\r\n// if(mm > dd){\r\n//   console.log(\"passed\")\r\n  \r\n//   Cookies.set(\"channel\", data.question_id);\r\n//   Cookies.set(\"baseMode\", baseMode);\r\n//   Cookies.set(\"transcode\", transcode);\r\n//   Cookies.set(\"attendeeMode\", attendeeMode);\r\n//   Cookies.set(\"videoProfile\", videoProfile);\r\n//   history.push(\"/customer/meeting\");\r\n\r\n// }\r\n// else{\r\n// // return false\r\n// Cookies.set(\"channel\", data.question_id);\r\n// Cookies.set(\"baseMode\", baseMode);\r\n// Cookies.set(\"transcode\", transcode);\r\n// Cookies.set(\"attendeeMode\", attendeeMode);\r\n// Cookies.set(\"videoProfile\", videoProfile);\r\n// history.push(\"/customer/meeting\");\r\n// }\r\n// }\r\nCookies.set(\"channel\", data.question_id);\r\nCookies.set(\"baseMode\", baseMode);\r\nCookies.set(\"transcode\", transcode);\r\nCookies.set(\"attendeeMode\", attendeeMode);\r\nCookies.set(\"videoProfile\", videoProfile);\r\nhistory.push(`/customer/meeting/${data.id}`);\r\n\r\n\r\n  };\r\n\r\n  const messages = {\r\n    moreInformationLabel: \"\"\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n   \r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Scheduler data={data} height={550}>\r\n        <ViewState\r\n          defaultCurrentDate={currentDate}\r\n          defaultCurrentViewName=\"Week\"\r\n        />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <EditRecurrenceMenu />\r\n        <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n        <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n        <Appointments appointmentComponent={myAppointment} />\r\n\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <ViewSwitcher />\r\n        <AppointmentTooltip showOpenButton />\r\n\r\n\r\n        <AppointmentForm\r\n          basicLayoutComponent={BasicLayout}\r\n          textEditorComponent={TextEditor}\r\n          booleanEditorComponent={BooleanEditor}\r\n          readOnly\r\n        />\r\n\r\n        <Resources\r\n          data={resources}\r\n          mainResourceName=\"username\"\r\n        />\r\n\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js",["3105"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl} from \"../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link} from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport './index.css';\r\n\r\n\r\nfunction CustomerDeclinedPayment() {\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    const [report, setReport] = useState();\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [reportModal, setReportModal] = useState(false);\r\n    const ViewReport = (key) => {\r\n      \r\n        setReportModal(!reportModal);\r\n        setReport(key.assign_no);\r\n        setDataItem(key)\r\n    };\r\n\r\n\r\n   \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAssignmentData();\r\n    }, []);\r\n\r\n\r\n    const getAssignmentData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`\r\n            )\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setAssignmentDisplay(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"created\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.created;\r\n                if (oldDate === null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.id}`,\r\n                                index: 3,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n              fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div>\r\n                    {row.paid_status === \"2\" &&\r\n                      <p>\r\n                        <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                      </p>\r\n                    }\r\n                    <p>\r\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                      {row.client_discussion}\r\n                    </p>\r\n                    <p>\r\n                      <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                      {row.draft_report}\r\n                    </p>\r\n                    <p>\r\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                      {row.final_discussion}\r\n                    </p>\r\n                    <p>\r\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                      {row.delivery_report}\r\n                    </p>\r\n                    <p>\r\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                      {row.other_stage}\r\n                    </p>\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            dataField: \"Exp_Delivery_Date\",\r\n            text: \"Expected date of delivery\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.created;\r\n                if (oldDate === null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"final_date\",\r\n            text: \"Actual date of delivery\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.final_date;\r\n                if (oldDate === null || oldDate === \"0000-00-00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Deliverable\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n\r\n{\r\n  row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\r\n    <div>\r\n      {row.assignment_draft_report || row.final_report ?\r\n        <div title=\"View All Report\"\r\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n          onClick={() => ViewReport(row)}\r\n        >\r\n          <DescriptionOutlinedIcon color=\"secondary\" />\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Team Leader name and contact number, email\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: priceFormatter,\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {row.paid_status === \"2\" ? null :\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n                        <div title=\"Send Message\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/customer/chatting/${row.id}`,\r\n                                    obj: {\r\n                                        message_type: \"4\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.id,\r\n                                        routes: `/customer/assignment`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n                    </div> }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    //tl,phone,email\r\n    function priceFormatter(cell, row) {\r\n       \r\n        if (row) {\r\n            return (\r\n                <>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setAssignmentDisplay}\r\n                        getData={getAssignmentData}\r\n                        id={userId}\r\n                        assignment=\"assignment\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignmentDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n\r\n                    <ViewAllReportModal\r\n                        ViewReport={ViewReport}\r\n                        reportModal={reportModal}\r\n                        report={report}\r\n                        getPendingforAcceptance={getAssignmentData}\r\n                        dataItem={dataItem}\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomerDeclinedPayment;","D:\\Mazars\\src\\views\\AssignmentTab\\InprogressAssignment.js",["3106"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport './index.css';\r\n\r\n\r\nfunction InprogressAssignment() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n \r\n  const [rejectedItem, setRejectedItem] = useState({});\r\n  const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n\r\n  const [rejectModal, setRejectModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    setRejectModal(!rejectModal);\r\n    setRejectedItem(key);\r\n  };\r\n\r\n\r\n  \r\n  const ViewReport = (key) => {\r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n  \r\n  };\r\n\r\n\r\n  \r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate === null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n              \r\n        return (\r\n            <>\r\n                <Link\r\n                    to={{\r\n                        pathname: `/customer/my-assingment/${row.id}`,\r\n                        index: 1,\r\n                        routes: \"assignment\",\r\n                    }}\r\n                >\r\n                    {row.assign_no}\r\n                </Link>\r\n            </>\r\n        );\r\n    },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status === \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate === null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n    \r\n        var oldDate = row.final_date;\r\n        if (oldDate === null || oldDate === \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n       \r\n        return (\r\n          <>\r\n\r\n        \r\n{\r\n  row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\r\n    <div>\r\n      {row.assignment_draft_report || row.final_report ?\r\n        <div title=\"View All Report\"\r\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n          onClick={() => ViewReport(row)}\r\n        >\r\n          <DescriptionOutlinedIcon color=\"secondary\" />\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n          {row.paid_status === \"2\" ? null :\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/customer/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"4\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/customer/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div> }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //accept handler\r\n \r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n  \r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n\r\n        \r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            rejectModal={rejectModal}\r\n            rejectedItem={rejectedItem}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InprogressAssignment;","D:\\Mazars\\src\\views\\AssignmentTab\\CompletedAssignment.js",["3107"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl} from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport './index.css';\r\n\r\n\r\nfunction CompleteAssignment() {\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [report, setReport] = useState()\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewReport = (key) => {\r\n   \r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n\r\n\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n         \r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n              \r\n        return (\r\n            <>\r\n                <Link\r\n                    to={{\r\n                        pathname: `/customer/my-assingment/${row.id}`,\r\n                        index: 2,\r\n                        routes: \"assignment\",\r\n                    }}\r\n                >\r\n                    {row.assign_no}\r\n                </Link>\r\n            </>\r\n        );\r\n    },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status === \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.created;\r\n        if (oldDate === null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.final_date;\r\n        if (oldDate === null || oldDate === \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n    \r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status === \"Payment decliend\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n\r\n                  {row.assignment_draft_report && !row.final_report ? (\r\n                    row.draft_report === \"completed\" ?\r\n                      null :\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                          <i\r\n                            class=\"fa fa-check\"\r\n                            style={{\r\n                              color: \"green\",\r\n                              fontSize: \"16px\",\r\n                            }}\r\n                            onClick={() => acceptHandler(row)}\r\n                          ></i>\r\n                        </div>\r\n\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}`,\r\n                              obj: {\r\n                                message_type: \"3\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/assignment`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                marginLeft: \"8px\",\r\n                                color: \"green\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n                  ) : null}\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/customer/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"4\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/customer/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"View Discussion Message\">\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"orange\"\r\n                  }}\r\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                ></i>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", key.id);\r\n    formData.append(\"query_no\", key.assign_no);\r\n    formData.append(\"type\", 1);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Draft accepted successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n   \r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n</div>\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompleteAssignment;","D:\\Mazars\\src\\views\\AssignmentTab\\AllAssignment.js",["3108"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport './index.css'\r\n\r\n\r\nfunction AllAssignment() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [report, setReport] = useState();\r\n  const [dataItem, setDataItem] = useState({});\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewReport = (key) => {\r\n\r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n  \r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n              \r\n        return (\r\n            <>\r\n                <Link\r\n                    to={{\r\n                        pathname: `/customer/my-assingment/${row.id}`,\r\n                        index: 0,\r\n                        routes: \"assignment\",\r\n                    }}\r\n                >\r\n                    {row.assign_no}\r\n                </Link>\r\n            </>\r\n        );\r\n    },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status === \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate === \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n     \r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {row.paid_status === \"2\" ? null :\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/customer/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/customer/assignment`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n\r\n            <div title=\"View Discussion Message\">\r\n              <i\r\n                class=\"fa fa-comments-o\"\r\n                style={{\r\n                  fontSize: 16,\r\n                  cursor: \"pointer\",\r\n                  color: \"orange\"\r\n                }}\r\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n              ></i>\r\n            </div>\r\n\r\n          </div>}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n   \r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n          </div>\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllAssignment;\r\n\r\n","D:\\Mazars\\src\\views\\AddFressAssignment\\data.js",[],"D:\\Mazars\\src\\pages\\TP\\Invoice\\Invoice.js",["3109","3110","3111","3112"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport CreateInvoice from \"./CreateInvoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <CreateInvoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\components\\LoginForm\\LoginForm.js",["3113"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Mandatory from \"../Common/Mandatory\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport { useContext } from \"react\";\r\nimport { LoginData } from \"./LoginFun\";\r\nimport { Link } from \"react-router-dom\";\r\nconst LoginForm = (props) => {\r\n    const data3 = useContext(LoginData)\r\n    const Schema = yup.object().shape({\r\n        p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n        password: yup\r\n          .string()\r\n          .required(\"\")\r\n         \r\n      });\r\n      \r\n   \r\n    const { handleSubmit, register, reset, errors } = useForm({\r\n        resolver: yupResolver(Schema),\r\n      });\r\n \r\nreturn(\r\n    <div className=\"form\">\r\n    <div className=\"heading\">\r\n      <h2>ADMIN LOGIN</h2>\r\n    </div>\r\n    <form onSubmit={handleSubmit(data3.onSubmit)} autoComplete=\"off\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n            <input\r\n              type=\"text\"\r\n              className={classNames(\"form-control\", {\r\n                \"is-invalid\": errors.p_email,\r\n              })}\r\n              name=\"p_email\"\r\n              ref={register}\r\n              placeholder=\"Enter Email\"\r\n              autocomplete=\"off\"\r\n              onChange={(e) => data3.handleChange(e)}\r\n            />\r\n            {errors.p_email && (\r\n              <div className=\"invalid-feedback\">\r\n                {errors.p_email.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n            <input\r\n              type={data3.isPasswordShow ? \"text\" : \"password\"}\r\n              className={classNames(\"form-control\", {\r\n                \"is-invalid\": errors.password,\r\n              })}\r\n              name=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              ref={register}\r\n              onCopy={(e) => {\r\n                e.preventDefault();\r\n                return false\r\n              }}\r\n              onPaste={(e) => {\r\n                e.preventDefault();\r\n                return false\r\n              }}\r\n            />\r\n            <i\r\n              className={`fa ${data3.isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n              onClick={data3.togglePasssword}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback\">\r\n                {errors.password.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        data3.loading ?\r\n          <div className=\"col-md-12\">\r\n            <Spinner color=\"primary\" />\r\n          </div>\r\n          :\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n      }\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n        <Link\r\n          to={{\r\n            pathname: \"/admin/forget-password\",\r\n            email: `${data3.email}`,\r\n          }}\r\n        >\r\n          Forgot Password\r\n        </Link>\r\n      </div>\r\n\r\n      <Mandatory />\r\n    </form>\r\n  </div>\r\n\r\n)\r\n}\r\nexport default LoginForm;","D:\\Mazars\\src\\views\\Login\\VerifyOTP.js",["3114"],"import React, {useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nconst Schema = yup.object().shape({\r\n    p_otp: yup.string().required(\"mandatory\"),\r\n});\r\n\r\n\r\nfunction VerifyOTP({ email, uid, time, setLoad,\r\n    setDisabled, disabled, loading, setLoading }) {\r\n    const { handleSubmit, register, errors, reset } = useForm({\r\n        resolver: yupResolver(Schema),\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [setText, noSetText] = useState()\r\n\r\n\r\n    const validOtp = (e) => {\r\n        if (isNaN(e.target.value)) {\r\n            e.target.value = \"\"\r\n            noSetText(\"Please enter number only.\")\r\n        }\r\n    }\r\n\r\n    const onSubmit = (value) => {\r\n\r\n        setLoading(true)\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"otp\", value.p_otp);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/verifyloginotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n               \r\n\r\n                if (response.data.code == 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessLogin(\"Login successfully.\")\r\n                    localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\r\n                    sessionStorage.setItem(\"userIdsession\", JSON.stringify(response.data.user_id));\r\n                    localStorage.setItem(\"custEmail\", JSON.stringify(response.data.name));\r\n                    history.push(\"customer/dashboard\");\r\n                } else {\r\n                    Alerts.ErrorNormal(\"Incorrect OTP\") \r\n                    setLoading(false)\r\n                    reset();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ShowError.LoadingError(setLoading)\r\n            });\r\n    }\r\n\r\n\r\n    const resendOtp = () => {\r\n        setLoading(true)\r\n        noSetText(\" \")\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"uid\", uid);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/regenrateotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"An OTP has been sent to your registered email address.\")\r\n                    setLoad(true)\r\n                    setDisabled(false)\r\n                }\r\n                else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ShowError.LoadingError(setLoading)\r\n            });\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                {\r\n                    disabled ?\r\n                        null\r\n                        :\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Enter Your OTP <span className=\"declined\">*</span></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={classNames(\"form-control\", {\r\n                                    \"is-invalid\": errors.p_otp,\r\n                                })}\r\n                                name=\"p_otp\"\r\n                                ref={register({ required: true })}\r\n                                placeholder=\"Enter your OTP\"\r\n                                onChange={(e) => validOtp(e)}\r\n                            />\r\n                            <p className=\"declinedmsg\">{setText ? setText : \"\"}</p>\r\n                            <small class=\"text-center\">\r\n                                Note: OTP is valid for {time} seconds.\r\n                            </small>\r\n\r\n                        </div>\r\n                }\r\n\r\n                {\r\n                    loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <div className=\"form-group\">\r\n                            {\r\n                                disabled ?\r\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                                    :\r\n                                    <button type=\"submit\" className=\"btn btn-success\">\r\n                                        Login\r\n                                    </button>\r\n                            }\r\n                        </div>\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default VerifyOTP;\r\n","D:\\Mazars\\src\\Service\\PrivateRouteAdmin.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteTL.js",[],"D:\\Mazars\\src\\Service\\PrivateRouteUser.js",[],"D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\PaymentStatus.js",["3115","3116","3117","3118"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllPayment from \"./AllPayment\";\r\nimport Unpaid from \"./Unpaid\";\r\nimport Paid from \"./Paid\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  const [allPayment, setAllPayment] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"\");\r\n  const [unpaid, setUnpaid] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllPaid();\r\n    getPaid();\r\n    getUnpaid();\r\n  }, []);\r\n\r\n\r\n  const getAllPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        \r\n        setAllPayment(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getPaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=1`)\r\n      .then((res) => {\r\n        \r\n        setPaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getUnpaid = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n        \r\n        setUnpaid(res.data.result.length);\r\n      });\r\n  };\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Payment ({allPayment})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Unpaid ({paid})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Paid ({unpaid})\r\n            </Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllPayment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Unpaid />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <Paid />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\DiscardReport.js",["3119"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n\r\n  const getHistory = () => {\r\n   if(report !== undefined && report.length > 0){\r\n    axios.get(`${baseUrl}/customers/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n   }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type === \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\r\n                      {\r\n                        p.type === \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Recording\\Recording.js",["3120","3121","3122"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport RecordingEdit from './RecordingEdit';\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './recording.css';\r\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const [showEditModal, setShowEditModal] = useState(false)\r\n    const [editData, setEditData] = useState({\r\n        participant : '',\r\n        editMessage : '',\r\n        assignid : '',\r\n        id : ''\r\n    })\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\n\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n    const videoIcon = {\r\n        display : \"flex\", \r\n        justifyContent : \"space-around\", \r\n        alignItems : \"center\"\r\n    }\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"fixed\",\r\n        top: \"50%\",\r\n        left : \"50%\",\r\n        transform : \"translate(-50%, -50%)\",\r\n      justifyContent : \"center\",\r\n      alignItems : \"center\",\r\n        width : \"100%\", \r\n        height: \"auto\",\r\n        flexDirection : \"column\"\r\n    }\r\nconst canBtn = {\r\n   \r\n    display : \"flex\",\r\n    width : \"50vw\",\r\n    alignItems : \"flex-end\",\r\n    justifyContent : \"flex-end\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\", \r\n    color : \"red\"\r\n}\r\nconst editRecording = (participants, assign_id, message, id) => {\r\n   \r\n    setShowEditModal(!showEditModal)\r\n    setEditData({\r\n        participant : participants,\r\n        editMessage : message,\r\n        assignid : assign_id,\r\n        id : id\r\n    })\r\n}\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n            formatter : function formatter(cell, row){\r\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\r\n                return <>\r\n                <Link\r\n                to = {{\r\n                    pathname : `/taxprofessional/queries/${a}`,\r\n                    routes : \"recording\"\r\n                }}>\r\n                {row.assign_id}\r\n                </Link>\r\n                </>\r\n            }\r\n        },\r\n        \r\n\r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                       <div>\r\n                    {row.record_by === JSON.parse(userid) && row.message === null?\r\n                             <i\r\n                             className=\"fa fa-edit\"\r\n                             style={{\r\n                               fontSize: 18,\r\n                               cursor: \"pointer\",\r\n                               marginLeft: \"8px\",\r\n                             }}\r\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\r\n                           ></i> : \"\"}\r\n                    </div>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n                                    <>\r\n                                    <p style={videoIcon}>\r\n                                   {record.length === 0 ? \"\" : \r\n                                   <>\r\n                                     <span>{a++}</span>   <i\r\n                                        className=\"material-icons\"\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            color: \"red\",\r\n                                            fontSize: \"25px\",\r\n                                        }}\r\n                                        onClick={() => openModal(record)}\r\n                                    >\r\n                                        play_circle_outline\r\n                                     \r\n                                    </i>\r\n                                  \r\n                                   </>}\r\n                                  \r\n                                    </p>\r\n                                    </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n     <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                <RecordingFilter\r\n                       setData={setFeedBackData}\r\n                    //    getData={getInCompleteAssingment}\r\n                       SearchQuery=\"SearchQuery\"\r\n                      setRecords={setRecords}\r\n                       records={records} \r\n                       userid = {userid}\r\n                       getRecording = {getRecording}\r\n                    /> \r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n\r\n            </Card>\r\n          \r\n           </div>\r\n            \r\n          \r\n          <RecordingEdit \r\n          isOpen = {showEditModal}\r\n          recordingHandler = {editRecording}\r\n          participants = {editData.participant}\r\n          message = {editData.editMessage}\r\n          assignid = {editData.assignid}\r\n          editId = {editData.id}\r\n          recList = {getRecording}/>\r\n                     {isOpen === true ?\r\n          \r\n                 \r\n          <div className=\"modalBox\">\r\n          <div className=\"boxContainer\">\r\n          <div className=\"canBtn\"  title=\"cancel\">\r\n              <h4>Recording Player</h4>\r\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\r\n         \r\n\r\n         <div className=\"my2\">\r\n         <ReactPlayer\r\n           url={videoid}\r\n           controls={true}\r\n           playing={true}\r\n           width='100%'\r\n           height='100%'\r\n          />\r\n             </div>\r\n          </div>\r\n     \r\n    </div>\r\n  : \"\"}\r\n         </Layout>\r\n\r\n           </>\r\n\r\n    );\r\n}\r\n\r\nexport default Recording;","D:\\Mazars\\src\\pages\\TP\\MeetingComponent\\MeetingComponent.js",["3123","3124","3125","3126"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  \r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id} />\r\n  \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\TP\\ViewNotification\\ViewNotification.js",["3127","3128","3129","3130","3131"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  console.log(\"data-\", data);\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n           \r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\TP\\Chatting\\Chatting.js",["3132","3133","3134","3135","3136","3137"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n  msg_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataTL\");\r\n\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.msg_type);\r\n    formData.append(\"message\", value.p_message);\r\n   \r\n    formData.append(\"sst\", \"tp\")\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.msg_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.msg_type.message}\r\n                          </div>\r\n                        )}\r\n\r\n                      </div>\r\n                     \r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\pages\\TP\\Schedule\\Schedule.js",["3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n      backgroundColor: \"grey\",\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"blue\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n  \r\n    return (\r\n      <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\pages\\TP\\AddAssingmentStages\\AddAssingmentStages.js",["3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nfunction AddAssingmentStages() {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [assignmentStages, setAssignmentstages] = useState([]);\r\n  const [clientDiscussion, setClientDiscussion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setAssignmentstages(res.data.result);\r\n          reset(res.data.result[0]);\r\n          setClientDiscussion(res.data.result[0].client_discussion)\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\r\n    {    \r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding. Do you still want to proceed to complete this query?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then((result) => {\r\n      if (result.value === true) {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n    \r\n        formData.append(\"q_id\", id);\r\n        formData.append(\"user_id\", JSON.parse(userid));\r\n        formData.append(\"stage_1_status\", value.client_discussion);\r\n        formData.append(\"stage_2_status\", value.draft_report);\r\n        formData.append(\"stage_3_status\", value.final_discussion);\r\n        formData.append(\"stage_4_status\", value.delivery_report);\r\n        formData.append(\"stage_5_status\", value.other_stage);\r\n    \r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/postAssignmentStages`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n          \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\r\n              getAssignmentList();\r\n              history.push(\"/taxprofessional/assignment\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n        \r\n          });\r\n     \r\n      }\r\n      else{\r\n        history.push(\"/taxprofessional/assignment\");\r\n        return false\r\n      }\r\n    });\r\n\treturn false;\r\n    }\r\n    else{\r\n      setLoading(true)\r\n\r\n      let formData = new FormData();\r\n \r\n      formData.append(\"q_id\", id);\r\n      formData.append(\"user_id\", JSON.parse(userid));\r\n      formData.append(\"stage_1_status\", value.client_discussion);\r\n     \r\n       formData.append(\"stage_2_status\", value.draft_report);\r\n     \r\n      formData.append(\"stage_3_status\", value.final_discussion);\r\n    \r\n     formData.append(\"stage_4_status\", value.delivery_report);\r\n     \r\n       formData.append(\"stage_5_status\", value.other_stage);\r\n  \r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/postAssignmentStages`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\r\n            getAssignmentList();\r\n            history.push(\"/taxprofessional/assignment\");\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    \r\n    }\r\n     \r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Assignment Stages</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            {assignmentStages.map((p, i) => (\r\n              <>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\" ? (\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-8\">\r\n                      <br />\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Client Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.client_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Draft Report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.draft_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Final Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.final_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Delivery of report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.delivery_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Awaiting Completion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.other_stage}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn btn-primary\"\r\n                            disabled\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Client Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                       {p.client_discussion === \"completed\" ? \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"client_discussion\"\r\n                            disabled\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            \r\n                          </select>\r\n                        </div>\r\n                      </div> : \r\n                       <div class=\"col-md-4\">\r\n                       <div class=\"form-group\">\r\n                         <select\r\n                           class=\"form-control\"\r\n                           ref={register}\r\n                           name=\"client_discussion\"\r\n                         >\r\n                           <option value=\"inprogress\">Inprogress</option>\r\n                           <option value=\"completed\">Completed</option>\r\n                           \r\n                         </select>\r\n                       </div>\r\n                     </div>}\r\n\r\n                       \r\n\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Draft Report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {\r\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\r\n                          <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"draft_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              \r\n                            </select>\r\n                          </div>\r\n                        </div> :\r\n                         <div class=\"col-md-4\">\r\n                         <div class=\"form-group\">\r\n                           <select\r\n                             class=\"form-control\"\r\n                             ref={register}\r\n                             disabled\r\n                             defaultValue = \"inprogress\"\r\n                             name=\"draft_report\"\r\n                           >\r\n                             <option value=\"inprogress\">Inprogress</option>\r\n                             <option value=\"completed\">Completed</option>\r\n                             \r\n                           </select>\r\n                         </div>\r\n                       </div>\r\n                        }\r\n                       \r\n                      \r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Final Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"final_discussion\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                           \r\n                          </select>\r\n                        </div>\r\n                      </div> : \r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"final_discussion\"\r\n                            disabled\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                           \r\n                          </select>\r\n                        </div>\r\n                      </div> }\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Delivery of report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"delivery_report\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            \r\n                          </select>\r\n                        </div>\r\n                      </div> :\r\n                      <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <select\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                          name=\"delivery_report\"\r\n                          disabled\r\n                        >\r\n                          <option value=\"inprogress\">Inprogress</option>\r\n                          <option value=\"completed\">Completed</option>\r\n                          \r\n                        </select>\r\n                      </div>\r\n                    </div>}\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Awaiting Completion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \r\n                        ? <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                          <select\r\n                            class=\"form-control\"\r\n                            ref={register}\r\n                            name=\"other_stage\"\r\n                          >\r\n                            <option value=\"inprogress\">Inprogress</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      : <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <select\r\n                          class=\"form-control\"\r\n                          ref={register}\r\n                          name=\"other_stage\"\r\n                          disabled\r\n                        >\r\n                          <option value=\"inprogress\">Inprogress</option>\r\n                          <option value=\"completed\">Completed</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>}\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-group\">\r\n                        {\r\n                          loading ?\r\n                            <Spinner color=\"primary\" />\r\n                            :\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                              Submit\r\n                            </button>\r\n                        }\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddAssingmentStages;\r\n","D:\\Mazars\\src\\pages\\TP\\Message\\Message.js",["3171","3172","3173","3174","3175","3176","3177"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\nfunction Message(props) {\r\n   \r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"tpkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\nconst history = useHistory();\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\r\n                        {row.assign_no}\r\n                        {/* </Link> */}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link to={`/taxprofessional/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display : \"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"  \r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\",\r\n                                        display :\"flex\",\r\n                                        justifyContent : \"space-between\",\r\n                                        wordBreak : \"break-word\"}}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n       \r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                \r\n            })\r\n            .catch((error) => {\r\n               \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\pages\\TP\\FeedbackTab\\FeedbackTab.js",["3178","3179","3180","3181","3182"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router\";\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\nconst history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setFeedBackData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n     \r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.tp_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\", wordBreak : \"break-word\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", wordBreak : \"break-word\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n    \r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          // alert.success(\"successfully read!\");\r\n          getFeedback()\r\n          history.push(\"/taxprofessional/feedback\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","D:\\Mazars\\src\\pages\\TP\\Report\\Report.js",["3183"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\n\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n    const [item] = useState(current_date);\r\n    const { handleSubmit, register, errors, getValues } = useForm();\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n      \r\n        // formData.append(\"category\",);\r\n        // formData.append(\"subCategory\");\r\n        formData.append(\"q_no\", value.qno);\r\n        formData.append(\"date_query\", value.dateQuery);\r\n        formData.append(\"cust_id\", value.cust_id);\r\n        formData.append(\"basic_category\", value.basicCategory);\r\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\r\n        formData.append(\"assessment\", value.assessment);\r\n        formData.append(\"purpose\", value.purpose);\r\n        formData.append(\"p_format\", value.p_format);\r\n        formData.append(\"t_requested\", value.t_requester);\r\n        formData.append(\"spc_que\", value.spc_que);\r\n        formData.append(\"date_allocation\", value.doa);\r\n        \r\n        formData.append(\"date_proposal\", value.dateProposal);\r\n        formData.append(\"proposed_amount\", value.proposedAmount);\r\n        formData.append(\"payment_terms\", value.paymentTerms);\r\n        formData.append(\"proposal_status\", value.proposal_status);\r\n        formData.append(\"accepted_amount\", value.acceptedAmount);\r\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\r\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\r\n        formData.append(\"amount_overdue\", value.amount_overdue);\r\n        formData.append(\"payment_declined\", value.declinedDate);\r\n        formData.append(\"assignment_number\", value.assignNumber);\r\n        formData.append(\"assign_date\", value.assignDate);\r\n        formData.append(\"proposed_completion_date\", value.completionDate);\r\n        formData.append(\"assignment_status\", value.assignStatus);\r\n        formData.append(\"date_complation\", value.completionQuery);\r\n        formData.append(\"assign_time\", value.assignTime);\r\n        formData.append(\"payment_recived_date\", value.receiptDate);\r\n        formData.append(\"amount_received\", value.amountReceived);\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/reports`,\r\n     data : formData\r\n\r\n   })\r\n    }\r\n    return (\r\n        <>\r\n          <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n          <div className=\"adminForm\">\r\n          <Typography variant=\"h4\">Taxprofessional Report</Typography>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti = {true} />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti={true} />\r\n            </div>\r\n   </div> \r\n  \r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Data Query</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Client Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\r\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\r\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assignment</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\r\n<label htmlFor=\"assignNumber\">Assignment Number</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n            </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n   \r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\components\\Search-Filter\\CustomerFilter.js",["3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3196","3197","3198","3199","3200","3201","3202","3203","3204","3205"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\n\r\nfunction CustomerFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const { records,\r\n    setRecords, setData, getData, id,\r\n    query,\r\n    InprogressAllocation,\r\n    InprogressQueryProposal,\r\n    DeclinedQuery,\r\n\r\n    proposal,\r\n    inprogressProposal,\r\n    acceptedProposal,\r\n    declinedProposal,\r\n    allPayment,\r\n    paid,\r\n    unpaid,\r\n    assignment } = props;\r\n\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\nconst [loading, setLoading] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n     if(selectedData != undefined){\r\n      axios\r\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n     }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n\r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n  setLoading(true)\r\n\r\n    if (query == \"query\") {\r\n\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (InprogressAllocation == \"InprogressAllocation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?uid=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}&status=${data.p_status}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (proposal == \"proposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (inprogressProposal == \"inprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=3pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n\r\n    if (assignment == \"assignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    if (allPayment == \"allPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n    if (unpaid == \"unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n    if (paid == \"paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n      \r\n          if (res.data.code === 1) {\r\n            setLoading(false)\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          ShowError.LoadingError(setLoading)\r\n         });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-inline\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  {query == \"query\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressAllocation == \"InprogressAllocation\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Client Declined; Queries</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                      <option value=\"4\">Client Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {proposal == \"proposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {inprogressProposal == \"inprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {allPayment == \"allPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {assignment == \"assignment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress</option>\r\n                      <option value=\"2\">Completed</option>\r\n                      <option value=\"3\">Payment Declined</option>\r\n                    </select>\r\n                  )}\r\n\r\n                </div>\r\n\r\n               \r\n                {\r\n                      loading ?\r\n                        <Spinner color=\"primary\" />\r\n                        :\r\n                        <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                        Search\r\n                      </button>\r\n                    }\r\n                <Reset />\r\n\r\n               \r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerFilter;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AssignmentTab.js",["3206","3207","3208","3209"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport DraftReportTab from \"./DraftReportTab\";\r\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n  const [draft, setDraft] = useState(\"\");\r\n  const [final, setFinal] = useState();\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px 24px\",\r\n    borderRadius: \"50px\",\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const AllAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setAllAssignmentCount(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getDraftReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setDraft(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getFinalReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setFinal(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    AllAssignment();\r\n    getDraftReports();\r\n    getFinalReports();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignments ({allAssignmentCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Draft Reports ({draft})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Delivery of Final ({final})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DraftReportTab />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeliveryFinalTab />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","D:\\Mazars\\src\\views\\PaymentStatus\\PaymentComponent.js",["3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  pay,\r\n  getPaymentStatus,\r\n  pay3\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  const { assign_id, amount, accepted_amount, paid_amount,\r\n    payment_terms, no_of_installment, installment_amount,\r\n    due_date, amount_type, amount_fixed, amount_hourly\r\n  } = pay;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", assign_id);\r\n    formData.append(\"status\", 8);\r\n    formData.append(\"amount\", value.p_amount);\r\n\r\n  \r\n    axios.get(`${baseUrl}/admin/getPaymentDetail?id=${assign_id}`)\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n         \r\n          window.location.href= (`${response.data.payment_detail[0].paymenturl}`)\r\n         \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\nif(addPaymentModal === true){\r\n  var kk = pay.installment_amount.split(\",\")\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal}  toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\r\n        {\r\n          loading ?\r\n            <Loader />\r\n            :\r\n            <>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <tr>\r\n                    <th>Paid Amount</th>\r\n                    <th>Due Date</th>\r\n                    <th>Pay</th>\r\n                  </tr>\r\n                  {kk?.map((i, e) => (\r\n                    <tr>\r\n                    <td>{i == \"0\" ? pay.amount : i }</td>\r\n                    <td> {CommonServices.removeTime(due_date)}</td>\r\n                    <td><form onSubmit={handleSubmit(onSubmit)}>\r\n                  {+accepted_amount == +paid_amount ? <p>paid</p> : (\r\n                   <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Pay\r\n                   </button>\r\n                    \r\n                \r\n                  )}\r\n                </form></td>\r\n                  </tr>\r\n                 ))}\r\n                 \r\n                \r\n                </table>\r\n                \r\n              </ModalBody>\r\n            </>\r\n        }\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\pages\\TP\\NewPassword\\NewPassword.js",["3226","3227","3228","3229","3230","3231"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { localeData } from \"moment\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [load, setLoad] = useState(true);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, [load]);\r\n\r\n\r\n  const getTime = () => {\r\n    var timerOn = true;\r\n    function timer(remaining) {\r\n      var s = remaining % 60;\r\n      s = s < 10 ? '0' + s : s;\r\n      setTime(remaining)\r\n      remaining -= 1;\r\n      if (remaining >= 0 && timerOn) {\r\n        setTimeout(function () {\r\n          timer(remaining);\r\n        }, 1000);\r\n        return;\r\n      }\r\n      setDisabled(true)\r\n    }\r\n    setLoad(false)\r\n    timer(180);\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/taxprofessional/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id}  setLoad={setLoad} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}","D:\\Mazars\\src\\pages\\TP\\Dashboard\\Dashboard.js",["3232","3233","3234"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\nconst sessionTpid = window.sessionStorage.getItem(\"sessionTpid\")\r\nlet history = useHistory()\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid,\r\n    totalpayment } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/tp/totalComplete?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tp_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n       \r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n              totalpayment: response.data.result.totalpayment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n         \r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n\r\n\r\n const logout = () => {\r\n   localStorage.removeItem(\"tpkey\")\r\n   localStorage.removeItem(\"tpEmail\")\r\n   history.push(\"/taxprofessional/login\")\r\n }\r\n  \r\n\r\n  return (\r\n  <>\r\n  {sessionTpid ?\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n\r\n    <div className=\"row\">\r\n\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n        <table className=\"table table-striped first main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Queries</th>\r\n              <th>{total}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <table className=\"table table-striped second main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Queries</th>\r\n              <th>{inprogress_queries}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Allocation</td>\r\n              <td>{inprogress_allocation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Proposals</td>\r\n              <td>{inprogress_proposal}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Assignments</td>\r\n              <td>{inprogress_assignment}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <table className=\"table table-striped third main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Completed; Queries</th>\r\n              <th>{complete_query}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Completed; Assignments</td>\r\n              <td>{complete_query}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <table className=\"table table-striped forth main_table\">\r\n          <thead className=\"query_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Declined; Queries</th>\r\n              <th>{declined_queries}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"table_body\">\r\n           \r\n            <tr>\r\n              <td className=\"left_side\">Client Declined; Proposals</td>\r\n              <td>{customer_declined_proposal}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Client Declined; Payment</td>\r\n              <td>{Customer_declined_payment}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n\r\n        <table className=\"table table-striped fifth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Proposals</th>\r\n              <th>{allproposal}</th>\r\n\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped sixth main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Proposals</th>\r\n              <th>{InProgress}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody classNameName=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Preparation</td>\r\n              <td>{inprogress_preparation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Inprogress; Acceptance</td>\r\n              <td>{inprogress_acceptance}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table className=\"table table-striped seventh main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Accepted; Proposals </th>\r\n              <th>{accepted_proposals}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped eight main_table\">\r\n          <thead className=\"proposal_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">Client Declined; Proposals</th>\r\n              <th>{declined}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n        <table className=\"table table-striped ninth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Assignments</th>\r\n              <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Inprogress; Assignments</th>\r\n              <th>{inprogress}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody classNameName=\"table_body\">\r\n            <tr>\r\n              <td className=\"left_side\">Client Discussion</td>\r\n              <td>{client_discussion}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Draft Reports</td>\r\n              <td>{draft_report}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Final Discussion</td>\r\n              <td>{final_discussion}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Delivery of Final Reports</td>\r\n              <td>{final_report}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left_side\">Awaiting Completion</td>\r\n              <td>{complete_inprocess}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Completed; Assignments</th>\r\n              <th>{complete}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped tenth main_table\">\r\n          <thead className=\"assignment_thead\">\r\n\r\n            <tr>\r\n              <th className=\"left_side\">Client Declined; Payment</th>\r\n              <th>{customer_declined_payment}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n\r\n\r\n      <div className=\"col-md-3 content_header\">\r\n\r\n        <table className=\"table table-striped twelvth main_table\">\r\n          <thead className=\"payment_thead\">\r\n            <tr>\r\n              <th className=\"left_side\">All Payments</th>\r\n              <th>{totalpayment}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <table className=\"table table-striped thirteen main_table\">\r\n          <thead className=\"payment_thead2\">\r\n            <tr>\r\n              <th className=\"left_side\">Paid</th>\r\n              <th>{paid}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n\r\n        <table className=\"table table-striped thirteen main_table\">\r\n          <thead className=\"payment_thead2\">\r\n            <tr>\r\n              <th className=\"left_side\">Unpaid</th>\r\n              <th>{unpaid}</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </Layout> : \r\n  <>\r\n  {logout()}\r\n  </>}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Mazars\\src\\pages\\TP\\SendProposal\\SendProposal.js",["3235","3236"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ProposalComponent from \"./ProposalComponent\";\r\n\r\n\r\nfunction SendProposal() {\r\n    const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  console.log(\"userid\", userid)\r\n  return (\r\n    <>\r\n   <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n        <ProposalComponent id={id}/>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendProposal;\r\n","D:\\Mazars\\src\\pages\\TP\\EditProposal\\EditProposal.js",["3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction EditComponent() {\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [dateError, setDateError] = useState(false)\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const[clearValue, setClearValue] = useState(true)\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  \r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    fixed_amount: \"\",\r\n    payable: \"\",\r\n    description: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n\r\n  const { query, name, description, fixed_amount,\r\n    due_date, installment_amount } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n   \r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          fixed_amount: res.data.result.amount,\r\n          description: res.data.result.description,\r\n          installment_amount: res.data.result.installment_amount,\r\n          due_date: res.data.result.due_date,\r\n        });\r\n\r\n        var payment_terms = res.data.result.payment_terms\r\n        var no_of_installment = res.data.result.no_of_installment\r\n\r\n        const data1 = {\r\n          label: payment_terms,\r\n          value: payment_terms,\r\n        }\r\n\r\n        const data2 = {\r\n          label: no_of_installment,\r\n          value: no_of_installment,\r\n        }\r\n\r\n      \r\n        setPayment(data1);\r\n        setInstallment(data2);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n\r\n\r\n \r\n  const onSubmit = (value) => {\r\n   \r\n    if(diserror.length > 0){\r\n      return false\r\n    }\r\n    else if(dateError === true){\r\n      Alerts.ErrorNormal(\"Date must be unique\")\r\n     }\r\n     else{\r\n\r\n     \r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n\r\n    if (payment.length < 1) {\r\n     \r\n     \r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n          } else if (amount && date) {\r\n            \r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n\r\n              } else {\r\n              \r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tp/updateProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      var variable = \"Proposal Updated Successfully \"\r\n                      Alerts.SuccessNormal(variable)\r\n                      history.push(\"/taxprofessional/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                 \r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n     \r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tp/updateProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n           \r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal updated successfully\"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/taxprofessional/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n        \r\n          });\r\n        }\r\n        }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n   \r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"It will be permanently deleted !\");\r\n    }\r\n    else if(e.target.value == \"0\"){\r\n      setdiserror(\"Amount should be greater than zero\")\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n  \r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n \r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n    if(new Set(array2).size !== array2.length){\r\n      setDateError(true)\r\n     Alerts.ErrorNormal(\"Date must be unique\")\r\n    }\r\n    else{\r\n      setDateError(false)\r\n    }\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n    \r\n    setInstallment(key)\r\n    setClearValue(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    defaultValue={fixed_amount}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    defaultValue={description}\r\n                    ref={register({ required: true })}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Client Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    onChange={setPayment}\r\n                    value={payment}\r\n                    options={paymentsTerms}\r\n                  />\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date,\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      defaultValue={due_date}\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(e => installmentHandler(e))}\r\n                        value={installment}\r\n                        options={noInstallments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    installment_amount && due_date &&\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      installment_amount={installment_amount}\r\n                      due_date={due_date}\r\n                      getQuery={getQuery}\r\n\r\n                      item={item}\r\n\r\n                    \r\n                      clearValue={clearValue}\r\n\r\n                    />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditComponent;\r\n\r\nconst paymentsTerms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst noInstallments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\ChangePassword\\ChangePassword.js",["3264","3265","3266","3267","3268","3269","3270","3271"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import \"../../assets/css/style.css\";\r\n// import \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_password: yup.string().required(\"required password\"),\r\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n\r\nfunction ChangePassword(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const alert = useAlert();\r\n  // const { handleSubmit, register, reset, errors } = useForm({\r\n  //   resolver: yupResolver(Schema),\r\n  // });\r\n\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = (value) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"rpassword\", value.confirm_password);\r\n\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/customers/passChange`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //   \r\n    //     if (response.data.code === 1) {\r\n    //       alert.success(\"change password successfully!\");\r\n    //       reset();\r\n    //     } else if (response.data.code === 0) {\r\n    //       \r\n\r\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n    //       reset();\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //    \r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter email id\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}{\" \"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","D:\\Mazars\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js",["3272","3273","3274","3275","3276"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"otp send your email !\",\r\n            \"icon\" : \"success\"\r\n          })\r\n        \r\n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n         \r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n    \r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paydetails.js",["3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Typography } from \"antd\";\r\n\r\nconst PayDetails = () => {\r\n    let history = useHistory();\r\n    const userId = window.localStorage.getItem(\"tpkey\");\r\n    const { id } = useParams();\r\n    const [paymentDetail, setPaymentDetail] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState()\r\n    const [showTable, setShowTable] = useState(null);\r\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\r\n    const paydetails2 = () => {\r\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}`)\r\n.then((res) => {\r\n    if(res.data.code === 1){\r\n       \r\n        setPaymentDetail(res.data.payment_detail)\r\n       \r\n       if(res.data.payment_detail.length > 0){\r\n           setShowTable(true)\r\n       }\r\n       else {\r\n           setShowTable(false)\r\n       }\r\n    }\r\n   \r\n})\r\n    }\r\n    useEffect(() => {\r\n        paydetails2()\r\n    }, [])\r\n const openModal = (key) => {\r\n   if(key){\r\n       setModalData(key)\r\n   \r\n   }\r\nsetModal(!modal)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Q.No\",\r\n            \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"installment_no\",\r\n            text: \"Installment No\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"80px\" };\r\n            },\r\n           \r\n           \r\n        },\r\n        {\r\n            dataField: \"billno\",\r\n            text: \"Invoice No\",\r\n           \r\n            \r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.invoice_generated == \"0\" ? \"\" : \r\n                    <p>{row.billno}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"due_date\",\r\n            text: \"Due Date\",\r\n           sort : true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n       \r\n        {\r\n            dataField: \"invoice_amount\",\r\n            text: \"Invoice Amount\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField : \"tds_amount\",\r\n            text : \"Tds Deducted\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.tds_amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField : \"amount\",\r\n            text : \"Amount Paid\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter: function (cell,row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        \r\n        {\r\n            dataField: \"invoice\",\r\n            text: \"Invoice\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                return(\r\n                   <>\r\n                   {row.invoice_generated == \"1\" ? \r\n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\r\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\r\n                   </>\r\n                )\r\n            },\r\n           \r\n        },\r\n        \r\n       \r\n        {\r\n            dataField: \"\",\r\n            text: \"Payment Details\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n           \r\n           formatter: function dateFormat(cell, row){\r\n           \r\n               return(\r\n                <>\r\n                {row.invoice_generated == \"1\" ? \r\n              <>\r\n              {row.is_paid == \"0\" ? \r\n                \"\" :   <>\r\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target=\"_blank\">Payment receipt</a> \r\n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\r\n            </>}\r\n              </>\r\n               : \"\"}\r\n                </>\r\n                  \r\n                   \r\n               )\r\n           }\r\n        },\r\n           \r\n      ];\r\n    \r\n      const copyFun = (e)  =>{\r\n   \r\n        navigator.clipboard.writeText(e)\r\n       \r\n      }\r\n      const Container = styled.div `\r\n      dispaly : flex;\r\n      width : 100%;\r\n      height : 100%;\r\n      justify-content : center;\r\n      align-items : center;\r\n      color: red`\r\nreturn(\r\n   <>\r\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\r\n    {paymentDetail === undefined ? \"\" : \r\n  <Card>\r\n      <CardHeader>\r\n         <Row>\r\n         <Col md=\"8\">\r\n              <h4>Payment Details</h4>\r\n              </Col>\r\n      <Col md=\"4\">\r\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n         </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n          <div className=\"tableFixHead\">\r\n  <BootstrapTable\r\n  bootstrap4\r\n  keyField=\"id\"\r\n  data={paymentDetail}\r\n  columns={columns}\r\n  classes=\"table-responsive\"\r\n/> \r\n</div>\r\n</CardBody>\r\n</Card>}\r\n</Layout>                  \r\n   </>\r\n)\r\n}\r\nexport default PayDetails;","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\QueriesTab.js",["3304","3305","3306","3307","3308","3309"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\r\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\r\nimport CompleteData from \"../CompleteData/CompleteData\";\r\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\r\nimport AllQuery from \"./AllQuery\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  \r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  const [allQuery, setAllQuery] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const AllQuery = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setAllQuery(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getPendindForAccepttence = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setPendingForAcceptence(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n     \r\n      axios\r\n     \r\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\r\n        .then((res) => {\r\n    \r\n          if (res.data.code === 1) {\r\n         \r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const Declined = () => {\r\n   \r\n      axios\r\n        .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setDeclined(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getPendindForAccepttence();\r\n    getIncomplete();\r\n    getComplete();\r\n    AllQuery();\r\n    Declined()\r\n  }, []);\r\n\r\n  const updateTab = (key) => {\r\n    setTabIndex(key)\r\n  }\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Query ({allQuery})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Pending For Acceptence ({pendindForAccepttence})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries ({incomplete})\r\n            </Tab>\r\n            {/* <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n            Pending for assignment({complete})\r\n            </Tab> */}\r\n            {/* <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab> */}\r\n          </TabList>\r\n\r\n\r\n          <TabPanel>\r\n            <AllQuery\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <PendingForAcceptence\r\n              updateTab={updateTab}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <InCompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <CompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <DeclinedQuery\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n ","D:\\Mazars\\src\\pages\\TP\\Proposal\\ProposalTab.js",["3310","3311","3312","3313","3314"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction ProposalTab(props) {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n    const [allProposal, setAllProposal] = useState(\"\");\r\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\r\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"auto\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px 24px\",\r\n        borderRadius: \"50px\",\r\n        width: \"auto\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const AllProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAllProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const InprogressProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setInprogressProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const AcceptedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setAcceptedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const DeclinedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\r\n                .then((response) => {\r\n                   \r\n                    if (response.data.code === 1) {\r\n                        setDeclinedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        AllProposal();\r\n        InprogressProposal();\r\n        AcceptedProposal();\r\n        DeclinedProposal();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Proposals ({allProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Proposals ({inprogressProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                            Accepted; Proposals ({acceptedProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n                            Client Declined; Proposals ({declinedProposal})\r\n                        </Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AllProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <InprogressProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <AcceptedProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <DeclinedProposal />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js",["3315","3316"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\nimport moment from 'moment';\r\nfunction QueriesRecevied(props) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [tlName2, setTlname] = useState();\r\n  const[tp22, setTp22] = useState();\r\n  const [tpStatus, setTpstatus] = useState();\r\n  const [accept, setAccept] = useState();\r\n  const [finalDate, setFinalDate] = useState()\r\n  const [qstatus, setqStatus] = useState();\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n    proposal_reactive_dates: \"\",\r\n    proposal_reactive_notes: \"\"\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tpname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setqStatus(res.data.result[0].query_status)\r\n          setTpstatus(res.data.result[0].tp_status);\r\n          setAccept(res.data.result[0].query_status)\r\n          setTlname(res.data.result[0].tlname);\r\n          setTp22(res.data.result[0].tpname);\r\n          if(res.data.history_queries[0] === undefined){\r\n\r\n          }\r\n          else{\r\n            setDisplayHistory({\r\n              tlname: res.data.proposal_queries,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          \r\n          }\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setPaymentDetails(res.data.payment_detail);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n          setFeedback(res.data.feedback_detail);\r\n          setReports(res.data.reports);\r\n\r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n        \r\n          \r\n          try {\r\n           \r\n            var myYear = JSON.parse(assementItem);\r\n           \r\n            setYear(myYear);\r\n          } catch (e) {\r\n           \r\n          }\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            \r\n            setPurpose(myPurpose);\r\n           \r\n          } catch (e) {\r\n           \r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\r\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\r\n            });\r\n            let a = moment(res.data.result[0].final_date);\r\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\r\n            let c = a.diff(b)\r\n            let d = moment.duration(c)\r\n            let finalDate = d.days() + 1;\r\n           setFinalDate(finalDate)\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          // if (res.data.history_queries.length > 0) {\r\n          //   setDisplayHistory({\r\n          //     tlname: res.data.history_queries[0].tname,\r\n          //     date_of_allocation:\r\n          //       res.data.history_queries[0].date_of_allocation,\r\n          //   });\r\n          // }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n  const getQuery = () => {\r\n  if(assingNo === undefined){\r\n    return false\r\n  }\r\n  else{\r\n    axios\r\n    .get(`${baseUrl}/tp/GetAdditionalQueries?assignno=${assingNo}`)\r\n    .then((res) => {\r\n     \r\n      if (res.data.code === 1) {\r\n        setDisplayQuery(res.data.result);\r\n      }\r\n    });\r\n  }\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n              <Link\r\n                  to={{\r\n                    pathname: `/taxprofessional/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n                accept = {accept}\r\n                tpStatus={tpStatus}\r\n                tlName2={tlName2}\r\n                tp22 = {tp22}\r\n                finalDate={finalDate}\r\n                qstatus={qstatus}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n","D:\\Mazars\\src\\pages\\TP\\Login\\Login.js",["3317","3318","3319"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport Cookies from \"js-cookie\";\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  let history = useHistory()\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [uid, setUid] = useState('')\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tp\");\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          Cookies.set(\"tpName\", response.data.display_name)\r\n          setLoading(false)\r\n          setShow(true)\r\n          Swal.fire({\r\n            \"title\" : \"success\", \r\n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\r\n            \"icon\" : \"success\"\r\n          })\r\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setUid(response.data[\"user id\"])\r\n          logout()\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Invalid email or password.\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"adminkey\");\r\n      localStorage.removeItem(\"adminEmail\");\r\n      history.push(\"/taxprofessional/login\");\r\n    }, 36000000)\r\n  }\r\n  const handleChange = (e) => {\r\n   \r\n    setEmail(e.target.value);\r\n  };\r\n  if(window.location.origin === \"http://mazars.multitvsolution.com\" && window.location.protocol == 'http:'){\r\n    window.location.href = window.location.href.replace('http:', 'https:')\r\n  }\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" noTpSign = \"noTpSign\"/>\r\n      <div class=\"container\">\r\n\r\n        {\r\n          show ? <div>\r\n            <VerifyOtpLogin email={email} uid={uid}\r\n              loading={loading}\r\n              setLoading={setLoading} />\r\n          </div>\r\n            :\r\n            <div class=\"form\">\r\n              <div class=\"heading\">\r\n                <h2>TAX PROFESSIONAL LOGIN</h2>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}  autocomplete=\"off\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Email\"\r\n                       \r\n                        onChange={(e) => handleChange(e)}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\r\n                      <input\r\n                        type={isPasswordShow ? \"text\" : \"password\"}\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.password,\r\n                        })}\r\n                        name=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        ref={register}\r\n                        onCopy={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                        onPaste={(e) => {\r\n                          e.preventDefault();\r\n                          return false\r\n                        }}\r\n                      />\r\n                      <i\r\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                        onClick={togglePasssword}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  loading ?\r\n                    <div class=\"col-md-12\">\r\n                      <Spinner color=\"primary\" />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                }\r\n\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/taxprofessional/forget-password\",\r\n                      email: `${email}`,\r\n                    }}\r\n                  >\r\n                    Forgot Password\r\n                  </Link>\r\n                </div>\r\n\r\n                <Mandatory />\r\n              </form>\r\n            </div>\r\n        }\r\n\r\n\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nexport default Login;","D:\\Mazars\\src\\pages\\TL\\Proposal\\InvoiceTab.js",["3320","3321","3322","3323","3324","3325"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Invoice from \"./Invoice\";\r\nimport Generated from \"./Generated\";\r\nconst InvoiceTab = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\")\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\nreturn(\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                           View Invoice\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                          Create Invoice\r\n                        </Tab>\r\n                        \r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                    <Generated />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                    <Invoice />\r\n                      \r\n                    </TabPanel>\r\n                    \r\n                </Tabs>\r\n                </Layout>\r\n)\r\n}\r\nexport default InvoiceTab;","D:\\Mazars\\src\\pages\\TP\\Start\\Start.js",[],"D:\\Mazars\\src\\pages\\TL\\PaymentStatus\\Paydetails.js",["3326","3327","3328","3329","3330","3331","3332","3333","3334","3335","3336","3337","3338","3339","3340","3341","3342","3343","3344","3345","3346","3347","3348","3349","3350","3351","3352"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Typography } from \"antd\";\r\n\r\nconst PayDetails = () => {\r\n    let history = useHistory();\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n    const { id } = useParams();\r\n    const [paymentDetail, setPaymentDetail] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [modalData, setModalData] = useState()\r\n    const [paymentUrlcopy, setPaymentUrlCopy] = useState(false)\r\n    const [showTable, setShowTable] = useState(null);\r\n    const paydetails2 = () => {\r\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}`)\r\n.then((res) => {\r\n    if(res.data.code === 1){\r\n       \r\n        setPaymentDetail(res.data.payment_detail)\r\n        \r\n       if(res.data.payment_detail.length > 0){\r\n           setShowTable(true)\r\n       }\r\n       else {\r\n           setShowTable(false)\r\n       }\r\n    }\r\n   \r\n})\r\n    }\r\n    useEffect(() => {\r\n        paydetails2()\r\n    }, [])\r\n const openModal = (key) => {\r\n   if(key){\r\n       setModalData(key)\r\n   \r\n   }\r\nsetModal(!modal)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Q.No\",\r\n            \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"installment_no\",\r\n            text: \"Installment No\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"80px\" };\r\n            },\r\n           \r\n           \r\n        },\r\n        {\r\n            dataField: \"billno\",\r\n            text: \"Invoice No\",\r\n           \r\n            \r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"150px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.invoice_generated == \"0\" ? \"\" : \r\n                    <p>{row.billno}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"due_date\",\r\n            text: \"Due Date\",\r\n           sort : true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n       \r\n        {\r\n            dataField: \"invoice_amount\",\r\n            text: \"Invoice Amount\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField : \"tds_amount\",\r\n            text : \"Tds Deducted\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter : function(cell, row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.tds_amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField : \"amount\",\r\n            text : \"Amount Paid\",\r\n            style : {\r\n                fontSize : \"11px\"\r\n            }, \r\n            headerStyle : () => {\r\n                return { fontSize : \"11px\", width : \"100px\"}\r\n            },\r\n            formatter: function (cell,row){\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"1\" ? \r\n                    <p>{row.amount}</p> : \"\"}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        \r\n        {\r\n            dataField: \"invoice\",\r\n            text: \"Invoice\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                return(\r\n                   <>\r\n                   {row.invoice_generated == \"1\" ? \r\n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\r\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\r\n                   </>\r\n                )\r\n            },\r\n           \r\n        },\r\n        \r\n       \r\n         \r\n       \r\n          \r\n        {\r\n            dataField: \"\",\r\n            text: \"Payment Details\",\r\n           \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"90px\" };\r\n            },\r\n           \r\n           formatter: function dateFormat(cell, row){\r\n           \r\n               return(\r\n                <>\r\n                {row.invoice_generated == \"1\" ? \r\n              <>\r\n              {row.is_paid == \"0\" ? \r\n                \"\" :   <>\r\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url} target = \"_blank\">Payment receipt</a> \r\n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\r\n            </>}\r\n              </>\r\n               : \"\"}\r\n                </>\r\n                  \r\n                   \r\n               )\r\n           }\r\n        },\r\n           \r\n      ];\r\n    \r\n      const copyFun = (e)  =>{\r\n   \r\n        navigator.clipboard.writeText(e)\r\n       \r\n      }\r\n      const Container = styled.div `\r\n      dispaly : flex;\r\n      width : 100%;\r\n      height : 100%;\r\n      justify-content : center;\r\n      align-items : center;\r\n      color: red`\r\nreturn(\r\n   <>\r\n         <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n    {paymentDetail === undefined ? \"\" : \r\n  <Card>\r\n      <CardHeader>\r\n         <Row>\r\n         <Col md=\"8\">\r\n              <h4>Payment Details</h4>\r\n              </Col>\r\n      <Col md=\"4\">\r\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n         </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n          <div className=\"tableFixHead\">\r\n  <BootstrapTable\r\n  bootstrap4\r\n  keyField=\"id\"\r\n  data={paymentDetail}\r\n  columns={columns}\r\n  classes=\"table-responsivepayment\"\r\n/> \r\n</div>\r\n</CardBody>\r\n</Card>}\r\n</Layout>                  \r\n   </>\r\n)\r\n}\r\nexport default PayDetails;","D:\\Mazars\\src\\views\\ProposalTab\\ViewComponent.js",["3353","3354","3355","3356","3357","3358"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\RejectedModal.js",["3359","3360","3361","3362","3363"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport Swal from \"sweetalert2\";\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n    showRejectedBox,\r\n    rejectedBox,\r\n    deleteCliente,\r\n    getQueriesData,\r\n    assignNo\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n \r\n    setLoading(true)\r\n\r\n   let formData = new FormData();\r\n   formData.append(\"uid\", JSON.parse(userId));\r\n   formData.append(\"id\", assignNo);\r\n   formData.append(\"notes\" , value.p_chat);\r\n\r\n   axios({\r\n       method: \"POST\",\r\n       url: `${baseUrl}/customers/deleteQuery`,\r\n       data: formData,\r\n   })\r\n       .then(function (response) {\r\n         \r\n           if (response.data.code === 1) {\r\n            deleteCliente()\r\n               setLoading(false)\r\n               Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\r\n               getQueriesData();\r\n           } else if (response.data.code === 0) {\r\n               setLoading(false)\r\n               Swal.fire(\"Oops...\", \"Query not deleted \", \"error\");\r\n           }\r\n       })\r\n       .catch((error) => {\r\n          \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\r\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\views\\QueriesTab\\AdditionalQueryModal.js",["3364","3365","3366"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\r\nfunction AdditionalQueryModal({\r\n  additionalQuery,\r\n  additionalHandler,\r\n  assignNo,\r\n  getQueriesData,\r\n  setLoading2,\r\n  loading2,\r\n  \r\n  des\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  \r\n // const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n des = false\r\n    setLoading2(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"upload[]\", file);\r\n      }\r\n    }\r\n    formData.append(\"assign_no\", assignNo);\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1 && des === false) {\r\n          des = true\r\n          setLoading2(false)\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          additionalHandler();\r\n          getQueriesData();\r\n        } else if (response.data.code === 0) {\r\n          setLoading2(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ShowError.LoadingError(setLoading2)\r\n       });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\r\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading2 ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalQueryModal;\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\ViewAllReport.js",["3367","3368","3369","3370"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport DiscardReport from \"./DiscardReport\";\r\nimport Assignmodal from \"./Assignmodal\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n  const [additionalQuery, setAdditionalQuery] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const [modaldoc, setModaldoc] = useState({})\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  }\r\n  const additionalHandler = (p) => {\r\n setModaldoc(p.docid)\r\n    setAdditionalQuery(!additionalQuery);\r\n    setAssignNo(userId)\r\n};\r\n\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", key.docid);\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n   \r\n        if (response.data.code === 1) {\r\n          getData();\r\n         \r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\"\r\n              onClick={() => ViewDiscussionToggel()}\r\n              >\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n              \r\n                {/* {\r\n                  dataItem ?\r\n                    dataItem.customer_file === null ? \"\" : <th scope=\"row\">File Upload</th>\r\n                    :\r\n                    null\r\n                } */}\r\n                <th scope=\"row\">Uploaded file\r\n                </th>\r\n               \r\n                {\r\n                  dataItem ?\r\n                    dataItem.final_report ? null : <th scope=\"row\">Action</th>\r\n                    :\r\n                    null\r\n                }\r\n              \r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                     \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                    <p>  {(p.stages_type === 2 && \"Draft Report\" ) || (p.stages_type === 3 && \"Final Report\")}</p>\r\n                 <br></br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }\r\n                </td>\r\n                    {\r\n                      p.stages_type === \"2\" ?\r\n                        <td>\r\n                          {\r\n                            p.status === \"0\" ?\r\n                              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                <div style={{ cursor: \"pointer\" }} title=\"Accept\">\r\n                                  <i\r\n                                    class=\"fa fa-check\"\r\n                                    style={{\r\n                                      color: \"green\",\r\n                                      fontSize: \"16px\",\r\n                                    }}\r\n                                    onClick={() => acceptHandler(p)}\r\n                                  ></i>\r\n                                </div>\r\n                              \r\n                                                      \r\n                                                \r\n                                <div title=\"Discussion\">\r\n                                  <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                      fontSize: 16,\r\n                                      cursor: \"pointer\",\r\n                                      marginLeft: \"8px\",\r\n                                      color: \"green\"\r\n                                    }}\r\n                                    onClick={() => toggleNested(p)}\r\n                                  ></i>\r\n                                </div>\r\n                                {p.customer_files === null ?\r\n                                <div title=\"Upload Additional Documents\"\r\n                                                            style={{ cursor: \"pointer\" }}\r\n                                                            onClick={() => additionalHandler(p)}\r\n                                                           \r\n                                                        >\r\n                                                            <PublishIcon color=\"secondary\" />\r\n                                                        </div> : \"\"}\r\n                              </div>\r\n                              :\r\n                              p.status === \"1\" ?\r\n                                <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\r\n                                  <i\r\n                                    class=\"fa fa-check\"\r\n                                    style={{\r\n                                      color: \"blue\",\r\n                                      fontSize: \"16px\",\r\n                                    }}\r\n                                  ></i>\r\n                                </div> :\r\n                                p.status ==- \"2\" ?\r\n                                  <div title=\"Discussion\">\r\n                                    <i\r\n                                      class=\"fa fa-comments-o\"\r\n                                      style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        marginLeft: \"8px\",\r\n                                        color: \"green\"\r\n                                      }}\r\n                                      onClick={() => toggleNested(p)}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  <p style={{ color: \"red\" }}>Pending</p>\r\n                          }\r\n                        </td>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n     <Assignmodal\r\n                        additionalHandler={additionalHandler}\r\n                        additionalQuery={additionalQuery}\r\n                        assignNo={assignNo}\r\n                        modaldoc = {modaldoc}\r\n                        getData = {getData}\r\n                        // getQueriesData={getQueriesData}\r\n                    />\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\views\\AssignmentTab\\RejectModal.js",[],"D:\\Mazars\\src\\pages\\TL\\Proposal\\Invoice.js",["3371","3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport Tds from \"./Tds\";\r\nimport OutlinedInputIcons from \"@mui/material/OutlinedInput\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nconst Invoice = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState();\r\n  \r\n    const [tds, setTds] = useState(false)\r\n  \r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n \r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                  \r\n                  setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width : \"200px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"tlinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                justifyContent : \"center\",\r\n                border : \"0px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"150px\"};\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width : \"200px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"200px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        }, \r\n        \r\n       \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n\r\n                return (\r\n                    \r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                                color : \"blue\",\r\n                                            }}\r\n                                            onClick = {() => addTdsToggle(row)} \r\n                                        ></i>\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     invoice = \"create\" \r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Invoice;","D:\\Mazars\\src\\pages\\TP\\Invoice\\CreateInvoice.js",["3386","3387","3388","3389","3390","3391","3392","3393","3394","3395"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\r\n\r\nconst CreateInvoice = () => {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n\r\n\r\n    const [id, setId] = useState();\r\n  \r\n    const [tds, setTds] = useState(false)\r\n  \r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n \r\n   const addTdsToggle = (key) => {\r\n      \r\n     setGstinNo(key.gstin_no);\r\n       setTdsForm(!tdsForm)\r\n       setAssignNo(key.assign_no)\r\n       setPaidAmount(key.paid_amount)\r\n       setId(key.id)\r\n       setInstallmentNo(key.installment_no)\r\n       setBillNo(key.billno);\r\n       setId2(key.id)\r\n   }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=0`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width : \"200px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"tpinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                justifyContent : \"center\",\r\n                border : \"0px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width :\"200px\"};\r\n            },\r\n        }, \r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width : \"200px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Amount\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"200px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n             \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        }, \r\n        \r\n       \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n\r\n                return (\r\n                    \r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                                color : \"blue\",\r\n                                            }}\r\n                                            onClick = {() => addTdsToggle(row)} \r\n                                        ></i>\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n       \r\n    ];\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n                <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice = \"tpcreate\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField='id'\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n</div>\r\n                   \r\n\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default CreateInvoice;","D:\\Mazars\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js",["3396","3397","3398","3399"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const tlEmail = window.localStorage.getItem(\"tlkey\");\r\n\r\n  return (\r\n   \r\n      <Meeting id={props.match.params.id} \r\n      tlEmail = {tlEmail}/>\r\n \r\n  );\r\n}\r\n\r\nexport default MeetingComponent;","D:\\Mazars\\src\\pages\\TP\\Invoice\\Generated.js",["3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    \r\n \r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"100px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"tpinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                justifyContent : \"center\",\r\n                border : \"0px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width :\"150px\"};\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"150px\"};\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"100px\"};\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"invoice_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.invoice_amount;\r\n               \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.tds_amount;\r\n               \r\n                 return(\r\n                     <>\r\n                     {row.is_paid == \"0\" ?\r\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\r\n                     </>\r\n                 \r\n                 )\r\n               }\r\n        },  \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n       \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       <div style={{ display: \"flex\", justifyContent : \"flex-start\", alignItems:\"center\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                              {row.is_paid == \"0\" ? \r\n                        <i\r\n                        class=\"fa fa-edit\"\r\n                        style={{\r\n                            fontSize: \"16px\",\r\n                            margin: \"0 5px\",\r\n                            cursor: \"pointer\",\r\n                            color : \"blue\",\r\n                        }}\r\n                       onClick = {() => addTdsToggle(row)} \r\n                    ></i> : \"\"\r\n                        }\r\n                         {row.is_paid == \"0\" \r\n                ?   \r\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\r\n                   \r\n              \r\n                    : \"\" }\r\n                        </div>\r\n                      \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\r\n    const copyFun = (e)  =>{\r\n   \r\n        navigator.clipboard.writeText(e)\r\n       \r\n      }\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"tpgenerated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                   \r\n                  \r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\TL\\Recording\\Recording.js",["3422","3423","3424"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport RecordingEdit from './RecordingEdit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-modal-video/scss/modal-video.scss\";\r\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\r\nimport {Link} from 'react-router-dom';\r\nimport './recording.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction Recording() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [feedbackData, setFeedBackData] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [videoid, setVideoId] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n    const [showEditModal, setShowEditModal] = useState(false)\r\n    const [editData, setEditData] = useState({\r\n        participant : '',\r\n        editMessage : '',\r\n        assignid : '',\r\n        id : ''\r\n    })\r\n    const openModal = (videoContent) => {\r\n        setIsOpen(true);\r\n        setVideoId(videoContent);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRecording();\r\n    }, []);\r\nconst videoIcon = {\r\n    display : \"flex\", \r\n    justifyContent : \"space-around\", \r\n    alignItems : \"center\"\r\n}\r\n    const getRecording = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setFeedBackData(res.data.result);\r\n                    setRecords(res.data.result.length)\r\n                }\r\n            });\r\n    };\r\n    const modalBox = {\r\n        display : \"flex\",\r\n        position : \"fixed\",\r\n        top: \"50%\",\r\n        left : \"50%\",\r\n        transform : \"translate(-50%, -50%)\",\r\n      justifyContent : \"center\",\r\n      alignItems : \"center\",\r\n        width : \"100%\", \r\n        height: \"auto\",\r\n        flexDirection : \"column\"\r\n    }\r\nconst canBtn = {\r\n   \r\n    display : \"flex\",\r\n    width : \"50vw\",\r\n    alignItems : \"flex-end\",\r\n    justifyContent : \"flex-end\",\r\n    padding: \"20px\",\r\n    cursor : \"pointer\", \r\n    color : \"red\"\r\n}\r\nconst editRecording = (participants, assign_id, message, id) => {\r\n   \r\n    setShowEditModal(!showEditModal)\r\n    setEditData({\r\n        participant : participants,\r\n        editMessage : message,\r\n        assignid : assign_id,\r\n        id : id\r\n    })\r\n}\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            dataField: \"created_date\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n            formatter : function formatter(cell, row){\r\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\r\n                return <>\r\n                <Link\r\n                to = {{\r\n                    pathname : `/teamleader/queries/${a}`,\r\n                    routes : \"recording\"\r\n                }}>\r\n                {row.assign_id}\r\n                </Link>\r\n                </>\r\n            }\r\n        },\r\n        \r\n        {\r\n            text: \"Participants\",\r\n            dataField: \"participants\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n            formatter : function formatterName(cell, row) {\r\n                \r\n                 return(\r\n                     <p>\r\n                         {row.participants}\r\n                     </p>\r\n                 )\r\n            }\r\n        },\r\n        \r\n        {\r\n            text: \"Summary of Discussion\",\r\n            dataField: \"message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n           \r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n                \r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                var recording = row.file.split(\",\");\r\n                let a = 1;\r\n                return (\r\n                    <>\r\n                    <div>\r\n                    {row.record_by === JSON.parse(userid) && row.message === null ?\r\n                             <i\r\n                             className=\"fa fa-edit\"\r\n                             style={{\r\n                               fontSize: 18,\r\n                               cursor: \"pointer\",\r\n                               marginLeft: \"8px\",\r\n                             }}\r\n                             onClick = {() => editRecording(row.participants, row.assign_id, row.message, row.id)}\r\n                           ></i> : \"\"}\r\n                    </div>\r\n                        <div>\r\n                            {\r\n                                recording.map((record) => {\r\n                                   return(\r\n<>\r\n                                <p style={videoIcon}>\r\n                               {record.length === 0 ? \"\" : \r\n                               <>\r\n                                 <span>{a++}</span>   <i\r\n                                    className=\"material-icons\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        color: \"red\",\r\n                                        fontSize: \"25px\",\r\n                                    }}\r\n                                    onClick={() => openModal(record)}\r\n                                >\r\n                                    play_circle_outline\r\n                                 \r\n                                </i>\r\n                              \r\n                               </>}\r\n                              \r\n                                </p>\r\n                                </>\r\n                                   )\r\n                                })\r\n                            }\r\n                           \r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\r\n                <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"5\"></Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                <RecordingFilter\r\n                       setData={setFeedBackData}\r\n                    //    getData={getInCompleteAssingment}\r\n                       SearchQuery=\"SearchQuery\"\r\n                      setRecords={setRecords}\r\n                       records={records} \r\n                       userid = {userid}\r\n                       getRecording = {getRecording}\r\n                    /> \r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={feedbackData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n\r\n            </Card>\r\n          \r\n           </div>\r\n            \r\n          \r\n          <RecordingEdit \r\n          isOpen = {showEditModal}\r\n          recordingHandler = {editRecording}\r\n          participants = {editData.participant}\r\n          message = {editData.editMessage}\r\n          assignid = {editData.assignid}\r\n          editId = {editData.id}\r\n          recList = {getRecording}/>\r\n                    {isOpen === true ?\r\n          \r\n                 \r\n          <div className=\"modalBox\">\r\n          <div className=\"boxContainer\">\r\n          <div className=\"canBtn\"  title=\"cancel\">\r\n              <h4>Recording Player</h4>\r\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\r\n         \r\n\r\n         <div className=\"my2\">\r\n         <ReactPlayer\r\n           url={videoid}\r\n           controls={true}\r\n           playing={true}\r\n           width='100%'\r\n           height='100%'\r\n          />\r\n             </div>\r\n          </div>\r\n     \r\n    </div>\r\n  : \"\"}\r\n         </Layout>\r\n\r\n           </>\r\n\r\n    );\r\n}\r\n\r\nexport default Recording;","D:\\Mazars\\src\\pages\\TL\\Report\\Report.js",["3425","3426","3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useState , useEffect, useRef} from 'react';\r\nimport classNames from \"classnames\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport './Admin.css';\r\nimport Select from 'react-select';\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport Mandatory from '../../../components/Common/Mandatory';\r\nimport { useHistory } from 'react-router';\r\nconst Report = () => {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const selectInputRef = useRef();\r\n    const selectInputRef2 = useRef();\r\n    const selectInputRef3 = useRef();\r\n    const selectInputRef4 = useRef();\r\n    const selectInputRef5 = useRef();\r\n   \r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [subData, subCategeryData] = useState([])\r\n    const [custCate, setCustcate] = useState([])\r\n    const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  const [error, setError] = useState()\r\n  const [error2, setError2] = useState();\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [nn, setNn] = useState([])\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([])\r\n  const [custCate2, setCustcate2] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [taxId, setTaxId] = useState(\"\");\r\n  const [teamleader44, setTeamleader44] = useState(\"\") \r\n  const [taxprofessional44, setTaxprofessional44] = useState(\"\")\r\n  const [custData, setcustData] = useState();\r\n  const [cname, setcName] = useState()\r\n  var kk = []\r\n  var pp = []\r\n  var vv = []\r\n\r\n  var allData1 = {}\r\n  var dir = []\r\n  var indir = []\r\n  const [dd, setDd] = useState([]);\r\nconst history = useHistory()\r\n    const { handleSubmit, register, errors, getValues , reset} = useForm();\r\n    let date = new Date()\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n const firstDay = new Date(date.getFullYear() + + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2));\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n       \r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n    getData();\r\n\r\n  }, []);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n    \r\n      var dd = []\r\n      if (res.data.code === 1) {\r\n        pp.push(res.data.result)\r\n        setData((res.data.result));\r\n       \r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, [taxId]);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${taxId}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          setData2(res.data.result);\r\n         \r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios\r\n    .get(`${baseUrl}//admin/getAllList`)\r\n      .then((res) => {\r\n       \r\n        var a = res.data.result;\r\n        if (a) {\r\n          setcustData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\nconst mapAppointmentData = ((appiontmentData) => ({\r\n\"label\" : appiontmentData.name,\r\n\"value\" : appiontmentData.id\r\n}))\r\n  const options = tax.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.details\r\n    }))\r\n\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n  const options3 = data.map(d => (\r\n    {\r\n      \"value\": d.id,\r\n      \"label\": d.name\r\n    }))\r\n    const options4 = data2.map(d => (\r\n      {\r\n        \"value\": d.id,\r\n        \"label\": d.name\r\n      }))\r\n\r\n    const onSubmit = (value) => {\r\n      console.log(selectInputRef)\r\n      selectInputRef.current.select.clearValue();\r\n\r\n      selectInputRef3.current.select.clearValue();\r\n      selectInputRef4.current.select.clearValue();\r\n      selectInputRef5.current.select.clearValue();\r\n    \r\n      reset()\r\n\r\n     let basic_info = false\r\n     let proposal_info = false\r\n     let assignment_info = false\r\n     let payment_info = false\r\n     if(value.assessment || value.purpose_p || value.p_format || value.t_requested || value.spc_que || value.doa){\r\n      basic_info = true\r\n     }\r\n     if(value.dateProposal || value.proposedAmount || value.paymentTerms || value.proposal_status || value.acceptedAmount\r\n      || value.paymentDeclinedReason || value.date_acceptance || value.amountOutstanding\r\n      || value.amount_overdue || value.declinedDate){\r\n        proposal_info = true\r\n      }\r\n   if(value.assignDate || value.completionDate || value.assignStatus || value.completionQuery || value.assignTime){\r\n     assignment_info = true\r\n   }\r\n   if(value.receiptDate || value.amountReceived){\r\n     payment_info = true\r\n   }\r\n        let formData = new FormData();\r\n        formData.append(\"report_name\", value.report_name)\r\n        formData.append(\"basic_info\", Number(basic_info));\r\n        formData.append(\"proposal_info\", Number(proposal_info));\r\n        formData.append(\"assignment_info\", Number(assignment_info));\r\n        formData.append(\"payment_info\", Number(payment_info))\r\n        formData.append(\"from\", value.p_from);\r\n        formData.append(\"to\", value.p_to);\r\n        formData.append(\"customer_name\", cname)\r\n        formData.append(\"teamleader\", teamleader44);\r\n        formData.append(\"taxprofessional\", taxprofessional44);\r\n        formData.append(\"category\", mcatname);\r\n        formData.append(\"subCategory\", dd);\r\n        formData.append(\"q_no\", Number(value.qno));\r\n        formData.append(\"date_query\", Number(value.dataQuery));\r\n        formData.append(\"cust_id\", Number(value.cust_id));\r\n        formData.append(\"basic_category\", Number(value.basicCategory));\r\n        formData.append(\"basic_sub_category\", Number(value.basic_sub_category));\r\n        formData.append(\"assessment\", Number(value.assessment));\r\n        formData.append(\"purpose\", Number(value.purpose_p));\r\n        formData.append(\"p_format\", Number(value.p_format));\r\n        formData.append(\"t_requested\", Number(value.t_requested));\r\n        formData.append(\"spc_que\", Number(value.spc_que));\r\n        formData.append(\"date_allocation\", Number(value.doa));\r\n        // formData.append(\"teamleader\", Number(value.tl_name));\r\n        // formData.append(\"taxprofessional\", Number(value.tp_name));\r\n        formData.append(\"date_proposal\", Number(value.dateProposal));\r\n        formData.append(\"proposed_amount\", Number(value.proposedAmount));\r\n        formData.append(\"payment_terms\", Number(value.paymentTerms));\r\n        formData.append(\"proposal_status\", Number(value.proposal_status));\r\n        formData.append(\"accepted_amount\", Number(value.acceptedAmount));\r\n        formData.append(\"payment_declined_reasen\", Number(value.paymentDeclinedReason));\r\n        formData.append(\"date_of_acceptance\", Number(value.date_acceptance));\r\n        // formData.append(\"amount_received\", value.amountReceived);\r\n        formData.append(\"amount_outstanding\", Number(value.amountOutstanding));\r\n        formData.append(\"amount_overdue\", Number(value.amount_overdue));\r\n        formData.append(\"payment_declined\", Number(value.declinedDate));\r\n        // formData.append(\"assignment_number\", Number(value.assignNumber));\r\n        formData.append(\"assign_date\", Number(value.assignDate));\r\n        formData.append(\"proposed_completion_date\", Number(value.completionDate));\r\n        formData.append(\"assignment_status\", Number(value.assignStatus));\r\n        formData.append(\"date_complation\", Number(value.completionQuery));\r\n        formData.append(\"assign_time\", Number(value.assignTime));\r\n        formData.append(\"payment_recived_date\", Number(value.receiptDate));\r\n        formData.append(\"basic_amount\", Number(value.basic_amount));\r\n        formData.append(\"pocket_expensive\", Number(value.pocket_expensive));\r\n        formData.append(\"cget_tax\", Number(value.cget_tax));\r\n        formData.append(\"igst_tax\", Number(value.igst_tax));\r\n        formData.append(\"sgst_tax\", Number(value.sgst_tax));\r\n        formData.append(\"total_gst\", Number(value.total_gst));\r\n        formData.append(\"total_invoice\", Number(value.total_invoice));\r\n        formData.append(\"tds\", Number(value.tds));\r\n        formData.append(\"net_amount\", Number(value.net_amount));\r\n        formData.append(\"amount_received\", Number(value.amountReceived));\r\n        formData.append(\"uid\", JSON.parse(userid))\r\n        formData.append(\"t\", Math.floor(Math.random() * 110000))\r\n   axios({\r\n     method : \"POST\",\r\n     url : `${baseUrl}/report/generateReport?t=${JSON.stringify(Math.floor(Math.random() * 110000))}`,\r\n     data : formData\r\n\r\n   })\r\n   .then(function (response) {\r\n   if(response.data.code === 1){\r\n    window.open(`${baseUrl3}/${response.data.result}`)\r\n   }\r\n   })\r\n   .catch((error) => {\r\n  \r\n   });\r\n    }\r\n\r\n    // Category \r\n    const category2 = (v) => {\r\nlet cc = []\r\n      setCategoryData(v)\r\n      setNn((oldData) => {\r\n        return [...oldData, mcategory]\r\n      })\r\n      setError(\"\")\r\n      setCustcate(v)\r\n      v.map((val) => {\r\n        vv.push(val.value)\r\n        cc.push(val.value)\r\n        setmcategory(val.value);\r\n       \r\n        setStore(val.value)\r\n      })\r\n  \r\n  setmcatname(cc)\r\n      if (vv.length > 0) {\r\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\r\n       \r\n        }\r\n        else if (vv.includes(\"1\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value < 9) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n        else if (vv.includes(\"2\")) {\r\n  \r\n          for (let i = 0; i < subData.length; i++) {\r\n            if (subData[i].value > 8) {\r\n              kk.push(subData[i])\r\n            }\r\n          }\r\n          subCategeryData(kk)\r\n        }\r\n      }\r\n  \r\n      else if (vv.length === 0) {\r\n        subCategeryData(\"\")\r\n      }\r\n  \r\n    }\r\n\r\n    // Sub Category Function \r\n    const subCategory22 = (e) => {\r\n  let kk = []\r\n      subCategeryData(e)\r\n      setCustcate2(e)\r\n      setError2(\"\")\r\n     \r\n      e.map((i) => {\r\n  \r\n      kk.push(i.value)\r\n      })\r\n     setDd(kk)\r\n      \r\n    }\r\n    const custName = (a) => {\r\n      let pk = []\r\n      a.map((r) => {\r\n        pk.push(r.value)\r\n      })\r\n      setcName(pk)\r\n    }\r\n  const teamLeader = (a) => {\r\n let tk = []\r\n    a.map((i) => {\r\n    \r\n      setTaxId(i.value) \r\n     tk.push(i.value)\r\n    })\r\n    setTeamleader44(tk)\r\n  \r\n  }\r\n  const taxProfessional = (e) => {\r\n    let kk2 = []\r\n    e.map((i) => {\r\n      \r\n      kk2.push(i.value)\r\n    })\r\n    setTaxprofessional44(kk2)\r\n  }\r\n    return (\r\n        <>\r\n         <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n          <div className=\"adminForm\">\r\n         <div className=\"row\">\r\n           <div className=\"col-md-6\">\r\n           <Typography variant=\"h4\">Admin Report</Typography>\r\n         \r\n             </div>\r\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\r\n             <button  className=\"btn btn-lg btn btn-success\" onClick = {() => history.goBack()}>Go Back </button>\r\n               </div>\r\n           </div>\r\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">From</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_from\"\r\n            ref={register}\r\n            placeholder=\"Enter Mobile Number\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_mobile,\r\n            })}\r\n            defaultValue={item}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">To</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"p_to\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.p_type,\r\n            })}\r\n            defaultValue={item}\r\n            max={item}\r\n            placeholder=\"Enter type\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n      <div className=\"col-md-3\">\r\n      <div className=\"mb-3\">\r\n          <label className=\"form-label\">Client Id</label>\r\n         <Select isMulti options={custData} ref={selectInputRef5} onChange={(e) => custName(e)}>\r\n\r\n         </Select>\r\n        </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Report Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"report_name\"\r\n            className={classNames(\"form-control\", {\r\n              \"is-invalid\": errors.report_name,\r\n            })}\r\n           defaultValue=\"Report\"\r\n            placeholder=\"Enter report name\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n   </div> \r\n   <div className=\"row\">\r\n   <div className=\"col-md-3\">\r\n\r\n<div className=\"mb-3\">\r\n<label className=\"form-label\">Teamleader</label>\r\n<Select  isMulti={true}\r\noptions={options3}\r\nref={selectInputRef}\r\nonChange= {(e) =>teamLeader(e)}/>\r\n</div>\r\n</div>\r\n\r\n\r\n       <div className=\"col-md-3\">\r\n           <label className=\"form-label\">Category</label>\r\n           <Select isMulti options={options}\r\n                        className={error ? \"customError\" : \"\"}\r\n                        ref={selectInputRef3}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value == 2\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value == 2\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        onChange={category2}>\r\n                      </Select>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n            <label className=\"form-label\">Sub Category</label>\r\n            <Select isMulti options={options2}\r\n                        className={error2 ? \"customError\" : \"\"}\r\n                        ref={selectInputRef4}\r\n                        onChange={subCategory22}\r\n                        styles={{\r\n                          option: (styles, { data }) => {\r\n                            return {\r\n                              ...styles,\r\n                              color: data.value > 8\r\n                                ? \"green\"\r\n                                : \"blue\"\r\n                            };\r\n                          },\r\n                          multiValueLabel: (styles, { data }) => ({\r\n                            ...styles,\r\n                            color: data.value > 8\r\n                              ? \"green\"\r\n                              : \"blue\"\r\n                          }),\r\n                        }}\r\n\r\n                        value={subData}>\r\n                      </Select>\r\n            </div>\r\n   </div>\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n           <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Basic Query Details</legend>\r\n            <div className=\"basicFeild\">\r\n            <span>\r\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\r\n               <label htmlFor=\"sno\">S.No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\r\n               <label htmlFor=\"qno\">Query No</label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\r\n               <label htmlFor=\"dataQuery\">Query Date </label>\r\n               </span>\r\n               <span>\r\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\r\n               <label htmlFor=\"cust_id\">Client Id</label>\r\n            </span>\r\n            <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\r\n               <label htmlFor=\"basicCategory\">Category</label>\r\n             </span>\r\n             <span>\r\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\r\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\r\n               </span>\r\n               <span> \r\n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\r\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\r\n\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\r\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\r\n</span> \r\n               <span>\r\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\r\n<label htmlFor=\"assessment\">Assessment Year(s)</label>\r\n</span>\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"purpose_p\" id=\"purpose_p\"></input>\r\n<label htmlFor=\"purpose_p\">Purpose for which Opinion is sought</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"p_format\" id=\"p_format\"></input>\r\n<label htmlFor=\"p_format\">Format in which Opinion is required</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\r\n<label htmlFor=\"t_requested\">Timeline Requested</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\r\n<label htmlFor=\"spc_que\">Specific questions</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\r\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\r\n</span>\r\n</div>\r\n</fieldset>\r\n</div>\r\n</div>\r\n\r\n\r\n   {/* Proposal */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Proposal</legend>\r\n            <div className=\"basicFeild\">\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\r\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\r\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\r\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\r\n<label htmlFor=\"proposal_status\">Proposal Status</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\r\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\r\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\r\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\r\n</span>\r\n{/* <span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\r\n</span> */}\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\r\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\r\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\r\n<label htmlFor=\"declinedDate\">Payment decline date</label>\r\n</span>             \r\n            </div>      \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n   {/* Assignment */}\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Assessnment</legend>\r\n            <div className=\"basicFeild\">\r\n           \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\r\n<label htmlFor=\"assignDate\">Assignment Date</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\r\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\r\n</span>\r\n<span>\r\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\r\n<label htmlFor=\"assignStatus\">Assignment Status</label>\r\n</span>\r\n\r\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\r\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\r\n</span>\r\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\r\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\r\n</span>\r\n            </div>    \r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n\r\n\r\n   {/* Payment Receipt */}\r\n\r\n   <div className=\"row\">\r\n       <div className=\"col-md-12\">\r\n       <fieldset className=\"my-fieldset\">\r\n           <legend className=\"login-legend\">Payment Receipt</legend>  \r\n            <div className=\"basicFeild\">\r\n            <span>\r\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\r\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\r\n</span>   \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\r\n<label htmlFor=\"amountReceived\">Amount Received</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"basic_amount\" id=\"basic_amount\"></input>\r\n<label htmlFor=\"basic_amount\">Basic Amount</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"pocket_expensive\" id=\"pocket_expensive\"></input>\r\n<label htmlFor=\"pocket_expensive\">Out of pocket </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"cget_tax\" id=\"cget_tax\"></input>\r\n<label htmlFor=\"cget_tax\">Cgst Tax</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"igst_tax\" id=\"igst_tax\"></input>\r\n<label htmlFor=\"igst_tax\">Igst Tax </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"sgst_tax\" id=\"sgst_tax\"></input>\r\n<label htmlFor=\"sgst_tax\">Sgst Tax</label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"total_gst\" id=\"total_gst\"></input>\r\n<label htmlFor=\"total_gst\">Total Gst </label>\r\n</span>\r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"total_inovice\" id=\"total_invoice\"></input>\r\n<label htmlFor=\"total_invoice\">Invoice Amount</label>\r\n</span>\r\n          \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"tds\" id=\"tds\"></input>\r\n<label htmlFor=\"tds\">TDS Deducted</label>\r\n</span> \r\n<span>\r\n<input type=\"checkbox\" ref={register} name=\"net_amount\" id=\"net_amount\"></input>\r\n<label htmlFor=\"net_amount\">Net Amount </label>\r\n</span> </div>\r\n           </fieldset>\r\n           </div>\r\n   </div>\r\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\r\n   <Mandatory />\r\n  </form>\r\n  </div>\r\n            </Layout>\r\n              </>\r\n       );\r\n   }\r\nexport default Report;","D:\\Mazars\\src\\pages\\TL\\Message\\Message.js",["3450","3451","3452","3453","3454","3455","3456"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Message(props) {\r\n  \r\n    const alert = useAlert();\r\nconst history = useHistory();\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        \r\n        {\r\n            text: \"Date\",\r\n            dataField: \"setdate\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n        },\r\n          \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\r\n                        {row.assign_no}\r\n                        {/* </Link> */}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n             \r\n                return (\r\n                    <>\r\n                        <Link to={`/teamleader/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display : \"flex\",\r\n                                            justifyContent : \"space-between\",\r\n                                            wordBreak : \"break-word\"\r\n                                          \r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\",\r\n                                        display :\"flex\",\r\n                                        justifyContent : \"space-between\",\r\n                                        wordBreak : \"break-word\"}}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n       \r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                \r\n            })\r\n            .catch((error) => {\r\n              \r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n            <Card>\r\n            <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <button\r\n                class=\"btn btn-success ml-auto\" style={{float : \"right\"}}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody style={{display : \"flex\", height : \"80vh\", overflowY : \"scroll\"}}>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","D:\\Mazars\\src\\pages\\TL\\NewPassword\\NewPassword.js",["3457","3458","3459","3460","3461"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport ResendOtp from \"./ResendOtp\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getTime()\r\n  }, []);\r\n\r\n\r\n  const getTime = () => {\r\n    var timerOn = true;\r\n    function timer(remaining) {\r\n      var s = remaining % 60;\r\n      s = s < 10 ? '0' + s : s;\r\n      setTime(remaining)\r\n      remaining -= 1;\r\n      if (remaining >= 0 && timerOn) {\r\n        setTimeout(function () {\r\n          timer(remaining);\r\n        }, 1000);\r\n        return;\r\n      }\r\n      setDisabled(true)\r\n    }\r\n    timer(180);\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n    formData.append(\"otp\", value.p_code);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          var variable = \"Password changed successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          props.history.push(\"/teamleader/login\");\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Please enter correct details\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"heading\">\r\n              <h2>Reset Password</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address.\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    name=\"p_password\"\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: {\r\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\r\n                        message:\r\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\r\n                      },\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({\r\n                      required: true,\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"Password doesn't match.\",\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter OTP\"\r\n                    autocomplete=\"off\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              loading ?\r\n                <div class=\"col-md-12\">\r\n                  <Spinner color=\"primary\" />\r\n                </div>\r\n                :\r\n                <div>\r\n                  {\r\n                    disabled ?\r\n                      \"\"\r\n                      :\r\n                      <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >\r\n                          Submit\r\n                        </button>\r\n                        <Cancel />\r\n                      </div>\r\n                  }\r\n                </div>\r\n            }\r\n\r\n          </form>\r\n\r\n          {\r\n            disabled ?\r\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\r\n              :\r\n              null\r\n          }\r\n\r\n          <span className=\"declined\">*Mandatory</span>\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n\r\n\r\nconst Cancel = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\r\n        <button type=\"submit\" className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n}","D:\\Mazars\\src\\pages\\TL\\Chatting\\Chatting.js",["3462","3463","3464","3465","3466","3467","3468","3469","3470"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\nconst Schema = yup.object().shape({\r\n  msg_type: yup.string().required(\"\"),\r\n  p_message: yup.string().required(\"\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { message_type, query_id, query_No, routes } = data\r\nconst [showTl, setShowTl] = useState(false)\r\n\r\n  useEffect(() => {\r\n   \r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataTL\");\r\n\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkAssigned();\r\n  }, [item]);\r\n\r\n  const checkAssigned = () => {\r\n    if(query_No === undefined){\r\n\r\n    }\r\n    else{\r\n      axios\r\n    .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${query_No}`).then((res) => {\r\n           if(res.data.code === 0){\r\n                setShowTl(false)\r\n           }\r\n           else{\r\n             setShowTl(true)\r\n           }\r\n         })\r\n    }\r\n  };\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.msg_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    {\r\n      value.p_to != undefined ?\r\n    \r\n    formData.append(\"to\", value.p_to)\r\n  : formData.append(\"to\", \"customer\") }\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          setLoading(false)\r\n          var variable = \"Message sent successfully.\"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Loader />\r\n              :\r\n              <>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Query No.</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_query\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          value={query_No}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>Message Type</label>\r\n                        {\r\n                          item &&\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            defaultValue={item}\r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n                        }\r\n                        {errors.msg_type && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.msg_type.message}\r\n                          </div>\r\n                        )}\r\n\r\n                      </div>\r\n                      {showTl === true ?\r\n                      <div class=\"form-group\">\r\n                        <label>To<span className=\"declined\">*</span></label>\r\n                        <select\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_to,\r\n                          })}\r\n                          name=\"p_to\"\r\n                          ref={register}\r\n                          style={{ height: \"33px\" }}\r\n                        >\r\n                          <option value=\"\">--select--</option>\r\n                          <option value=\"customer\">Client</option>\r\n                        \r\n                          <>\r\n                          <option value=\"tp\">Tax Professional</option>\r\n                          <option value=\"both\">Both</option> \r\n                          </>\r\n                        </select>\r\n                        {errors.p_to && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_to.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n: \r\n<div class=\"form-group\">\r\n\r\n<input \r\ntype=\"text\"\r\n  className={classNames(\"form-control\", {\r\n    \"is-invalid\": errors.p_to,\r\n  })}\r\n  disabled\r\n  hidden\r\n  value=\"customer\"\r\n  name=\"pcustomer_to\"\r\n  ref={register}\r\n  style={{ height: \"33px\" }}/>\r\n  \r\n\r\n</div> }\r\n                      <div class=\"form-group\">\r\n                        <label>Message<span className=\"declined\">*</span></label>\r\n                        <textarea\r\n                          className={classNames(\"form-control\", {\r\n                            \"is-invalid\": errors.p_message,\r\n                          })}\r\n                          placeholder=\"Message text here\"\r\n                          rows=\"5\"\r\n                          ref={register}\r\n                          name=\"p_message\"\r\n                        ></textarea>\r\n                        {errors.p_message && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.p_message.message}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <Mandatory />\r\n              </>\r\n          }\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","D:\\Mazars\\src\\pages\\TL\\ViewNotification\\ViewNotification.js",["3471","3472","3473","3474","3475"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n;\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            {/* <thead>\r\n              <tr>\r\n                <th scope=\"col\">Titles</th>\r\n                <th scope=\"col\">Data</th>\r\n              </tr>\r\n            </thead> */}\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> Sender</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","D:\\Mazars\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js",["3476","3477","3478","3479"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\r\n});\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\r\n          props.history.push(`/teamleader/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n     \r\n    } else {\r\n      return item\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          {\r\n            loading ?\r\n              <div class=\"col-md-12\">\r\n                <Spinner color=\"primary\" />\r\n              </div>\r\n              :\r\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={valueHandler()}\r\n\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Get OTP\r\n                </button>\r\n                <Link to=\"/teamleader/login\" style={{ \"margin\": \"10px\" }}>\r\n                  <button type=\"submit\" className=\"btn btn-secondary\">\r\n                    Cancel\r\n                  </button>\r\n                </Link>\r\n\r\n                <Mandatory />\r\n              </form>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","D:\\Mazars\\src\\pages\\TL\\Schedule\\Schedule.js",["3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Recording from \"../Recording/Recording\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\nimport \"../../Admin/AdminStyle/style.css\";\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const myStyle1 = {\r\n      backgroundColor: \"grey\",\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n      padding: \"12px\",\r\n      borderRadius: \"50px\",\r\n      width: \"200px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"blue\",\r\n      color: \"white\",\r\n      cursor: \"pointer\",\r\n    };\r\n  \r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n     <Demo />\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Unpaid.js",["3495","3496","3497","3498","3499","3500","3501","3502","3503","3504","3505","3506","3507","3508"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n   \r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=1`).then((res) => {\r\n           \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n       if(typeof(key) == \"object\"){\r\n\r\n       }\r\n       else{\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n               \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n       }\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                 \r\n                 <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                index : 1,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.accepted_amount;\r\n               \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.paid_amount;\r\n               \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.amount_outstanding;\r\n               \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },     {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.paid_status === \"2\" ? \r\n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                         <div title=\"Payment History\"\r\n \r\n                             style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                         >   <Link\r\n                         to={{\r\n                             pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                             obj: {\r\n                                 message_type: \"5\",\r\n                                 query_No: row.assign_no,\r\n                                 query_id: row.assign_id,\r\n                                 routes: `/taxprofessional/paymentstatus`\r\n                             }\r\n                         }}\r\n                     >\r\n                         <i\r\n                             class=\"fa fa-comments-o\"\r\n                             style={{\r\n                                 fontSize: 18,\r\n                                 cursor: \"pointer\",\r\n                                 color: \"blue\"\r\n                             }}\r\n                         ></i>\r\n                     </Link>\r\n                         </div>\r\n                        \r\n \r\n \r\n                         <div title=\"View Discussion Message\">\r\n                             <i\r\n                                 class=\"fa fa-comments-o\"\r\n                                 style={{\r\n                                     fontSize: 16,\r\n                                     cursor: \"pointer\",\r\n                                     color: \"orange\"\r\n                                 }}\r\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                             ></i>\r\n                         </div>\r\n \r\n                     </div> : \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                        <div title=\"Payment History\"\r\n\r\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                        >\r\n                          <Link\r\n              to={{\r\n                pathname: `/taxprofessional/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/taxprofessional/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                                    obj: {\r\n                                        message_type: \"5\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.assign_id,\r\n                                        routes: `/taxprofessional/proposal`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 18,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                        </div>\r\n                        {/* <div>\r\n                            {\r\n                                row.paid_status == \"0\" ?\r\n                                    <div title=\"Payment decline\"\r\n                                        onClick={() => rejectHandler(row)}\r\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <PaymentIcon />\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div> */}\r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n                    </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        \r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Unpaid=\"Unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsivepayment\"\r\n                        rowStyle={rowStyle2}\r\n                        rowIndex\r\n                    />\r\n</div>\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n<DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\AllPayment.js",["3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    // End UseSatate \r\n    // Global Veriable\r\n    var rowStyle2 = {}\r\n    const rejectHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n   \r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}`).then((res) => {\r\n          \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n      \r\n        setModal(!modal);\r\n\r\n       if(typeof(key) == \"object\"){\r\n\r\n       }\r\n       else{\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n               \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n       }\r\n    };\r\n\r\n// Row Style\r\nrowStyle2 = (row, index) => {\r\n    const style = {}\r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\r\n        style.backgroundColor = \"#c1d8f2\";\r\n        style.color = \"#000111\"\r\n    }\r\n   \r\n    return style;\r\n  }\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function (cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.paid_status == \"2\"  ?\r\n                    <p style={{color : \"red\"}}>{row.status} </p> : \r\n                    <p>{row.status}</p>}\r\n                    </>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.paid_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.amount_outstanding;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.paid_status === \"2\" ?  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n<div title=\"Payment History\"\r\n\r\n    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n>\r\n<Link\r\n              to={{\r\n                pathname: `/taxprofessional/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/taxprofessional/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n</div>\r\n\r\n<div title=\"View Discussion Message\">\r\n    <i\r\n        class=\"fa fa-comments-o\"\r\n        style={{\r\n            fontSize: 16,\r\n            cursor: \"pointer\",\r\n            color: \"orange\"\r\n        }}\r\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n    ></i>\r\n</div>\r\n\r\n</div> : \r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\r\n\r\n                        <div title=\"Payment History\"\r\n\r\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                        >\r\n                           <Link\r\n              to={{\r\n                pathname: `/taxprofessional/paydetails/${row.assign_id}`,\r\n                obj: {\r\n                  message_type: \"5\",\r\n                  query_No: row.assign_no,\r\n                  query_id: row.assign_id,\r\n                  routes: `/taxprofessional/paymentstatus`\r\n                }\r\n              }}\r\n            >\r\n                            <i\r\n                                class=\"fa fa-credit-card\"\r\n                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                // onClick={() => toggle(row.assign_id)}\r\n                            ></i>\r\n                            </Link>\r\n                        </div>\r\n                        <div title=\"Send Message\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                                    obj: {\r\n                                        message_type: \"5\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.assign_id,\r\n                                        routes: `/taxprofessional/paymentstatus`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 18,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                        </div>\r\n                      \r\n\r\n\r\n                        <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n\r\n                    </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        rowStyle={rowStyle2}\r\n                        rowIndex\r\n                        classes=\"table-responsivepayment\"\r\n                    />\r\n\r\n</div>\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date of Payment</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                        <th scope=\"row\">Payment Receipt</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\Paid.js",["3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const rejectHandler = (key) => {\r\n   \r\n        setPaymentModal(!addPaymentModal);\r\n        setAssignNo(key.assign_no)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=2`).then((res) => {\r\n          \r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const toggle = (key) => {\r\n     \r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n              \r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                   \r\n\r\n                   <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\r\n                                index : 2,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#21a3ce\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.accepted_amount;\r\n\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"#064606\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.paid_amount;\r\n\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n\r\n        {\r\n            text : \"Outstanding Amount\",\r\n            dataField: \"amount_outstanding\",\r\n            sort: true,\r\n            style: {\r\n              fontSize: \"11px\",\r\n              color: \"darkred\",\r\n            },\r\n            sortFunc: (a, b, order, dataField) => {\r\n              if (order === 'asc') {\r\n                return b - a;\r\n              }\r\n              return a - b; // desc\r\n            },\r\n            headerStyle: () => {\r\n              return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('en-US')\r\n                 var x = row.amount_outstanding;\r\n\r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\r\n                            {\r\n                                row.paid_status == \"0\" ? null :\r\n                                    <div title=\"Payment History\"\r\n                                      \r\n                                        style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                         <Link\r\n                                to={{\r\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\r\n                                    obj: {\r\n                                        message_type: \"5\",\r\n                                        query_No: row.assign_no,\r\n                                        query_id: row.assign_id,\r\n                                        routes: `/taxprofessional/paymentstatus`\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 18,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"blue\"\r\n                                    }}\r\n                                ></i>\r\n                            </Link>\r\n                                    </div>\r\n                            }\r\n\r\n                            {\r\n                                (row.paid_status == \"0\") ?\r\n                                    <div title=\"Payment decline\"\r\n                                        onClick={() => rejectHandler(row)}\r\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                                    >\r\n                                        <PaymentIcon />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                            <div title=\"Send Message\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\r\n                                        obj: {\r\n                                            message_type: \"5\",\r\n                                            query_No: row.assign_no,\r\n                                            query_id: row.assign_id,\r\n                                            routes: `/teamleader/proposal`\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <i\r\n                                        class=\"fa fa-comments-o\"\r\n                                        style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"blue\"\r\n                                        }}\r\n                                    ></i>\r\n                                </Link>\r\n                            </div>\r\n                            <div title=\"View Discussion Message\">\r\n                            <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    color: \"orange\"\r\n                                }}\r\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                            ></i>\r\n                        </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>             \r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        Paid=\"Paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsivepayment\"\r\n                    />\r\n</div>\r\n\r\n                    <RejectedModal\r\n                        rejectHandler={rejectHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        assignNo={assignNo}\r\n                        getPaymentStatus={getPaymentStatus}\r\n                    />\r\n <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getPaymentStatus}\r\n                    />\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","D:\\Mazars\\src\\pages\\TP\\Recording\\RecordingEdit.js",["3536","3537"],"import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\nimport { baseUrl } from '../../../config/config';\r\nimport Swal from 'sweetalert2';\r\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\r\n   const userid = localStorage.getItem(\"tpkey\")\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (value) => {\r\n       let formData = new FormData();\r\n       formData.append(\"uid\", JSON.parse(userid))\r\n       formData.append(\"message\", value.p_message);\r\n       formData.append(\"message_type\", value.msg_type)\r\n        formData.append(\"assign_id\", assignid);\r\n        formData.append(\"participants\", value.p_participants);\r\n        formData.append(\"id\", editId)\r\n        axios({\r\n            method : \"POST\",\r\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\r\n            data: formData,\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n                recordingHandler()\r\n                Swal.fire({\r\n                    title : \"success\",\r\n                    html : \"Message edited successfully\",\r\n                    icon : \"success\"\r\n                })\r\n                recList()\r\n            }\r\n        })\r\n    }\r\n   \r\nreturn (\r\n \r\n    <>\r\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\r\n        <ModalHeader toggle={recordingHandler}>\r\n        <h1>Recording Edit</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n       <form onSubmit = {handleSubmit(onSubmit)}>\r\n<div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Participants Name</label>\r\n        <input \r\n        className=\"form-control\"\r\n        name=\"p_participants\"\r\n        ref = {register}\r\n        defaultValue = {participants}/>\r\n        </div>\r\n        \r\n</div>\r\n<div className = \"row\">\r\n<div className=\"col-md-12\">\r\n    <label>Message Type</label>\r\n<select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            required\r\n                            \r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                            <option value=\"4\">Query Discussion</option>\r\n                            <option value=\"2\">Proposal Discussion</option>\r\n                            <option value=\"5\">Payment Discussion</option>\r\n                            <option value=\"3\">Assignment Discussion</option>\r\n                            <option value=\"1\">Others</option>\r\n                          </select>\r\n    </div>\r\n    </div>\r\n    <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Message</label>\r\n        <textarea \r\n        className=\"form-control\"\r\n        style={{height : \"100px\"}}\r\n        name=\"p_message\"\r\n        ref = {register}\r\n        defaultValue = {message}/>\r\n        </div>\r\n</div>\r\n<button className=\"btn btn-primary my-2\">\r\n    Submit\r\n</button>\r\n       </form>\r\n        </ModalBody>\r\n    </Modal>\r\n    \r\n    </>\r\n)\r\n}\r\nexport default RecordingEdit;","D:\\Mazars\\src\\pages\\TP\\NewPassword\\ResendOtp.js",["3538","3539"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setLoad, setDisabled, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n        formData.append(\"p\", \"forgot\");\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                \r\n                if (response.data.code === 1) {\r\n                    setLoad(true)\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\pages\\TP\\Message\\PaymentModal.js",["3540","3541","3542","3543"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\pages\\TP\\EditProposal\\Payment.js",["3544","3545","3546","3547"],"import React from \"react\";\r\n\r\n\r\nexport default class YourComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n\r\n    amount = this.props.installment_amount\r\n    installment_amount = this.amount.split(',');\r\n    temp = this.installment_amount\r\n    tamp2;\r\n    handleChange1(i, e) {\r\n        const { value } = e.target\r\n        this.temp[i] = value\r\n       \r\n    \r\n        this.setState({\r\n            values: {\r\n              ...this.temp.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n    }\r\n\r\n\r\n    due_date = this.props.due_date;\r\n     installment_due_dates = this.due_date.split(',')\r\n    installmentDueDate = this.installment_due_dates;\r\n\r\n    handleChange2(i, e) {\r\n        const { value } = e.target\r\n        this.installmentDueDate[i] = value\r\n\r\n        this.setState({\r\n            dates: {\r\n              ...this.installmentDueDate.slice(0, this.props.installment)\r\n            }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: false });\r\n        \r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = this.props.clearValue === false ? amount.split(',') : []\r\n        const due_date = date.split(',');\r\n\r\n\r\n        this.props.paymentAmount(installment_amount);\r\n        this.props.paymentDate(due_date)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n        var fieldsArray = [];\r\n\r\n\r\n        for (var i = 0; i < this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    {this.props.clearValue == true ? \r\n                   <div class=\"col-md-6 my-2\">\r\n                       \r\n                   <input\r\n                       type=\"text\"\r\n                       className=\"form-control\"\r\n                       name={this.state.values[i]}\r\n                       onChange={this.handleChange1.bind(this, i)}\r\n                      defaultValue={installment_amount[i]}\r\n                   />\r\n               </div> :   \"\"\r\n}\r\n{this.props.clearValue == false ? \r\n    <div class=\"col-md-6 my-2\">\r\n                       \r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           name={this.state.values[i]}\r\n                           onChange={this.handleChange1.bind(this, i)}\r\n                           defaultValue=\"\"\r\n                       />\r\n                   </div> : \"\"}\r\n          {this.props.clearValue == true ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue={due_date[i]}\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}  \r\n       {this.props.clearValue == false ? \r\n           <div class=\"col-md-6 my-2\">\r\n                       \r\n           <input\r\n               type=\"date\"\r\n               className=\"form-control\"\r\n               required\r\n               name={this.state.dates[i]}\r\n               onChange={this.handleChange2.bind(this, i)}\r\n               defaultValue= \"\"\r\n               min={this.props.item}\r\n           />\r\n       </div> : \"\"}         \r\n                   \r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Schedule\\Demo.js",["3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery?tp_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          \r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n  \r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n      \r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const B = (key) => {\r\n    setRead(!key)\r\n  }\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <div onDoubleClick={() => B(data.owner)}>\r\n      <Appointments.Appointment {...restProps}>\r\n        <div style={{ display: \"flex\" }}>\r\n        <i\r\n         onClick={() => handleJoin(data)}\r\n            class=\"fa fa-video-camera\"\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n          <div>{children}</div>\r\n          \r\n         \r\n        </div>\r\n      </Appointments.Appointment>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (data) => {\r\n//     // console.log(\"data\", data);\r\n// //  console.log(\"data\", data)\r\n// // console.log(data.startDate)\r\n// var dt = new Date(data.startDate)\r\n// var dt2 = new Date()\r\n// let ck = dt.getMonth();\r\n\r\n// let pp = dt2.getMonth();\r\n// let rr = dt2.getHours();\r\n// let ss = dt.getHours()\r\n// let mm = dt2.getMinutes() + 20\r\n// let dd = dt.getMinutes()\r\n// let ee = dt.getDate();\r\n// let eee = dt2.getDate()\r\n// //   console.log(\"dt\", dt)\r\n// //   console.log(dt2.getDate())\r\n// //  console.log(dt.getMinutes())\r\n// //  console.log(dt2.getMinutes() + 20)\r\n// //  console.log(\"ck\", ck)\r\n// //   console.log(\"dt2\", dt2)\r\n// //   console.log(\"pp\", pp)\r\n// //   console.log(\"mm\", mm)\r\n// //   console.log(\"dd\", dd)\r\n// //   console.log(\"ss\", ss)\r\n// //   console.log(\"rr\", rr)\r\n// //   console.log(ck == pp)\r\n// //   console.log(ee === eee)\r\n// //   console.log(ss == rr)\r\n// //   console.log(mm > dd)\r\n\r\n\r\n// if(ck == pp && ss == rr && ee == eee){\r\n\r\n\r\n// if(mm > dd){\r\n//   console.log(\"passed\")\r\n  \r\n//   Cookies.set(\"channel_2\", data.question_id);\r\n//   Cookies.set(\"baseMode_2\", baseMode);\r\n//   Cookies.set(\"transcode_2\", transcode);\r\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n//   Cookies.set(\"videoProfile_2\", videoProfile);\r\n//   // history.push(\"/teamleader/meeting/\");\r\n//   history.push(`/taxprofessional/meeting/${data.id}`);\r\n\r\n// }\r\n// else{\r\n// // return false\r\n \r\n// Cookies.set(\"channel_2\", data.question_id);\r\n// Cookies.set(\"baseMode_2\", baseMode);\r\n// Cookies.set(\"transcode_2\", transcode);\r\n// Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n// Cookies.set(\"videoProfile_2\", videoProfile);\r\n// // history.push(\"/teamleader/meeting/\");\r\n// history.push(`/taxprofessional/meeting/${data.id}`);\r\n\r\n// }\r\n// }\r\n\r\nCookies.set(\"channel_2\", data.question_id);\r\n  Cookies.set(\"baseMode_2\", baseMode);\r\n  Cookies.set(\"transcode_2\", transcode);\r\n  Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n  Cookies.set(\"videoProfile_2\", videoProfile);\r\n  // history.push(\"/teamleader/meeting/\");\r\n  history.push(`/taxprofessional/meeting/${data.id}`);\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n    \r\n\r\n    if (typeof d === 'object') {\r\n\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n   \r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n\r\n    if (added) {\r\n      setLoading(true)\r\n\r\n\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n      \r\n        });\r\n    }\r\n    if (changed) {\r\n    \r\n      setLoading(true)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n    \r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n    \r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n    \r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n       \r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var msg = \"Call details updated successfully.\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n        \r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n   \r\n      setLoading(true)\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n        \r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n   \r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n        \r\n            if (res.data.code === 1) {\r\n              setLoading(false)\r\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              setLoading(false)\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n   \r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ?\r\n          <Loader />\r\n          :\r\n          <>\r\n           <div style ={{display : \"flex\", height : \"700px\"}}>\r\n            <Paper>\r\n              <Scheduler data={data} >\r\n                <ViewState\r\n                  defaultCurrentDate={currentDate}\r\n                  defaultCurrentViewName=\"Week\"\r\n                />\r\n                <EditingState onCommitChanges={commitChanges} />\r\n                <EditRecurrenceMenu />\r\n\r\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n                \r\n                <Appointments appointmentComponent={myAppointment} />\r\n\r\n                <Toolbar />\r\n                <DateNavigator />\r\n                <TodayButton />\r\n                <ViewSwitcher />\r\n\r\n                <AppointmentTooltip showOpenButton />\r\n\r\n                {\r\n                  read ?\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                      readOnly\r\n                    />\r\n                    :\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                    />\r\n                }\r\n\r\n                <Resources\r\n                  data={resources}\r\n                />\r\n              </Scheduler>\r\n            </Paper>\r\n            </div>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Demo;","D:\\Mazars\\src\\pages\\TP\\SendProposal\\ProposalComponent.js",["3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const [paymentError, setpaymentError] = useState();\r\n\r\n  const [date, setDate] = useState();\r\n  const [amount, setAmount] = useState();\r\n  \r\n  const [dateError, setDateError] = useState(false)\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tp_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    if(diserror.length > 0 ){\r\n      return false\r\n    }\r\n    else if(dateError === true){\r\n     Alerts.ErrorNormal(\"Date must be unique\")\r\n    }\r\n    else{\r\n    var lumsum = value.p_inst_date\r\n    if (payment.label == \"lumpsum\") {\r\n      setDate(lumsum)\r\n    }\r\n    \r\n    // var arrAmount = []\r\n    // var arrDate = []\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", assignId);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      payment.label == \"installment\" ?\r\n        formData.append(\"due_date\", date) :\r\n        formData.append(\"due_date\", \"\")\r\n\r\n    if (payment.length < 1) {\r\n     \r\n      setpaymentError(\"Please select at lease one\")\r\n    } else\r\n      if (payment.value == \"installment\") {\r\n        if (installment == \"\") {\r\n          Alerts.ErrorNormal(`Please select no of installment .`)\r\n          console.log(\"Please select no of installment --\", installment)\r\n        } else\r\n          if (!amount || !date) {\r\n            Alerts.ErrorNormal(`Please enter all fields.`)\r\n            console.log(\"Please enter all fields\")\r\n          } else if (amount && date) {\r\n            console.log(\"all deatils ** here --\")\r\n\r\n            console.log(\"installment.value -\", installment.value)\r\n\r\n            if (installment.value > 0) {\r\n              var a = Number(installment.value)\r\n              for (let i = 0; i < a; i++) {\r\n                // arrAmount.push(amount[i])\r\n                // arrDate.push(date[i])\r\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n                  Alerts.ErrorNormal(`Please enter amount`)\r\n                  console.log(\"Please enter amount\")\r\n                  return false\r\n                }\r\n                if (date[i] == \"\" || date[i] == undefined) {\r\n                  Alerts.ErrorNormal(`Please enter date`)\r\n                  console.log(\"Please enter date\")\r\n                  return false\r\n                }\r\n              }\r\n              var sum = amount.reduce(myFunction)\r\n              function myFunction(total, value) {\r\n                return Number(total) + Number(value);\r\n              }\r\n              if (value.p_fixed != sum) {\r\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n                console.log(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n              } else {\r\n                console.log(\"call else fine api for installment\")\r\n                setLoading(true)\r\n                axios({\r\n                  method: \"POST\",\r\n                  url: `${baseUrl}/tp/uploadProposal`,\r\n                  data: formData,\r\n                })\r\n                  .then(function (response) {\r\n                    console.log(\"res-\", response);\r\n                    if (response.data.code === 1) {\r\n                      setLoading(false)\r\n                      Alerts.SuccessNormal(\"Proposal created successfully\")\r\n                      history.push(\"/taxprofessional/proposal\");\r\n                    } else if (response.data.code === 0) {\r\n                      setLoading(false)\r\n                    }\r\n                  })\r\n                  .catch((error) => {\r\n                    console.log(\"erroror - \", error);\r\n                  });\r\n              }\r\n            }\r\n          }\r\n      } else if (payment.label == \"lumpsum\") {\r\n        console.log(\"call api for lumshum\",)\r\n        setLoading(true)\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tp/uploadProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n            console.log(\"res-\", response);\r\n            if (response.data.code === 1) {\r\n              setLoading(false)\r\n              var variable = \"Proposal sent successfully. \"\r\n              Alerts.SuccessNormal(variable)\r\n              history.push(\"/taxprofessional/proposal\");\r\n            } else if (response.data.code === 0) {\r\n              setLoading(false)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"erroror - \", error);\r\n          });\r\n      }\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n    console.log(\"paymentAmount\", data)\r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array1.push(value)\r\n    });\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n    console.log(\"paymentDate\", data)\r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      array2.push(value)\r\n    });\r\n    setDate(array2);\r\n    if(new Set(array2).size !== array2.length){\r\n      setDateError(true)\r\n     Alerts.ErrorNormal(\"Date must be unique\")\r\n    }\r\n    else{\r\n      setDateError(false)\r\n    }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter number only\");\r\n    }\r\n    else if(e.target.value == \"0\"){\r\n      setdiserror(\"Amount should be greater than zero\")\r\n    }\r\n    else {\r\n      setdiserror(\"\");\r\n    }\r\n    setTotalAmount(e.target.value);\r\n  };\r\n\r\n  const installmentHandler = (key) => {\r\n    console.log(\"key\", key)\r\n    setInstallment(key)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div>\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    className=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_fixed,\r\n                    })}\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    ref={register({ required: true })}\r\n                    placeholder=\"Enter Proposal Description\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Client Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    className=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\r\n                  <Select\r\n                    className={paymentError ? \"customError\" : \"\"}\r\n                    onChange={(e) => {\r\n                      setPayment(e)\r\n                      setpaymentError(\"\")\r\n                    }}\r\n                    options={payment_terms}\r\n                  />\r\n\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.p_inst_date\r\n                      })}\r\n                      ref={register({ required: true })}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        onChange={(e => installmentHandler(e))}\r\n                        options={no_installments}\r\n                      />\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      totalAmount={totalAmount}\r\n                      min={item}\r\n                      item={item}\r\n                    />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" class=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n\r\n          </form>\r\n          <Mandatory />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\n\r\nconst payment_terms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst no_installments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n\r\n    // if (amount) {\r\n        //   var sum = amount.reduce(myFunction)\r\n        //   function myFunction(total, value) {\r\n        //     return Number(total) + Number(value);\r\n        //   }\r\n        // }\r\n        // if (value.p_fixed != sum) {\r\n        //   Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n        // } else if (!date) {\r\n        //   console.log(\"call date\")\r\n        //   Alerts.ErrorNormal(`Please date should be enter`)\r\n        // }\r\n\r\n // var lumsum = value.p_inst_date\r\n    // setDate(lumsum)\r\n\r\n    // if (payment.length < 1) {\r\n    //   setpaymentError(\"Please select at lease one\")\r\n    // }\r\n    // else {\r\n    //   setpaymentError(\"\")\r\n    //   let formData = new FormData();\r\n\r\n    // formData.append(\"assign_no\", assingNo);\r\n    // formData.append(\"name\", value.p_name);\r\n    // formData.append(\"type\", \"tl\");\r\n    // formData.append(\"id\", JSON.parse(userid));\r\n    // formData.append(\"assign_id\", assignId);\r\n    // formData.append(\"customer_id\", custId);\r\n    // formData.append(\"description\", value.description);\r\n\r\n    // formData.append(\"amount_type\", \"fixed\");\r\n    // formData.append(\"amount\", value.p_fixed);\r\n    // formData.append(\"installment_amount\", amount);\r\n\r\n    // formData.append(\"payment_terms\", payment.value);\r\n    // formData.append(\"no_of_installment\", installment.value);\r\n\r\n    // payment.label == \"lumpsum\" ?\r\n    //   formData.append(\"due_date\", lumsum) :\r\n    //   payment.label == \"installment\" ?\r\n    //     formData.append(\"due_date\", date) :\r\n    //     formData.append(\"due_date\", \"\")\r\n\r\n    //   console.log(\"payment -\", payment.label)\r\n\r\n    //   if (payment.value == \"installment\") {\r\n    //     console.log(\"amount --\", amount)\r\n    //     console.log(\"date --\", date)\r\n\r\n    // if (!amount || !date) {\r\n    //   Alerts.ErrorNormal(`please enter all fields`)\r\n    // } else\r\n    // if (amount && date) {\r\n    //   if (installment.value > 0) {\r\n    //     console.log(\"installment** --\")\r\n\r\n    //     var a = Number(installment.value)\r\n    //     for (let i = 0; i < a; i++) {\r\n    //       // console.log(\"call for loop\", i, amount[i])\r\n    //       if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\r\n    //         console.log(\"amount --1\", amount[i])\r\n    //         Alerts.ErrorNormal(`please insert all fields.`)\r\n    //         return false\r\n    //       }\r\n    //     }\r\n    //     var sum = amount.reduce(myFunction)\r\n    //     function myFunction(total, value) {\r\n    //       return Number(total) + Number(value);\r\n    //     }\r\n    //     if (value.p_fixed != sum) {\r\n    //       Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\r\n    //     } else {\r\n    //       console.log(\"calll else fine api\")\r\n    //     }\r\n    //   }\r\n    //       }\r\n    //       else {\r\n    //         console.log(\"call else\")\r\n    //         return false\r\n    //         setLoading(true)\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/tl/uploadProposal`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       setLoading(false)\r\n    //       Alerts.SuccessNormal(\"Proposal sent successfully.\")\r\n    //       history.push(\"/teamleader/proposal\");\r\n    //     } else if (response.data.code === 0) {\r\n    //       setLoading(false)\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n    //       }\r\n    //   }\r\n    //   else {\r\n    // setLoading(true)\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/tl/uploadProposal`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       setLoading(false)\r\n\r\n    //       var variable = \"Proposal sent successfully. \"\r\n    //       Alerts.SuccessNormal(variable)\r\n    //       history.push(\"/teamleader/proposal\");\r\n    //     } else if (response.data.code === 0) {\r\n    //       setLoading(false)\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n    //   }\r\n    // }\r\n","D:\\Mazars\\src\\components\\AgoraVideoCall\\index.jsx",["3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport axios from \"axios\";\r\nimport \"./canvas.css\";\r\nimport \"../../assets/fonts/css/icons.css\";\r\nimport Cookies from \"js-cookie\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Swal from \"sweetalert2\";\r\nimport CommonServices from \"../../common/common\";\r\nvar customer_id = \"d339577a294c458c86d8a78b474141fc\";\r\nvar customer_secret = \"1a61a4bef2144e78be6f671d5cf3fc32\";\r\n\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"8\": [\r\n    \"span 3/span 4/13/3\",\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 3/span 4/13/27\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"9\": [\r\n    \"span 3/span 4/13/1\",\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 3/span 4/13/29\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \r\n  \r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.customerName = Cookies.get(\"custName\")\r\n    this.client = {};\r\n    this.screenTrack = {}\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      addRemote : null,\r\n      atCustId: '',\r\n      disabledVedio : false,\r\n      vedTrack : null,\r\n      shareValue : false,\r\n    };\r\n  }\r\nchannelName = this.props.channel\r\nuserId = window.localStorage.getItem(\"userid\");\r\ncustEmail2 = window.localStorage.getItem(\"custEmail\");\r\nremoteShare2 = false\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    console.log(\"props\", this.props)\r\n    // init AgoraRTC local client\r\nconsole.log(\"customerName\", this.customerName)\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      \r\n     \r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.customerName;\r\n        axios.get(`${data_post_api}`).\r\n        then((res) => {\r\n        \r\n        \r\n        })\r\n       \r\n       this.setState({atCustId : uid})\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        let videoProfile=\"480_p\"\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              alert(\"done\")\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n             \r\n              });\r\n            }\r\n            else{\r\n              alert(\"done2\")\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n           \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.subscribeStreamEvents();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n   \r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n     \r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let txtColor = \"myPartName\";\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if(dom && this.state.disabledVedio === true){\r\n          dom.setAttribute(\"class\", \"ag-item2\");\r\n        }\r\n        else if (dom && this.state.disabledVedio === false) {\r\n         dom.setAttribute(\"class\", \"ag-item\");\r\n        }\r\n        let dd;\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          var box22 = document.getElementById(\"ag-item-\" + id)\r\n          dd = document.createElement(\"input\")\r\n          dd.setAttribute(\"id\", \"name\" + id)\r\n          dd.setAttribute(\"class\", txtColor)\r\n        box22.appendChild(dd)\r\n        item.play(\"ag-item-\" + id);\r\n        }\r\n       \r\n         \r\n         \r\n        if (index === no - 1) {\r\n          \r\n        \r\n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n           \r\n          } else {\r\n            let f = false;\r\n            dom.setAttribute(\r\n              \"style\",\r\n              `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                      z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n            );\r\n            dom.addEventListener('click', function (e){\r\n              if(f === false){\r\n                f = true\r\n                dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n                let list;\r\n             \r\n                list = Array.from(\r\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n                );\r\n                list.map((item) => {\r\n                  \r\n                    item.style.display = \"none\"\r\n                  }) \r\n              }\r\n              else{\r\n                f = false\r\n                dom.setAttribute(\r\n                  \"style\",\r\n                  `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                          z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n                );\r\n                let list;\r\n             \r\n                list = Array.from(\r\n                  document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n                );\r\n                list.map((item) => {\r\n                  \r\n                    item.style.display = \"block\"\r\n                  }) \r\n              }\r\n            })\r\n          }\r\nif(item.player === undefined){\r\n\r\n}\r\n       else{\r\n        item.player.resize && item.player.resize();\r\n       }\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let f = false;\r\n      let no = this.state.streamList.length;\r\n      let txtColor = \"myPartName\";\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if(dom && this.state.disabledVedio === true){\r\n          dom.setAttribute(\"class\", \"ag-item2\");\r\n        }\r\n        else if (dom && this.state.disabledVedio === false) {\r\n         dom.setAttribute(\"class\", \"ag-item\");\r\n        }\r\n        let dd;\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          var box22 = document.getElementById(\"ag-item-\" + id)\r\n          dd = document.createElement(\"input\")\r\n          dd.setAttribute(\"id\", \"name\" + id)\r\n          dd.setAttribute(\"class\", txtColor)\r\n        box22.appendChild(dd)\r\n        item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        dom.addEventListener('click', function (e){\r\n          if(f === false){\r\n            f = true\r\n            dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n            let list;\r\n             \r\n            list = Array.from(\r\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n            );\r\n            list.map((item) => {\r\n              \r\n                item.style.display = \"none\"\r\n              }) \r\n          }\r\n          else{\r\n            f = false\r\n            dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n            let list;\r\n             \r\n            list = Array.from(\r\n              document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n            );\r\n            list.map((item) => {\r\n              \r\n                item.style.display = \"block\"\r\n              }) \r\n          }\r\n        })\r\n        if(item.player === undefined){\r\n\r\n        }\r\n               else{\r\n                item.player.resize && item.player.resize();\r\n               }\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    \r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n     this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n\r\n        },\r\n        () => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      \r\n      rt.client.subscribe(stream, function (err) {\r\n       \r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n     \r\n      rt.removeStream(evt.uid);\r\n     \r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n    \r\n    \r\n  rt.addStream(stream);\r\n    }.bind(this));\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n    axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${JSON.parse(this.userId)}&chname=${this.channelName}`)\r\n    .then((res) => {\r\n     if(res.data.result.rtc_id == uid){\r\n      Swal.fire({\r\n        title: \"success\",\r\n        html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\r\n        icon : \"success\"\r\n      })\r\n      setTimeout((e) =>{\r\n      this.handleExit(\"exit\");\r\n        window.location.assign(\"/#/customer/schedule\")\r\n      }, 3000)\r\n   \r\n     }\r\n    })\r\n    if(this.remoteShare2 === true){\r\n      this.remoteShare2 = false\r\n    } \r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n   \r\n    this.hostId = stream.getId()\r\n \r\n  \r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\r\n    axios.get(`${apiData}`)\r\n    .then((res) =>{\r\n     \r\n\r\n \r\n  if(res.data.length > 0 && this.state.atCustId !== stream.getId()){\r\n    var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n    praticipantVar.setAttribute(\"value\", res.data[0].user_name);\r\n    praticipantVar.setAttribute(\"disabled\", true)\r\n  }\r\n  else if(res.data.length > 0 && this.state.atCustId === stream.getId()){\r\n     var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n     praticipantVar.setAttribute(\"value\", \"You\");\r\n     praticipantVar.setAttribute(\"disabled\", true)\r\n   }\r\n   \r\n  else{\r\n    this.remoteShare2 = true\r\n    var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n    praticipantVar.setAttribute(\"value\", \"Sharing\");\r\n    praticipantVar.setAttribute(\"disabled\", true)\r\n    }\r\n     })\r\n  };\r\n  handleCamera = (e) => {\r\n    this.setState({disabledVedio : !this.state.disabledVedio})\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if(this.state.readyState === false){\r\n\r\n    }\r\n    else{\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n\r\n          },\r\n          () => {\r\n          \r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      window.location.assign(\"/#/customer/schedule\")\r\n    }\r\n  }\r\n  };\r\n\r\n  \r\n  sharingScreen = (e) => {\r\n    if(this.remoteShare2 === true && this.state.stateSharing === false){\r\n      Swal.fire({\r\n        title : \"error\",\r\n        html : \"Only one screen can be share at a time\",\r\n        icon : \"error\"\r\n      })\r\n    }\r\n    else if(this.state.stateSharing) {\r\n       this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n       this.shareStream && this.shareStream.close();\r\n       this.setState({stateSharing : false})\r\n     }\r\n      else {\r\n      this.setState({stateSharing : true})\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n      this.shareClient.init($.appId, () => {\r\n      // this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: false,\r\n      video: false,\r\n      screen: true,\r\n     \r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n  // recordStream = () => {\r\n\r\n  //   var data = JSON.stringify({\r\n  //     \"cname\":\"demo\",\r\n  //     \"uid\":\"527841\",\r\n  //     \"clientRequest\":{ \"resourceExpiredHour\": 24}});\r\n\r\n  //     var config = {\r\n  //     method: 'post',\r\n  //     url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n  //     headers: { \r\n  //       'Content-Type': 'application/json', \r\n  //       'Authorization': 'Basic '+this.encodedString,\r\n  //     },\r\n  //     data : data\r\n  //     };\r\n  //       axios(config)\r\n  //       .then(function (response) {\r\n        \r\n  //       })\r\n  //       .catch(function (error) {\r\n\r\n  //       });\r\n  // };\r\n\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n\r\n    // const recordingBtn = (\r\n    //   <span\r\n    //     onClick={this.recordStream}\r\n    //     className={\r\n    //       this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    //     }\r\n    //     title=\"Record\"\r\n    //   >\r\n    //     <RecordVoiceOverIcon />\r\n    //   </span>\r\n    // );\r\n\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n          {/* {recordingBtn} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\TP\\Proposal\\AcceptedProposal.js",["3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n// import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n           \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n          \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index : 2,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n\r\n                            {\r\n                                row.status == \"Accepted; Proposal\" ?\r\n                                    <p className=\"completed\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n              \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                           \r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                               \r\n\r\n\r\n                            <div>\r\n                                {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null\r\n                                        :\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    // onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\QueriesTab\\AllQuery.js",["3618","3619","3620","3621","3622","3623","3624","3625","3626","3627"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction AllQuery() {\r\n\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const [incompleteData, setInCompleteData] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInCompleteAssingment();\r\n    }, []);\r\n\r\n    const getInCompleteAssingment = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setInCompleteData(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"150px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"150px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                     \r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queriestab\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\",width : \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Client Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"120px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"\tExp. Delivery Date\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"120px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width : \"120px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" , width : \"120px\"};\r\n            },\r\n            formatter: function (cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                     {row.tp_status == \"1\" ? null : \r\n                      \r\n                      <div\r\n                      style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"green\",\r\n                      }}\r\n                  >\r\n                     \r\n\r\n                      {row.status == \"Declined Query\" ? null :\r\n                      <div title=\"Send Message\">\r\n                      <Link\r\n                          to={{\r\n                              pathname: `/taxprofessional/chatting/${row.id}`,\r\n                              obj: {\r\n                                  message_type: \"4\",\r\n                                  query_No: row.assign_no,\r\n                                  query_id: row.id,\r\n                                  routes: `/taxprofessional/queriestab`\r\n                              }\r\n                          }}\r\n                      >\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  marginLeft: \"8px\",\r\n                                  color: \"blue\"\r\n                              }}\r\n                          ></i>\r\n                      </Link>\r\n                  </div>}\r\n\r\n                      <div title=\"View Discussion Message\">\r\n                          <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  color: \"orange\"\r\n                              }}\r\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                          ></i>\r\n                      </div>\r\n                  </div>}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setInCompleteData}\r\n                        getData={getInCompleteAssingment}\r\n                        AllQuery=\"AllQuery\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={incompleteData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getInCompleteAssingment}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\AllProposal.js",["3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\n\r\nfunction AllProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n       \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index : 0,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Client Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n                                            {row.status}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.status}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                          \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n            \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n     \r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        AllProposal=\"AllProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProposal;\r\n\r\n\r\n\r\n\r\n{/* <div>\r\n                                {row.revised_text && (\r\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\r\n                                            onClick={() => chatHandler(row)}\r\n                                        ></i>\r\n                                    </div>\r\n                                )}\r\n                            </div> */}","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\AllAssignment.js",["3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport moment from \"moment\";\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [count, setCount] = useState(\"\");\r\n  const [assignment, setAssignment] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [finalId, setFinalId] = useState(\"\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n \r\n  const [item] = useState(current_date);\r\n  const [dataItem, setDataItem] = useState({});\r\n  const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const [draftModal, setDraftModal] = useState(false);\r\n  const [fianlModal, setFianlModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let des = false;\r\n  var rowStyle2 = {}\r\n  const ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n  \r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          setAssignment(res.data.result);\r\n          setCount(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n   \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n   \r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n  \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n   \r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n   \r\n    setStatus(value);\r\n  };\r\n\r\n\r\n  //columns\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                index : 0,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n            {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n           \r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected date of delivery\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n      \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Actual date of delivery\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Assignment Stage\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              title=\"Add Assignment stages\"\r\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n            >\r\n                {\r\n           row.paid_status == \"2\" ? null :\r\n              <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                <i class=\"fa fa-tasks\"></i>\r\n              </Link>\r\n      }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"90px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n         {\r\n           row.paid_status == \"2\" ? null : \r\n           <div\r\n           style={{\r\n             display: \"flex\",\r\n             justifyContent: \"space-between\",\r\n           }}\r\n         >\r\n           \r\n           \r\n              {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n            {\r\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n              <div title=\"upload Pdf\">\r\n              <p\r\n                style={{ cursor: \"pointer\", color: \"green\" }}\r\n                onClick={() => uploadDraftReport(row.id)}\r\n              >\r\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                draft\r\n              </p>\r\n            </div> : null\r\n           }\r\n{\r\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n\r\n<div title=\"upload Pdf\">\r\n <p\r\n   style={{ cursor: \"pointer\", color: \"red\" }}\r\n   onClick={() => uploadFinalReport(row)}\r\n >\r\n \r\n       <div>\r\n         <i\r\n           class=\"fa fa-upload\"\r\n           style={{ fontSize: \"16px\" }}\r\n         ></i>\r\n         final\r\n       </div>\r\n    \r\n </p>\r\n</div> : null\r\n}\r\n          \r\n\r\n           <div title=\"View Discussion Message\">\r\n             <i\r\n               class=\"fa fa-comments-o\"\r\n               style={{\r\n                 fontSize: 16,\r\n                 cursor: \"pointer\",\r\n                 color: \"orange\"\r\n               }}\r\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n             ></i>\r\n           </div>\r\n           <div title=\"Send Message\">\r\n             <Link\r\n               to={{\r\n                 pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                 obj: {\r\n                   message_type: \"3\",\r\n                   query_No: row.assign_no,\r\n                   query_id: row.q_id,\r\n                   routes: `/taxprofessional/assignment`\r\n                 }\r\n               }}\r\n             >\r\n               <i\r\n                 class=\"fa fa-comments-o\"\r\n                 style={{\r\n                   fontSize: 16,\r\n                   cursor: \"pointer\",\r\n                   marginLeft: \"8px\",\r\n                   color: \"blue\"\r\n                 }}\r\n               ></i>\r\n             </Link>\r\n           </div>\r\n\r\n         </div>\r\n         }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  rowStyle2 = (row, index) => {\r\n    const style = {}\r\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\r\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n    var aa = moment().toDate();\r\n   \r\n\r\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\r\n      style.backgroundColor = \"#c1d8f2\";\r\n      style.color = \"#000111\"\r\n    }\r\n  \r\n    return style;\r\n  }\r\n\r\n  // draft modal\r\n  const uploadDraftReport = (id) => {\r\n    if(typeof(id) == \"object\"){\r\n      \r\n      let des = true;\r\n      setLoading(false)\r\n      setDraftModal(!draftModal);\r\n    }\r\n    else{\r\n      setDraftModal(!draftModal);\r\n      setId(id);\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  // final modal\r\n  \r\n    const uploadFinalReport = (id) => {\r\nif(id && id.id === undefined){\r\n    \r\n  let des = true;\r\n  setLoading(false)\r\n  setFianlModal(!fianlModal);\r\n}\r\nelse{\r\n  setFianlModal(!fianlModal);\r\n      setFinalId(id);\r\n}\r\n    \r\n    };\r\n\r\n \r\n  const onSubmit = (data) => {\r\n   \r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&assignment_status=${status}&stages_status=${data.p_status\r\n        }&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n        \r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignment(res.data.result);\r\n            setRecords(res.data.result.length);\r\n\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Pending</option>\r\n                  <option value=\"2\">Complete</option>\r\n                  <option value=\"3\">Payment Decline</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Draft report</div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of report\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Completed</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n              }\r\n\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignment}\r\n            columns={columns}\r\n            rowStyle={ rowStyle2 }\r\n            rowIndex\r\n            classes = \"table-responsive\"\r\n          />\r\n          </div>\r\n\r\n          <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n\r\n          <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getAssignmentList}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DeliveryFinalTab.js",["3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n    const [fianlModal, setFianlModal] = useState(false);\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n    const [item] = useState(current_date);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [report, setReport] = useState();\r\n    const [reportModal, setReportModal] = useState(false);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n  let des = false;\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n   \r\n    const uploadFinalReport = (id) => {\r\n        if(id && id.id === undefined){\r\n            \r\n          let des = true;\r\n          setLoading(false)\r\n          setFianlModal(!fianlModal);\r\n        }\r\n        else{\r\n          setFianlModal(!fianlModal);\r\n              setFinalId(id);\r\n        }\r\n            \r\n            };\r\n        \r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                   \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n      \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n      \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n     \r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n       \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n      \r\n        setStatus(value);\r\n    };\r\n// view Report\r\nconst ViewReport = (key) => {\r\n  \r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n             \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                                index : 2,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                      {\r\n                 row.paid_status == \"2\" ? null :\r\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                      <i class=\"fa fa-tasks\"></i>\r\n                    </Link>\r\n            }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n               {\r\n                 row.paid_status == \"2\" ? null : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    \r\n      {\r\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\r\n      \r\n      <div title=\"upload Pdf\">\r\n       <p\r\n         style={{ cursor: \"pointer\", color: \"red\" }}\r\n         onClick={() => uploadFinalReport(row)}\r\n       >\r\n       \r\n             <div>\r\n               <i\r\n                 class=\"fa fa-upload\"\r\n                 style={{ fontSize: \"16px\" }}\r\n               ></i>\r\n               final\r\n             </div>\r\n          \r\n       </p>\r\n      </div> : null\r\n      }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/taxprofessional/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n      \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=${status}&stages_status=${data.p_status\r\n                }&pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n               \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n  <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    \r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportTab.js",["3689","3690","3691","3692","3693","3694","3695","3696","3697","3698","3699","3700","3701","3702","3703","3704","3705","3706","3707","3708","3709","3710"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\r\n    const [item] = useState(current_date);\r\n    const [dataItem, setDataItem] = useState({});\r\n    const [draftModal, setDraftModal] = useState(false);\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [report, setReport] = useState();\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let des = false;\r\n    const ViewReport = (key) => {\r\n       \r\n        setReportModal(!reportModal);\r\n        setReport(key.assign_no);\r\n        setDataItem(key)\r\n      };\r\n // draft modal\r\n const uploadDraftReport = (id) => {\r\n    if(typeof(id) == \"object\"){\r\n      \r\n      let des = true;\r\n      setLoading(false)\r\n      setDraftModal(!draftModal);\r\n    }\r\n    else{\r\n      setDraftModal(!draftModal);\r\n      setId(id);\r\n    }\r\n  \r\n  };\r\n\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            if(selectedData != undefined){\r\n                axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                  \r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n       \r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n       \r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n     \r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n     \r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n   \r\n\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n              \r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\r\n                                index : 1,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n               \r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Deliverable\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  {\r\n                    row.paid_status == \"2\" ? null :\r\n                      <div>\r\n                        {row.assignement_draft_report || row.final_report ?\r\n                          <div title=\"View All Report\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => ViewReport(row)}\r\n                          >\r\n                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                  }\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            text: \"Assignment Stage\",\r\n            headerStyle: () => {\r\n              return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n              return (\r\n                <>\r\n                  <div\r\n                    title=\"Add Assignment stages\"\r\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                  >\r\n                      {\r\n                 row.paid_status == \"2\" ? null :\r\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\r\n                      <i class=\"fa fa-tasks\"></i>\r\n                    </Link>\r\n            }\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n               {\r\n                 row.paid_status == \"2\" ? null : \r\n                 <div\r\n                 style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"space-between\",\r\n                 }}\r\n               >\r\n                 \r\n                 \r\n                    {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                  {\r\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\r\n                    <div title=\"upload Pdf\">\r\n                    <p\r\n                      style={{ cursor: \"pointer\", color: \"green\" }}\r\n                      onClick={() => uploadDraftReport(row.id)}\r\n                    >\r\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                      draft\r\n                    </p>\r\n                  </div> : null\r\n                 }\r\n                \r\n      \r\n                 <div title=\"View Discussion Message\">\r\n                   <i\r\n                     class=\"fa fa-comments-o\"\r\n                     style={{\r\n                       fontSize: 16,\r\n                       cursor: \"pointer\",\r\n                       color: \"orange\"\r\n                     }}\r\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                   ></i>\r\n                 </div>\r\n                 <div title=\"Send Message\">\r\n                   <Link\r\n                     to={{\r\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\r\n                       obj: {\r\n                         message_type: \"3\",\r\n                         query_No: row.assign_no,\r\n                         query_id: row.q_id,\r\n                         routes: `/taxprofessional/assignment`\r\n                       }\r\n                     }}\r\n                   >\r\n                     <i\r\n                       class=\"fa fa-comments-o\"\r\n                       style={{\r\n                         fontSize: 16,\r\n                         cursor: \"pointer\",\r\n                         marginLeft: \"8px\",\r\n                         color: \"blue\"\r\n                       }}\r\n                     ></i>\r\n                   </Link>\r\n                 </div>\r\n      \r\n               </div>\r\n               }\r\n                </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    const onSubmit = (data) => {\r\n       \r\n        axios\r\n            .get(\r\n                `${baseUrl}/tp/getAssignments?tp_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=\"Draft_Report\"&stages_status=1\r\n               &pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n<DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n            loading = {loading}\r\n            setLoading = {setLoading}\r\n            des = {des}\r\n          />\r\n           <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            dataItem={dataItem}\r\n          />\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getAssignmentList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\DeclinedProposal.js",["3711","3712","3713","3714","3715","3716","3717","3718","3719","3720","3721"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n      \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\r\n            .then((res) => {\r\n             \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n            \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index : 3,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n              \r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Client Declined; Proposal\" ?\r\n                                    <p className=\"declined\">\r\n                                        {row.status}\r\n                                    </p> :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n              \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n              \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                           \r\n\r\n                            {row.status_code > \"3\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                \r\n                            </div>\r\n                            {\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        null :\r\n                            <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n            }\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\Proposal\\InprogressProposal.js",["3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732","3733","3734"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const userid = window.localStorage.getItem(\"tpkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n     \r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const ViewDiscussionToggel = (key) => {\r\n        setViewDiscussion(!ViewDiscussion);\r\n        setAssignNo(key)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\r\n            .then((res) => {\r\n            \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n               \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/taxprofessional/queries/${row.id}`,\r\n                                index : 1,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n            \r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Proposed Amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.ProposedAmount;\r\n              \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.accepted_amount;\r\n              \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\r\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\r\n\r\n                                    <a\r\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <i\r\n                                            class=\"fa fa-eye\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n\r\n                            <div>\r\n                               \r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.id,\r\n                                                        routes: `/taxprofessional/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n                              \r\n                            </div>\r\n\r\n                            <div title=\"View Discussion Message\">\r\n                                <i\r\n                                    class=\"fa fa-comments-o\"\r\n                                    style={{\r\n                                        fontSize: 16,\r\n                                        cursor: \"pointer\",\r\n                                        color: \"orange\"\r\n                                    }}\r\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                                ></i>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TaxProfessionalFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        InprogressProposal=\"InprogressProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n\r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\DeclinedQuery\\DeclinedQuery.js",["3735","3736","3737","3738","3739","3740"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\nfunction DeclinedQuery({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n     \r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n      \r\n        return (\r\n          <>\r\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\CompleteData\\CompleteData.js",["3741","3742","3743","3744","3745","3746","3747","3748"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\n\r\n\r\nfunction CompletedQuery() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n     \r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n       \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompletedQuery;\r\n","D:\\Mazars\\src\\pages\\TP\\InCompleteData\\InCompleteData.js",["3749","3750","3751","3752","3753","3754","3755","3756","3757","3758"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\n\r\n\r\nfunction InCompleteData({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    setAssignNo(key)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"120px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"130px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"120px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width :\"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"150px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"100px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n          return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        \r\n          return (\r\n              <>\r\n               {row.tp_status == \"1\" ? null : \r\n                \r\n                <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    color: \"green\",\r\n                }}\r\n            >\r\n               \r\n\r\n                {row.status == \"Declined Query\" ? null :\r\n                <div title=\"Send Message\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/taxprofessional/chatting/${row.id}`,\r\n                        obj: {\r\n                            message_type: \"4\",\r\n                            query_No: row.assign_no,\r\n                            query_id: row.id,\r\n                            routes: `/taxprofessional/queriestab`\r\n                        }\r\n                    }}\r\n                >\r\n                    <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                            fontSize: 16,\r\n                            cursor: \"pointer\",\r\n                            marginLeft: \"8px\",\r\n                            color: \"blue\"\r\n                        }}\r\n                    ></i>\r\n                </Link>\r\n            </div>}\r\n\r\n                <div title=\"View Discussion Message\">\r\n                    <i\r\n                        class=\"fa fa-comments-o\"\r\n                        style={{\r\n                            fontSize: 16,\r\n                            cursor: \"pointer\",\r\n                            color: \"orange\"\r\n                        }}\r\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\r\n                    ></i>\r\n                </div>\r\n            </div>}\r\n              </>\r\n          );\r\n      },\r\n  },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            InprogressQuery=\"InprogressQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n        <div className=\"tableFixHead\">\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n            rowIndex\r\n          />\r\n</div>\r\n          <DiscardReport\r\n            ViewDiscussionToggel={ViewDiscussionToggel}\r\n            ViewDiscussion={ViewDiscussion}\r\n            report={assignNo}\r\n            getData={getInCompleteAssingment}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InCompleteData;\r\n","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\PendingForAcceptence.js",["3759"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\r\nimport RejectedModal from \"./RejectedModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\r\n  let history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    id: \"\",\r\n    allocation_id: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n   \r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      id: key.id,\r\n      allocation_id: key.allocation_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingforAcceptance();\r\n  }, []);\r\n\r\n  const getPendingforAcceptance = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setPendingData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n          // CountPendingForAcceptence(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"120px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.query_created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/taxprofessional/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width : \"150px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Client Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" , width : \"150px\"};\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n     \r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Accept / Reject\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                color: \"#6967ce\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              id=\"div1\"\r\n            >\r\n              <div\r\n                id=\"accept\"\r\n                title=\"Accept Assignment\"\r\n                onClick={() => acceptHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-check\"\r\n                  style={{ color: \"green\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n              <div\r\n                id=\"reject\"\r\n                title=\"Reject Assignment\"\r\n                // onClick={() => rejectHandler(row)}\r\n                onClick={() => rejectHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-times\"\r\n                  style={{ color: \"red\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const acceptHandler = (key) => {\r\n\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tp_id\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n   \r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n    \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\r\n          \r\n          getPendingforAcceptance();\r\n         // updateTab(1);\r\n         history.push(\"/taxprofessional/proposal\")\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TaxProfessionalFilter\r\n            setData={setPendingData}\r\n            getData={getPendingforAcceptance}\r\n            pendingForAcceptence=\"pendingForAcceptence\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          {\r\n            loading ?\r\n              <Spinner color=\"primary\" />\r\n              :\r\n              <div className=\"tableFixHead\">\r\n              <BootstrapTable\r\n                bootstrap4\r\n                keyField=\"id\"\r\n                data={pendingData}\r\n                columns={columns}\r\n                rowIndex\r\n                classes=\"table-responsive\"\r\n              />\r\n              </div>\r\n          }\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getPendingforAcceptance={getPendingforAcceptance}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\Proposal\\Generated.js",["3760","3761","3762","3763","3764","3765","3766","3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport Tds from \"./Tds\";\r\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\r\nimport moment from \"moment\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nconst Generated = () => {\r\n    var rowStyle2 = {}\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState();\r\n    const [assignNo, setAssignNo] = useState('');  \r\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n    const [tdsForm , setTdsForm] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState()\r\n    const [installmentNo, setInstallmentNo] = useState();\r\n    const [billNo, setBillNo] = useState()\r\n    const [id2, setId2] = useState()\r\n    const [gstNo, setGstinNo] = useState();\r\n    \r\n \r\n    const addTdsToggle = (key) => {\r\n   \r\n      setGstinNo(key.gstin_no);\r\n        setTdsForm(!tdsForm)\r\n        setAssignNo(key.assign_no)\r\n        setPaidAmount(key.paid_amount)\r\n        setId(key.id)\r\n        setInstallmentNo(key.installment_no)\r\n        setBillNo(key.billno);\r\n        setId2(key.id)\r\n    }\r\n    const ViewDiscussionToggel = (key) => {\r\n      \r\n        setViewDiscussion(!ViewDiscussion);\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1`)\r\n            .then((res) => {\r\n              \r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.payment_detail);\r\n                    setRecords(res.data.payment_detail.length)\r\n                   \r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"60px\" };\r\n            },\r\n        },\r\n       \r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" , width : \"120px\"};\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                \r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                                index : 0,\r\n                                routes: \"tlinvoice\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Installment No\",\r\n            dataField: \"installment_no\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                display : \"flex\",\r\n                justifyContent : \"center\",\r\n                border : \"0px\"\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Invoice No\",\r\n            dataField: \"billno\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\",  width : \"150px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Due Date\",\r\n            dataField: \"due_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row){\r\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\r\n\r\n                return(\r\n                   \r\n                    <>\r\n              {dueDate}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Invoice amount\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.invoice_amount;\r\n                 \r\n                 return(\r\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\r\n                 )\r\n               }\r\n        },\r\n        {\r\n            text: \"Tds Deducted\",\r\n            dataField: \"tds_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row){\r\n                var nfObject = new Intl.NumberFormat('hi-IN')\r\n                 var x = row.tds_amount;\r\n                 \r\n                 return(\r\n                     <>\r\n                     {row.is_paid == \"0\" ?\r\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\r\n                     </>\r\n                 \r\n                 )\r\n               }\r\n        }, \r\n        \r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter : function(cell, row) {\r\n                return(\r\n                    <>\r\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \r\n                    <>\r\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\r\n                    </>}\r\n                    </>\r\n                )\r\n            }\r\n        }, \r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"110px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                       <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems : \"center\" }}>\r\n                        <a\r\n                    href={`${baseUrl3}/${row.invoice}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                         <DescriptionOutlinedIcon color=\"secondary\" />\r\n                              </a>\r\n                              {row.is_paid == \"0\" ? \r\n                        <i\r\n                        class=\"fa fa-edit\"\r\n                        style={{\r\n                            fontSize: \"16px\",\r\n                            margin: \"0 5px\",\r\n                            cursor: \"pointer\",\r\n                            color : \"blue\",\r\n                        }}\r\n                       onClick = {() => addTdsToggle(row)} \r\n                    ></i> : \"\"\r\n                        }\r\n                          {row.is_paid == \"0\" \r\n                ?   \r\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\r\n                   \r\n              \r\n                    : \"\" }\r\n                        </div>\r\n                      \r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\r\n    const copyFun = (e)  =>{\r\n   \r\n        navigator.clipboard.writeText(e)\r\n       \r\n      }\r\n    rowStyle2 = (row, index) => {\r\n        const style = {}\r\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\r\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\r\n        var aa = moment().toDate();\r\n         var cc = moment(row.due_date).toDate();\r\n        \r\n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\r\n            style.backgroundColor = \"#bfdfd2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\r\n          style.backgroundColor = \"#c1d8f2\";\r\n          style.color = \"#000111\"\r\n        }\r\n       \r\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\r\n          style.backgroundColor = \"#fff\";\r\n          style.color = \"#000\"\r\n        }\r\n      \r\n        return style;\r\n      }\r\n  \r\n    \r\n    return (\r\n\r\n        <>\r\n            <Card>\r\n              \r\n             <CardHeader>\r\n                    <InvoiceFilter\r\n                     setData={setProposal}\r\n                     getData={getProposalList}\r\n                     invoice=\"generated\" \r\n                     setRec={setRecords}\r\n                     records={records}\r\n                     userid = {JSON.parse(userid)}/>\r\n                    </CardHeader>\r\n\r\n                <CardBody>\r\n                    \r\n                    \r\n                <div className=\"tableFixHead\">\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                        rowStyle={ rowStyle2 }\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    </div>\r\n\r\n                   \r\n                    <DiscardReport\r\n                        ViewDiscussionToggel={ViewDiscussionToggel}\r\n                        ViewDiscussion={ViewDiscussion}\r\n                        report={assignNo}\r\n                        getData={getProposalList}\r\n                    />\r\n                    <Tds \r\n                    tdsForm = {tdsForm}\r\n                    addTdsToggle = {addTdsToggle}\r\n                    id={id}\r\n                    paidAmount={paidAmount}\r\n                    report = {assignNo}\r\n                    installmentNo = {installmentNo}\r\n                    billNo = {billNo}\r\n                    id = {id2}\r\n                    generated = {\"edited\"}\r\n                    gstNo = {gstNo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n     \r\n    );\r\n}\r\nexport default Generated;","D:\\Mazars\\src\\pages\\TP\\Login\\VerifyOtpLogin.js",["3784"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Mandatory from \"../../../components/Common/Mandatory\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_otp: yup.string().required(\"\"),\r\n});\r\n\r\n\r\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\r\n \r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const history = useHistory();\r\n  const [time, setTime] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [num, changeNum] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    LoadingTime.timer2(setTime, setDisabled)\r\n  }, []);\r\n\r\n  const validOtp = (e) => {\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter number only\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"otp\", value.p_otp);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/verifyloginotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code == 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessLogin(\"Logged in successfully.\")\r\n          localStorage.setItem(\"tpkey\", JSON.stringify(response.data[\"user id\"]));\r\n          localStorage.setItem(\"tpEmail\", JSON.stringify(response.data.name));\r\n          sessionStorage.setItem(\"sessionTpid\", JSON.stringify(response.data[\"user id\"]))\r\n          history.push(\"/taxprofessional/dashboard\");\r\n\r\n        } else {\r\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\r\n          setLoading(false)\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n  const resendOtp = () => {\r\n    setLoading(true)\r\n    changeNum(true)\r\n    let formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"id\", uid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/regenrateotp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n          setDisabled(false)\r\n        }\r\n        else if (response.data.code === 0) {\r\n          setLoading(false)\r\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"container\">\r\n        <div class=\"otp\">\r\n          <div class=\"heading text-center\">\r\n            <h2>Verify Your OTP</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {\r\n              disabled ?\r\n                null\r\n                :\r\n                <div class=\"form-group\">\r\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_otp,\r\n                    })}\r\n                    id=\"otp\"\r\n                    placeholder=\"Enter Your OTP Here\"\r\n                    ref={register}\r\n                    name=\"p_otp\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(e) => validOtp(e)}\r\n                  />\r\n                  {errors.p_otp && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_otp.message}\r\n                    </div>\r\n                  )}\r\n                  <small class=\"text-center\">\r\n                    Note: OTP is valid for {time} seconds.\r\n                  </small>\r\n                  <Mandatory />\r\n                </div>\r\n            }\r\n\r\n            {\r\n              loading ?\r\n                <Spinner color=\"primary\" />\r\n                :\r\n                <div class=\"text-center\">\r\n                  {\r\n                    disabled ?\r\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\r\n                      :\r\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\r\n                  }\r\n                </div>\r\n            }\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n","D:\\Mazars\\src\\pages\\TP\\meeting\\index.jsx",[],"D:\\Mazars\\src\\views\\AssignmentTab\\Assignmodal.js",[],"D:\\Mazars\\src\\pages\\TP\\Invoice\\Tds.js",["3785","3786","3787","3788","3789","3790","3791","3792","3793"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useHistory } from \"react-router\";\r\nimport { parseInt } from \"lodash\";\r\nimport Swal from \"sweetalert2\";\r\nimport './porposalStyle.css';\r\n\r\nfunction Tds (props)  {\r\n  const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tpkey\")\r\n    const f2 = useRef(null);\r\n    const [sac33, setSac] = useState([])\r\n    const [services2, setServices2] = useState();\r\n    const [services, setServices] = useState();\r\n    const [cgetTotal, setCgstTotal] = useState()\r\n    const [sgetTotal, setSgstTotal] = useState()\r\n    const [igetTotal, setIgstTotal] = useState()\r\n    const [gst, setGst] = useState()\r\n    const [tds2, setTds] = useState()\r\n    const [grandTotal, setgrandTotal] = useState();\r\n   const [total, setTotal] = useState()\r\n   const [pocketExp, setPocketExp] = useState()\r\n   const [cgetRate, setCgetRate] = useState()\r\n   const [igetRate, setIgetRate] = useState();\r\n   const [sgetRate, setSgetRate] = useState();\r\n   const [basicAmount, setBasicAmount] = useState()\r\n   const [billNo, setBillNo] = useState();\r\n   const [gstNum , setGstNum] = useState();\r\n   const [tdsR, setTdsR] = useState();\r\n   const [disabled, setDisabled] = useState(false)\r\n  const [description, setDiscription] = useState()\r\n\r\nvar tdsRate = 10;\r\nconst percent = {\r\n  display : \"flex\", \r\n  justifyContent : \"space-between\",\r\n  flexDirection : \"row\",\r\n  alignItems : \"center\"\r\n}\r\n  const getServices = () => {\r\n    axios.get(`${baseUrl}/tl/getServices`)\r\n    .then((res) => {\r\n\r\n      if(res.data.code === 1){\r\n        setServices(res.data.result);\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getServices();\r\n  }, [])\r\n  useEffect(() => {\r\n    if(props.generated == \"edited\"){\r\n    getDataild();\r\n    }\r\n    else {\r\n     \r\n      setTdsR(10)\r\n      setCgetRate(18);\r\n      setIgetRate(0);\r\n      setSgetRate(0)\r\n      setGstNum(props.gstNo);\r\n    setBillNo(props.billNo)\r\n    setBasicAmount(props.paidAmount)\r\n    setPocketExp(0)\r\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\r\n    setIgstTotal(parseInt(0));\r\n    setSgstTotal(parseInt(0))\r\n    setGst(parseInt(props.paidAmount * 18 / 100))\r\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\r\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\r\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\r\n    }\r\n  }, [props.paidAmount])\r\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\r\n\r\nconst getDataild = () => {\r\n  axios\r\n  .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\r\n.then((res) => {\r\n\r\nif(res.data.payment_detail){\r\n  res.data.payment_detail.map((i) => {\r\n    setSac(i.serviceCode)\r\n     setGstNum(i.gstin_no)\r\n setBillNo(i.billno)\r\n setDiscription(i.description)\r\nsetTdsR(i.tds_rate)\r\n setBasicAmount(parseInt(i.paid_amount))\r\n setPocketExp(parseFloat(i.opt_expenses));\r\n setCgstTotal(parseFloat(i.cgst_amount));\r\n setIgstTotal(parseFloat(i.igst_amount));\r\n setSgstTotal(parseFloat(i.sgst_amount));\r\n setCgetRate(parseFloat(i.cgst_rate));\r\n setIgetRate(parseFloat(i.igst_rate));\r\n setSgetRate(parseFloat(i.sgst_rate));\r\nsetTds(parseFloat(i.tds_amount))\r\n setgrandTotal(parseFloat(i.payable_amount))\r\n setTotal(parseFloat(i.invoice_amount))\r\n setGst(parseFloat(i.gst));\r\n setDisabled(true);\r\n  })\r\n}\r\n\r\n})\r\n}\r\nconst cgstFun = (e) => {\r\n \r\n    setCgetRate(e.target.value);\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n   let cget = Math.round(a * e.target.value / 100)\r\n   setCgstTotal(parseInt(cget));\r\n   setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(sgetTotal)))\r\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\r\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\r\n  }\r\n\r\n\r\n// Sgst tax function\r\nconst sgstFun = (e) => {\r\n \r\n    setSgetRate(e.target.value)\r\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = Math.round(a * e.target.value / 100)\r\n        setSgstTotal(parseInt(cget))\r\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\r\n        setGst(parseInt(Math.round(cget) + Math.round(igetTotal) + Math.round(cgetTotal)))\r\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\r\n  }\r\n \r\n// Igst tax function\r\n const igstFun = (e) => {\r\n  \r\n    setIgetRate(e.target.value)\r\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n        let cget = Math.round(a * e.target.value / 100) \r\n           setIgstTotal(cget) \r\n           setGst(parseInt(Math.round(cget) + Math.round(sgetTotal) + Math.round(cgetTotal)));\r\n           setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\r\n           setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\r\n  }\r\n        \r\n \r\n \r\n// Tds function\r\n const tdsFun = (e) => {\r\n  if(e.target.value > 100){\r\n    setTdsR(100);\r\n    let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n    let cget = Math.round((a * 100 / 100))\r\n       setTds(cget)\r\n     setgrandTotal(parseInt(total) - parseInt(cget))\r\n   \r\n  }  \r\n  else{\r\n   setTdsR(e.target.value)\r\n   let a = parseInt(basicAmount) + parseInt(pocketExp);\r\n    let cget = Math.round((a * e.target.value / 100))\r\n       setTds(cget)\r\n     setgrandTotal(parseInt(total) - parseInt(cget))  \r\n  }\r\n  } \r\n  const pocketExpFun = (e) => {\r\n   let a;\r\n   setPocketExp(e.target.value)\r\n   if(e.target.value){\r\n    if(basicAmount.length == \"0\"){\r\n      a = Math.round(e.target.value) + parseInt(0);\r\n   }\r\n   else{\r\n     a = Math.round(e.target.value) + parseInt(basicAmount);\r\n   }\r\n  \r\n   let cget1 = parseInt(Math.round(a * cgetRate / 100))\r\n   let sget1 = parseInt(Math.round(a * sgetRate / 100))\r\n   let iget1 = parseInt(Math.round(a * igetRate / 100))\r\n   let tdsamount = parseInt(Math.round(a * tdsR / 100))\r\n     setCgstTotal(Math.round(a * cgetRate / 100));\r\n    setSgstTotal(Math.round(a * sgetRate / 100));\r\n    setIgstTotal(Math.round(a * igetRate / 100));\r\n    \r\n  setGst((oldData) => {\r\n   return(parseInt(parseInt(cget1) + parseInt(sget1) + parseInt(iget1)))\r\n  })\r\n   setTotal((oldData) => {\r\n     return(parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a))\r\n   })\r\n   setTds((oldData) => {\r\n     return(parseInt(tdsamount))\r\n   })\r\n   setgrandTotal((oldData) => {\r\n     return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\r\n   })\r\n  \r\n }\r\n }\r\n \r\n const basicFun = (e) => {\r\n  \r\n   let a = Math.round(parseInt(e.target.value) + parseInt(pocketExp));\r\n   let tdsamount = parseInt(Math.round(a * tdsR / 100))\r\n   setBasicAmount(e.target.value);\r\n   if(e.target.value > 0){\r\n     setCgstTotal(Math.round(a * cgetRate / 100));\r\n    setSgstTotal(Math.round(a * sgetRate / 100));\r\n    setIgstTotal(Math.round(a * igetRate / 100));\r\n    setGst((oldData) => {\r\n     return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\r\n    })\r\n   setTotal((oldData) => {\r\n     return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\r\n   })\r\n   setTds((oldData) => {\r\n     return(parseInt(tdsamount))\r\n   })\r\n   setgrandTotal((oldData) => {\r\n     return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\r\n   })\r\n  \r\n }\r\n }\r\n    const onSubmit= (value) => {\r\n      \r\n        let formData = new FormData();\r\n       formData.append(\"tp_id\", JSON.parse(userid));\r\n         formData.append(\"id\", props.id)\r\n         formData.append(\"qno\", props.report)\r\n         formData.append(\"description\", description);\r\n         formData.append(\"serviceCode\", sac33);\r\n        formData.append(\"basic_amount\", basicAmount);\r\n        formData.append(\"cgst_rate\", cgetRate);\r\n        formData.append(\"opt_expenses\", pocketExp);\r\n        formData.append(\"cgst_total\", cgetTotal)\r\n        formData.append(\"sgst_rate\", sgetRate);\r\n       \r\n        formData.append(\"sgst_total\", sgetTotal)\r\n        formData.append(\"igst_rate\", igetRate);\r\n      \r\n        formData.append(\"igst_total\", igetTotal)\r\n        formData.append(\"total\", total);\r\n        formData.append(\"tds_rate\", tdsR);\r\n        formData.append(\"gst\", gst);\r\n        formData.append(\"tds_total\", tds2)\r\n        formData.append(\"netpaid_amount\", grandTotal)\r\n        formData.append(\"gstin_no\", gstNum);\r\n        formData.append(\"bill_no\", billNo)\r\n        formData.append(\"invoice_by\", JSON.parse(userid))\r\n        axios({\r\n            method : \"POST\",\r\n            data : formData,\r\n            url : `${baseUrl}/tl/generateInvoive`\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n              Swal.fire({\r\n                title : \"success\", \r\n                html : \"Invoice generated successfully\",\r\n                icon : \"success\"\r\n              })\r\n                history.push(\"/taxprofessional/tpinvoice\")\r\n            }\r\n          \r\n        })\r\n      \r\n    }\r\n  const serviceFun = (e) => {\r\n    setDiscription(e)\r\n   services.map((k) => {\r\n    \r\nif(k.service == e) {\r\nsetSac(k.sac)\r\nsetServices2(k.service)\r\n}\r\n   })\r\n     \r\n  }\r\n\r\n  \r\n    return(\r\n      \r\n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\r\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \r\n        \r\n        </ModalHeader>\r\n        <ModalBody>\r\n    \r\n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\r\n    <div className=\"container gutter-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>GSTIN</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"gst_in\"\r\n         value={gstNum}\r\n         onChange= {(e) => setGstNum(e.target.value)}\r\n         className=\"form-control\"\r\n          />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n          <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <label>Invoice No</label>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n         <input \r\n         type=\"text\"\r\n         ref={register}\r\n         name=\"bill_no\"\r\n         value={billNo}\r\n         disabled = {disabled}\r\n         className=\"form-control\"\r\n         onChange= {(e) => (setBillNo(e.target.value))}\r\n          />\r\n            </div>\r\n          </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"row my-2\">\r\n              {services === undefined ? \"\" : \r\n              <div className=\"col-md-6\">\r\n              <label>Description <span className=\"declined\">*</span></label>\r\n          <select \r\n       //   defaultValue={description}\r\n       value={description}\r\n           ref={register({ required: true })}\r\n           name=\"description\"\r\n        style={{height : \"33.5px\"}}\r\n          onChange = {(e) => serviceFun(e.target.value)}\r\n          className={classNames(\"form-control\", {\r\n            \"is-invalid\": errors.p_name,\r\n            \r\n          })}>\r\n               <option value=\"\">please select value</option>\r\n          {services.map((i) => (\r\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\r\n          ))}\r\n            </select>\r\n              </div>}\r\n                  <div className=\"col-md-6\">\r\n                  <label>Basic Amount</label>\r\n                    <input \r\n                    type=\"number\"\r\n\r\n                    name=\"basic_amount\"\r\n                    ref={register({required : true})}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Amount\" \r\n                    onChange= {(e) => basicFun(e)}\r\n                    disabled\r\n                  value={basicAmount}/>\r\n                    </div> \r\n            </div>\r\n           <div className=\"row my-2\">\r\n             <div className=\"col-md-6 headCenter\">\r\n               <h5>Out of Pocket Expenses</h5>\r\n               </div>\r\n               <div className=\"col-md-6\">\r\n               <input \r\n                    type=\"number\"\r\n                    name=\"pocket_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    onChange={(e) => pocketExpFun(e)}\r\n                    value={pocketExp}\r\n                    placeholder=\"Pocket Amount\"  />\r\n               </div>\r\n             </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4\">\r\n              <h5>CGST</h5>\r\n             <div className=\"row\">\r\n             <div className=\"col-md-6\" style={percent}>\r\n              <input \r\n                    type=\"number\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    value={cgetRate}\r\n                    name=\"cgst_rate\"\r\n                    onChange= {(e) => cgstFun(e)} /> %\r\n                \r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"0\" \r\n                    disabled \r\n                    name=\"cgst_total\"\r\n                    value = {Math.round(cgetTotal)}/>\r\n                  </div>\r\n                 </div>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                  <h5>SGST/UTGST </h5>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-6\" style={percent}>\r\n                  <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    step=\"0.00001\"\r\n                    name=\"sgst_rate\"\r\n                    placeholder=\"Rate\" \r\n                   value = {sgetRate}\r\n                    onChange= {(e) => sgstFun(e)}/> %\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    \r\n                    name=\"sgst_total\" \r\n                    disabled\r\n                    value={Math.round(sgetTotal)}/>\r\n                          </div>\r\n                  </div>\r\n            \r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n              <h5>IGST</h5>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-6\" style={percent}>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    ref={register}\r\n                    name=\"igst_rate\"\r\n                   value={igetRate}\r\n                    onChange= {(e) => igstFun(e)} /> %\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-6\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  \r\n                    name=\"igst_total\"\r\n                    disabled\r\n                    ref={register}\r\n                    value={Math.round(igetTotal)} />\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  </div>\r\n                \r\n          <hr/>\r\n          \r\n            <div className=\"row my-2\">\r\n                <div className=\"col-md-4 headCenter\">\r\n                  <h5>Total GST</h5>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"total\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(gst)} />\r\n                            </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row my-2\">\r\n                <div className=\"col-md-8 headCenter\">\r\n                  <h5>Total Invoice Amount</h5>\r\n                    </div>\r\n                   \r\n                        <div className=\"col-md-4\">\r\n                       \r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"totalAmount\"\r\n                    disabled\r\n                   \r\n                    ref={register}\r\n                   value={Math.round(total)} />\r\n                            </div>\r\n                </div>\r\n           \r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-4 my-1 headCenter\">\r\n              <h5>TDS </h5>\r\n                  </div>\r\n                <div className=\"col-md-4 my-1\">\r\n               <div className = \"row\">\r\n                \r\n                   <div className=\"col-md-6\"  style={percent}>\r\n                   <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    step=\"0.00001\"\r\n                    placeholder=\"Rate\"\r\n                    name=\"tds_rate\"\r\n                    value={tdsR}\r\n                    ref={register}\r\n                    onChange= {(e) => tdsFun(e)} /> %\r\n                     </div>\r\n                     <div className=\"col-md-6\">\r\n                   </div>\r\n                 </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                    value={Math.round(tds2)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n            <div className=\"row my-2\">\r\n              <div className=\"col-md-6 my-1 headCenter\">\r\n              <h5>Net Payable Amount</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 my-1\"></div>\r\n                   \r\n                    <div className=\"col-md-4 my-1\">\r\n                <input \r\n                    type=\"text\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Total\"\r\n                    name=\"tds_total\"\r\n                    disabled\r\n                  value={Math.round(grandTotal)} />\r\n                    </div>\r\n                   \r\n            </div>\r\n        <ModalFooter>\r\n       \r\n             <>\r\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\r\n          \r\n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \r\n             </>\r\n        </ModalFooter>\r\n          </div>\r\n        </form>\r\n       \r\n           \r\n      \r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n}\r\nexport default Tds;","D:\\Mazars\\src\\pages\\TL\\Recording\\RecordingEdit.js",["3794","3795"],"import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\nimport { baseUrl } from '../../../config/config';\r\nimport Swal from 'sweetalert2';\r\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\r\n   const userid = localStorage.getItem(\"tlkey\")\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (value) => {\r\n       let formData = new FormData();\r\n       formData.append(\"uid\", JSON.parse(userid))\r\n       formData.append(\"message\", value.p_message);\r\n       formData.append(\"message_type\", value.msg_type)\r\n        formData.append(\"assign_id\", assignid);\r\n        formData.append(\"participants\", value.p_participants);\r\n        formData.append(\"id\", editId)\r\n        axios({\r\n            method : \"POST\",\r\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\r\n            data: formData,\r\n        })\r\n        .then((res) => {\r\n            if(res.data.code === 1){\r\n                recordingHandler()\r\n                Swal.fire({\r\n                    title : \"success\",\r\n                    html : \"Message edited successfully\",\r\n                    icon : \"success\"\r\n                })\r\n                recList()\r\n            }\r\n        })\r\n    }\r\n   \r\nreturn (\r\n \r\n    <>\r\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\r\n        <ModalHeader toggle={recordingHandler}>\r\n        <h1>Recording Edit</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n       <form onSubmit = {handleSubmit(onSubmit)}>\r\n<div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Participants Name</label>\r\n        <input \r\n        className=\"form-control\"\r\n        name=\"p_participants\"\r\n        ref = {register}\r\n        defaultValue = {participants}/>\r\n        </div>\r\n        \r\n</div>\r\n<div className = \"row\">\r\n<div className=\"col-md-12\">\r\n    <label>Message Type</label>\r\n<select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.msg_type,\r\n                            })}\r\n                            name=\"msg_type\"\r\n                            ref={register}\r\n                            style={{ height: \"33px\" }}\r\n                            required\r\n                            \r\n                          >\r\n                            <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                          </select>\r\n    </div>\r\n    </div>\r\n    <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n        <label>Message</label>\r\n        <textarea \r\n           style={{height : \"100px\"}}\r\n        className=\"form-control\"\r\n        name=\"p_message\"\r\n        ref = {register}\r\n        defaultValue = {message}/>\r\n        </div>\r\n</div>\r\n<button className=\"btn btn-primary my-2\">\r\n    Submit\r\n</button>\r\n       </form>\r\n        </ModalBody>\r\n    </Modal>\r\n    \r\n    </>\r\n)\r\n}\r\nexport default RecordingEdit;","D:\\Mazars\\src\\pages\\TL\\Message\\PaymentModal.js",["3796","3797","3798","3799"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","D:\\Mazars\\src\\pages\\TL\\NewPassword\\ResendOtp.js",["3800","3801"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id, setDisabled, getTime, setLoading }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        setLoading(true)\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    setLoading(false)\r\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                } else if (response.data.code === 0) {\r\n                    setLoading(false)\r\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n              \r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DiscardReport.js",["3802","3803","3804","3805","3806","3807"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction DiscardReport({\r\n  ViewDiscussion,\r\n  ViewDiscussionToggel,\r\n  report,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [report]);\r\n  // mazarapi/v1/tl/getMessage?id=128&q_no=Q-24-72\r\n\r\n  const getHistory = () => {\r\n   if(report != undefined && report.length > 0){\r\n    axios.get(`${baseUrl}/tp/getMessage?id=${JSON.parse(userId)}&q_no=${report}`).then((res) => {\r\n    \r\n      if (res.data.code === 1) {\r\n        setData(res.data.result);\r\n      }\r\n    });\r\n   }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\r\n                    <td>{p.sender}</td>\r\n                    <td style={{display : \"block\", width : \"460px\", overflow : \"wrap\"}}>\r\n                      {\r\n                        p.type == \"sent\" ?\r\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                          :\r\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\r\n                      }\r\n                      {p.message}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <div>\r\n            <Button color=\"primary\" onClick={ViewDiscussionToggel}>Cancel</Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default DiscardReport;\r\n\r\n","D:\\Mazars\\src\\components\\Search-Filter\\tpfilter.js",["3808","3809","3810","3811","3812","3813","3814","3815","3816","3817","3818","3819","3820","3821","3822","3823","3824","3825","3826","3827"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction TaxProfessionalFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    AllQuery,\r\n    pendingForAcceptence,\r\n    InprogressQuery,\r\n    DeclinedQuery,\r\n\r\n    completeAssignment,\r\n    proposal,\r\n    AllProposal,\r\n    InprogressProposal,\r\n    assignment,\r\n    AllPayment,\r\n    Unpaid,\r\n    Paid\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  \r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      if(selectedData != undefined){\r\n        axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n  \r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n  \r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n  \r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n  \r\n    if (AllQuery == \"AllQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQuery == \"InprogressQuery\") {\r\n\r\n  \r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getCompleteQues?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllProposal == \"AllProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressProposal == \"InprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if(proposal == \"proposal\"){\r\n      axios\r\n      .get(\r\n        `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&status=2&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setData(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (AllPayment == \"AllPayment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Unpaid == \"Unpaid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?&tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n        \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (Paid == \"Paid\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n       \r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-inline\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n\r\n                  {AllQuery == \"AllQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Queries</option>\r\n                      <option value=\"2\">Completed; Queries</option>\r\n                      <option value=\"3\">Declined; Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressQuery == \"InprogressQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      onChange={(e) => setStatus1(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                      <option value=\"4\">Client Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllProposal == \"AllProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Proposals</option>\r\n                      <option value=\"2\">Accepted; Proposals</option>\r\n                      <option value=\"3\">Client Declined; Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressProposal == \"InprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\">Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllPayment == \"AllPayment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div className=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaxProfessionalFilter;\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\PaymentStatus\\RejectedModal.js",["3828","3829","3830","3831"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  assignNo,\r\n  getPaymentStatus,\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = (value) => {\r\n    \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"notes\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/declinePayment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\r\n          getPaymentStatus();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n      \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"6\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"Enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\pages\\TL\\Schedule\\Demo.js",["3832","3833","3834","3835","3836","3837","3838","3839","3840","3841","3842","3843","3844","3845"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const userEmail = window.localStorage.getItem(\"tlEmail\")\r\n  const em = JSON.parse(userEmail)\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"240p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n       \r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n    username: appointment.username,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n      \r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n         \r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      \r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n       \r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const B = (key) => {\r\n    setRead(!key)\r\n  }\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <div onDoubleClick={() => B(data.owner)}>\r\n    \r\n      <Appointments.Appointment {...restProps}>\r\n        <div style={{ display: \"flex\" }}>\r\n        <i\r\n          onClick={() => handleJoin(data)}\r\n            class=\"fa fa-video-camera\"\r\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\r\n          ></i>\r\n          <div>{children}</div>\r\n          \r\n        </div>\r\n      </Appointments.Appointment>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (data) => {\r\n//     // console.log(\"data\", data);\r\n// //  console.log(\"data\", data)\r\n// // console.log(data.startDate)\r\n// var dt = new Date(data.startDate)\r\n// var dt2 = new Date()\r\n// let ck = dt.getMonth();\r\n\r\n// let pp = dt2.getMonth();\r\n// let rr = dt2.getHours();\r\n// let ss = dt.getHours()\r\n// let mm = dt2.getMinutes() + 20\r\n// let dd = dt.getMinutes()\r\n// let ee = dt.getDate();\r\n// let eee = dt2.getDate()\r\n// //   console.log(\"dt\", dt)\r\n// //   console.log(dt2.getDate())\r\n// //  console.log(dt.getMinutes())\r\n// //  console.log(dt2.getMinutes() + 20)\r\n// //  console.log(\"ck\", ck)\r\n// //   console.log(\"dt2\", dt2)\r\n// //   console.log(\"pp\", pp)\r\n// //   console.log(\"mm\", mm)\r\n// //   console.log(\"dd\", dd)\r\n// //   console.log(\"ss\", ss)\r\n// //   console.log(\"rr\", rr)\r\n// //   console.log(ck == pp)\r\n// //   console.log(ee === eee)\r\n// //   console.log(ss == rr)\r\n// //   console.log(mm > dd)\r\n\r\n\r\n// if(ck == pp && ss == rr && ee == eee){\r\n\r\n\r\n// if(mm > dd){\r\n//   console.log(\"passed\")\r\n  \r\n//   Cookies.set(\"channel_2\", data.question_id);\r\n//   Cookies.set(\"baseMode_2\", baseMode);\r\n//   Cookies.set(\"transcode_2\", transcode);\r\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n//   Cookies.set(\"videoProfile_2\", videoProfile);\r\n//   // history.push(\"/teamleader/meeting/\");\r\n//   history.push(`/teamleader/meeting/${data.id}`);\r\n\r\n// }\r\n// else{\r\n// // return false\r\n// Cookies.set(\"channel_2\", data.question_id);\r\n//   Cookies.set(\"baseMode_2\", baseMode);\r\n//   Cookies.set(\"transcode_2\", transcode);\r\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n//   Cookies.set(\"videoProfile_2\", videoProfile);\r\n//   // history.push(\"/teamleader/meeting/\");\r\n//   history.push(`/teamleader/meeting/${data.id}`);\r\n\r\n// }\r\n  //}\r\n  console.log(\"data\", data.id)\r\nCookies.set(\"channel_2\", data.question_id);\r\nCookies.set(\"baseMode_2\", baseMode);\r\nCookies.set(\"transcode_2\", transcode);\r\nCookies.set(\"attendeeMode_2\", attendeeMode);\r\nCookies.set(\"videoProfile_2\", videoProfile);\r\nCookies.set(\"tlid\", data.id)\r\n// history.push(\"/teamleader/meeting/\");\r\nhistory.push(`/teamleader/meeting/${data.id}`);\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n    console.log(\"d ---\", d);\r\n\r\n    if (typeof d === 'object') {\r\n      console.log(\"GMT\");\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n      console.log(\"d\");\r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted, cancel }) => {\r\n\r\n    if (added) {\r\n      setLoading(true)\r\n      console.log(\"added - \", added);\r\nconsole.log(\"cancle\", cancel)\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\r\n          } else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n    if (changed) {\r\n      console.log(\"changed\", changed);\r\n      setLoading(true)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n      console.log(\"data2 - \", data2);\r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n      console.log(\"id -\", id);\r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n      console.log(\"owner\", dataIttem.owner);\r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n\r\n          if (response.data.code === 1) {\r\n            setLoading(false)\r\n            var msg = \"Call details updated successfully.\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            setLoading(false)\r\n            console.log(\"call 0 code\")\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n      console.log(\"deleted f\", deleted);\r\n      setLoading(true)\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n          console.log(\"owner\", data.owner);\r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n      // console.log(\"value\", value);\r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n            console.log(\"res -\", res);\r\n            if (res.data.code === 1) {\r\n              setLoading(false)\r\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              setLoading(false)\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const BooleanEditor = (props) => {\r\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.BooleanEditor {...props} />;\r\n  };\r\n\r\n  const TextEditor = (props) => {\r\n    return <AppointmentForm.TextEditor {...props} />;\r\n  };\r\n\r\n  //basic layout\r\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n    console.log(\"appointmentData\", appointmentData);\r\n    return (\r\n      <AppointmentForm.BasicLayout\r\n        appointmentData={appointmentData}\r\n        onFieldChange={onFieldChange}\r\n        {...restProps}\r\n      >\r\n\r\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\r\n        <AppointmentForm.TextEditor\r\n          value={appointmentData.username}\r\n          readOnly\r\n        />\r\n\r\n      </AppointmentForm.BasicLayout>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ?\r\n          <Loader />\r\n          :\r\n          <>\r\n       <div style ={{display : \"flex\", height : \"700px\"}}>\r\n          <Paper>\r\n              <Scheduler data={data} >\r\n                <ViewState\r\n                  defaultCurrentDate={currentDate}\r\n                  defaultCurrentViewName=\"Week\"\r\n                />\r\n                <EditingState onCommitChanges={commitChanges} />\r\n                <EditRecurrenceMenu />\r\n\r\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\r\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\r\n                \r\n                <Appointments appointmentComponent={myAppointment} />\r\n\r\n                <Toolbar />\r\n                <DateNavigator />\r\n                <TodayButton />\r\n                <ViewSwitcher />\r\n\r\n                <AppointmentTooltip showOpenButton />\r\n\r\n                {\r\n                  read ?\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                      readOnly\r\n                    />\r\n                    :\r\n                    <AppointmentForm\r\n                      booleanEditorComponent={BooleanEditor}\r\n                      basicLayoutComponent={BasicLayout}\r\n                      textEditorComponent={TextEditor}\r\n                    />\r\n                }\r\n\r\n                <Resources\r\n                  data={resources}\r\n                />\r\n              </Scheduler>\r\n            </Paper>\r\n          </div>\r\n           \r\n          \r\n          </>\r\n          \r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Demo;","D:\\Mazars\\src\\pages\\TL\\meeting\\index.jsx",[],"D:\\Mazars\\src\\pages\\TP\\SendProposal\\Payment.js",["3846","3847"],"import { values } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport default class Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        if (isNaN(e.target.value)) {\r\n            this.setState({ error: \"Please insert only digit\" })\r\n        }\r\n        else {\r\n            this.setState({ error: \"\" })\r\n        }\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n\r\n    }\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 1; i <= this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6 my-2\">\r\n                       \r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                        />\r\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 my-2\">\r\n                      \r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            min={this.props.item}\r\n                        />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"inputs\">\r\n                {this.props.installment > 0 ?\r\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\r\n              <td>Payment</td>\r\n              <td>Due Dates</td>\r\n          </tr> : \"\"}\r\n          {fieldsArray}\r\n      </div>\r\n      </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// import React from \"react\";\r\n\r\n// export default class Payment extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],\r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         if (isNaN(e.target.value)) {\r\n//             this.setState({ error: \"Please insert only digit\" })\r\n//         }\r\n//         else {\r\n//             this.setState({ error: \"\" })\r\n//         }\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n\r\n//     }\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 1; i <= this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                         />\r\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n//                     </div>\r\n\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             min={this.props.item}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n//             );\r\n//         }\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\ViewAllReport.js",["3848","3849","3850","3851","3852","3853","3854","3855","3856","3857","3858","3859","3860","3861","3862","3863","3864","3865"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport DiscardReport from \"./DiscardReport\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  dataItem\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const [data, setData] = useState([]);\r\n  const [docData, setDocData] = useState({});\r\n\r\n\r\n  const [nestedModal, setNestedModal] = useState(false);\r\n  const toggleNested = (key) => {\r\n    setNestedModal(!nestedModal);\r\n    setDocData(key)\r\n  }\r\n\r\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\r\n  const ViewDiscussionToggel = (key) => {\r\n    setViewDiscussion(!ViewDiscussion);\r\n    // setDocData(report)\r\n  }\r\n\r\n\r\n  //check\r\n  const toggleDiscard = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to discard ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, discarted it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    \r\n    let formData = new FormData();\r\n    formData.append(\"tp_id\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"type\", 2);\r\n    formData.append(\"docid\", id.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n       \r\n        if (response.data.code === 1) {\r\n          getData()\r\n          Alerts.SuccessNormal(\"Discarded Successfully\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [report]);\r\n\r\n  const getData = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n     \r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>\r\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\r\n            <span>View All Reports</span>\r\n            <span>\r\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\r\n                View Discussion\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n                <th scope=\"row\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      <tr>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                      </tr>\r\n                     {p.customer_files && \r\n                      <tr>\r\n                    \r\n                      <a\r\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> \r\n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\r\n                    </tr> }\r\n                    </td>\r\n                  \r\n                    <td>\r\n                     <p> {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\r\n                 <br></br> \r\n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\r\n                    <td>\r\n                      {\r\n                        p.stages_type == \"2\" ?\r\n                          <div>\r\n                            {\r\n                              p.status == \"0\" ?\r\n                                <p style={{ color: \"red\" }}>Pending</p>\r\n                                :\r\n                                p.status == \"1\" ?\r\n                                  <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\r\n                                    <i\r\n                                      class=\"fa fa-check\"\r\n                                      style={{\r\n                                        color: \"blue\",\r\n                                        fontSize: \"16px\",\r\n                                        marginLeft: \"10px\"\r\n                                      }}\r\n                                    ></i>\r\n                                  </div> :\r\n                                  p.status == \"2\" ?\r\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                      <div title=\"Discussion\">\r\n                                        <i\r\n                                          class=\"fa fa-comments-o\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"green\"\r\n                                          }}\r\n                                          onClick={() => toggleNested(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                      <div title=\"Discard\">\r\n                                        <i\r\n                                          class=\"fa fa-times\"\r\n                                          style={{\r\n                                            fontSize: 16,\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"8px\",\r\n                                            color: \"red\"\r\n                                          }}\r\n                                          onClick={() => toggleDiscard(p)}\r\n                                        ></i>\r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    p.status == \"3\" ?\r\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\r\n                                      null\r\n                            }\r\n                          </div>\r\n                          :\r\n                          null\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <RejectedModal\r\n        toggleNested={toggleNested}\r\n        nestedModal={nestedModal}\r\n        dataItem={dataItem}\r\n        docData={docData}\r\n        getData={getData}\r\n      />\r\n\r\n\r\n      <DiscardReport\r\n        ViewDiscussionToggel={ViewDiscussionToggel}\r\n        ViewDiscussion={ViewDiscussion}\r\n        report={report}\r\n        getData={getData}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\FinalReportUpload.js",["3866","3867","3868","3869","3870"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n \r\n\r\n  const onSubmit = (value) => {\r\n    des = false;\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.p_final;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"final_report[]\", file);\r\n      }\r\n    }\r\n\r\n\r\n    formData.append(\"id\", id.id);\r\n    formData.append(\"q_id\", id.q_id);\r\n    axios\r\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n      \r\n        if (response.data.code === 1  && des === false) {\r\n          setLoading(false)\r\n\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          getAssignmentList();\r\n          uploadFinalReport();\r\n          \r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\r\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_final\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n // formData.append(\"final_report\", value.p_final[0]);","D:\\Mazars\\src\\pages\\TP\\Proposal\\ChatHistory.js",["3871","3872"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\r\n  const [notification, setNotification] = useState([]);\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n  useEffect(() => {\r\n    getNotification();\r\n  }, [qno]);\r\n\r\n  const getNotification = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\r\n          userId\r\n        )}&type=2&q_no=${qno}`\r\n      )\r\n      .then((res) => {\r\n       \r\n        if (res.data.code === 1) {\r\n          setNotification(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\r\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Message</th>\r\n                <th scope=\"row\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            {notification.length > 0\r\n              ? notification.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.message}</td>\r\n                      <td>{p.setdate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHistory;\r\n","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\DraftReportUpload.js",["3873","3874","3875","3876","3877"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n  \r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    des = false;\r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_draft;\r\n   \r\n\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"draft_report[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"id\", id);\r\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then(response => {\r\n    \r\n      if (response.data.code === 1 && des === false) {\r\n        des = true\r\n        setLoading(false)\r\n        var message = response.data.message\r\n        if (message.invalid) {\r\n          Swal.fire({\r\n            title: 'Error !',\r\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n          })\r\n        } else if (message.faill && message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n            icon: 'success',\r\n          })\r\n        } else if (message.success) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p>${message.success}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        else if (message.faill) {\r\n          Swal.fire({\r\n            title: 'Success',\r\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n            icon: 'success',\r\n          })\r\n        }\r\n        getAssignmentList();\r\n        uploadDraftReport();\r\n      } else if (response.data.code === 0) {\r\n        setLoading(false)\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\r\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_draft\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Upload\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n\r\n","D:\\Mazars\\src\\pages\\TP\\PendingForAcceptence\\RejectedModal.js",["3878","3879","3880"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  pay,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { id, allocation_id } = pay;\r\n\r\n  \r\n\r\n  const onSubmit = (value) => {\r\n  \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tp_id\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", id);\r\n    formData.append(\"allocation_id\", allocation_id);\r\n    formData.append(\"reject_reason\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n      \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\index.jsx",["3881","3882","3883","3884","3885","3886","3887","3888","3889","3890","3891","3892","3893","3894","3895","3896","3897","3898","3899","3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport MicNoneIcon from '@material-ui/icons/MicNone';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport CommonServices from \"../../../common/common\"\r\nimport {\r\n  Modal,\r\n  ModalTitle,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport RecordingModal from \"./RecordingModal\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { green ,red} from '@material-ui/core/colors';\r\nimport recImg from \"../../../loader.gif\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"8\": [\r\n    \"span 3/span 4/13/3\",\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 3/span 4/13/27\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"9\": [\r\n    \"span 3/span 4/13/1\",\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 3/span 4/13/29\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tpName = Cookies.get(\"tpName\")\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n      resID: '',\r\n      showModal: false,\r\n      recordDisplay: false,\r\n      data: {},\r\n      item:{},\r\n      articleId : [],\r\n      articleId2 : [],\r\n      showRecBtn : false,\r\n      showButton : '',\r\n      clickDisable : false,\r\n      addRemote : null,\r\n    \r\n      disabledVedio : false,\r\n      getAdId :'', \r\n      vedTrack : null,\r\n      shareValue : false,\r\n      vedOffer: ''\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  // userId = window.localStorage.getItem(\"tlkey\");\r\n  allrecording = [];\r\n  teamKey = window.localStorage.getItem(\"tpkey\");\r\n  tpEmail2 = window.localStorage.getItem(\"tpEmail\");\r\n  uid = Math.floor((Math.random() * 10000) + 1);\r\n  channelName = this.props.channel\r\n  tempArray = []\r\n vendor = 1\r\n region = 14;\r\n bucket = \"vride-multitvm\";\r\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\r\n secretKey = \"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\";\r\nallrecording;\r\nremoteShare2 = false\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n  \r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n       \r\n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.tpName;\r\n   axios.get(`${data_post_api}`).\r\n   then((res) => {\r\n    \r\n   \r\n   })\r\n \r\n  this.setState({getAdId : uid})\r\n  \r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n               \r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n         \r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n \r\n  componentDidMount() {\r\n    console.log(\"tpName\", this.tpName)\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n    this.getSchedulerData()\r\n    this.accuire();\r\n    // this.accuire()\r\n  }\r\n\r\n\r\n  getSchedulerData =() =>{\r\n    \r\n\r\n    axios\r\n    .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\r\n            .then((res) => {\r\n              \r\n           \r\n               \r\n              if (res.data.code === 1) {\r\n                if(res.data.result.items){\r\n                 this.setState({\r\n                   item:res.data.result.items[0],\r\n                  showButton : res.data.result.items[0].owner_id\r\n                 })  \r\n                }\r\n                       \r\n               }\r\n           });\r\n }\r\n\r\n componentDidUpdate() {\r\n  // rerendering\r\n \r\n  let canvas = document.querySelector(\"#ag-canvas\");\r\n  // pip mode (can only use when less than 4 people in channel)\r\n  if (this.state.displayMode === \"pip\") {\r\n    let no = this.state.streamList.length;\r\n   \r\n    if (no > 4) {\r\n      this.setState({ displayMode: \"tile\" });\r\n      return;\r\n    }\r\n    this.state.streamList.map((item, index) => {\r\n      let txtColor = \"myPartName\";\r\n      let id = item.getId();\r\n      let dom = document.querySelector(\"#ag-item-\" + id);\r\n      if(dom && this.state.disabledVedio === true){\r\n        dom.setAttribute(\"class\", \"ag-item2\");\r\n      }\r\n      else if (dom && this.state.disabledVedio === false) {\r\n       dom.setAttribute(\"class\", \"ag-item\");\r\n      }\r\n      let dd;\r\n      if (!dom) {\r\n        dom = document.createElement(\"section\");\r\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n        dom.setAttribute(\"class\", \"ag-item\");\r\n        canvas.appendChild(dom);\r\n        var box22 = document.getElementById(\"ag-item-\" + id)\r\n        dd = document.createElement(\"input\")\r\n        dd.setAttribute(\"id\", \"name\" + id)\r\n        dd.setAttribute(\"class\", txtColor)\r\n      box22.appendChild(dd)\r\n      item.play(\"ag-item-\" + id);\r\n      }\r\n     \r\n       \r\n     \r\n     \r\n       \r\n     \r\n       \r\n      if (index === no - 1) {\r\n        \r\n        //  document.getElementById(\"custName\").value = \"Lucky\"\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        \r\n        } else {\r\n         \r\n          let f = false;\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n          dom.addEventListener('click', function (e){\r\n            if(f === false){\r\n              f = true\r\n              dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n              let list;\r\n             \r\n              list = Array.from(\r\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n              );\r\n              list.map((item) => {\r\n                \r\n                  item.style.display = \"none\"\r\n                }) \r\n            }\r\n            else{\r\n              f = false\r\n              dom.setAttribute(\r\n                \"style\",\r\n                `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                        z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n              );\r\n              let list;\r\n             \r\n              list = Array.from(\r\n                document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n              );\r\n              list.map((item) => {\r\n                \r\n                  item.style.display = \"block\"\r\n                }) \r\n            }\r\n          })\r\n        }\r\nif(item.player === undefined){\r\n\r\n}\r\n     else{\r\n      item.player.resize && item.player.resize();\r\n     }\r\n    });\r\n  }\r\n  // tile mode\r\n  else if (this.state.displayMode === \"tile\") {\r\n    let f = false;\r\n    let no = this.state.streamList.length;\r\n    let txtColor = \"myPartName\";\r\n    this.state.streamList.map((item, index) => {\r\n      let id = item.getId();\r\n      let dom = document.querySelector(\"#ag-item-\" + id);\r\n      if(dom && this.state.disabledVedio === true){\r\n        dom.setAttribute(\"class\", \"ag-item2\");\r\n      }\r\n      else if (dom && this.state.disabledVedio === false) {\r\n       dom.setAttribute(\"class\", \"ag-item\");\r\n      }\r\n      let dd;\r\n      if (!dom) {\r\n        dom = document.createElement(\"section\");\r\n        dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n        dom.setAttribute(\"class\", \"ag-item\");\r\n        canvas.appendChild(dom);\r\n        var box22 = document.getElementById(\"ag-item-\" + id)\r\n        dd = document.createElement(\"input\")\r\n        dd.setAttribute(\"id\", \"name\" + id)\r\n        dd.setAttribute(\"class\", txtColor)\r\n      box22.appendChild(dd)\r\n      item.play(\"ag-item-\" + id);\r\n      } dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n      dom.addEventListener('click', function (e){\r\n          \r\n        if(f === false){\r\n          f = true\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n          let list;\r\n             \r\n          list = Array.from(\r\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n          );\r\n          list.map((item) => {\r\n            \r\n              item.style.display = \"none\"\r\n            }) \r\n        }\r\n        else{\r\n          f = false\r\n          dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n          let list;\r\n             \r\n          list = Array.from(\r\n            document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n          );\r\n          list.map((item) => {\r\n            \r\n              item.style.display = \"block\"\r\n            }) \r\n        }\r\n      })\r\n      if(item.player === undefined){\r\n\r\n      }\r\n             else{\r\n              item.player.resize && item.player.resize();\r\n             }\r\n    });\r\n  }\r\n  // screen share mode (tbd)\r\n  else if (this.state.displayMode === \"share\") {\r\n  \r\n  }\r\n}\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n        \r\n        },\r\n        () => {\r\n         \r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.client.subscribe(stream, function (err) {\r\n       \r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n   \r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n    rt.addStream(stream);\r\n   \r\n      }.bind(this));\r\n  \r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n     \r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n   \r\n    axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&uid=${this.state.showButton}&chname=${this.channelName}`)\r\n    .then((res) => {\r\n      if(res.data.result.rtc_id == uid){\r\n        Swal.fire({\r\n          title: \"success\",\r\n          html : \"Thank you for attending this meeting, this meeting is going to be ended by host\",\r\n          icon : \"success\"\r\n        })\r\n          setTimeout((e) => {\r\n            window.location.hash = \"/taxprofessional/schedule\";\r\n          }, 3000)\r\n         \r\n         }\r\n        \r\n    })\r\n     \r\n    if(this.remoteShare2 === true){\r\n      this.remoteShare2 = false\r\n    }  \r\n    \r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n   \r\n    this.hostId = stream.getId()\r\n \r\n  \r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n    var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\r\n    axios.get(`${apiData}`)\r\n    .then((res) =>{\r\n     \r\n      if(res.data.length > 0 && this.state.getAdId !== stream.getId()){\r\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n        praticipantVar.setAttribute(\"value\", res.data[0].user_name);\r\n        praticipantVar.setAttribute(\"disabled\", true)\r\n      }\r\n      else if(res.data.length > 0 && this.state.getAdId === stream.getId()){\r\n         var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n         praticipantVar.setAttribute(\"value\", \"You\");\r\n         praticipantVar.setAttribute(\"disabled\", true)\r\n       }\r\n       \r\n      else{\r\n        this.remoteShare2 = true\r\n        var praticipantVar = document.getElementById(\"name\" + stream.getId())\r\n        praticipantVar.setAttribute(\"value\", \"Sharing\");\r\n        praticipantVar.setAttribute(\"disabled\", true)\r\n        }\r\n \r\n    })\r\n  };\r\n  handleCamera = (e) => {\r\n    if(this.state.readyState === false){\r\n\r\n    }\r\n    else{\r\n    this.setState({disabledVedio : !this.state.disabledVedio})\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n  }\r\n  handleMic = (e) => {\r\n    if(this.state.readyState === false){\r\n\r\n    }\r\n    else{\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n  }\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  \r\n\r\n\r\n  handleExit = async() => {\r\n    if(this.state.clickDisable === false){\r\n      this.setState({clickDisable : true})\r\n     var resourceId = localStorage.getItem(\"resourceId\");\r\n     var sid = localStorage.getItem(\"sid\");\r\n   \r\n     var data = JSON.stringify({\r\n       \"cname\":this.channelName,\r\n       \"uid\":JSON.stringify(this.uid),\r\n       \"clientRequest\":{ }});\r\n     axios({\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"application/json;charset=utf-8\",\r\n         \"authorization\": \"Basic \"+this.encodedString,\r\n         \"cache-control\": \"no-cache\",\r\n       },\r\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n       data: data,\r\n     })\r\n     .then(response => {\r\n       \r\n       this.tempArray.push(response.data.serverResponse.fileList)\r\n       this.setState({showRecBtn : true})\r\n     })\r\n         .catch((error) => {\r\n        \r\n       });\r\n    \r\n    }\r\n \r\n     \r\n   }\r\n \r\n   sharingScreen = (e) => {\r\n    if(this.remoteShare2 === true && this.state.stateSharing === false){\r\n      Swal.fire({\r\n        title : \"error\",\r\n        html : \"Only one screen can be share at a time\",\r\n        icon : \"error\"\r\n      })\r\n    }\r\n    else if(this.state.stateSharing) {\r\n       this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n       this.shareStream && this.shareStream.close();\r\n       this.setState({stateSharing : false})\r\n     }\r\n      else {\r\n    \r\n      this.setState({stateSharing : true})\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n      \r\n\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n         \r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  \r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n             \r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n  \r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: false,\r\n      video: false,\r\n      screen: true,\r\n      control : true\r\n    };\r\n \r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n   \r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  CreateS3Folder = (uid) =>{\r\n   \r\n    axios\r\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\r\n            .then((res) => {\r\n                 \r\n            });\r\n  }\r\n\r\n\r\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\r\n\r\n\r\n\r\n\r\nsleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n//get recording status\r\nasync GetRecordingStatus(json){\r\n    \r\n\r\n  await this.sleep(3000); \r\n  var resourceId = json.data.resourceId;\r\n  var sid = json.data.sid;\r\n\r\n  localStorage.setItem(\"resourceId\", resourceId);\r\n  localStorage.setItem(\"sid\", sid);\r\n\r\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"content-type\": \"application/json;charset=utf-8\",\r\n      \"authorization\": \"Basic \"+this.encodedString,\r\n      \"cache-control\": \"no-cache\",\r\n    },\r\n})\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n       \r\n        this.setState({\r\n          data:response,\r\n          recordDisplay:!this.state.recordDisplay\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({clickDisable : false})\r\n        }, 1000)\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\n\r\n\r\n//start recording\r\nasync startRecording(key){\r\n   \r\n    var resourceId = key.data.resourceId \r\n    \r\n    this.CreateS3Folder(JSON.stringify(this.uid));\r\n\r\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\r\n \r\n\r\n  await axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\r\n      data: data,    \r\n    })\r\n    .then(json => this.GetRecordingStatus(json)) \r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n\r\n  //recording  acquire\r\n   accuire = () =>{\r\n   \r\n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": \"Basic \"+this.encodedString,\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\r\n      data: data,\r\n    })\r\n      .then(json => \r\n        this.startRecording(json)) \r\n      \r\n      .catch((error) => {\r\n     \r\n      });\r\n  };\r\n\r\n // Start recording button\r\n recStart = () => {\r\n  this.localStream.enableAudio();\r\n  this.localStream.enableVideo();\r\n  this.accuire();\r\n  this.setState({ showRecBtn: false  });\r\n  \r\n}\r\n\r\n//toggelStop\r\ntoggleModal = (key) =>{\r\n\r\nthis.setState({\r\n  showModal: !this.state.showModal,\r\n  recordDisplay:false\r\n})\r\n}\r\n\r\n\r\n//stop recording \r\nstopRecording = () => {\r\nif(this.state.showRecBtn === true){\r\n\r\nthis.del()\r\n}\r\n\r\nelse if(this.state.showButton == JSON.parse(this.teamKey)){\r\n\r\n  if(resourceId === undefined){\r\n    var resourceId = localStorage.getItem(\"resourceId\");\r\n  var sid = localStorage.getItem(\"sid\");\r\n  }\r\n\r\nvar data = JSON.stringify({\r\n  \"cname\":this.channelName,\r\n  \"uid\":JSON.stringify(this.uid),\r\n  \"clientRequest\":{ }});\r\naxios({\r\n  method: \"POST\",\r\n  headers: {\r\n    \"content-type\": \"application/json;charset=utf-8\",\r\n    \"authorization\": \"Basic \"+this.encodedString,\r\n    \"cache-control\": \"no-cache\",\r\n  },\r\n  url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\r\n  data: data,\r\n})\r\n.then(json => \r\n  this.setState({vedOffer : json}),\r\n   \r\n   \r\n     this.setState({showRecBtn : true}),\r\n     this.localStream.disableVideo(),\r\nthis.localStream.disableAudio(),\r\n  ) \r\n  .catch((error) => {\r\n    \r\n  });\r\n}\r\nelse{\r\n\r\nwindow.location.hash = \"/taxprofessional/schedule\";\r\n}\r\n\r\n};\r\ndel = (e) => {\r\n  var serverResponse = this.state.data.serverResponse.fileList\r\n  var completeRecording;\r\n  if(this.tempArray === undefined || this.tempArray.length === 0){\r\n      completeRecording =  serverResponse;\r\n  }\r\n  else if(this.tempArray != undefined || this.tempArray.length > 0){\r\n      completeRecording = this.tempArray + \",\" + serverResponse;\r\n  }\r\n  else{\r\n      completeRecording = serverResponse;\r\n  }\r\n   let formData = new FormData()\r\n   formData.append(\"fileList\", completeRecording)\r\n  formData.append(\"schedule_id\", this.props.id);\r\n  formData.append(\"uid\", JSON.parse(this.teamKey));\r\n  formData.append(\"assign_id\", this.state.item.assign_no);\r\n  formData.append(\"participants\", this.state.item.username);\r\n \r\n  Swal.fire({\r\n    title: \"End this vedio call for everyone?\",\r\n    // text: \"End this vedio call for everyone\",\r\n   type: \"warning\",\r\n   showCloseButton:true,\r\n   showCancelButton : true,\r\n   confirmButtonColor: \"#3085d6\",\r\n   cancelButtonColor: \"#d33\",\r\n   confirmButtonText: \"End the call\",\r\n   cancelButtonText : \"Just leave the meeting\"\r\n  }).then((result) => {\r\n   if (result.value) {\r\n    axios.get(`${baseUrl}/tl/setgetschedular?id=${this.props.id}&rtc_id=${this.state.getAdId}&uid=${JSON.parse(this.teamKey)}`)\r\n    .then((res) =>{\r\n      if(res){\r\n        this.client && this.client.unpublish(this.localStream);\r\n        this.localStream && this.localStream.close();\r\n        this.toggleModal()\r\n      }\r\n    })\r\n   \r\n   }\r\n   else if(result.dismiss === \"backdrop\" || result.dismiss === \"close\"){\r\n    return false\r\n  }\r\n   else{\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/callRecordingPost`,\r\n      data: formData,\r\n   })\r\n    window.location.hash = \"/taxprofessional/schedule\";\r\n   }\r\n });\r\n}\r\n\r\nrender() {\r\n\r\n \r\n  const style = {\r\n    display: \"grid\",\r\n    gridGap: \"50px 26px\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    gridTemplateRows: \"repeat(12, auto)\",\r\n    gridTemplateColumns: \"repeat(24, auto)\",\r\n  };\r\n  \r\n  const videoControlBtn =\r\n    this.props.attendeeMode === \"video\" ? (\r\n      <span\r\n        onClick={this.handleCamera}\r\n        className=\"ag-btn videoControlBtn\"\r\n        title=\"Enable/Disable Video\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-camera\"></i>\r\n        <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n\r\n  const audioControlBtn =\r\n    this.props.attendeeMode !== \"audience\" ? (\r\n      <span\r\n        onClick={this.handleMic}\r\n        className=\"ag-btn audioControlBtn\"\r\n        title=\"Enable/Disable Audio\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-mic\"></i>\r\n        <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n  const switchDisplayBtn = (\r\n    <span\r\n      onClick={this.switchDisplay}\r\n      className={\r\n        this.state.streamList.length > 4\r\n          ? \"ag-btn displayModeBtn disabled\"\r\n          : \"ag-btn displayModeBtn\"\r\n      }\r\n      title=\"Switch Display Mode\"\r\n    >\r\n      <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n    </span>\r\n  );\r\n\r\n   \r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n      onClick={this.stopRecording}\r\n             className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n       \r\n     <i className=\"ag-icon ag-icon-leave\"></i> \r\n      </span>\r\n    );\r\n    const recordingBtn = (\r\n      <span\r\n        onClick={this.recStart}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Record On\"\r\n      >{\r\n        this.state.showRecBtn === true ?\r\n      \r\n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\r\n      </span>\r\n    );\r\n\r\n\r\n//recording btn off\r\nconst recordingBtnOff = (\r\n  <span\r\n  onClick={this.handleExit}\r\n\r\n    \r\n    className={\r\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n    }\r\n    title=\"Record Off\"\r\n  >\r\n     {\r\n      this.state.showButton == JSON.parse(this.teamKey) ?\r\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\r\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\r\n    }\r\n            \r\n  </span>\r\n);\r\n\r\n\r\n    return (\r\n      <>\r\n      <div id=\"ag-canvas\" style={style}>   \r\n        <div className=\"ag-btn-group\">\r\n\r\n        <RecordingModal \r\n        isOpen={this.state.showModal}\r\n         toggle={this.toggleModal}\r\n         data={this.state.data}\r\n         item={this.state.item}\r\n         allrecording = {this.tempArray}\r\n         schId = {this.props.id}\r\n         uid = {this.state.getAdId}\r\n         ownerId = {this.state.showButton}\r\n         />\r\n                \r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n\r\n          {\r\n             this.state.showRecBtn === true ? recordingBtn : null\r\n          }\r\n\r\n          {\r\n             this.state.showRecBtn === false ? recordingBtnOff : null\r\n          }\r\n        </div>\r\n      </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;","D:\\Mazars\\src\\pages\\TP\\AssignmentTab\\RejectModal.js",["3912","3913","3914"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  nestedModal,\r\n  toggleNested,\r\n  dataItem,\r\n  docData,\r\n  getData\r\n}) {\r\n  const userId = window.localStorage.getItem(\"tpkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n \r\n\r\n  const onSubmit = (value) => {\r\n   \r\n    setLoading(true)\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"tp_id\", JSON.parse(userId));\r\n    formData.append(\"id\", dataItem.q_id);\r\n    formData.append(\"query_no\", dataItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 1);\r\n    formData.append(\"docid\", docData.docid);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/draftDiscussion`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        \r\n        if (response.data.code === 1) {\r\n          setLoading(false)\r\n          toggleNested();\r\n          getData();\r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        } else if (response.data.code === 0) {\r\n          setLoading(false)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n       \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\r\n        <ModalHeader>Discussion</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              {\r\n                loading ?\r\n                  <Spinner color=\"primary\" />\r\n                  :\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      Submit\r\n                    </button>\r\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal >\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n\r\n","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\index.jsx",["3915","3916","3917","3918","3919","3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938"],"D:\\Mazars\\src\\pages\\TP\\AgoraVideoCall\\RecordingModal.js",["3939","3940","3941","3942","3943","3944","3945","3946","3947","3948"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nfunction RecordingModal({\r\n    isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording,\r\n    schId,\r\n    uid,\r\n    ownerId\r\n}) {\r\n   \r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"tpkey\");\r\n\r\n   \r\n\r\n    const { assign_no, id, username, start } = item\r\n  \r\n    const onSubmit = (value) => {\r\n        var serverResponse = data.serverResponse.fileList\r\n        var completeRecording;\r\n        if(allrecording === undefined || allrecording.length === 0){\r\n            completeRecording =  serverResponse;\r\n        }\r\n        else if(allrecording != undefined || allrecording.length > 0){\r\n            completeRecording = allrecording + \",\" + serverResponse;\r\n        }\r\n        else{\r\n            completeRecording = serverResponse;\r\n        }\r\n                const { fileList } = serverResponse\r\n             \r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"fileList\", completeRecording);\r\n        formData.append(\"message_type\", value.msg_type);\r\n        formData.append(\"message\", value.p_message);\r\n        formData.append(\"assign_id\", assign_no);\r\n        formData.append(\"participants\", username);\r\n        formData.append(\"schedule_id\", id);\r\n\r\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n              \r\n                if (response.data.code === 1) {\r\n                    toggle();\r\n                    history.push(\"/taxprofessional/schedule\")\r\n                   \r\n                }\r\n            })\r\n            .catch((error) => {\r\n               \r\n            });\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen}  size=\"md\">\r\n                <ModalHeader>\r\n                Minutes of meeting\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div class=\"col-md-10\">\r\n                                <div class=\"form-group\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                             \r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;","D:\\Mazars\\src\\pages\\TL\\AgoraVideoCall\\RecordingModal.js",["3949","3950","3951","3952","3953","3954","3955","3956"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nfunction RecordingModal({\r\n    isOpen,\r\n    toggle,\r\n    data,\r\n    item, \r\n    allrecording,\r\n    schId,\r\n    uid,\r\n    ownerId\r\n}) {\r\n    const history = useHistory();\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n    \r\n    const { assign_no, id, username, start } = item\r\n   \r\n\r\n\r\n    //submit\r\n    const onSubmit = (value) => {\r\n      \r\n\r\nvar serverResponse = data.serverResponse.fileList\r\nvar completeRecording;\r\nif(allrecording === undefined || allrecording.length === 0){\r\n    completeRecording =  serverResponse;\r\n}\r\nelse if(allrecording != undefined || allrecording.length > 0){\r\n    completeRecording = allrecording + \",\" + serverResponse;\r\n}\r\nelse{\r\n    completeRecording = serverResponse;\r\n}\r\n        const { fileList } = serverResponse\r\n        \r\n\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"fileList\", completeRecording);\r\n        formData.append(\"message_type\", value.msg_type);\r\n        formData.append(\"message\", value.p_message);\r\n        formData.append(\"assign_id\", assign_no);\r\n        formData.append(\"participants\", username);\r\n        formData.append(\"schedule_id\", id);\r\n\r\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/callRecordingPost`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                        if (response.data.code === 1) {\r\n                    toggle()\r\n                history.push(\"/teamleader/schedule\")\r\n                }\r\n               \r\n            })\r\n            .catch((error) => {\r\n                       });\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n            <Modal isOpen={isOpen} size=\"md\">\r\n                <ModalHeader >\r\n                Minutes of meeting\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div class=\"col-md-10\">\r\n                                <div class=\"form-group\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Query No.</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_query\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            value={assign_no}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <label>Participants</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"p_participants\"\r\n                                            className=\"form-control\"\r\n                                            ref={register}\r\n                                            defaultValue={username}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <label>Discussion Type</label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"msg_type\"\r\n                                        ref={register}\r\n                                        style={{ height: \"33px\" }}\r\n                                    >\r\n                                        <option value=\"\">--select--</option>\r\n                                        <option value=\"Query Discussion\">Query Discussion</option>\r\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\r\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\r\n                                        <option value=\"Client Discussion\">Client Discussion</option>\r\n                                        <option value=\"Draft Reports\">Draft Reports</option>\r\n                                        <option value=\"Final Discussion\">Final Discussion</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Message text here\"\r\n                                        rows=\"5\"\r\n                                        ref={register}\r\n                                        name=\"p_message\"\r\n                                    ></textarea>\r\n                                </div>\r\n                                {/* <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button> */}\r\n                                <button type=\"submit\" className=\"btn btn-primary mx-2\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RecordingModal;","D:\\Mazars\\src\\pages\\Admin\\EditTL\\Reset.js",["3957","3958"],"import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select, Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nfunction Reset() {\r\n  \r\n  const { Option } = Select;\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n\r\n\r\n\r\n  const handleChange = (value) => {\r\n  \r\n    setStore2(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\r\n      \r\n        setValue(res.data.result[0]);    \r\n      });\r\n    };\r\n\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n \r\n  const data1 = value.name;\r\n  const data2 = value.email;\r\n  const data3 = value.phone;\r\n  const data4 = value.parent_id;\r\n  const data5 = value.cat_name;\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\r\n        .then((res) => {\r\n         \r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [store2]);\r\n\r\n  const onFinish = (values) => {\r\n   \r\n\r\n  \r\n  };\r\n\r\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\r\n  else\r\n    return (\r\n      <>\r\n        <div class=\"container\">\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              username: `${data1}`,\r\n              email: `${data2}`,\r\n              phone: `${data3}`,\r\n              category: `${data4}`,\r\n              sub_category: `${data5}`,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item label=\"Username\" name=\"username\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"email \">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"category\" label=\"Category\">\r\n              <Select onChange={handleChange}>\r\n                <Option value=\"1\">Direct</Option>\r\n                <Option value=\"2\">InDirect</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\r\n              <Select>\r\n                <Option value=\"\">--Select Sub-Category--</Option>\r\n                {tax2.map((p, index) => (\r\n                  <Option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"phone\" label=\"phone\">\r\n              <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Form>\r\n\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n\r\n",{"ruleId":"3959","replacedBy":"3960"},{"ruleId":"3961","replacedBy":"3962"},{"ruleId":"3963","severity":1,"message":"3964","line":76,"column":8,"nodeType":"3965","messageId":"3966","endLine":76,"endColumn":16},{"ruleId":"3963","severity":1,"message":"3967","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":38},{"ruleId":"3963","severity":1,"message":"3968","line":11,"column":9,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":16},{"ruleId":"3963","severity":1,"message":"3969","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":89,"column":40,"nodeType":"3972","messageId":"3973","endLine":89,"endColumn":42},{"ruleId":"3974","severity":1,"message":"3975","line":178,"column":6,"nodeType":"3976","endLine":178,"endColumn":16,"suggestions":"3977"},{"ruleId":"3963","severity":1,"message":"3978","line":1,"column":10,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":16},{"ruleId":"3963","severity":1,"message":"3979","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":16},{"ruleId":"3974","severity":1,"message":"3980","line":45,"column":6,"nodeType":"3976","endLine":45,"endColumn":12,"suggestions":"3981"},{"ruleId":"3970","severity":1,"message":"3971","line":55,"column":97,"nodeType":"3972","messageId":"3973","endLine":55,"endColumn":99},{"ruleId":"3963","severity":1,"message":"3982","line":9,"column":8,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":17},{"ruleId":"3963","severity":1,"message":"3983","line":12,"column":9,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3983","line":27,"column":9,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":28,"column":35,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":66,"column":14,"nodeType":"3972","messageId":"3973","endLine":66,"endColumn":16},{"ruleId":"3974","severity":1,"message":"3986","line":35,"column":6,"nodeType":"3976","endLine":35,"endColumn":8,"suggestions":"3987"},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3974","severity":1,"message":"3989","line":117,"column":6,"nodeType":"3976","endLine":117,"endColumn":8,"suggestions":"3990"},{"ruleId":"3970","severity":1,"message":"3991","line":159,"column":27,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3991","line":159,"column":52,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3991","line":174,"column":25,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3991","line":174,"column":51,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3991","line":204,"column":18,"nodeType":"3972","messageId":"3973","endLine":204,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3991","line":254,"column":22,"nodeType":"3972","messageId":"3973","endLine":254,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3991","line":295,"column":23,"nodeType":"3972","messageId":"3973","endLine":295,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3992","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3974","severity":1,"message":"3993","line":38,"column":6,"nodeType":"3976","endLine":38,"endColumn":8,"suggestions":"3994"},{"ruleId":"3970","severity":1,"message":"3971","line":108,"column":34,"nodeType":"3972","messageId":"3973","endLine":108,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":111,"column":34,"nodeType":"3972","messageId":"3973","endLine":111,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":34,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":118,"column":34,"nodeType":"3972","messageId":"3973","endLine":118,"endColumn":36},{"ruleId":"3974","severity":1,"message":"3995","line":36,"column":6,"nodeType":"3976","endLine":36,"endColumn":8,"suggestions":"3996"},{"ruleId":"3970","severity":1,"message":"3971","line":117,"column":34,"nodeType":"3972","messageId":"3973","endLine":117,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":120,"column":34,"nodeType":"3972","messageId":"3973","endLine":120,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":124,"column":34,"nodeType":"3972","messageId":"3973","endLine":124,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":34,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3997","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4000","line":10,"column":10,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4001","line":11,"column":13,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4002","line":13,"column":8,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3974","severity":1,"message":"3980","line":45,"column":6,"nodeType":"3976","endLine":45,"endColumn":12,"suggestions":"4003"},{"ruleId":"3963","severity":1,"message":"4004","line":52,"column":9,"nodeType":"3965","messageId":"3966","endLine":52,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3992","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3988","line":15,"column":33,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":37},{"ruleId":"3963","severity":1,"message":"4005","line":20,"column":8,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4006","line":56,"column":18,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":30},{"ruleId":"3974","severity":1,"message":"4007","line":66,"column":6,"nodeType":"3976","endLine":66,"endColumn":8,"suggestions":"4008"},{"ruleId":"3963","severity":1,"message":"4009","line":188,"column":7,"nodeType":"3965","messageId":"3966","endLine":188,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4010","line":189,"column":12,"nodeType":"3965","messageId":"3966","endLine":189,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":280,"column":37,"nodeType":"3972","messageId":"3973","endLine":280,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":283,"column":39,"nodeType":"3972","messageId":"3973","endLine":283,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":286,"column":41,"nodeType":"3972","messageId":"3973","endLine":286,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":302,"column":33,"nodeType":"3972","messageId":"3973","endLine":302,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":316,"column":35,"nodeType":"3972","messageId":"3973","endLine":316,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":340,"column":32,"nodeType":"3972","messageId":"3973","endLine":340,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":341,"column":32,"nodeType":"3972","messageId":"3973","endLine":341,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":342,"column":33,"nodeType":"3972","messageId":"3973","endLine":342,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4011","line":46,"column":12,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4012","line":46,"column":18,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4013","line":61,"column":6,"nodeType":"3976","endLine":61,"endColumn":8,"suggestions":"4014"},{"ruleId":"3970","severity":1,"message":"3971","line":79,"column":22,"nodeType":"3972","messageId":"3973","endLine":79,"endColumn":24},{"ruleId":"3963","severity":1,"message":"4015","line":138,"column":13,"nodeType":"3965","messageId":"3966","endLine":138,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":189,"column":25,"nodeType":"3972","messageId":"3973","endLine":189,"endColumn":27},{"ruleId":"4016","severity":1,"message":"4017","line":360,"column":29,"nodeType":"4018","messageId":"4019","endLine":360,"endColumn":63},{"ruleId":"4020","severity":1,"message":"4021","line":496,"column":35,"nodeType":"4022","messageId":"4023","endLine":499,"endColumn":36,"fix":"4024"},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4025","line":20,"column":8,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4026","line":32,"column":6,"nodeType":"3976","endLine":32,"endColumn":8,"suggestions":"4027"},{"ruleId":"3970","severity":1,"message":"3971","line":99,"column":34,"nodeType":"3972","messageId":"3973","endLine":99,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":102,"column":34,"nodeType":"3972","messageId":"3973","endLine":102,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":105,"column":34,"nodeType":"3972","messageId":"3973","endLine":105,"endColumn":36},{"ruleId":"3974","severity":1,"message":"4028","line":25,"column":6,"nodeType":"3976","endLine":25,"endColumn":10,"suggestions":"4029"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4031","line":6,"column":9,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3998","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4025","line":23,"column":8,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4032","line":44,"column":11,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":23},{"ruleId":"3974","severity":1,"message":"4033","line":58,"column":6,"nodeType":"3976","endLine":58,"endColumn":12,"suggestions":"4034"},{"ruleId":"3963","severity":1,"message":"3985","line":20,"column":54,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":59},{"ruleId":"3974","severity":1,"message":"3980","line":35,"column":6,"nodeType":"3976","endLine":35,"endColumn":12,"suggestions":"4035"},{"ruleId":"3963","severity":1,"message":"4004","line":44,"column":9,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3992","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3988","line":15,"column":10,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4036","line":17,"column":8,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4037","line":29,"column":8,"nodeType":"3976","endLine":29,"endColumn":10,"suggestions":"4038"},{"ruleId":"3963","severity":1,"message":"3992","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4036","line":18,"column":8,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4039","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4040","line":26,"column":18,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4037","line":40,"column":8,"nodeType":"3976","endLine":40,"endColumn":10,"suggestions":"4041"},{"ruleId":"3970","severity":1,"message":"3971","line":109,"column":45,"nodeType":"3972","messageId":"3973","endLine":109,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4042","line":3,"column":8,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4043","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4044","line":7,"column":45,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":54},{"ruleId":"3963","severity":1,"message":"3983","line":30,"column":9,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":32,"column":35,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":93,"column":97,"nodeType":"3972","messageId":"3973","endLine":93,"endColumn":99},{"ruleId":"3963","severity":1,"message":"4045","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":30},{"ruleId":"3963","severity":1,"message":"3997","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":19,"column":3,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":20,"column":3,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4049","line":41,"column":11,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":17},{"ruleId":"3963","severity":1,"message":"3983","line":44,"column":9,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4050","line":52,"column":10,"nodeType":"3965","messageId":"3966","endLine":52,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4051","line":52,"column":18,"nodeType":"3965","messageId":"3966","endLine":52,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4052","line":54,"column":10,"nodeType":"3965","messageId":"3966","endLine":54,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4053","line":55,"column":10,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4054","line":55,"column":17,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4055","line":56,"column":10,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4056","line":56,"column":21,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4057","line":59,"column":10,"nodeType":"3965","messageId":"3966","endLine":59,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4058","line":66,"column":10,"nodeType":"3965","messageId":"3966","endLine":66,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4059","line":70,"column":10,"nodeType":"3965","messageId":"3966","endLine":70,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4060","line":71,"column":10,"nodeType":"3965","messageId":"3966","endLine":71,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4061","line":72,"column":10,"nodeType":"3965","messageId":"3966","endLine":72,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4062","line":73,"column":10,"nodeType":"3965","messageId":"3966","endLine":73,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4063","line":74,"column":10,"nodeType":"3965","messageId":"3966","endLine":74,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4064","line":74,"column":22,"nodeType":"3965","messageId":"3966","endLine":74,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4065","line":75,"column":10,"nodeType":"3965","messageId":"3966","endLine":75,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4066","line":75,"column":14,"nodeType":"3965","messageId":"3966","endLine":75,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4067","line":76,"column":10,"nodeType":"3965","messageId":"3966","endLine":76,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4068","line":76,"column":17,"nodeType":"3965","messageId":"3966","endLine":76,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4069","line":77,"column":10,"nodeType":"3965","messageId":"3966","endLine":77,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4070","line":77,"column":16,"nodeType":"3965","messageId":"3966","endLine":77,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4071","line":78,"column":10,"nodeType":"3965","messageId":"3966","endLine":78,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4072","line":78,"column":19,"nodeType":"3965","messageId":"3966","endLine":78,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4073","line":87,"column":11,"nodeType":"3965","messageId":"3966","endLine":87,"endColumn":23},{"ruleId":"3963","severity":1,"message":"3985","line":87,"column":35,"nodeType":"3965","messageId":"3966","endLine":87,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4074","line":93,"column":7,"nodeType":"3965","messageId":"3966","endLine":93,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4075","line":95,"column":7,"nodeType":"3965","messageId":"3966","endLine":95,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4076","line":96,"column":7,"nodeType":"3965","messageId":"3966","endLine":96,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4077","line":97,"column":7,"nodeType":"3965","messageId":"3966","endLine":97,"endColumn":21},{"ruleId":"4078","severity":1,"message":"4079","line":98,"column":7,"nodeType":"3965","messageId":"4080","endLine":98,"endColumn":9},{"ruleId":"3974","severity":1,"message":"4081","line":142,"column":6,"nodeType":"3976","endLine":142,"endColumn":10,"suggestions":"4082"},{"ruleId":"3963","severity":1,"message":"4083","line":178,"column":9,"nodeType":"3965","messageId":"3966","endLine":178,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4084","line":179,"column":9,"nodeType":"3965","messageId":"3966","endLine":179,"endColumn":27},{"ruleId":"4085","severity":1,"message":"4086","line":180,"column":21,"nodeType":"4087","messageId":"4088","endLine":180,"endColumn":23},{"ruleId":"4089","severity":1,"message":"4090","line":205,"column":7,"nodeType":"4091","messageId":"4092","endLine":207,"endColumn":41},{"ruleId":"4089","severity":1,"message":"4090","line":208,"column":9,"nodeType":"4091","messageId":"4092","endLine":210,"endColumn":47},{"ruleId":"4089","severity":1,"message":"4090","line":215,"column":7,"nodeType":"4091","messageId":"4092","endLine":218,"endColumn":8},{"ruleId":"4089","severity":1,"message":"4090","line":222,"column":7,"nodeType":"4091","messageId":"4092","endLine":225,"endColumn":8},{"ruleId":"4089","severity":1,"message":"4090","line":228,"column":7,"nodeType":"4091","messageId":"4092","endLine":232,"endColumn":8},{"ruleId":"4089","severity":1,"message":"4090","line":234,"column":7,"nodeType":"4091","messageId":"4092","endLine":237,"endColumn":8},{"ruleId":"4085","severity":1,"message":"4086","line":259,"column":43,"nodeType":"4087","messageId":"4088","endLine":259,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3991","line":433,"column":11,"nodeType":"3972","messageId":"3973","endLine":433,"endColumn":13},{"ruleId":"3970","severity":1,"message":"3971","line":514,"column":23,"nodeType":"3972","messageId":"3973","endLine":514,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":573,"column":47,"nodeType":"3972","messageId":"3973","endLine":573,"endColumn":49},{"ruleId":"3970","severity":1,"message":"3971","line":594,"column":45,"nodeType":"3972","messageId":"3973","endLine":594,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":666,"column":53,"nodeType":"3972","messageId":"3973","endLine":666,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3971","line":673,"column":52,"nodeType":"3972","messageId":"3973","endLine":673,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":90,"column":46,"nodeType":"3972","messageId":"3973","endLine":90,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":93,"column":46,"nodeType":"3972","messageId":"3973","endLine":93,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":96,"column":46,"nodeType":"3972","messageId":"3973","endLine":96,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4093","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3997","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4005","line":16,"column":8,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3968","line":23,"column":9,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4095","line":28,"column":24,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":102,"column":39,"nodeType":"3972","messageId":"3973","endLine":102,"endColumn":41},{"ruleId":"3974","severity":1,"message":"4096","line":209,"column":6,"nodeType":"3976","endLine":209,"endColumn":16,"suggestions":"4097"},{"ruleId":"3963","severity":1,"message":"3983","line":31,"column":9,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":33,"column":35,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4098","line":42,"column":10,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4059","line":43,"column":10,"nodeType":"3965","messageId":"3966","endLine":43,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4062","line":48,"column":10,"nodeType":"3965","messageId":"3966","endLine":48,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4099","line":54,"column":10,"nodeType":"3965","messageId":"3966","endLine":54,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4100","line":55,"column":10,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4101","line":55,"column":17,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4058","line":59,"column":10,"nodeType":"3965","messageId":"3966","endLine":59,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4067","line":62,"column":10,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4068","line":62,"column":17,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4102","line":75,"column":7,"nodeType":"3965","messageId":"3966","endLine":75,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4103","line":87,"column":9,"nodeType":"3965","messageId":"3966","endLine":87,"endColumn":20},{"ruleId":"4078","severity":1,"message":"4104","line":134,"column":9,"nodeType":"3965","messageId":"4080","endLine":134,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4083","line":135,"column":9,"nodeType":"3965","messageId":"3966","endLine":135,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4084","line":137,"column":9,"nodeType":"3965","messageId":"3966","endLine":137,"endColumn":27},{"ruleId":"4085","severity":1,"message":"4086","line":138,"column":21,"nodeType":"4087","messageId":"4088","endLine":138,"endColumn":23},{"ruleId":"4085","severity":1,"message":"4086","line":195,"column":43,"nodeType":"4087","messageId":"4088","endLine":195,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4105","line":313,"column":9,"nodeType":"3965","messageId":"3966","endLine":313,"endColumn":10},{"ruleId":"4085","severity":1,"message":"4106","line":315,"column":27,"nodeType":"4087","messageId":"4088","endLine":315,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":317,"column":16,"nodeType":"3972","messageId":"3973","endLine":317,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":492,"column":49,"nodeType":"3972","messageId":"3973","endLine":492,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":499,"column":47,"nodeType":"3972","messageId":"3973","endLine":499,"endColumn":49},{"ruleId":"3963","severity":1,"message":"4107","line":6,"column":27,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3997","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3983","line":35,"column":9,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":36,"column":43,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4108","line":47,"column":10,"nodeType":"3965","messageId":"3966","endLine":47,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4109","line":57,"column":9,"nodeType":"3965","messageId":"3966","endLine":57,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4110","line":74,"column":6,"nodeType":"3976","endLine":74,"endColumn":8,"suggestions":"4111"},{"ruleId":"3974","severity":1,"message":"4013","line":101,"column":6,"nodeType":"3976","endLine":101,"endColumn":15,"suggestions":"4112"},{"ruleId":"3970","severity":1,"message":"3971","line":124,"column":22,"nodeType":"3972","messageId":"3973","endLine":124,"endColumn":24},{"ruleId":"3963","severity":1,"message":"4113","line":133,"column":9,"nodeType":"3965","messageId":"3966","endLine":133,"endColumn":24},{"ruleId":"3963","severity":1,"message":"4114","line":176,"column":9,"nodeType":"3965","messageId":"3966","endLine":176,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":181,"column":13,"nodeType":"3972","messageId":"3973","endLine":181,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3971","line":189,"column":20,"nodeType":"3972","messageId":"3973","endLine":189,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4115","line":1,"column":56,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":69},{"ruleId":"3970","severity":1,"message":"3971","line":106,"column":34,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":109,"column":34,"nodeType":"3972","messageId":"3973","endLine":109,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":112,"column":34,"nodeType":"3972","messageId":"3973","endLine":112,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":116,"column":34,"nodeType":"3972","messageId":"3973","endLine":116,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4002","line":12,"column":8,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":25,"column":9,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":27,"column":35,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":65,"column":14,"nodeType":"3972","messageId":"3973","endLine":65,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":100,"column":34,"nodeType":"3972","messageId":"3973","endLine":100,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":103,"column":34,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":106,"column":34,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4116","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4117","line":3,"column":15,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4118","line":3,"column":21,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4119","line":3,"column":30,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":38},{"ruleId":"3963","severity":1,"message":"4120","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4093","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4121","line":16,"column":12,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4122","line":16,"column":22,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4123","line":2,"column":17,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4030","line":3,"column":8,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4124","line":7,"column":9,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4028","line":28,"column":6,"nodeType":"3976","endLine":28,"endColumn":10,"suggestions":"4125"},{"ruleId":"3963","severity":1,"message":"4000","line":8,"column":10,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4001","line":9,"column":13,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4002","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3970","severity":1,"message":"3971","line":121,"column":34,"nodeType":"3972","messageId":"3973","endLine":121,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":124,"column":34,"nodeType":"3972","messageId":"3973","endLine":124,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":34,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":132,"column":34,"nodeType":"3972","messageId":"3973","endLine":132,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3998","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3983","line":39,"column":9,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4033","line":66,"column":6,"nodeType":"3976","endLine":66,"endColumn":12,"suggestions":"4126"},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4095","line":22,"column":24,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":39},{"ruleId":"3974","severity":1,"message":"4096","line":43,"column":6,"nodeType":"3976","endLine":43,"endColumn":16,"suggestions":"4127"},{"ruleId":"3970","severity":1,"message":"3971","line":192,"column":42,"nodeType":"3972","messageId":"3973","endLine":192,"endColumn":44},{"ruleId":"3970","severity":1,"message":"3971","line":192,"column":72,"nodeType":"3972","messageId":"3973","endLine":192,"endColumn":74},{"ruleId":"3970","severity":1,"message":"3971","line":224,"column":39,"nodeType":"3972","messageId":"3973","endLine":224,"endColumn":41},{"ruleId":"3963","severity":1,"message":"3992","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4036","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4039","line":27,"column":12,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4040","line":27,"column":18,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4037","line":32,"column":8,"nodeType":"3976","endLine":32,"endColumn":10,"suggestions":"4128"},{"ruleId":"3970","severity":1,"message":"3971","line":98,"column":45,"nodeType":"3972","messageId":"3973","endLine":98,"endColumn":47},{"ruleId":"4089","severity":1,"message":"4129","line":185,"column":1,"nodeType":"4091","messageId":"4130","endLine":200,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3979","line":10,"column":22,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4131","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4132","line":21,"column":25,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4133","line":23,"column":12,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4098","line":30,"column":10,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4134","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4062","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4135","line":45,"column":7,"nodeType":"3965","messageId":"3966","endLine":45,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4136","line":46,"column":7,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4137","line":47,"column":7,"nodeType":"3965","messageId":"3966","endLine":47,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4044","line":50,"column":45,"nodeType":"3965","messageId":"3966","endLine":50,"endColumn":54},{"ruleId":"3963","severity":1,"message":"4138","line":53,"column":8,"nodeType":"3965","messageId":"3966","endLine":53,"endColumn":16},{"ruleId":"3974","severity":1,"message":"4139","line":86,"column":6,"nodeType":"3976","endLine":86,"endColumn":8,"suggestions":"4140"},{"ruleId":"3963","severity":1,"message":"4141","line":91,"column":11,"nodeType":"3965","messageId":"3966","endLine":91,"endColumn":13},{"ruleId":"3974","severity":1,"message":"4142","line":102,"column":6,"nodeType":"3976","endLine":102,"endColumn":13,"suggestions":"4143"},{"ruleId":"4085","severity":1,"message":"4086","line":263,"column":19,"nodeType":"4087","messageId":"4088","endLine":263,"endColumn":21},{"ruleId":"4085","severity":1,"message":"4086","line":309,"column":17,"nodeType":"4087","messageId":"4088","endLine":309,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":318,"column":17,"nodeType":"4087","messageId":"4088","endLine":318,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":325,"column":15,"nodeType":"4087","messageId":"4088","endLine":325,"endColumn":17},{"ruleId":"4085","severity":1,"message":"4086","line":335,"column":15,"nodeType":"4087","messageId":"4088","endLine":335,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":445,"column":49,"nodeType":"3972","messageId":"3973","endLine":445,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":452,"column":47,"nodeType":"3972","messageId":"3973","endLine":452,"endColumn":49},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4036","line":16,"column":8,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3970","severity":1,"message":"3991","line":35,"column":27,"nodeType":"3972","messageId":"3973","endLine":35,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":89,"column":32,"nodeType":"3972","messageId":"3973","endLine":89,"endColumn":34},{"ruleId":"3963","severity":1,"message":"3979","line":13,"column":24,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":30},{"ruleId":"4020","severity":1,"message":"4021","line":246,"column":17,"nodeType":"4022","messageId":"4023","endLine":248,"endColumn":16,"fix":"4144"},{"ruleId":"3963","severity":1,"message":"4145","line":54,"column":23,"nodeType":"3965","messageId":"3966","endLine":54,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4146","line":55,"column":5,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":28},{"ruleId":"3974","severity":1,"message":"4147","line":154,"column":6,"nodeType":"3976","endLine":154,"endColumn":8,"suggestions":"4148"},{"ruleId":"3963","severity":1,"message":"3999","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4045","line":20,"column":8,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":30},{"ruleId":"3963","severity":1,"message":"3983","line":23,"column":9,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4149","line":28,"column":10,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4150","line":28,"column":21,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4151","line":257,"column":9,"nodeType":"3965","messageId":"3966","endLine":257,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4000","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4001","line":6,"column":13,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":27,"column":35,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":41},{"ruleId":"3963","severity":1,"message":"3999","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3988","line":14,"column":10,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4045","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":30},{"ruleId":"3963","severity":1,"message":"3983","line":23,"column":9,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4149","line":27,"column":10,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4150","line":27,"column":21,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4153","line":31,"column":7,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":13},{"ruleId":"4089","severity":1,"message":"4090","line":185,"column":5,"nodeType":"4091","messageId":"4092","endLine":197,"endColumn":6},{"ruleId":"4154","severity":1,"message":"4155","line":186,"column":12,"nodeType":"4156","messageId":"4157","endLine":186,"endColumn":13,"fix":"4158"},{"ruleId":"3963","severity":1,"message":"4159","line":204,"column":9,"nodeType":"3965","messageId":"3966","endLine":204,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3979","line":7,"column":23,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":29},{"ruleId":"3974","severity":1,"message":"4160","line":17,"column":8,"nodeType":"3976","endLine":17,"endColumn":10,"suggestions":"4161"},{"ruleId":"4020","severity":1,"message":"4021","line":99,"column":16,"nodeType":"4022","messageId":"4023","endLine":99,"endColumn":76,"fix":"4162"},{"ruleId":"3963","severity":1,"message":"3997","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3983","line":34,"column":9,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4163","line":56,"column":9,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4164","line":75,"column":6,"nodeType":"3976","endLine":75,"endColumn":8,"suggestions":"4165"},{"ruleId":"3974","severity":1,"message":"4013","line":104,"column":6,"nodeType":"3976","endLine":104,"endColumn":15,"suggestions":"4166"},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":22,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":24},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4107","line":6,"column":27,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3992","line":7,"column":10,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3997","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":5,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4048","line":16,"column":5,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3985","line":33,"column":45,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":50},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4167","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":53},{"ruleId":"3963","severity":1,"message":"4042","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4043","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":39,"column":46,"nodeType":"3972","messageId":"3973","endLine":39,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":42,"column":46,"nodeType":"3972","messageId":"3973","endLine":42,"endColumn":48},{"ruleId":"3963","severity":1,"message":"3968","line":11,"column":9,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4168","line":28,"column":10,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3969","line":29,"column":10,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":87,"column":40,"nodeType":"3972","messageId":"3973","endLine":87,"endColumn":42},{"ruleId":"3974","severity":1,"message":"3975","line":192,"column":6,"nodeType":"3976","endLine":192,"endColumn":16,"suggestions":"4169"},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4036","line":14,"column":8,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":19,"column":9,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4170","line":26,"column":6,"nodeType":"3976","endLine":26,"endColumn":8,"suggestions":"4171"},{"ruleId":"3970","severity":1,"message":"3971","line":76,"column":29,"nodeType":"3972","messageId":"3973","endLine":76,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4002","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":29,"column":9,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":30,"column":35,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":89,"column":97,"nodeType":"3972","messageId":"3973","endLine":89,"endColumn":99},{"ruleId":"3974","severity":1,"message":"4147","line":104,"column":8,"nodeType":"3976","endLine":104,"endColumn":10,"suggestions":"4172"},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":46,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":122,"column":46,"nodeType":"3972","messageId":"3973","endLine":122,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":125,"column":46,"nodeType":"3972","messageId":"3973","endLine":125,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":46,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":48},{"ruleId":"3974","severity":1,"message":"4147","line":89,"column":6,"nodeType":"3976","endLine":89,"endColumn":8,"suggestions":"4173"},{"ruleId":"3970","severity":1,"message":"3971","line":104,"column":34,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":107,"column":34,"nodeType":"3972","messageId":"3973","endLine":107,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":110,"column":34,"nodeType":"3972","messageId":"3973","endLine":110,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4142","line":27,"column":6,"nodeType":"3976","endLine":27,"endColumn":8,"suggestions":"4174"},{"ruleId":"3963","severity":1,"message":"4151","line":156,"column":9,"nodeType":"3965","messageId":"3966","endLine":156,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4152","line":13,"column":35,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":41},{"ruleId":"3963","severity":1,"message":"3985","line":13,"column":43,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":48},{"ruleId":"3974","severity":1,"message":"4026","line":32,"column":6,"nodeType":"3976","endLine":32,"endColumn":8,"suggestions":"4175"},{"ruleId":"3970","severity":1,"message":"3971","line":97,"column":34,"nodeType":"3972","messageId":"3973","endLine":97,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":100,"column":34,"nodeType":"3972","messageId":"3973","endLine":100,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":103,"column":34,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4176","line":23,"column":10,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":18},{"ruleId":"3974","severity":1,"message":"4147","line":114,"column":6,"nodeType":"3976","endLine":114,"endColumn":8,"suggestions":"4177"},{"ruleId":"3970","severity":1,"message":"3971","line":131,"column":34,"nodeType":"3972","messageId":"3973","endLine":131,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":135,"column":34,"nodeType":"3972","messageId":"3973","endLine":135,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":138,"column":34,"nodeType":"3972","messageId":"3973","endLine":138,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":141,"column":34,"nodeType":"3972","messageId":"3973","endLine":141,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4152","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4178","line":23,"column":50,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":58},{"ruleId":"3974","severity":1,"message":"4179","line":34,"column":6,"nodeType":"3976","endLine":34,"endColumn":8,"suggestions":"4180"},{"ruleId":"3974","severity":1,"message":"4181","line":49,"column":6,"nodeType":"3976","endLine":49,"endColumn":16,"suggestions":"4182"},{"ruleId":"3970","severity":1,"message":"3971","line":136,"column":35,"nodeType":"3972","messageId":"3973","endLine":136,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":309,"column":26,"nodeType":"3972","messageId":"3973","endLine":309,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":323,"column":26,"nodeType":"3972","messageId":"3973","endLine":323,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":336,"column":26,"nodeType":"3972","messageId":"3973","endLine":336,"endColumn":28},{"ruleId":"4020","severity":1,"message":"4021","line":398,"column":29,"nodeType":"4022","messageId":"4023","endLine":401,"endColumn":30,"fix":"4183"},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4184","line":26,"column":6,"nodeType":"3976","endLine":26,"endColumn":8,"suggestions":"4185"},{"ruleId":"4020","severity":1,"message":"4021","line":86,"column":29,"nodeType":"4022","messageId":"4023","endLine":89,"endColumn":30,"fix":"4186"},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":33,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":37},{"ruleId":"3963","severity":1,"message":"3992","line":7,"column":10,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3997","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4187","line":19,"column":10,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4188","line":25,"column":10,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":26},{"ruleId":"3974","severity":1,"message":"4179","line":34,"column":6,"nodeType":"3976","endLine":34,"endColumn":8,"suggestions":"4189"},{"ruleId":"3970","severity":1,"message":"3971","line":53,"column":39,"nodeType":"3972","messageId":"3973","endLine":53,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":53,"column":65,"nodeType":"3972","messageId":"3973","endLine":53,"endColumn":67},{"ruleId":"3970","severity":1,"message":"3971","line":167,"column":38,"nodeType":"3972","messageId":"3973","endLine":167,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":168,"column":37,"nodeType":"3972","messageId":"3973","endLine":168,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":169,"column":34,"nodeType":"3972","messageId":"3973","endLine":169,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":170,"column":38,"nodeType":"3972","messageId":"3973","endLine":170,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":171,"column":33,"nodeType":"3972","messageId":"3973","endLine":171,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":389,"column":47,"nodeType":"3972","messageId":"3973","endLine":389,"endColumn":49},{"ruleId":"3970","severity":1,"message":"3971","line":437,"column":44,"nodeType":"3972","messageId":"3973","endLine":437,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":486,"column":46,"nodeType":"3972","messageId":"3973","endLine":486,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":536,"column":46,"nodeType":"3972","messageId":"3973","endLine":536,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4190","line":16,"column":8,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4049","line":33,"column":11,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":17},{"ruleId":"3963","severity":1,"message":"3983","line":36,"column":9,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4050","line":44,"column":10,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4051","line":44,"column":18,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4052","line":46,"column":10,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4053","line":47,"column":10,"nodeType":"3965","messageId":"3966","endLine":47,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4054","line":47,"column":17,"nodeType":"3965","messageId":"3966","endLine":47,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4055","line":48,"column":10,"nodeType":"3965","messageId":"3966","endLine":48,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4056","line":48,"column":21,"nodeType":"3965","messageId":"3966","endLine":48,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4058","line":58,"column":10,"nodeType":"3965","messageId":"3966","endLine":58,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4059","line":62,"column":10,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4061","line":64,"column":10,"nodeType":"3965","messageId":"3966","endLine":64,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4062","line":65,"column":10,"nodeType":"3965","messageId":"3966","endLine":65,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4073","line":72,"column":11,"nodeType":"3965","messageId":"3966","endLine":72,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4191","line":72,"column":25,"nodeType":"3965","messageId":"3966","endLine":72,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":72,"column":35,"nodeType":"3965","messageId":"3966","endLine":72,"endColumn":40},{"ruleId":"3974","severity":1,"message":"4192","line":100,"column":6,"nodeType":"3976","endLine":100,"endColumn":10,"suggestions":"4193"},{"ruleId":"3963","severity":1,"message":"4194","line":124,"column":9,"nodeType":"3965","messageId":"3966","endLine":124,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4195","line":143,"column":6,"nodeType":"3976","endLine":143,"endColumn":15,"suggestions":"4196"},{"ruleId":"3974","severity":1,"message":"4197","line":149,"column":6,"nodeType":"3976","endLine":149,"endColumn":13,"suggestions":"4198"},{"ruleId":"4085","severity":1,"message":"4086","line":168,"column":21,"nodeType":"4087","messageId":"4088","endLine":168,"endColumn":23},{"ruleId":"4085","severity":1,"message":"4086","line":172,"column":26,"nodeType":"4087","messageId":"4088","endLine":172,"endColumn":28},{"ruleId":"4089","severity":1,"message":"4090","line":205,"column":6,"nodeType":"4091","messageId":"4092","endLine":207,"endColumn":39},{"ruleId":"4089","severity":1,"message":"4090","line":208,"column":7,"nodeType":"4091","messageId":"4092","endLine":210,"endColumn":45},{"ruleId":"4089","severity":1,"message":"4090","line":211,"column":6,"nodeType":"4091","messageId":"4092","endLine":212,"endColumn":47},{"ruleId":"4089","severity":1,"message":"4090","line":213,"column":6,"nodeType":"4091","messageId":"4092","endLine":214,"endColumn":38},{"ruleId":"4089","severity":1,"message":"4090","line":215,"column":7,"nodeType":"4091","messageId":"4092","endLine":217,"endColumn":45},{"ruleId":"4085","severity":1,"message":"4086","line":243,"column":43,"nodeType":"4087","messageId":"4088","endLine":243,"endColumn":45},{"ruleId":"4085","severity":1,"message":"4086","line":315,"column":15,"nodeType":"4087","messageId":"4088","endLine":315,"endColumn":17},{"ruleId":"4085","severity":1,"message":"4086","line":353,"column":17,"nodeType":"4087","messageId":"4088","endLine":353,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4083","line":490,"column":8,"nodeType":"3965","messageId":"3966","endLine":490,"endColumn":10},{"ruleId":"4085","severity":1,"message":"4086","line":498,"column":22,"nodeType":"4087","messageId":"4088","endLine":498,"endColumn":24},{"ruleId":"4085","severity":1,"message":"4086","line":510,"column":24,"nodeType":"4087","messageId":"4088","endLine":510,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":617,"column":23,"nodeType":"3972","messageId":"3973","endLine":617,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":650,"column":46,"nodeType":"3972","messageId":"3973","endLine":650,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":669,"column":47,"nodeType":"3972","messageId":"3973","endLine":669,"endColumn":49},{"ruleId":"3970","severity":1,"message":"3971","line":746,"column":49,"nodeType":"3972","messageId":"3973","endLine":746,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":753,"column":47,"nodeType":"3972","messageId":"3973","endLine":753,"endColumn":49},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3983","line":27,"column":9,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":28,"column":35,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4199","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4200","line":36,"column":10,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4201","line":36,"column":16,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4060","line":41,"column":10,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4202","line":41,"column":17,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4013","line":65,"column":6,"nodeType":"3976","endLine":65,"endColumn":8,"suggestions":"4203"},{"ruleId":"3970","severity":1,"message":"3971","line":123,"column":23,"nodeType":"3972","messageId":"3973","endLine":123,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":142,"column":19,"nodeType":"3972","messageId":"3973","endLine":142,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":21,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":152,"column":25,"nodeType":"3972","messageId":"3973","endLine":152,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":153,"column":25,"nodeType":"3972","messageId":"3973","endLine":153,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":31,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":50,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":169,"column":29,"nodeType":"3972","messageId":"3973","endLine":169,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":169,"column":46,"nodeType":"3972","messageId":"3973","endLine":169,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3991","line":178,"column":33,"nodeType":"3972","messageId":"3973","endLine":178,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":206,"column":32,"nodeType":"3972","messageId":"3973","endLine":206,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":239,"column":28,"nodeType":"3972","messageId":"3973","endLine":239,"endColumn":30},{"ruleId":"4085","severity":1,"message":"4086","line":252,"column":45,"nodeType":"4087","messageId":"4088","endLine":252,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":262,"column":45,"nodeType":"4087","messageId":"4088","endLine":262,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":388,"column":32,"nodeType":"3972","messageId":"3973","endLine":388,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":403,"column":33,"nodeType":"3972","messageId":"3973","endLine":403,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":417,"column":33,"nodeType":"3972","messageId":"3973","endLine":417,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4204","line":27,"column":11,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":16},{"ruleId":"3974","severity":1,"message":"4205","line":48,"column":8,"nodeType":"3976","endLine":48,"endColumn":10,"suggestions":"4206"},{"ruleId":"3963","severity":1,"message":"3988","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4207","line":32,"column":6,"nodeType":"3976","endLine":32,"endColumn":16,"suggestions":"4208"},{"ruleId":"3970","severity":1,"message":"3971","line":295,"column":39,"nodeType":"3972","messageId":"3973","endLine":295,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4209","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4210","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4211","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":19,"column":3,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4214","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3988","line":23,"column":21,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4215","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":20},{"ruleId":"3974","severity":1,"message":"4216","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4217"},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":44,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":177,"column":32,"nodeType":"3972","messageId":"3973","endLine":177,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":198,"column":32,"nodeType":"3972","messageId":"3973","endLine":198,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":219,"column":42,"nodeType":"3972","messageId":"3973","endLine":219,"endColumn":44},{"ruleId":"4020","severity":1,"message":"4021","line":220,"column":21,"nodeType":"4022","messageId":"4023","endLine":220,"endColumn":76,"fix":"4218"},{"ruleId":"3970","severity":1,"message":"3971","line":223,"column":40,"nodeType":"3972","messageId":"3973","endLine":223,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":261,"column":26,"nodeType":"3972","messageId":"3973","endLine":261,"endColumn":28},{"ruleId":"4020","severity":1,"message":"4021","line":261,"column":36,"nodeType":"4022","messageId":"4023","endLine":261,"endColumn":78,"fix":"4219"},{"ruleId":"3970","severity":1,"message":"3971","line":263,"column":25,"nodeType":"3972","messageId":"3973","endLine":263,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":300,"column":15,"nodeType":"3972","messageId":"3973","endLine":300,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4209","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4210","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4211","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":19,"column":3,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4214","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3988","line":23,"column":21,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4215","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4220","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4221","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4222","line":36,"column":12,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4223","line":36,"column":28,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":45},{"ruleId":"3974","severity":1,"message":"4216","line":59,"column":8,"nodeType":"3976","endLine":59,"endColumn":10,"suggestions":"4224"},{"ruleId":"3963","severity":1,"message":"4225","line":60,"column":8,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":117,"column":44,"nodeType":"3972","messageId":"3973","endLine":117,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":168,"column":34,"nodeType":"3972","messageId":"3973","endLine":168,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":186,"column":34,"nodeType":"3972","messageId":"3973","endLine":186,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":206,"column":43,"nodeType":"3972","messageId":"3973","endLine":206,"endColumn":45},{"ruleId":"4020","severity":1,"message":"4021","line":207,"column":21,"nodeType":"4022","messageId":"4023","endLine":207,"endColumn":76,"fix":"4226"},{"ruleId":"3970","severity":1,"message":"3971","line":231,"column":40,"nodeType":"3972","messageId":"3973","endLine":231,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":233,"column":28,"nodeType":"3972","messageId":"3973","endLine":233,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":235,"column":26,"nodeType":"3972","messageId":"3973","endLine":235,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4227","line":252,"column":13,"nodeType":"3965","messageId":"3966","endLine":252,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":20,"column":9,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4228","line":23,"column":10,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4229","line":23,"column":18,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4083","line":26,"column":7,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":9},{"ruleId":"4089","severity":1,"message":"4090","line":40,"column":5,"nodeType":"4091","messageId":"4092","endLine":53,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4153","line":120,"column":9,"nodeType":"3965","messageId":"3966","endLine":120,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3971","line":158,"column":27,"nodeType":"3972","messageId":"3973","endLine":158,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":164,"column":29,"nodeType":"3972","messageId":"3973","endLine":164,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":173,"column":35,"nodeType":"3972","messageId":"3973","endLine":173,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":175,"column":31,"nodeType":"3972","messageId":"3973","endLine":175,"endColumn":33},{"ruleId":"3974","severity":1,"message":"4192","line":234,"column":6,"nodeType":"3976","endLine":234,"endColumn":8,"suggestions":"4230"},{"ruleId":"3963","severity":1,"message":"4141","line":239,"column":11,"nodeType":"3965","messageId":"3966","endLine":239,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4151","line":250,"column":9,"nodeType":"3965","messageId":"3966","endLine":250,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":31,"column":9,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":33,"column":35,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4098","line":42,"column":10,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4059","line":43,"column":10,"nodeType":"3965","messageId":"3966","endLine":43,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4062","line":48,"column":10,"nodeType":"3965","messageId":"3966","endLine":48,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4099","line":54,"column":10,"nodeType":"3965","messageId":"3966","endLine":54,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4231","line":56,"column":10,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4232","line":56,"column":21,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4233","line":58,"column":10,"nodeType":"3965","messageId":"3966","endLine":58,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4234","line":58,"column":25,"nodeType":"3965","messageId":"3966","endLine":58,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4235","line":60,"column":10,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4236","line":60,"column":23,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":37},{"ruleId":"3963","severity":1,"message":"4237","line":62,"column":10,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4238","line":62,"column":22,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4058","line":65,"column":10,"nodeType":"3965","messageId":"3966","endLine":65,"endColumn":17},{"ruleId":"4078","severity":1,"message":"4104","line":129,"column":9,"nodeType":"3965","messageId":"4080","endLine":129,"endColumn":21},{"ruleId":"4085","severity":1,"message":"4086","line":133,"column":21,"nodeType":"4087","messageId":"4088","endLine":133,"endColumn":23},{"ruleId":"4085","severity":1,"message":"4086","line":138,"column":26,"nodeType":"4087","messageId":"4088","endLine":138,"endColumn":28},{"ruleId":"4085","severity":1,"message":"4086","line":198,"column":43,"nodeType":"4087","messageId":"4088","endLine":198,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4135","line":215,"column":7,"nodeType":"3965","messageId":"3966","endLine":215,"endColumn":15},{"ruleId":"4085","severity":1,"message":"4086","line":225,"column":15,"nodeType":"4087","messageId":"4088","endLine":225,"endColumn":17},{"ruleId":"4085","severity":1,"message":"4086","line":267,"column":17,"nodeType":"4087","messageId":"4088","endLine":267,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4239","line":363,"column":9,"nodeType":"3965","messageId":"3966","endLine":363,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4240","line":373,"column":9,"nodeType":"3965","messageId":"3966","endLine":373,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":560,"column":49,"nodeType":"3972","messageId":"3973","endLine":560,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":567,"column":47,"nodeType":"3972","messageId":"3973","endLine":567,"endColumn":49},{"ruleId":"4016","severity":1,"message":"4017","line":603,"column":25,"nodeType":"4018","messageId":"4019","endLine":603,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4241","line":29,"column":21,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4101","line":37,"column":17,"nodeType":"3965","messageId":"3966","endLine":37,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4242","line":63,"column":9,"nodeType":"3965","messageId":"3966","endLine":63,"endColumn":24},{"ruleId":"3974","severity":1,"message":"3980","line":84,"column":6,"nodeType":"3976","endLine":84,"endColumn":12,"suggestions":"4243"},{"ruleId":"3963","severity":1,"message":"4004","line":93,"column":9,"nodeType":"3965","messageId":"3966","endLine":93,"endColumn":10},{"ruleId":"3970","severity":1,"message":"3971","line":117,"column":13,"nodeType":"3972","messageId":"3973","endLine":117,"endColumn":15},{"ruleId":"4085","severity":1,"message":"4106","line":125,"column":26,"nodeType":"4087","messageId":"4088","endLine":125,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":126,"column":27,"nodeType":"3972","messageId":"3973","endLine":126,"endColumn":29},{"ruleId":"4085","severity":1,"message":"4106","line":132,"column":27,"nodeType":"4087","messageId":"4088","endLine":132,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":133,"column":15,"nodeType":"3972","messageId":"3973","endLine":133,"endColumn":17},{"ruleId":"4085","severity":1,"message":"4106","line":143,"column":23,"nodeType":"4087","messageId":"4088","endLine":143,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":16,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":18},{"ruleId":"4085","severity":1,"message":"4106","line":150,"column":26,"nodeType":"4087","messageId":"4088","endLine":150,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":254,"column":36,"nodeType":"3972","messageId":"3973","endLine":254,"endColumn":38},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3968","line":17,"column":9,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":12,"column":27,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":12,"column":35,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4244","line":3,"column":8,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":14},{"ruleId":"3970","severity":1,"message":"3971","line":83,"column":44,"nodeType":"3972","messageId":"3973","endLine":83,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":95,"column":24,"nodeType":"3972","messageId":"3973","endLine":95,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":106,"column":34,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":31,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4105","line":30,"column":9,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":10},{"ruleId":"4245","severity":1,"message":"4246","line":43,"column":1,"nodeType":"4247","endLine":48,"endColumn":3},{"ruleId":"4245","severity":1,"message":"4246","line":135,"column":1,"nodeType":"4247","endLine":145,"endColumn":3},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4004","line":17,"column":9,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":10},{"ruleId":"4245","severity":1,"message":"4246","line":31,"column":1,"nodeType":"4247","endLine":33,"endColumn":5},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4248","line":24,"column":8,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3983","line":31,"column":11,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":32,"column":13,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":34,"column":11,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":38,"column":12,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":61,"column":8,"nodeType":"3976","endLine":61,"endColumn":10,"suggestions":"4253"},{"ruleId":"3970","severity":1,"message":"3991","line":103,"column":24,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":103,"column":45,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":226,"column":38,"nodeType":"3972","messageId":"3973","endLine":226,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":410,"column":48,"nodeType":"3972","messageId":"3973","endLine":410,"endColumn":50},{"ruleId":"4020","severity":1,"message":"4021","line":500,"column":53,"nodeType":"4022","messageId":"4023","endLine":500,"endColumn":93,"fix":"4254"},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":5,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":5,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":5,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4255","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4256"},{"ruleId":"3970","severity":1,"message":"3971","line":155,"column":44,"nodeType":"3972","messageId":"3973","endLine":155,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":161,"column":48,"nodeType":"3972","messageId":"3973","endLine":161,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":166,"column":52,"nodeType":"3972","messageId":"3973","endLine":166,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":188,"column":40,"nodeType":"3972","messageId":"3973","endLine":188,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":199,"column":35,"nodeType":"3972","messageId":"3973","endLine":199,"endColumn":37},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4049","line":8,"column":11,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4152","line":9,"column":35,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4257","line":23,"column":10,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4258","line":24,"column":10,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4259","line":24,"column":16,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4050","line":25,"column":10,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4260","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4261","line":31,"column":10,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":14},{"ruleId":"3970","severity":1,"message":"3971","line":50,"column":16,"nodeType":"3972","messageId":"3973","endLine":50,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4262","line":18,"column":10,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4263","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4264","line":31,"column":9,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":29},{"ruleId":"3974","severity":1,"message":"4255","line":40,"column":6,"nodeType":"3976","endLine":40,"endColumn":8,"suggestions":"4265"},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":38,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":180,"column":42,"nodeType":"3972","messageId":"3973","endLine":180,"endColumn":44},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":46,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":306,"column":33,"nodeType":"3972","messageId":"3973","endLine":306,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4266","line":7,"column":10,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4073","line":9,"column":13,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4044","line":9,"column":45,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":29,"column":50,"nodeType":"3972","messageId":"3973","endLine":29,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4255","line":34,"column":6,"nodeType":"3976","endLine":34,"endColumn":8,"suggestions":"4267"},{"ruleId":"3970","severity":1,"message":"3971","line":152,"column":28,"nodeType":"3972","messageId":"3973","endLine":152,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":157,"column":30,"nodeType":"3972","messageId":"3973","endLine":157,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":162,"column":32,"nodeType":"3972","messageId":"3973","endLine":162,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":183,"column":30,"nodeType":"3972","messageId":"3973","endLine":183,"endColumn":32},{"ruleId":"3963","severity":1,"message":"4152","line":13,"column":27,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":13,"column":35,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":40},{"ruleId":"3974","severity":1,"message":"4268","line":41,"column":6,"nodeType":"3976","endLine":41,"endColumn":8,"suggestions":"4269"},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4248","line":23,"column":8,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4270","line":26,"column":8,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":31,"column":11,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":32,"column":13,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":34,"column":11,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":38,"column":12,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":55,"column":8,"nodeType":"3976","endLine":55,"endColumn":10,"suggestions":"4271"},{"ruleId":"3970","severity":1,"message":"3971","line":362,"column":53,"nodeType":"3972","messageId":"3973","endLine":362,"endColumn":55},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4270","line":24,"column":8,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":32,"column":11,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":33,"column":13,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":35,"column":11,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":39,"column":12,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":64,"column":8,"nodeType":"3976","endLine":64,"endColumn":10,"suggestions":"4272"},{"ruleId":"3970","severity":1,"message":"3991","line":106,"column":24,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":106,"column":45,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":225,"column":38,"nodeType":"3972","messageId":"3973","endLine":225,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":409,"column":48,"nodeType":"3972","messageId":"3973","endLine":409,"endColumn":50},{"ruleId":"4020","severity":1,"message":"4021","line":501,"column":53,"nodeType":"4022","messageId":"4023","endLine":501,"endColumn":93,"fix":"4273"},{"ruleId":"3963","severity":1,"message":"4093","line":3,"column":3,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":4,"column":3,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3997","line":5,"column":3,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4274","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":29},{"ruleId":"4089","severity":1,"message":"4129","line":129,"column":2,"nodeType":"4091","messageId":"4130","endLine":131,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4152","line":9,"column":35,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4275","line":25,"column":5,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3991","line":44,"column":29,"nodeType":"3972","messageId":"3973","endLine":44,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":95,"column":18,"nodeType":"3972","messageId":"3973","endLine":95,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":30,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":134,"column":25,"nodeType":"3972","messageId":"3973","endLine":134,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":152,"column":23,"nodeType":"3972","messageId":"3973","endLine":152,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":168,"column":28,"nodeType":"3972","messageId":"3973","endLine":168,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":187,"column":21,"nodeType":"3972","messageId":"3973","endLine":187,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":206,"column":28,"nodeType":"3972","messageId":"3973","endLine":206,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":225,"column":17,"nodeType":"3972","messageId":"3973","endLine":225,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":243,"column":20,"nodeType":"3972","messageId":"3973","endLine":243,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":261,"column":16,"nodeType":"3972","messageId":"3973","endLine":261,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":279,"column":14,"nodeType":"3972","messageId":"3973","endLine":279,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":399,"column":29,"nodeType":"3972","messageId":"3973","endLine":399,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":413,"column":36,"nodeType":"3972","messageId":"3973","endLine":413,"endColumn":38},{"ruleId":"3970","severity":1,"message":"3971","line":429,"column":34,"nodeType":"3972","messageId":"3973","endLine":429,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":442,"column":32,"nodeType":"3972","messageId":"3973","endLine":442,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":456,"column":39,"nodeType":"3972","messageId":"3973","endLine":456,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":469,"column":31,"nodeType":"3972","messageId":"3973","endLine":469,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4277","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4278","line":21,"column":6,"nodeType":"3976","endLine":21,"endColumn":14,"suggestions":"4279"},{"ruleId":"3970","severity":1,"message":"3991","line":25,"column":13,"nodeType":"3972","messageId":"3973","endLine":25,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3971","line":54,"column":41,"nodeType":"3972","messageId":"3973","endLine":54,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":60,"column":32,"nodeType":"3972","messageId":"3973","endLine":60,"endColumn":34},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3985","line":25,"column":35,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":40},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3985","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4280","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3968","line":27,"column":7,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4281","line":49,"column":4,"nodeType":"3976","endLine":49,"endColumn":20,"suggestions":"4282"},{"ruleId":"3970","severity":1,"message":"3991","line":55,"column":21,"nodeType":"3972","messageId":"3973","endLine":55,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3991","line":60,"column":27,"nodeType":"3972","messageId":"3973","endLine":60,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":67,"column":48,"nodeType":"3972","messageId":"3973","endLine":67,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":67,"column":108,"nodeType":"3972","messageId":"3973","endLine":67,"endColumn":110},{"ruleId":"3970","severity":1,"message":"3991","line":73,"column":17,"nodeType":"3972","messageId":"3973","endLine":73,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3991","line":78,"column":24,"nodeType":"3972","messageId":"3973","endLine":78,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":84,"column":47,"nodeType":"3972","messageId":"3973","endLine":84,"endColumn":49},{"ruleId":"3970","severity":1,"message":"3971","line":84,"column":107,"nodeType":"3972","messageId":"3973","endLine":84,"endColumn":109},{"ruleId":"3970","severity":1,"message":"3991","line":93,"column":18,"nodeType":"3972","messageId":"3973","endLine":93,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3991","line":98,"column":26,"nodeType":"3972","messageId":"3973","endLine":98,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":104,"column":48,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":104,"column":108,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":110},{"ruleId":"4283","severity":1,"message":"4284","line":137,"column":15,"nodeType":"4022","endLine":137,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3988","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4285","line":36,"column":7,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4276","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4105","line":62,"column":17,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4105","line":73,"column":25,"nodeType":"3965","messageId":"3966","endLine":73,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":18,"column":12,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4286","line":22,"column":11,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4287","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4288"},{"ruleId":"3970","severity":1,"message":"3971","line":187,"column":44,"nodeType":"3972","messageId":"3973","endLine":187,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":248,"column":50,"nodeType":"3972","messageId":"3973","endLine":248,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":259,"column":53,"nodeType":"3972","messageId":"3973","endLine":259,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3971","line":272,"column":71,"nodeType":"3972","messageId":"3973","endLine":272,"endColumn":73},{"ruleId":"4020","severity":1,"message":"4021","line":275,"column":37,"nodeType":"4022","messageId":"4023","endLine":278,"endColumn":38,"fix":"4289"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4290","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4251","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4291","line":25,"column":12,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4292","line":25,"column":17,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4293","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4294","line":26,"column":17,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":23},{"ruleId":"3974","severity":1,"message":"4287","line":47,"column":8,"nodeType":"3976","endLine":47,"endColumn":10,"suggestions":"4295"},{"ruleId":"3970","severity":1,"message":"3971","line":195,"column":44,"nodeType":"3972","messageId":"3973","endLine":195,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":203,"column":48,"nodeType":"3972","messageId":"3973","endLine":203,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":207,"column":52,"nodeType":"3972","messageId":"3973","endLine":207,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":268,"column":50,"nodeType":"3972","messageId":"3973","endLine":268,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":279,"column":53,"nodeType":"3972","messageId":"3973","endLine":279,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3991","line":279,"column":74,"nodeType":"3972","messageId":"3973","endLine":279,"endColumn":76},{"ruleId":"3970","severity":1,"message":"3971","line":292,"column":71,"nodeType":"3972","messageId":"3973","endLine":292,"endColumn":73},{"ruleId":"4020","severity":1,"message":"4021","line":296,"column":37,"nodeType":"4022","messageId":"4023","endLine":299,"endColumn":38,"fix":"4296"},{"ruleId":"4089","severity":1,"message":"4129","line":409,"column":1,"nodeType":"4091","messageId":"4130","endLine":419,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4287","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4297"},{"ruleId":"3970","severity":1,"message":"3971","line":187,"column":44,"nodeType":"3972","messageId":"3973","endLine":187,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":193,"column":48,"nodeType":"3972","messageId":"3973","endLine":193,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":198,"column":52,"nodeType":"3972","messageId":"3973","endLine":198,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":261,"column":50,"nodeType":"3972","messageId":"3973","endLine":261,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":272,"column":53,"nodeType":"3972","messageId":"3973","endLine":272,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3991","line":272,"column":76,"nodeType":"3972","messageId":"3973","endLine":272,"endColumn":78},{"ruleId":"3970","severity":1,"message":"3971","line":290,"column":48,"nodeType":"3972","messageId":"3973","endLine":290,"endColumn":50},{"ruleId":"4020","severity":1,"message":"4021","line":322,"column":37,"nodeType":"4022","messageId":"4023","endLine":325,"endColumn":38,"fix":"4298"},{"ruleId":"3970","severity":1,"message":"3971","line":64,"column":32,"nodeType":"3972","messageId":"3973","endLine":64,"endColumn":34},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":20,"column":12,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4286","line":23,"column":11,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4287","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4299"},{"ruleId":"3970","severity":1,"message":"3971","line":187,"column":44,"nodeType":"3972","messageId":"3973","endLine":187,"endColumn":46},{"ruleId":"4020","severity":1,"message":"4021","line":253,"column":37,"nodeType":"4022","messageId":"4023","endLine":256,"endColumn":38,"fix":"4300"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3968","line":25,"column":9,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":27,"column":35,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4301","line":28,"column":19,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4251","line":29,"column":10,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":15},{"ruleId":"3974","severity":1,"message":"4179","line":68,"column":6,"nodeType":"3976","endLine":68,"endColumn":8,"suggestions":"4302"},{"ruleId":"3970","severity":1,"message":"3991","line":86,"column":22,"nodeType":"3972","messageId":"3973","endLine":86,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":218,"column":30,"nodeType":"3972","messageId":"3973","endLine":218,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":274,"column":40,"nodeType":"3972","messageId":"3973","endLine":274,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":291,"column":31,"nodeType":"3972","messageId":"3973","endLine":291,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":321,"column":31,"nodeType":"3972","messageId":"3973","endLine":321,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":339,"column":28,"nodeType":"3972","messageId":"3973","endLine":339,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":349,"column":37,"nodeType":"3972","messageId":"3973","endLine":349,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":349,"column":72,"nodeType":"3972","messageId":"3973","endLine":349,"endColumn":74},{"ruleId":"3970","severity":1,"message":"3991","line":349,"column":107,"nodeType":"3972","messageId":"3973","endLine":349,"endColumn":109},{"ruleId":"3970","severity":1,"message":"3971","line":361,"column":37,"nodeType":"3972","messageId":"3973","endLine":361,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":361,"column":72,"nodeType":"3972","messageId":"3973","endLine":361,"endColumn":74},{"ruleId":"3970","severity":1,"message":"3971","line":361,"column":111,"nodeType":"3972","messageId":"3973","endLine":361,"endColumn":113},{"ruleId":"3970","severity":1,"message":"3971","line":373,"column":24,"nodeType":"3972","messageId":"3973","endLine":373,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":373,"column":59,"nodeType":"3972","messageId":"3973","endLine":373,"endColumn":61},{"ruleId":"3970","severity":1,"message":"3971","line":373,"column":98,"nodeType":"3972","messageId":"3973","endLine":373,"endColumn":100},{"ruleId":"3970","severity":1,"message":"3971","line":373,"column":136,"nodeType":"3972","messageId":"3973","endLine":373,"endColumn":138},{"ruleId":"3970","severity":1,"message":"3991","line":444,"column":24,"nodeType":"3972","messageId":"3973","endLine":444,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":444,"column":45,"nodeType":"3972","messageId":"3973","endLine":444,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3991","line":448,"column":29,"nodeType":"3972","messageId":"3973","endLine":448,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4303","line":461,"column":11,"nodeType":"3965","messageId":"3966","endLine":461,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4303","line":478,"column":7,"nodeType":"3965","messageId":"3966","endLine":478,"endColumn":10},{"ruleId":"3970","severity":1,"message":"3971","line":629,"column":22,"nodeType":"3972","messageId":"3973","endLine":629,"endColumn":24},{"ruleId":"3963","severity":1,"message":"4093","line":3,"column":3,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":4,"column":3,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3997","line":5,"column":3,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4274","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":29},{"ruleId":"3963","severity":1,"message":"3968","line":21,"column":11,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4152","line":24,"column":37,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4301","line":25,"column":21,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4251","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":28,"column":12,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4304","line":28,"column":16,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4305","line":36,"column":12,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4306","line":36,"column":18,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4179","line":57,"column":8,"nodeType":"3976","endLine":57,"endColumn":10,"suggestions":"4307"},{"ruleId":"3970","severity":1,"message":"3991","line":75,"column":29,"nodeType":"3972","messageId":"3973","endLine":75,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4303","line":125,"column":15,"nodeType":"3965","messageId":"3966","endLine":125,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":273,"column":48,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":290,"column":37,"nodeType":"3972","messageId":"3973","endLine":290,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":320,"column":37,"nodeType":"3972","messageId":"3973","endLine":320,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":338,"column":34,"nodeType":"3972","messageId":"3973","endLine":338,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":350,"column":30,"nodeType":"3972","messageId":"3973","endLine":350,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":350,"column":65,"nodeType":"3972","messageId":"3973","endLine":350,"endColumn":67},{"ruleId":"3970","severity":1,"message":"3971","line":350,"column":104,"nodeType":"3972","messageId":"3973","endLine":350,"endColumn":106},{"ruleId":"3970","severity":1,"message":"3971","line":350,"column":142,"nodeType":"3972","messageId":"3973","endLine":350,"endColumn":144},{"ruleId":"3970","severity":1,"message":"3991","line":422,"column":28,"nodeType":"3972","messageId":"3973","endLine":422,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3991","line":422,"column":49,"nodeType":"3972","messageId":"3973","endLine":422,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3991","line":426,"column":33,"nodeType":"3972","messageId":"3973","endLine":426,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3968","line":21,"column":11,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4152","line":24,"column":37,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4301","line":25,"column":21,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4251","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4308","line":32,"column":12,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4303","line":51,"column":17,"nodeType":"3965","messageId":"3966","endLine":51,"endColumn":20},{"ruleId":"3974","severity":1,"message":"4179","line":66,"column":8,"nodeType":"3976","endLine":66,"endColumn":10,"suggestions":"4309"},{"ruleId":"3970","severity":1,"message":"3991","line":84,"column":29,"nodeType":"3972","messageId":"3973","endLine":84,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3991","line":146,"column":24,"nodeType":"3972","messageId":"3973","endLine":146,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":146,"column":45,"nodeType":"3972","messageId":"3973","endLine":146,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3991","line":150,"column":29,"nodeType":"3972","messageId":"3973","endLine":150,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":289,"column":48,"nodeType":"3972","messageId":"3973","endLine":289,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":306,"column":37,"nodeType":"3972","messageId":"3973","endLine":306,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":336,"column":37,"nodeType":"3972","messageId":"3973","endLine":336,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":354,"column":34,"nodeType":"3972","messageId":"3973","endLine":354,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":43,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":78,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":80},{"ruleId":"3970","severity":1,"message":"3991","line":365,"column":113,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":115},{"ruleId":"3970","severity":1,"message":"3971","line":377,"column":43,"nodeType":"3972","messageId":"3973","endLine":377,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3971","line":377,"column":78,"nodeType":"3972","messageId":"3973","endLine":377,"endColumn":80},{"ruleId":"3970","severity":1,"message":"3971","line":377,"column":117,"nodeType":"3972","messageId":"3973","endLine":377,"endColumn":119},{"ruleId":"3963","severity":1,"message":"4310","line":2,"column":19,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":32},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4311","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4002","line":22,"column":8,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4199","line":38,"column":10,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4202","line":42,"column":17,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4312","line":71,"column":6,"nodeType":"3976","endLine":71,"endColumn":8,"suggestions":"4313"},{"ruleId":"3970","severity":1,"message":"3971","line":96,"column":23,"nodeType":"3972","messageId":"3973","endLine":96,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":118,"column":19,"nodeType":"3972","messageId":"3973","endLine":118,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":120,"column":21,"nodeType":"3972","messageId":"3973","endLine":120,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":25,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":129,"column":25,"nodeType":"3972","messageId":"3973","endLine":129,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":143,"column":31,"nodeType":"3972","messageId":"3973","endLine":143,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":143,"column":50,"nodeType":"3972","messageId":"3973","endLine":143,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":148,"column":29,"nodeType":"3972","messageId":"3973","endLine":148,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":148,"column":46,"nodeType":"3972","messageId":"3973","endLine":148,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3991","line":158,"column":33,"nodeType":"3972","messageId":"3973","endLine":158,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":32,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":34},{"ruleId":"4085","severity":1,"message":"4086","line":220,"column":45,"nodeType":"4087","messageId":"4088","endLine":220,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":230,"column":45,"nodeType":"4087","messageId":"4088","endLine":230,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":251,"column":28,"nodeType":"3972","messageId":"3973","endLine":251,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":368,"column":32,"nodeType":"3972","messageId":"3973","endLine":368,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":383,"column":33,"nodeType":"3972","messageId":"3973","endLine":383,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":396,"column":33,"nodeType":"3972","messageId":"3973","endLine":396,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3998","line":4,"column":38,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":4,"column":49,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":4,"column":54,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":18,"column":12,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4314","line":18,"column":19,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4315","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4316","line":21,"column":28,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4317","line":30,"column":6,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":12},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":35,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":205,"column":34,"nodeType":"3972","messageId":"3973","endLine":205,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":207,"column":34,"nodeType":"3972","messageId":"3973","endLine":207,"endColumn":36},{"ruleId":"4020","severity":1,"message":"4021","line":228,"column":25,"nodeType":"4022","messageId":"4023","endLine":231,"endColumn":20,"fix":"4318"},{"ruleId":"3970","severity":1,"message":"3971","line":236,"column":44,"nodeType":"3972","messageId":"3973","endLine":236,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3991","line":269,"column":29,"nodeType":"3972","messageId":"3973","endLine":269,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3991","line":269,"column":51,"nodeType":"3972","messageId":"3973","endLine":269,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3991","line":273,"column":32,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3991","line":273,"column":54,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":56},{"ruleId":"3970","severity":1,"message":"3991","line":273,"column":75,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":77},{"ruleId":"3970","severity":1,"message":"3991","line":278,"column":33,"nodeType":"3972","messageId":"3973","endLine":278,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3991","line":278,"column":55,"nodeType":"3972","messageId":"3973","endLine":278,"endColumn":57},{"ruleId":"4016","severity":1,"message":"4017","line":326,"column":21,"nodeType":"4018","messageId":"4019","endLine":326,"endColumn":31},{"ruleId":"3963","severity":1,"message":"3998","line":4,"column":38,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":4,"column":49,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":4,"column":54,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":57},{"ruleId":"4016","severity":1,"message":"4017","line":203,"column":21,"nodeType":"4018","messageId":"4019","endLine":203,"endColumn":31},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4319","line":2,"column":10,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3988","line":2,"column":22,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4320","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4321","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4322","line":8,"column":8,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4036","line":9,"column":8,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4323","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4324","line":36,"column":11,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":59,"column":24,"nodeType":"3972","messageId":"3973","endLine":59,"endColumn":26},{"ruleId":"3974","severity":1,"message":"4325","line":80,"column":6,"nodeType":"3976","endLine":80,"endColumn":24,"suggestions":"4326"},{"ruleId":"3963","severity":1,"message":"4044","line":81,"column":45,"nodeType":"3965","messageId":"3966","endLine":81,"endColumn":54},{"ruleId":"3963","severity":1,"message":"3985","line":81,"column":56,"nodeType":"3965","messageId":"3966","endLine":81,"endColumn":61},{"ruleId":"4085","severity":1,"message":"4086","line":89,"column":35,"nodeType":"4087","messageId":"4088","endLine":89,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":176,"column":27,"nodeType":"3972","messageId":"3973","endLine":176,"endColumn":29},{"ruleId":"4085","severity":1,"message":"4086","line":279,"column":21,"nodeType":"4087","messageId":"4088","endLine":279,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":281,"column":14,"nodeType":"3972","messageId":"3973","endLine":281,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4327","line":10,"column":39,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":53},{"ruleId":"3963","severity":1,"message":"3968","line":12,"column":9,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":16},{"ruleId":"4283","severity":1,"message":"4328","line":26,"column":17,"nodeType":"4022","endLine":29,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":57,"column":61,"nodeType":"3972","messageId":"3973","endLine":57,"endColumn":63},{"ruleId":"3970","severity":1,"message":"3971","line":64,"column":21,"nodeType":"3972","messageId":"3973","endLine":64,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":68,"column":21,"nodeType":"3972","messageId":"3973","endLine":68,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":72,"column":21,"nodeType":"3972","messageId":"3973","endLine":72,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":75,"column":22,"nodeType":"3972","messageId":"3973","endLine":75,"endColumn":24},{"ruleId":"4283","severity":1,"message":"4328","line":81,"column":17,"nodeType":"4022","endLine":86,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":99,"column":27,"nodeType":"3972","messageId":"3973","endLine":99,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4213","line":4,"column":41,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3974","severity":1,"message":"4329","line":12,"column":6,"nodeType":"3976","endLine":12,"endColumn":11,"suggestions":"4330"},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3983","line":14,"column":9,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":15,"column":35,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4331","line":1,"column":10,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4266","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4332","line":14,"column":7,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":13},{"ruleId":"3974","severity":1,"message":"4160","line":87,"column":6,"nodeType":"3976","endLine":87,"endColumn":14,"suggestions":"4333"},{"ruleId":"4020","severity":1,"message":"4021","line":147,"column":27,"nodeType":"4022","messageId":"4023","endLine":150,"endColumn":28,"fix":"4334"},{"ruleId":"4020","severity":1,"message":"4021","line":160,"column":23,"nodeType":"4022","messageId":"4023","endLine":163,"endColumn":28,"fix":"4335"},{"ruleId":"3970","severity":1,"message":"3971","line":170,"column":41,"nodeType":"3972","messageId":"3973","endLine":170,"endColumn":43},{"ruleId":"4336","severity":1,"message":"4337","line":170,"column":46,"nodeType":"4338","messageId":"4339","endLine":170,"endColumn":48},{"ruleId":"4336","severity":1,"message":"4337","line":170,"column":64,"nodeType":"4338","messageId":"4339","endLine":170,"endColumn":66},{"ruleId":"4336","severity":1,"message":"4340","line":170,"column":64,"nodeType":"4338","messageId":"4339","endLine":170,"endColumn":66},{"ruleId":"3970","severity":1,"message":"3971","line":170,"column":81,"nodeType":"3972","messageId":"3973","endLine":170,"endColumn":83},{"ruleId":"4336","severity":1,"message":"4340","line":170,"column":86,"nodeType":"4338","messageId":"4339","endLine":170,"endColumn":88},{"ruleId":"3970","severity":1,"message":"3971","line":176,"column":39,"nodeType":"3972","messageId":"3973","endLine":176,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":179,"column":40,"nodeType":"3972","messageId":"3973","endLine":179,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":182,"column":42,"nodeType":"3972","messageId":"3973","endLine":182,"endColumn":44},{"ruleId":"3970","severity":1,"message":"3971","line":193,"column":44,"nodeType":"3972","messageId":"3973","endLine":193,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":46,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":48},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4152","line":7,"column":36,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":20,"column":22,"nodeType":"3972","messageId":"3973","endLine":20,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":33,"column":28,"nodeType":"3972","messageId":"3973","endLine":33,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":46,"column":28,"nodeType":"3972","messageId":"3973","endLine":46,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":59,"column":27,"nodeType":"3972","messageId":"3973","endLine":59,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":72,"column":27,"nodeType":"3972","messageId":"3973","endLine":72,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":85,"column":28,"nodeType":"3972","messageId":"3973","endLine":85,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":22,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":52,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":86,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":88},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4341","line":3,"column":8,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3999","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3979","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4342","line":18,"column":8,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4205","line":39,"column":8,"nodeType":"3976","endLine":39,"endColumn":10,"suggestions":"4343"},{"ruleId":"3963","severity":1,"message":"4031","line":10,"column":11,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":17},{"ruleId":"4020","severity":1,"message":"4021","line":61,"column":45,"nodeType":"4022","messageId":"4023","endLine":64,"endColumn":46,"fix":"4344"},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3983","line":15,"column":9,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":14},{"ruleId":"3970","severity":1,"message":"3971","line":31,"column":33,"nodeType":"3972","messageId":"3973","endLine":31,"endColumn":35},{"ruleId":"4020","severity":1,"message":"4021","line":35,"column":23,"nodeType":"4022","messageId":"4023","endLine":38,"endColumn":24,"fix":"4345"},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3985","line":24,"column":35,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":40},{"ruleId":"3974","severity":1,"message":"4329","line":18,"column":8,"nodeType":"3976","endLine":18,"endColumn":18,"suggestions":"4346"},{"ruleId":"3970","severity":1,"message":"3991","line":27,"column":42,"nodeType":"3972","messageId":"3973","endLine":27,"endColumn":44},{"ruleId":"3963","severity":1,"message":"4347","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4348","line":13,"column":11,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4349","line":15,"column":9,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4350","line":20,"column":9,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":95,"column":38,"nodeType":"3972","messageId":"3973","endLine":95,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":96,"column":37,"nodeType":"3972","messageId":"3973","endLine":96,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":97,"column":34,"nodeType":"3972","messageId":"3973","endLine":97,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":98,"column":38,"nodeType":"3972","messageId":"3973","endLine":98,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":112,"column":38,"nodeType":"3972","messageId":"3973","endLine":112,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":112,"column":86,"nodeType":"3972","messageId":"3973","endLine":112,"endColumn":88},{"ruleId":"4020","severity":1,"message":"4021","line":116,"column":27,"nodeType":"4022","messageId":"4023","endLine":119,"endColumn":28,"fix":"4351"},{"ruleId":"3970","severity":1,"message":"3971","line":124,"column":42,"nodeType":"3972","messageId":"3973","endLine":124,"endColumn":44},{"ruleId":"4336","severity":1,"message":"4337","line":124,"column":74,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":76},{"ruleId":"4336","severity":1,"message":"4337","line":124,"column":92,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":94},{"ruleId":"4336","severity":1,"message":"4340","line":124,"column":92,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":94},{"ruleId":"3970","severity":1,"message":"3971","line":124,"column":109,"nodeType":"3972","messageId":"3973","endLine":124,"endColumn":111},{"ruleId":"4336","severity":1,"message":"4340","line":124,"column":141,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":143},{"ruleId":"4336","severity":1,"message":"4340","line":124,"column":159,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":161},{"ruleId":"4336","severity":1,"message":"4340","line":124,"column":186,"nodeType":"4338","messageId":"4339","endLine":124,"endColumn":188},{"ruleId":"3970","severity":1,"message":"3971","line":127,"column":37,"nodeType":"3972","messageId":"3973","endLine":127,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"4020","severity":1,"message":"4021","line":73,"column":21,"nodeType":"4022","messageId":"4023","endLine":76,"endColumn":22,"fix":"4352"},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":22,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":45,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":122,"column":28,"nodeType":"3972","messageId":"3973","endLine":122,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":122,"column":51,"nodeType":"3972","messageId":"3973","endLine":122,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3971","line":125,"column":30,"nodeType":"3972","messageId":"3973","endLine":125,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":137,"column":27,"nodeType":"3972","messageId":"3973","endLine":137,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4353","line":3,"column":19,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4354","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4355","line":38,"column":11,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":153,"column":29,"nodeType":"3972","messageId":"3973","endLine":153,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":188,"column":35,"nodeType":"3972","messageId":"3973","endLine":188,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":191,"column":37,"nodeType":"3972","messageId":"3973","endLine":191,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":194,"column":39,"nodeType":"3972","messageId":"3973","endLine":194,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":210,"column":31,"nodeType":"3972","messageId":"3973","endLine":210,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":224,"column":33,"nodeType":"3972","messageId":"3973","endLine":224,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":254,"column":33,"nodeType":"3972","messageId":"3973","endLine":254,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":255,"column":33,"nodeType":"3972","messageId":"3973","endLine":255,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":256,"column":34,"nodeType":"3972","messageId":"3973","endLine":256,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":280,"column":34,"nodeType":"3972","messageId":"3973","endLine":280,"endColumn":36},{"ruleId":"4020","severity":1,"message":"4021","line":289,"column":21,"nodeType":"4022","messageId":"4023","endLine":289,"endColumn":62,"fix":"4356"},{"ruleId":"3970","severity":1,"message":"3971","line":321,"column":29,"nodeType":"3972","messageId":"3973","endLine":321,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":57,"column":24,"nodeType":"3972","messageId":"3973","endLine":57,"endColumn":26},{"ruleId":"3974","severity":1,"message":"4357","line":76,"column":6,"nodeType":"3976","endLine":76,"endColumn":24,"suggestions":"4358"},{"ruleId":"3963","severity":1,"message":"4044","line":77,"column":45,"nodeType":"3965","messageId":"3966","endLine":77,"endColumn":54},{"ruleId":"3963","severity":1,"message":"3985","line":77,"column":56,"nodeType":"3965","messageId":"3966","endLine":77,"endColumn":61},{"ruleId":"4085","severity":1,"message":"4086","line":85,"column":35,"nodeType":"4087","messageId":"4088","endLine":85,"endColumn":37},{"ruleId":"4085","severity":1,"message":"4086","line":238,"column":21,"nodeType":"4087","messageId":"4088","endLine":238,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":240,"column":9,"nodeType":"3972","messageId":"3973","endLine":240,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4277","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4278","line":21,"column":6,"nodeType":"3976","endLine":21,"endColumn":14,"suggestions":"4359"},{"ruleId":"3970","severity":1,"message":"3991","line":26,"column":17,"nodeType":"3972","messageId":"3973","endLine":26,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":55,"column":41,"nodeType":"3972","messageId":"3973","endLine":55,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":61,"column":32,"nodeType":"3972","messageId":"3973","endLine":61,"endColumn":34},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3983","line":12,"column":9,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":13,"column":35,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4093","line":3,"column":3,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":4,"column":3,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3997","line":5,"column":3,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4274","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4093","line":3,"column":3,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":4,"column":3,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3997","line":5,"column":3,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4274","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3991","line":43,"column":22,"nodeType":"3972","messageId":"3973","endLine":43,"endColumn":24},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4152","line":9,"column":35,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4049","line":10,"column":11,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4301","line":10,"column":19,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4257","line":12,"column":10,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4360","line":12,"column":24,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":30,"column":16,"nodeType":"3972","messageId":"3973","endLine":30,"endColumn":18},{"ruleId":"4245","severity":1,"message":"4246","line":23,"column":1,"nodeType":"4247","endLine":29,"endColumn":3},{"ruleId":"3963","severity":1,"message":"4152","line":19,"column":37,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":43},{"ruleId":"3963","severity":1,"message":"3985","line":19,"column":45,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":50},{"ruleId":"3963","severity":1,"message":"4141","line":24,"column":11,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":13},{"ruleId":"3974","severity":1,"message":"4192","line":35,"column":6,"nodeType":"3976","endLine":35,"endColumn":8,"suggestions":"4361"},{"ruleId":"4085","severity":1,"message":"4086","line":43,"column":26,"nodeType":"4087","messageId":"4088","endLine":43,"endColumn":28},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":13,"column":10,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":15,"column":10,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":186,"column":28,"nodeType":"3972","messageId":"3973","endLine":186,"endColumn":30},{"ruleId":"4020","severity":1,"message":"4021","line":261,"column":19,"nodeType":"4022","messageId":"4023","endLine":264,"endColumn":20,"fix":"4363"},{"ruleId":"3970","severity":1,"message":"3971","line":276,"column":18,"nodeType":"3972","messageId":"3973","endLine":276,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4364","line":14,"column":16,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":194,"column":28,"nodeType":"3972","messageId":"3973","endLine":194,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":202,"column":30,"nodeType":"3972","messageId":"3973","endLine":202,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":206,"column":32,"nodeType":"3972","messageId":"3973","endLine":206,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":277,"column":55,"nodeType":"3972","messageId":"3973","endLine":277,"endColumn":57},{"ruleId":"4020","severity":1,"message":"4021","line":279,"column":19,"nodeType":"4022","messageId":"4023","endLine":282,"endColumn":20,"fix":"4365"},{"ruleId":"3970","severity":1,"message":"3971","line":293,"column":18,"nodeType":"3972","messageId":"3973","endLine":293,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":13,"column":10,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":15,"column":10,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":28,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":30},{"ruleId":"4020","severity":1,"message":"4021","line":259,"column":19,"nodeType":"4022","messageId":"4023","endLine":262,"endColumn":20,"fix":"4366"},{"ruleId":"3970","severity":1,"message":"3971","line":273,"column":18,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4152","line":11,"column":27,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":11,"column":35,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":40},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":13,"column":10,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":15,"column":10,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":180,"column":28,"nodeType":"3972","messageId":"3973","endLine":180,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":251,"column":55,"nodeType":"3972","messageId":"3973","endLine":251,"endColumn":57},{"ruleId":"4020","severity":1,"message":"4021","line":253,"column":19,"nodeType":"4022","messageId":"4023","endLine":256,"endColumn":20,"fix":"4367"},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":5,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":17,"column":10,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":19,"column":10,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4368","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":24},{"ruleId":"4020","severity":1,"message":"4021","line":428,"column":53,"nodeType":"4022","messageId":"4023","endLine":428,"endColumn":93,"fix":"4369"},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":5,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":17,"column":10,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":19,"column":10,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4368","line":32,"column":12,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":188,"column":38,"nodeType":"3972","messageId":"3973","endLine":188,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":315,"column":42,"nodeType":"3972","messageId":"3973","endLine":315,"endColumn":44},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":5,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":17,"column":10,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":19,"column":10,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4368","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":195,"column":38,"nodeType":"3972","messageId":"3973","endLine":195,"endColumn":40},{"ruleId":"4020","severity":1,"message":"4021","line":437,"column":53,"nodeType":"4022","messageId":"4023","endLine":437,"endColumn":93,"fix":"4370"},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4362","line":5,"column":8,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4371","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4372","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4025","line":28,"column":8,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4373","line":49,"column":9,"nodeType":"3965","messageId":"3966","endLine":49,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4374","line":52,"column":10,"nodeType":"3965","messageId":"3966","endLine":52,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4375","line":58,"column":20,"nodeType":"3965","messageId":"3966","endLine":58,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4376","line":59,"column":21,"nodeType":"3965","messageId":"3966","endLine":59,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4377","line":60,"column":24,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4378","line":61,"column":25,"nodeType":"3965","messageId":"3966","endLine":61,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4379","line":62,"column":24,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4380","line":71,"column":23,"nodeType":"3965","messageId":"3966","endLine":71,"endColumn":37},{"ruleId":"3974","severity":1,"message":"4381","line":77,"column":6,"nodeType":"3976","endLine":77,"endColumn":8,"suggestions":"4382"},{"ruleId":"4078","severity":1,"message":"4383","line":405,"column":17,"nodeType":"3965","messageId":"4080","endLine":405,"endColumn":20},{"ruleId":"4085","severity":1,"message":"4106","line":419,"column":26,"nodeType":"4087","messageId":"4088","endLine":419,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":420,"column":21,"nodeType":"3972","messageId":"3973","endLine":420,"endColumn":23},{"ruleId":"4078","severity":1,"message":"4384","line":428,"column":13,"nodeType":"3965","messageId":"4080","endLine":428,"endColumn":21},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4210","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4211","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4276","line":20,"column":10,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4002","line":26,"column":8,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4257","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4360","line":33,"column":24,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":164,"column":28,"nodeType":"3972","messageId":"3973","endLine":164,"endColumn":30},{"ruleId":"3963","severity":1,"message":"4385","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":48},{"ruleId":"3974","severity":1,"message":"4386","line":33,"column":6,"nodeType":"3976","endLine":33,"endColumn":15,"suggestions":"4387"},{"ruleId":"3970","severity":1,"message":"3971","line":133,"column":28,"nodeType":"3972","messageId":"3973","endLine":133,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":139,"column":30,"nodeType":"3972","messageId":"3973","endLine":139,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":32,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":164,"column":24,"nodeType":"3972","messageId":"3973","endLine":164,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":236,"column":26,"nodeType":"3972","messageId":"3973","endLine":236,"endColumn":28},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4276","line":13,"column":10,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4362","line":15,"column":10,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4262","line":16,"column":16,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":133,"column":28,"nodeType":"3972","messageId":"3973","endLine":133,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":138,"column":30,"nodeType":"3972","messageId":"3973","endLine":138,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":142,"column":32,"nodeType":"3972","messageId":"3973","endLine":142,"endColumn":34},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4073","line":28,"column":11,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4191","line":28,"column":25,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4152","line":28,"column":35,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":41},{"ruleId":"3963","severity":1,"message":"3985","line":28,"column":43,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4049","line":29,"column":11,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4301","line":29,"column":19,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4257","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4360","line":32,"column":24,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":28,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":30},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"3985","line":25,"column":37,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":42},{"ruleId":"3963","severity":1,"message":"4152","line":9,"column":35,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4388","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4275","line":23,"column":5,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3991","line":42,"column":23,"nodeType":"3972","messageId":"3973","endLine":42,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":95,"column":26,"nodeType":"3972","messageId":"3973","endLine":95,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":111,"column":33,"nodeType":"3972","messageId":"3973","endLine":111,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":127,"column":26,"nodeType":"3972","messageId":"3973","endLine":127,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":143,"column":25,"nodeType":"3972","messageId":"3973","endLine":143,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":159,"column":28,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":175,"column":20,"nodeType":"3972","messageId":"3973","endLine":175,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":191,"column":26,"nodeType":"3972","messageId":"3973","endLine":191,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":207,"column":20,"nodeType":"3972","messageId":"3973","endLine":207,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":223,"column":16,"nodeType":"3972","messageId":"3973","endLine":223,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":239,"column":14,"nodeType":"3972","messageId":"3973","endLine":239,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":255,"column":21,"nodeType":"3972","messageId":"3973","endLine":255,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":368,"column":31,"nodeType":"3972","messageId":"3973","endLine":368,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":383,"column":44,"nodeType":"3972","messageId":"3973","endLine":383,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":396,"column":39,"nodeType":"3972","messageId":"3973","endLine":396,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":409,"column":32,"nodeType":"3972","messageId":"3973","endLine":409,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":423,"column":36,"nodeType":"3972","messageId":"3973","endLine":423,"endColumn":38},{"ruleId":"3970","severity":1,"message":"3971","line":438,"column":31,"nodeType":"3972","messageId":"3973","endLine":438,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":36,"column":37,"nodeType":"3972","messageId":"3973","endLine":36,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":44,"column":39,"nodeType":"3972","messageId":"3973","endLine":44,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":51,"column":41,"nodeType":"3972","messageId":"3973","endLine":51,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4389","line":11,"column":17,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4036","line":14,"column":8,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":22},{"ruleId":"4390","severity":1,"message":"4391","line":144,"column":153,"nodeType":"3972","messageId":"4392","endLine":144,"endColumn":154},{"ruleId":"4390","severity":1,"message":"4391","line":144,"column":156,"nodeType":"3972","messageId":"4392","endLine":144,"endColumn":157},{"ruleId":"4154","severity":1,"message":"4155","line":145,"column":33,"nodeType":"4156","messageId":"4157","endLine":145,"endColumn":34,"fix":"4393"},{"ruleId":"4085","severity":1,"message":"4086","line":222,"column":47,"nodeType":"4087","messageId":"4088","endLine":222,"endColumn":49},{"ruleId":"4085","severity":1,"message":"4086","line":273,"column":33,"nodeType":"4087","messageId":"4088","endLine":273,"endColumn":35},{"ruleId":"4085","severity":1,"message":"4086","line":290,"column":33,"nodeType":"4087","messageId":"4088","endLine":290,"endColumn":35},{"ruleId":"4085","severity":1,"message":"4086","line":310,"column":47,"nodeType":"4087","messageId":"4088","endLine":310,"endColumn":49},{"ruleId":"4085","severity":1,"message":"4086","line":343,"column":29,"nodeType":"4087","messageId":"4088","endLine":343,"endColumn":31},{"ruleId":"4085","severity":1,"message":"4086","line":356,"column":29,"nodeType":"4087","messageId":"4088","endLine":356,"endColumn":31},{"ruleId":"4394","severity":1,"message":"4395","line":444,"column":10,"nodeType":"4396","messageId":"3973","endLine":444,"endColumn":14,"fix":"4397"},{"ruleId":"4085","severity":1,"message":"4086","line":455,"column":45,"nodeType":"4087","messageId":"4088","endLine":455,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":474,"column":35,"nodeType":"3972","messageId":"3973","endLine":474,"endColumn":37},{"ruleId":"4078","severity":1,"message":"4398","line":528,"column":14,"nodeType":"3965","messageId":"4080","endLine":528,"endColumn":28},{"ruleId":"4078","severity":1,"message":"4398","line":535,"column":13,"nodeType":"3965","messageId":"4080","endLine":535,"endColumn":27},{"ruleId":"4085","severity":1,"message":"4086","line":601,"column":20,"nodeType":"4087","messageId":"4088","endLine":601,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":829,"column":33,"nodeType":"3972","messageId":"3973","endLine":829,"endColumn":35},{"ruleId":"4399","severity":1,"message":"4400","line":830,"column":8,"nodeType":"3965","messageId":"4401","endLine":830,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3991","line":871,"column":26,"nodeType":"3972","messageId":"3973","endLine":871,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":1035,"column":29,"nodeType":"3972","messageId":"3973","endLine":1035,"endColumn":31},{"ruleId":"4402","severity":1,"message":"4403","line":1037,"column":6,"nodeType":"4022","endLine":1037,"endColumn":55},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4002","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4152","line":19,"column":37,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4404","line":24,"column":38,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3991","line":34,"column":30,"nodeType":"3972","messageId":"3973","endLine":34,"endColumn":32},{"ruleId":"3963","severity":1,"message":"4405","line":40,"column":25,"nodeType":"3965","messageId":"3966","endLine":40,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4406","line":42,"column":13,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4407","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4124","line":26,"column":9,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4152","line":29,"column":35,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4301","line":30,"column":19,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4408","line":31,"column":10,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4308","line":35,"column":10,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4409","line":114,"column":9,"nodeType":"3965","messageId":"3966","endLine":114,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":255,"column":40,"nodeType":"3972","messageId":"3973","endLine":255,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":273,"column":31,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3991","line":358,"column":24,"nodeType":"3972","messageId":"3973","endLine":358,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":358,"column":45,"nodeType":"3972","messageId":"3973","endLine":358,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3991","line":362,"column":29,"nodeType":"3972","messageId":"3973","endLine":362,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4407","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4124","line":26,"column":9,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4152","line":29,"column":35,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4301","line":30,"column":19,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4408","line":31,"column":10,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4308","line":35,"column":10,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4409","line":114,"column":9,"nodeType":"3965","messageId":"3966","endLine":114,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":256,"column":40,"nodeType":"3972","messageId":"3973","endLine":256,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":274,"column":31,"nodeType":"3972","messageId":"3973","endLine":274,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3991","line":359,"column":24,"nodeType":"3972","messageId":"3973","endLine":359,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":359,"column":45,"nodeType":"3972","messageId":"3973","endLine":359,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3991","line":363,"column":29,"nodeType":"3972","messageId":"3973","endLine":363,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4407","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4124","line":27,"column":9,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4152","line":30,"column":35,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4301","line":31,"column":19,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4408","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4410","line":60,"column":10,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4411","line":62,"column":9,"nodeType":"3965","messageId":"3966","endLine":62,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3971","line":215,"column":32,"nodeType":"3972","messageId":"3973","endLine":215,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":272,"column":40,"nodeType":"3972","messageId":"3973","endLine":272,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":289,"column":31,"nodeType":"3972","messageId":"3973","endLine":289,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3991","line":372,"column":24,"nodeType":"3972","messageId":"3973","endLine":372,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":372,"column":45,"nodeType":"3972","messageId":"3973","endLine":372,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":511,"column":22,"nodeType":"3972","messageId":"3973","endLine":511,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":65,"column":32,"nodeType":"3972","messageId":"3973","endLine":65,"endColumn":34},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3992","line":18,"column":10,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4249","line":31,"column":11,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4251","line":35,"column":10,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":15},{"ruleId":"3974","severity":1,"message":"4252","line":87,"column":6,"nodeType":"3976","endLine":87,"endColumn":8,"suggestions":"4412"},{"ruleId":"3970","severity":1,"message":"3971","line":233,"column":32,"nodeType":"3972","messageId":"3973","endLine":233,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":375,"column":31,"nodeType":"3972","messageId":"3973","endLine":375,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4413","line":469,"column":9,"nodeType":"3965","messageId":"3966","endLine":469,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4251","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":87,"column":8,"nodeType":"3976","endLine":87,"endColumn":10,"suggestions":"4414"},{"ruleId":"3970","severity":1,"message":"3971","line":232,"column":36,"nodeType":"3972","messageId":"3973","endLine":232,"endColumn":38},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":41,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3983","line":30,"column":9,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4249","line":31,"column":11,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4251","line":36,"column":10,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":15},{"ruleId":"3974","severity":1,"message":"4252","line":88,"column":6,"nodeType":"3976","endLine":88,"endColumn":8,"suggestions":"4415"},{"ruleId":"3970","severity":1,"message":"3971","line":234,"column":32,"nodeType":"3972","messageId":"3973","endLine":234,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":31,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"4089","severity":1,"message":"4129","line":70,"column":1,"nodeType":"4091","messageId":"4130","endLine":79,"endColumn":2},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4277","line":10,"column":8,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4031","line":26,"column":9,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3985","line":27,"column":35,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"4416","severity":1,"message":"4417","line":17,"column":11,"nodeType":"4022","endLine":18,"endColumn":42},{"ruleId":"3963","severity":1,"message":"4152","line":11,"column":27,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":11,"column":35,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4418","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3983","line":25,"column":11,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4419","line":29,"column":12,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4249","line":32,"column":12,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4304","line":32,"column":16,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4420","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4421","line":33,"column":20,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4422","line":44,"column":8,"nodeType":"3976","endLine":44,"endColumn":10,"suggestions":"4423"},{"ruleId":"4020","severity":1,"message":"4021","line":290,"column":37,"nodeType":"4022","messageId":"4023","endLine":293,"endColumn":38,"fix":"4424"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4418","line":20,"column":8,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3983","line":26,"column":11,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4419","line":30,"column":12,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4249","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4304","line":34,"column":16,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4420","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4421","line":35,"column":20,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4422","line":41,"column":8,"nodeType":"3976","endLine":41,"endColumn":10,"suggestions":"4425"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4418","line":19,"column":8,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4277","line":21,"column":8,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4002","line":22,"column":8,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":29,"column":11,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4419","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4420","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4421","line":35,"column":20,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4422","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4426"},{"ruleId":"3963","severity":1,"message":"4427","line":72,"column":7,"nodeType":"3965","messageId":"3966","endLine":72,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3971","line":210,"column":44,"nodeType":"3972","messageId":"3973","endLine":210,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":218,"column":48,"nodeType":"3972","messageId":"3973","endLine":218,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":224,"column":52,"nodeType":"3972","messageId":"3973","endLine":224,"endColumn":54},{"ruleId":"4020","severity":1,"message":"4021","line":365,"column":49,"nodeType":"4022","messageId":"4023","endLine":368,"endColumn":50,"fix":"4428"},{"ruleId":"3970","severity":1,"message":"3971","line":380,"column":56,"nodeType":"3972","messageId":"3973","endLine":380,"endColumn":58},{"ruleId":"4089","severity":1,"message":"4129","line":456,"column":1,"nodeType":"4091","messageId":"4130","endLine":462,"endColumn":51},{"ruleId":"3963","severity":1,"message":"4429","line":2,"column":13,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":20},{"ruleId":"4283","severity":1,"message":"4284","line":33,"column":15,"nodeType":"4022","endLine":36,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4430","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3983","line":24,"column":9,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4431","line":27,"column":10,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4263","line":29,"column":10,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":18},{"ruleId":"3974","severity":1,"message":"4432","line":33,"column":6,"nodeType":"3976","endLine":33,"endColumn":8,"suggestions":"4433"},{"ruleId":"3963","severity":1,"message":"4264","line":35,"column":9,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":29},{"ruleId":"3970","severity":1,"message":"3971","line":152,"column":26,"nodeType":"3972","messageId":"3973","endLine":152,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":178,"column":26,"nodeType":"3972","messageId":"3973","endLine":178,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":53,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":112,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":114},{"ruleId":"4336","severity":1,"message":"4434","line":189,"column":58,"nodeType":"3972","messageId":"4339","endLine":189,"endColumn":59},{"ruleId":"4336","severity":1,"message":"4434","line":189,"column":68,"nodeType":"3972","messageId":"4339","endLine":189,"endColumn":71},{"ruleId":"3963","severity":1,"message":"4430","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3983","line":29,"column":9,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4431","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4432","line":50,"column":6,"nodeType":"3976","endLine":50,"endColumn":8,"suggestions":"4435"},{"ruleId":"3970","severity":1,"message":"3971","line":146,"column":28,"nodeType":"3972","messageId":"3973","endLine":146,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":154,"column":30,"nodeType":"3972","messageId":"3973","endLine":154,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":159,"column":32,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":164,"column":34,"nodeType":"3972","messageId":"3973","endLine":164,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":190,"column":34,"nodeType":"3972","messageId":"3973","endLine":190,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3991","line":193,"column":43,"nodeType":"3972","messageId":"3973","endLine":193,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3971","line":216,"column":26,"nodeType":"3972","messageId":"3973","endLine":216,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":37,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":63,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":65},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":89,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":91},{"ruleId":"3970","severity":1,"message":"3971","line":285,"column":57,"nodeType":"3972","messageId":"3973","endLine":285,"endColumn":59},{"ruleId":"3970","severity":1,"message":"3971","line":285,"column":116,"nodeType":"3972","messageId":"3973","endLine":285,"endColumn":118},{"ruleId":"4336","severity":1,"message":"4434","line":289,"column":62,"nodeType":"3972","messageId":"4339","endLine":289,"endColumn":63},{"ruleId":"4336","severity":1,"message":"4434","line":289,"column":72,"nodeType":"3972","messageId":"4339","endLine":289,"endColumn":75},{"ruleId":"3970","severity":1,"message":"3971","line":307,"column":47,"nodeType":"3972","messageId":"3973","endLine":307,"endColumn":49},{"ruleId":"3963","severity":1,"message":"4436","line":456,"column":7,"nodeType":"3965","messageId":"3966","endLine":456,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4418","line":15,"column":8,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4277","line":17,"column":8,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3983","line":25,"column":11,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4419","line":29,"column":12,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4249","line":32,"column":12,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4304","line":32,"column":16,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4420","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":18},{"ruleId":"3974","severity":1,"message":"4422","line":43,"column":8,"nodeType":"3976","endLine":43,"endColumn":10,"suggestions":"4437"},{"ruleId":"3970","severity":1,"message":"3971","line":190,"column":44,"nodeType":"3972","messageId":"3973","endLine":190,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":198,"column":48,"nodeType":"3972","messageId":"3973","endLine":198,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":205,"column":52,"nodeType":"3972","messageId":"3973","endLine":205,"endColumn":54},{"ruleId":"4020","severity":1,"message":"4021","line":311,"column":49,"nodeType":"4022","messageId":"4023","endLine":314,"endColumn":50,"fix":"4438"},{"ruleId":"3970","severity":1,"message":"3971","line":326,"column":56,"nodeType":"3972","messageId":"3973","endLine":326,"endColumn":58},{"ruleId":"3963","severity":1,"message":"4439","line":354,"column":11,"nodeType":"3965","messageId":"3966","endLine":354,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4332","line":10,"column":7,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4440","line":28,"column":7,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":16},{"ruleId":"3974","severity":1,"message":"4160","line":35,"column":6,"nodeType":"3976","endLine":35,"endColumn":14,"suggestions":"4441"},{"ruleId":"4020","severity":1,"message":"4021","line":96,"column":27,"nodeType":"4022","messageId":"4023","endLine":99,"endColumn":28,"fix":"4442"},{"ruleId":"4020","severity":1,"message":"4021","line":109,"column":23,"nodeType":"4022","messageId":"4023","endLine":112,"endColumn":28,"fix":"4443"},{"ruleId":"3970","severity":1,"message":"3971","line":123,"column":41,"nodeType":"3972","messageId":"3973","endLine":123,"endColumn":43},{"ruleId":"4336","severity":1,"message":"4337","line":123,"column":46,"nodeType":"4338","messageId":"4339","endLine":123,"endColumn":48},{"ruleId":"4336","severity":1,"message":"4337","line":123,"column":64,"nodeType":"4338","messageId":"4339","endLine":123,"endColumn":66},{"ruleId":"4336","severity":1,"message":"4340","line":123,"column":64,"nodeType":"4338","messageId":"4339","endLine":123,"endColumn":66},{"ruleId":"3970","severity":1,"message":"3971","line":123,"column":81,"nodeType":"3972","messageId":"3973","endLine":123,"endColumn":83},{"ruleId":"4336","severity":1,"message":"4340","line":123,"column":86,"nodeType":"4338","messageId":"4339","endLine":123,"endColumn":88},{"ruleId":"3970","severity":1,"message":"3971","line":130,"column":39,"nodeType":"3972","messageId":"3973","endLine":130,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":133,"column":40,"nodeType":"3972","messageId":"3973","endLine":133,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":136,"column":42,"nodeType":"3972","messageId":"3973","endLine":136,"endColumn":44},{"ruleId":"3970","severity":1,"message":"3971","line":147,"column":44,"nodeType":"3972","messageId":"3973","endLine":147,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":175,"column":46,"nodeType":"3972","messageId":"3973","endLine":175,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4430","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3983","line":28,"column":9,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4431","line":31,"column":10,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4432","line":43,"column":6,"nodeType":"3976","endLine":43,"endColumn":8,"suggestions":"4444"},{"ruleId":"3970","severity":1,"message":"3971","line":139,"column":28,"nodeType":"3972","messageId":"3973","endLine":139,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":30,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":149,"column":32,"nodeType":"3972","messageId":"3973","endLine":149,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":26,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":204,"column":34,"nodeType":"3972","messageId":"3973","endLine":204,"endColumn":36},{"ruleId":"4336","severity":1,"message":"4434","line":207,"column":35,"nodeType":"3972","messageId":"4339","endLine":207,"endColumn":36},{"ruleId":"4336","severity":1,"message":"4434","line":207,"column":45,"nodeType":"3972","messageId":"4339","endLine":207,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4430","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":45},{"ruleId":"3963","severity":1,"message":"3999","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4025","line":22,"column":8,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4445","line":24,"column":10,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4431","line":33,"column":12,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":24},{"ruleId":"3974","severity":1,"message":"4432","line":65,"column":8,"nodeType":"3976","endLine":65,"endColumn":10,"suggestions":"4446"},{"ruleId":"3970","severity":1,"message":"3971","line":155,"column":44,"nodeType":"3972","messageId":"3973","endLine":155,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":160,"column":48,"nodeType":"3972","messageId":"3973","endLine":160,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":52,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":191,"column":40,"nodeType":"3972","messageId":"3973","endLine":191,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3991","line":194,"column":49,"nodeType":"3972","messageId":"3973","endLine":194,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":40,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":42},{"ruleId":"4336","severity":1,"message":"4434","line":224,"column":41,"nodeType":"3972","messageId":"4339","endLine":224,"endColumn":42},{"ruleId":"4336","severity":1,"message":"4434","line":224,"column":51,"nodeType":"3972","messageId":"4339","endLine":224,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":259,"column":41,"nodeType":"3972","messageId":"3973","endLine":259,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":259,"column":67,"nodeType":"3972","messageId":"3973","endLine":259,"endColumn":69},{"ruleId":"3970","severity":1,"message":"3971","line":259,"column":93,"nodeType":"3972","messageId":"3973","endLine":259,"endColumn":95},{"ruleId":"3970","severity":1,"message":"3971","line":323,"column":41,"nodeType":"3972","messageId":"3973","endLine":323,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":323,"column":100,"nodeType":"3972","messageId":"3973","endLine":323,"endColumn":102},{"ruleId":"4336","severity":1,"message":"4434","line":327,"column":46,"nodeType":"3972","messageId":"4339","endLine":327,"endColumn":47},{"ruleId":"4336","severity":1,"message":"4434","line":327,"column":56,"nodeType":"3972","messageId":"4339","endLine":327,"endColumn":59},{"ruleId":"3970","severity":1,"message":"3971","line":344,"column":57,"nodeType":"3972","messageId":"3973","endLine":344,"endColumn":59},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":50,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3991","line":75,"column":22,"nodeType":"3972","messageId":"3973","endLine":75,"endColumn":24},{"ruleId":"4016","severity":1,"message":"4017","line":104,"column":17,"nodeType":"4018","messageId":"4019","endLine":106,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4447","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3988","line":25,"column":10,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4374","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4448","line":34,"column":10,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4375","line":37,"column":20,"nodeType":"3965","messageId":"3966","endLine":37,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4376","line":38,"column":21,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4377","line":39,"column":24,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4379","line":40,"column":24,"nodeType":"3965","messageId":"3966","endLine":40,"endColumn":39},{"ruleId":"3974","severity":1,"message":"4449","line":56,"column":6,"nodeType":"3976","endLine":56,"endColumn":8,"suggestions":"4450"},{"ruleId":"3963","severity":1,"message":"4451","line":259,"column":9,"nodeType":"3965","messageId":"3966","endLine":259,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4452","line":44,"column":8,"nodeType":"3976","endLine":44,"endColumn":10,"suggestions":"4453"},{"ruleId":"3974","severity":1,"message":"4452","line":54,"column":6,"nodeType":"3976","endLine":54,"endColumn":8,"suggestions":"4454"},{"ruleId":"3974","severity":1,"message":"4452","line":44,"column":6,"nodeType":"3976","endLine":44,"endColumn":8,"suggestions":"4455"},{"ruleId":"3974","severity":1,"message":"4452","line":43,"column":6,"nodeType":"3976","endLine":43,"endColumn":8,"suggestions":"4456"},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4167","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3971","line":37,"column":46,"nodeType":"3972","messageId":"3973","endLine":37,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":40,"column":46,"nodeType":"3972","messageId":"3973","endLine":40,"endColumn":48},{"ruleId":"3963","severity":1,"message":"3985","line":22,"column":37,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":50,"column":40,"nodeType":"3972","messageId":"3973","endLine":50,"endColumn":42},{"ruleId":"3974","severity":1,"message":"4026","line":32,"column":6,"nodeType":"3976","endLine":32,"endColumn":8,"suggestions":"4457"},{"ruleId":"3970","severity":1,"message":"3971","line":96,"column":34,"nodeType":"3972","messageId":"3973","endLine":96,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":99,"column":34,"nodeType":"3972","messageId":"3973","endLine":99,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":102,"column":34,"nodeType":"3972","messageId":"3973","endLine":102,"endColumn":36},{"ruleId":"3974","severity":1,"message":"4278","line":19,"column":6,"nodeType":"3976","endLine":19,"endColumn":14,"suggestions":"4458"},{"ruleId":"3974","severity":1,"message":"4205","line":45,"column":8,"nodeType":"3976","endLine":45,"endColumn":10,"suggestions":"4459"},{"ruleId":"3963","severity":1,"message":"4460","line":63,"column":11,"nodeType":"3965","messageId":"3966","endLine":63,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4461","line":75,"column":7,"nodeType":"3965","messageId":"3966","endLine":75,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4124","line":6,"column":9,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4028","line":28,"column":6,"nodeType":"3976","endLine":28,"endColumn":10,"suggestions":"4462"},{"ruleId":"3963","severity":1,"message":"3998","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3983","line":33,"column":9,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4032","line":44,"column":11,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":23},{"ruleId":"3974","severity":1,"message":"4033","line":59,"column":6,"nodeType":"3976","endLine":59,"endColumn":8,"suggestions":"4463"},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4116","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4117","line":3,"column":15,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4118","line":3,"column":21,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4119","line":3,"column":30,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":38},{"ruleId":"3963","severity":1,"message":"4120","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4093","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4121","line":16,"column":12,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4122","line":16,"column":22,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4464","line":17,"column":11,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4465","line":26,"column":11,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":33,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":37},{"ruleId":"3963","severity":1,"message":"3992","line":7,"column":10,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3997","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":11},{"ruleId":"3963","severity":1,"message":"3998","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4152","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4188","line":25,"column":10,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":26},{"ruleId":"3974","severity":1,"message":"4179","line":34,"column":6,"nodeType":"3976","endLine":34,"endColumn":8,"suggestions":"4466"},{"ruleId":"3970","severity":1,"message":"3971","line":51,"column":39,"nodeType":"3972","messageId":"3973","endLine":51,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":51,"column":65,"nodeType":"3972","messageId":"3973","endLine":51,"endColumn":67},{"ruleId":"3970","severity":1,"message":"3971","line":169,"column":38,"nodeType":"3972","messageId":"3973","endLine":169,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":170,"column":37,"nodeType":"3972","messageId":"3973","endLine":170,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":171,"column":34,"nodeType":"3972","messageId":"3973","endLine":171,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":172,"column":38,"nodeType":"3972","messageId":"3973","endLine":172,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":173,"column":33,"nodeType":"3972","messageId":"3973","endLine":173,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":391,"column":47,"nodeType":"3972","messageId":"3973","endLine":391,"endColumn":49},{"ruleId":"3970","severity":1,"message":"3971","line":439,"column":44,"nodeType":"3972","messageId":"3973","endLine":439,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":488,"column":46,"nodeType":"3972","messageId":"3973","endLine":488,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":538,"column":46,"nodeType":"3972","messageId":"3973","endLine":538,"endColumn":48},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4036","line":18,"column":8,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":22,"column":11,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4039","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4040","line":26,"column":18,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4037","line":36,"column":8,"nodeType":"3976","endLine":36,"endColumn":10,"suggestions":"4467"},{"ruleId":"3970","severity":1,"message":"3971","line":103,"column":45,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":47},{"ruleId":"3963","severity":1,"message":"3999","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4036","line":14,"column":8,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":19,"column":9,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4170","line":26,"column":6,"nodeType":"3976","endLine":26,"endColumn":8,"suggestions":"4468"},{"ruleId":"3970","severity":1,"message":"3971","line":76,"column":29,"nodeType":"3972","messageId":"3973","endLine":76,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4044","line":18,"column":45,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":54},{"ruleId":"3963","severity":1,"message":"4152","line":11,"column":35,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4388","line":13,"column":11,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3991","line":41,"column":22,"nodeType":"3972","messageId":"3973","endLine":41,"endColumn":24},{"ruleId":"3970","severity":1,"message":"3971","line":90,"column":15,"nodeType":"3972","messageId":"3973","endLine":90,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":30,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":137,"column":33,"nodeType":"3972","messageId":"3973","endLine":137,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":159,"column":23,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":183,"column":18,"nodeType":"3972","messageId":"3973","endLine":183,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3971","line":207,"column":28,"nodeType":"3972","messageId":"3973","endLine":207,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":230,"column":26,"nodeType":"3972","messageId":"3973","endLine":230,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":253,"column":26,"nodeType":"3972","messageId":"3973","endLine":253,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":277,"column":20,"nodeType":"3972","messageId":"3973","endLine":277,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":300,"column":20,"nodeType":"3972","messageId":"3973","endLine":300,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":319,"column":16,"nodeType":"3972","messageId":"3973","endLine":319,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":338,"column":14,"nodeType":"3972","messageId":"3973","endLine":338,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":457,"column":26,"nodeType":"3972","messageId":"3973","endLine":457,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":471,"column":41,"nodeType":"3972","messageId":"3973","endLine":471,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":486,"column":34,"nodeType":"3972","messageId":"3973","endLine":486,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":501,"column":29,"nodeType":"3972","messageId":"3973","endLine":501,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":515,"column":39,"nodeType":"3972","messageId":"3973","endLine":515,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":528,"column":31,"nodeType":"3972","messageId":"3973","endLine":528,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":541,"column":31,"nodeType":"3972","messageId":"3973","endLine":541,"endColumn":33},{"ruleId":"3974","severity":1,"message":"4147","line":89,"column":6,"nodeType":"3976","endLine":89,"endColumn":8,"suggestions":"4469"},{"ruleId":"3970","severity":1,"message":"3971","line":104,"column":34,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":107,"column":34,"nodeType":"3972","messageId":"3973","endLine":107,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":110,"column":34,"nodeType":"3972","messageId":"3973","endLine":110,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4277","line":8,"column":8,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4191","line":20,"column":25,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3968","line":22,"column":9,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4470","line":24,"column":22,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4471","line":25,"column":5,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4472","line":25,"column":20,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":37},{"ruleId":"3963","severity":1,"message":"4473","line":25,"column":39,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4474","line":26,"column":15,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4006","line":26,"column":28,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4475","line":26,"column":42,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":55},{"ruleId":"3963","severity":1,"message":"4476","line":57,"column":9,"nodeType":"3965","messageId":"3966","endLine":57,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":90,"column":28,"nodeType":"3972","messageId":"3973","endLine":90,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":93,"column":37,"nodeType":"3972","messageId":"3973","endLine":93,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4000","line":8,"column":10,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4001","line":9,"column":13,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4002","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4477","line":16,"column":10,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4004","line":50,"column":7,"nodeType":"3965","messageId":"3966","endLine":50,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4145","line":55,"column":23,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4146","line":56,"column":5,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":28},{"ruleId":"3974","severity":1,"message":"4147","line":155,"column":6,"nodeType":"3976","endLine":155,"endColumn":8,"suggestions":"4478"},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3983","line":27,"column":9,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":28,"column":35,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4199","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4200","line":36,"column":10,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4201","line":36,"column":16,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4060","line":41,"column":10,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4202","line":41,"column":17,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4013","line":65,"column":6,"nodeType":"3976","endLine":65,"endColumn":8,"suggestions":"4479"},{"ruleId":"3970","severity":1,"message":"3971","line":126,"column":23,"nodeType":"3972","messageId":"3973","endLine":126,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":145,"column":19,"nodeType":"3972","messageId":"3973","endLine":145,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":147,"column":21,"nodeType":"3972","messageId":"3973","endLine":147,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":156,"column":25,"nodeType":"3972","messageId":"3973","endLine":156,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":157,"column":25,"nodeType":"3972","messageId":"3973","endLine":157,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":168,"column":31,"nodeType":"3972","messageId":"3973","endLine":168,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":168,"column":50,"nodeType":"3972","messageId":"3973","endLine":168,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":172,"column":29,"nodeType":"3972","messageId":"3973","endLine":172,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":172,"column":46,"nodeType":"3972","messageId":"3973","endLine":172,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3991","line":181,"column":33,"nodeType":"3972","messageId":"3973","endLine":181,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":209,"column":32,"nodeType":"3972","messageId":"3973","endLine":209,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":241,"column":28,"nodeType":"3972","messageId":"3973","endLine":241,"endColumn":30},{"ruleId":"4085","severity":1,"message":"4086","line":254,"column":45,"nodeType":"4087","messageId":"4088","endLine":254,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":263,"column":45,"nodeType":"4087","messageId":"4088","endLine":263,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":388,"column":32,"nodeType":"3972","messageId":"3973","endLine":388,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":404,"column":33,"nodeType":"3972","messageId":"3973","endLine":404,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":418,"column":33,"nodeType":"3972","messageId":"3973","endLine":418,"endColumn":35},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4042","line":5,"column":8,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4043","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4002","line":10,"column":8,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":26,"column":54,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":59},{"ruleId":"3963","severity":1,"message":"4060","line":28,"column":10,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4202","line":28,"column":17,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4123","line":2,"column":17,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3983","line":21,"column":9,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":62,"column":14,"nodeType":"3972","messageId":"3973","endLine":62,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4209","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4210","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4211","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":19,"column":3,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4214","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3988","line":23,"column":21,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4215","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4220","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4221","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4222","line":36,"column":12,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4223","line":36,"column":28,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":45},{"ruleId":"3974","severity":1,"message":"4216","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4480"},{"ruleId":"3963","severity":1,"message":"4225","line":57,"column":8,"nodeType":"3965","messageId":"3966","endLine":57,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":44,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":34,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":183,"column":34,"nodeType":"3972","messageId":"3973","endLine":183,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":203,"column":43,"nodeType":"3972","messageId":"3973","endLine":203,"endColumn":45},{"ruleId":"4020","severity":1,"message":"4021","line":204,"column":21,"nodeType":"4022","messageId":"4023","endLine":204,"endColumn":76,"fix":"4481"},{"ruleId":"3970","severity":1,"message":"3971","line":228,"column":40,"nodeType":"3972","messageId":"3973","endLine":228,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":230,"column":28,"nodeType":"3972","messageId":"3973","endLine":230,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":232,"column":26,"nodeType":"3972","messageId":"3973","endLine":232,"endColumn":28},{"ruleId":"4020","severity":1,"message":"4021","line":232,"column":36,"nodeType":"4022","messageId":"4023","endLine":232,"endColumn":78,"fix":"4482"},{"ruleId":"3963","severity":1,"message":"4483","line":246,"column":13,"nodeType":"3965","messageId":"3966","endLine":246,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4227","line":251,"column":13,"nodeType":"3965","messageId":"3966","endLine":251,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4484","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4176","line":25,"column":10,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":18},{"ruleId":"3974","severity":1,"message":"4147","line":119,"column":6,"nodeType":"3976","endLine":119,"endColumn":8,"suggestions":"4485"},{"ruleId":"3970","severity":1,"message":"3971","line":136,"column":34,"nodeType":"3972","messageId":"3973","endLine":136,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":139,"column":34,"nodeType":"3972","messageId":"3973","endLine":139,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":142,"column":34,"nodeType":"3972","messageId":"3973","endLine":142,"endColumn":36},{"ruleId":"3974","severity":1,"message":"4147","line":104,"column":8,"nodeType":"3976","endLine":104,"endColumn":10,"suggestions":"4486"},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":46,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":122,"column":46,"nodeType":"3972","messageId":"3973","endLine":122,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":125,"column":46,"nodeType":"3972","messageId":"3973","endLine":125,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":128,"column":46,"nodeType":"3972","messageId":"3973","endLine":128,"endColumn":48},{"ruleId":"3963","severity":1,"message":"3968","line":11,"column":9,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":16},{"ruleId":"3974","severity":1,"message":"3975","line":166,"column":6,"nodeType":"3976","endLine":166,"endColumn":16,"suggestions":"4487"},{"ruleId":"3963","severity":1,"message":"3983","line":29,"column":9,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":31,"column":35,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":91,"column":97,"nodeType":"3972","messageId":"3973","endLine":91,"endColumn":99},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4167","line":1,"column":38,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":53},{"ruleId":"3963","severity":1,"message":"4042","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4043","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":39,"column":46,"nodeType":"3972","messageId":"3973","endLine":39,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3971","line":42,"column":46,"nodeType":"3972","messageId":"3973","endLine":42,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4209","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3998","line":12,"column":3,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4210","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4211","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":19,"column":3,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4214","line":22,"column":10,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3988","line":23,"column":21,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4215","line":26,"column":10,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4220","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4222","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4223","line":35,"column":28,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":45},{"ruleId":"3963","severity":1,"message":"4221","line":36,"column":12,"nodeType":"3965","messageId":"3966","endLine":36,"endColumn":21},{"ruleId":"3974","severity":1,"message":"4216","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4488"},{"ruleId":"3963","severity":1,"message":"4225","line":57,"column":8,"nodeType":"3965","messageId":"3966","endLine":57,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":114,"column":44,"nodeType":"3972","messageId":"3973","endLine":114,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":34,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":183,"column":34,"nodeType":"3972","messageId":"3973","endLine":183,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":203,"column":43,"nodeType":"3972","messageId":"3973","endLine":203,"endColumn":45},{"ruleId":"4020","severity":1,"message":"4021","line":204,"column":21,"nodeType":"4022","messageId":"4023","endLine":204,"endColumn":76,"fix":"4489"},{"ruleId":"3970","severity":1,"message":"3971","line":231,"column":40,"nodeType":"3972","messageId":"3973","endLine":231,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":233,"column":28,"nodeType":"3972","messageId":"3973","endLine":233,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":235,"column":26,"nodeType":"3972","messageId":"3973","endLine":235,"endColumn":28},{"ruleId":"4020","severity":1,"message":"4021","line":235,"column":36,"nodeType":"4022","messageId":"4023","endLine":235,"endColumn":80,"fix":"4490"},{"ruleId":"3963","severity":1,"message":"4483","line":249,"column":13,"nodeType":"3965","messageId":"3966","endLine":249,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4227","line":254,"column":13,"nodeType":"3965","messageId":"3966","endLine":254,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":36,"column":37,"nodeType":"3972","messageId":"3973","endLine":36,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":44,"column":39,"nodeType":"3972","messageId":"3973","endLine":44,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":51,"column":41,"nodeType":"3972","messageId":"3973","endLine":51,"endColumn":43},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4277","line":10,"column":8,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":26,"column":35,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3974","severity":1,"message":"4160","line":38,"column":6,"nodeType":"3976","endLine":38,"endColumn":14,"suggestions":"4491"},{"ruleId":"4020","severity":1,"message":"4021","line":151,"column":27,"nodeType":"4022","messageId":"4023","endLine":154,"endColumn":28,"fix":"4492"},{"ruleId":"4020","severity":1,"message":"4021","line":164,"column":23,"nodeType":"4022","messageId":"4023","endLine":167,"endColumn":28,"fix":"4493"},{"ruleId":"3970","severity":1,"message":"3971","line":230,"column":42,"nodeType":"3972","messageId":"3973","endLine":230,"endColumn":44},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4494","line":9,"column":8,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4495","line":10,"column":8,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4290","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4496","line":14,"column":8,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4354","line":16,"column":8,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4251","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4314","line":21,"column":19,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4293","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4294","line":26,"column":17,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":23},{"ruleId":"3974","severity":1,"message":"4287","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4497"},{"ruleId":"4016","severity":1,"message":"4017","line":241,"column":21,"nodeType":"4018","messageId":"4019","endLine":241,"endColumn":31},{"ruleId":"3963","severity":1,"message":"3998","line":4,"column":38,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":4,"column":49,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":4,"column":54,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":14,"column":12,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4314","line":14,"column":19,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4293","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4294","line":19,"column":17,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4264","line":41,"column":11,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4287","line":49,"column":8,"nodeType":"3976","endLine":49,"endColumn":10,"suggestions":"4498"},{"ruleId":"4016","severity":1,"message":"4017","line":228,"column":21,"nodeType":"4018","messageId":"4019","endLine":228,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4124","line":6,"column":9,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":15},{"ruleId":"3963","severity":1,"message":"3998","line":4,"column":38,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":4,"column":49,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":4,"column":54,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":18,"column":12,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4314","line":18,"column":19,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4315","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4316","line":21,"column":28,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":45},{"ruleId":"3974","severity":1,"message":"4287","line":44,"column":8,"nodeType":"3976","endLine":44,"endColumn":10,"suggestions":"4499"},{"ruleId":"3970","severity":1,"message":"3971","line":182,"column":35,"nodeType":"3972","messageId":"3973","endLine":182,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":202,"column":34,"nodeType":"3972","messageId":"3973","endLine":202,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":204,"column":34,"nodeType":"3972","messageId":"3973","endLine":204,"endColumn":36},{"ruleId":"4020","severity":1,"message":"4021","line":221,"column":25,"nodeType":"4022","messageId":"4023","endLine":224,"endColumn":20,"fix":"4500"},{"ruleId":"3970","severity":1,"message":"3971","line":227,"column":44,"nodeType":"3972","messageId":"3973","endLine":227,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":239,"column":39,"nodeType":"3972","messageId":"3973","endLine":239,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3991","line":265,"column":29,"nodeType":"3972","messageId":"3973","endLine":265,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3991","line":265,"column":51,"nodeType":"3972","messageId":"3973","endLine":265,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3991","line":269,"column":32,"nodeType":"3972","messageId":"3973","endLine":269,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3991","line":269,"column":54,"nodeType":"3972","messageId":"3973","endLine":269,"endColumn":56},{"ruleId":"3970","severity":1,"message":"3991","line":269,"column":75,"nodeType":"3972","messageId":"3973","endLine":269,"endColumn":77},{"ruleId":"3970","severity":1,"message":"3991","line":274,"column":33,"nodeType":"3972","messageId":"3973","endLine":274,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3991","line":274,"column":55,"nodeType":"3972","messageId":"3973","endLine":274,"endColumn":57},{"ruleId":"4016","severity":1,"message":"4017","line":320,"column":21,"nodeType":"4018","messageId":"4019","endLine":320,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4205","line":46,"column":8,"nodeType":"3976","endLine":46,"endColumn":10,"suggestions":"4501"},{"ruleId":"3963","severity":1,"message":"4460","line":63,"column":11,"nodeType":"3965","messageId":"3966","endLine":63,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4461","line":75,"column":7,"nodeType":"3965","messageId":"3966","endLine":75,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3979","line":10,"column":22,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4502","line":16,"column":11,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4131","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":23},{"ruleId":"3963","severity":1,"message":"4132","line":21,"column":25,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4133","line":23,"column":12,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4098","line":30,"column":10,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4134","line":32,"column":10,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4062","line":33,"column":10,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4135","line":45,"column":7,"nodeType":"3965","messageId":"3966","endLine":45,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4136","line":46,"column":7,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4137","line":47,"column":7,"nodeType":"3965","messageId":"3966","endLine":47,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4044","line":50,"column":45,"nodeType":"3965","messageId":"3966","endLine":50,"endColumn":54},{"ruleId":"3963","severity":1,"message":"4138","line":53,"column":8,"nodeType":"3965","messageId":"3966","endLine":53,"endColumn":16},{"ruleId":"3974","severity":1,"message":"4139","line":86,"column":6,"nodeType":"3976","endLine":86,"endColumn":8,"suggestions":"4503"},{"ruleId":"3963","severity":1,"message":"4141","line":91,"column":11,"nodeType":"3965","messageId":"3966","endLine":91,"endColumn":13},{"ruleId":"3974","severity":1,"message":"4142","line":102,"column":6,"nodeType":"3976","endLine":102,"endColumn":13,"suggestions":"4504"},{"ruleId":"3963","severity":1,"message":"4505","line":148,"column":11,"nodeType":"3965","messageId":"3966","endLine":148,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":263,"column":19,"nodeType":"4087","messageId":"4088","endLine":263,"endColumn":21},{"ruleId":"4085","severity":1,"message":"4086","line":309,"column":17,"nodeType":"4087","messageId":"4088","endLine":309,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":318,"column":17,"nodeType":"4087","messageId":"4088","endLine":318,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":325,"column":15,"nodeType":"4087","messageId":"4088","endLine":325,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4506","line":333,"column":9,"nodeType":"3965","messageId":"3966","endLine":333,"endColumn":24},{"ruleId":"4085","severity":1,"message":"4086","line":335,"column":15,"nodeType":"4087","messageId":"4088","endLine":335,"endColumn":17},{"ruleId":"3970","severity":1,"message":"3971","line":437,"column":49,"nodeType":"3972","messageId":"3973","endLine":437,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":444,"column":47,"nodeType":"3972","messageId":"3973","endLine":444,"endColumn":49},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":10},{"ruleId":"3963","severity":1,"message":"4036","line":18,"column":8,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":23,"column":11,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4039","line":27,"column":12,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4040","line":27,"column":18,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4037","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4507"},{"ruleId":"3970","severity":1,"message":"3971","line":104,"column":45,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4000","line":8,"column":10,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4001","line":9,"column":13,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4002","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3983","line":20,"column":9,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4004","line":49,"column":7,"nodeType":"3965","messageId":"3966","endLine":49,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3998","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":10},{"ruleId":"3963","severity":1,"message":"3983","line":33,"column":9,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4032","line":44,"column":11,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":23},{"ruleId":"3974","severity":1,"message":"4033","line":59,"column":6,"nodeType":"3976","endLine":59,"endColumn":8,"suggestions":"4508"},{"ruleId":"3974","severity":1,"message":"4509","line":63,"column":6,"nodeType":"3976","endLine":63,"endColumn":12,"suggestions":"4510"},{"ruleId":"4089","severity":1,"message":"4090","line":92,"column":5,"nodeType":"4091","messageId":"4092","endLine":96,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3991","line":93,"column":18,"nodeType":"3972","messageId":"3973","endLine":93,"endColumn":20},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3998","line":11,"column":3,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4048","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4028","line":28,"column":6,"nodeType":"3976","endLine":28,"endColumn":10,"suggestions":"4511"},{"ruleId":"3963","severity":1,"message":"3984","line":2,"column":27,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3983","line":22,"column":9,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":24,"column":35,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":40},{"ruleId":"3970","severity":1,"message":"3971","line":61,"column":14,"nodeType":"3972","messageId":"3973","endLine":61,"endColumn":16},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4116","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4117","line":3,"column":15,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4118","line":3,"column":21,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":28},{"ruleId":"3963","severity":1,"message":"4119","line":3,"column":30,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":38},{"ruleId":"3963","severity":1,"message":"4120","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4093","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":7},{"ruleId":"3963","severity":1,"message":"4094","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":13},{"ruleId":"3963","severity":1,"message":"3998","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4121","line":16,"column":12,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4122","line":16,"column":22,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4464","line":17,"column":11,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4465","line":26,"column":11,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4248","line":23,"column":8,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4209","line":24,"column":8,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":19},{"ruleId":"3963","severity":1,"message":"3983","line":32,"column":11,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":33,"column":13,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":35,"column":11,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":39,"column":12,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":57,"column":8,"nodeType":"3976","endLine":57,"endColumn":10,"suggestions":"4512"},{"ruleId":"3970","severity":1,"message":"3991","line":103,"column":24,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":103,"column":45,"nodeType":"3972","messageId":"3973","endLine":103,"endColumn":47},{"ruleId":"4020","severity":1,"message":"4021","line":512,"column":53,"nodeType":"4022","messageId":"4023","endLine":512,"endColumn":93,"fix":"4513"},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4209","line":23,"column":8,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4270","line":24,"column":8,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":22},{"ruleId":"3963","severity":1,"message":"3983","line":32,"column":11,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":33,"column":13,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":35,"column":11,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":39,"column":12,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":62,"column":8,"nodeType":"3976","endLine":62,"endColumn":10,"suggestions":"4514"},{"ruleId":"3970","severity":1,"message":"3991","line":104,"column":24,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":104,"column":45,"nodeType":"3972","messageId":"3973","endLine":104,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":222,"column":38,"nodeType":"3972","messageId":"3973","endLine":222,"endColumn":40},{"ruleId":"4020","severity":1,"message":"4021","line":503,"column":53,"nodeType":"4022","messageId":"4023","endLine":503,"endColumn":93,"fix":"4515"},{"ruleId":"3963","severity":1,"message":"4030","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":10,"column":5,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":11,"column":5,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4248","line":23,"column":8,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3983","line":32,"column":11,"nodeType":"3965","messageId":"3966","endLine":32,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4249","line":33,"column":13,"nodeType":"3965","messageId":"3966","endLine":33,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4250","line":35,"column":11,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4251","line":39,"column":12,"nodeType":"3965","messageId":"3966","endLine":39,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4252","line":56,"column":8,"nodeType":"3976","endLine":56,"endColumn":10,"suggestions":"4516"},{"ruleId":"3970","severity":1,"message":"3971","line":317,"column":49,"nodeType":"3972","messageId":"3973","endLine":317,"endColumn":51},{"ruleId":"3970","severity":1,"message":"3971","line":346,"column":50,"nodeType":"3972","messageId":"3973","endLine":346,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4152","line":11,"column":27,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":11,"column":35,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3968","line":17,"column":9,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":83,"column":44,"nodeType":"3972","messageId":"3973","endLine":83,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":95,"column":24,"nodeType":"3972","messageId":"3973","endLine":95,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":106,"column":34,"nodeType":"3972","messageId":"3973","endLine":106,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":119,"column":31,"nodeType":"3972","messageId":"3973","endLine":119,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4371","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4372","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4375","line":41,"column":20,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4376","line":42,"column":21,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4377","line":43,"column":24,"nodeType":"3965","messageId":"3966","endLine":43,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4379","line":44,"column":24,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4380","line":53,"column":23,"nodeType":"3965","messageId":"3966","endLine":53,"endColumn":37},{"ruleId":"3974","severity":1,"message":"4449","line":59,"column":6,"nodeType":"3976","endLine":59,"endColumn":8,"suggestions":"4517"},{"ruleId":"4078","severity":1,"message":"4383","line":379,"column":17,"nodeType":"3965","messageId":"4080","endLine":379,"endColumn":20},{"ruleId":"4085","severity":1,"message":"4106","line":393,"column":26,"nodeType":"4087","messageId":"4088","endLine":393,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":394,"column":21,"nodeType":"3972","messageId":"3973","endLine":394,"endColumn":23},{"ruleId":"4078","severity":1,"message":"4384","line":402,"column":13,"nodeType":"3965","messageId":"4080","endLine":402,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4310","line":2,"column":19,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":32},{"ruleId":"3963","severity":1,"message":"3998","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"3999","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4311","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4199","line":37,"column":10,"nodeType":"3965","messageId":"3966","endLine":37,"endColumn":15},{"ruleId":"3963","severity":1,"message":"4202","line":41,"column":17,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":25},{"ruleId":"3974","severity":1,"message":"4312","line":71,"column":6,"nodeType":"3976","endLine":71,"endColumn":8,"suggestions":"4518"},{"ruleId":"3970","severity":1,"message":"3971","line":94,"column":23,"nodeType":"3972","messageId":"3973","endLine":94,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":116,"column":19,"nodeType":"3972","messageId":"3973","endLine":116,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":118,"column":21,"nodeType":"3972","messageId":"3973","endLine":118,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":126,"column":25,"nodeType":"3972","messageId":"3973","endLine":126,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":127,"column":25,"nodeType":"3972","messageId":"3973","endLine":127,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":31,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":144,"column":50,"nodeType":"3972","messageId":"3973","endLine":144,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":149,"column":29,"nodeType":"3972","messageId":"3973","endLine":149,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":149,"column":46,"nodeType":"3972","messageId":"3973","endLine":149,"endColumn":48},{"ruleId":"3970","severity":1,"message":"3991","line":159,"column":33,"nodeType":"3972","messageId":"3973","endLine":159,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":186,"column":32,"nodeType":"3972","messageId":"3973","endLine":186,"endColumn":34},{"ruleId":"4085","severity":1,"message":"4086","line":220,"column":45,"nodeType":"4087","messageId":"4088","endLine":220,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":230,"column":45,"nodeType":"4087","messageId":"4088","endLine":230,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":249,"column":28,"nodeType":"3972","messageId":"3973","endLine":249,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":366,"column":32,"nodeType":"3972","messageId":"3973","endLine":366,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":381,"column":33,"nodeType":"3972","messageId":"3973","endLine":381,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3971","line":394,"column":33,"nodeType":"3972","messageId":"3973","endLine":394,"endColumn":35},{"ruleId":"3963","severity":1,"message":"4519","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4036","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4520","line":12,"column":5,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4521","line":13,"column":5,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":20},{"ruleId":"4390","severity":1,"message":"4391","line":117,"column":153,"nodeType":"3972","messageId":"4392","endLine":117,"endColumn":154},{"ruleId":"4390","severity":1,"message":"4391","line":117,"column":156,"nodeType":"3972","messageId":"4392","endLine":117,"endColumn":157},{"ruleId":"4154","severity":1,"message":"4155","line":118,"column":38,"nodeType":"4156","messageId":"4157","endLine":118,"endColumn":39,"fix":"4522"},{"ruleId":"4085","severity":1,"message":"4086","line":180,"column":47,"nodeType":"4087","messageId":"4088","endLine":180,"endColumn":49},{"ruleId":"4085","severity":1,"message":"4086","line":227,"column":33,"nodeType":"4087","messageId":"4088","endLine":227,"endColumn":35},{"ruleId":"4085","severity":1,"message":"4086","line":244,"column":33,"nodeType":"4087","messageId":"4088","endLine":244,"endColumn":35},{"ruleId":"4085","severity":1,"message":"4086","line":264,"column":47,"nodeType":"4087","messageId":"4088","endLine":264,"endColumn":49},{"ruleId":"4085","severity":1,"message":"4086","line":296,"column":29,"nodeType":"4087","messageId":"4088","endLine":296,"endColumn":31},{"ruleId":"4085","severity":1,"message":"4086","line":309,"column":29,"nodeType":"4087","messageId":"4088","endLine":309,"endColumn":31},{"ruleId":"4394","severity":1,"message":"4395","line":394,"column":7,"nodeType":"4396","messageId":"3973","endLine":394,"endColumn":11,"fix":"4523"},{"ruleId":"4085","severity":1,"message":"4086","line":404,"column":45,"nodeType":"4087","messageId":"4088","endLine":404,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":420,"column":32,"nodeType":"3972","messageId":"3973","endLine":420,"endColumn":34},{"ruleId":"4078","severity":1,"message":"4398","line":470,"column":10,"nodeType":"3965","messageId":"4080","endLine":470,"endColumn":24},{"ruleId":"4078","severity":1,"message":"4398","line":477,"column":9,"nodeType":"3965","messageId":"4080","endLine":477,"endColumn":23},{"ruleId":"4085","severity":1,"message":"4086","line":528,"column":21,"nodeType":"4087","messageId":"4088","endLine":528,"endColumn":23},{"ruleId":"4524","severity":1,"message":"4525","line":589,"column":11,"nodeType":"4156","messageId":"4526","endLine":589,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":18,"column":12,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4286","line":22,"column":11,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4287","line":32,"column":8,"nodeType":"3976","endLine":32,"endColumn":10,"suggestions":"4527"},{"ruleId":"3970","severity":1,"message":"3971","line":182,"column":44,"nodeType":"3972","messageId":"3973","endLine":182,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":243,"column":50,"nodeType":"3972","messageId":"3973","endLine":243,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":254,"column":53,"nodeType":"3972","messageId":"3973","endLine":254,"endColumn":55},{"ruleId":"4020","severity":1,"message":"4021","line":270,"column":37,"nodeType":"4022","messageId":"4023","endLine":273,"endColumn":38,"fix":"4528"},{"ruleId":"3970","severity":1,"message":"3971","line":285,"column":48,"nodeType":"3972","messageId":"3973","endLine":285,"endColumn":50},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":5,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":5,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":5,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":8},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":5,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":10},{"ruleId":"3974","severity":1,"message":"4255","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4529"},{"ruleId":"3970","severity":1,"message":"3971","line":145,"column":44,"nodeType":"3972","messageId":"3973","endLine":145,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":151,"column":48,"nodeType":"3972","messageId":"3973","endLine":151,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":156,"column":52,"nodeType":"3972","messageId":"3973","endLine":156,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":178,"column":37,"nodeType":"3972","messageId":"3973","endLine":178,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":189,"column":35,"nodeType":"3972","messageId":"3973","endLine":189,"endColumn":37},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":21,"column":12,"nodeType":"3965","messageId":"3966","endLine":21,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4287","line":42,"column":8,"nodeType":"3976","endLine":42,"endColumn":10,"suggestions":"4530"},{"ruleId":"3970","severity":1,"message":"3971","line":191,"column":44,"nodeType":"3972","messageId":"3973","endLine":191,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":199,"column":48,"nodeType":"3972","messageId":"3973","endLine":199,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":203,"column":52,"nodeType":"3972","messageId":"3973","endLine":203,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":264,"column":50,"nodeType":"3972","messageId":"3973","endLine":264,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":275,"column":53,"nodeType":"3972","messageId":"3973","endLine":275,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3971","line":288,"column":72,"nodeType":"3972","messageId":"3973","endLine":288,"endColumn":74},{"ruleId":"4020","severity":1,"message":"4021","line":291,"column":37,"nodeType":"4022","messageId":"4023","endLine":294,"endColumn":38,"fix":"4531"},{"ruleId":"4089","severity":1,"message":"4129","line":399,"column":1,"nodeType":"4091","messageId":"4130","endLine":409,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4532","line":16,"column":8,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":29},{"ruleId":"3963","severity":1,"message":"3968","line":25,"column":9,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":28,"column":35,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4301","line":29,"column":19,"nodeType":"3965","messageId":"3966","endLine":29,"endColumn":27},{"ruleId":"3963","severity":1,"message":"4251","line":30,"column":10,"nodeType":"3965","messageId":"3966","endLine":30,"endColumn":15},{"ruleId":"3974","severity":1,"message":"4179","line":71,"column":6,"nodeType":"3976","endLine":71,"endColumn":8,"suggestions":"4533"},{"ruleId":"3970","severity":1,"message":"3991","line":89,"column":23,"nodeType":"3972","messageId":"3973","endLine":89,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":30,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":278,"column":40,"nodeType":"3972","messageId":"3973","endLine":278,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":295,"column":31,"nodeType":"3972","messageId":"3973","endLine":295,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":326,"column":28,"nodeType":"3972","messageId":"3973","endLine":326,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":345,"column":28,"nodeType":"3972","messageId":"3973","endLine":345,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":355,"column":37,"nodeType":"3972","messageId":"3973","endLine":355,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":355,"column":72,"nodeType":"3972","messageId":"3973","endLine":355,"endColumn":74},{"ruleId":"3970","severity":1,"message":"3991","line":355,"column":107,"nodeType":"3972","messageId":"3973","endLine":355,"endColumn":109},{"ruleId":"3970","severity":1,"message":"3971","line":367,"column":37,"nodeType":"3972","messageId":"3973","endLine":367,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":367,"column":72,"nodeType":"3972","messageId":"3973","endLine":367,"endColumn":74},{"ruleId":"3970","severity":1,"message":"3971","line":367,"column":111,"nodeType":"3972","messageId":"3973","endLine":367,"endColumn":113},{"ruleId":"3970","severity":1,"message":"3971","line":379,"column":24,"nodeType":"3972","messageId":"3973","endLine":379,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3971","line":379,"column":59,"nodeType":"3972","messageId":"3973","endLine":379,"endColumn":61},{"ruleId":"3970","severity":1,"message":"3971","line":379,"column":98,"nodeType":"3972","messageId":"3973","endLine":379,"endColumn":100},{"ruleId":"3970","severity":1,"message":"3971","line":379,"column":136,"nodeType":"3972","messageId":"3973","endLine":379,"endColumn":138},{"ruleId":"3970","severity":1,"message":"3991","line":450,"column":24,"nodeType":"3972","messageId":"3973","endLine":450,"endColumn":26},{"ruleId":"3970","severity":1,"message":"3991","line":450,"column":45,"nodeType":"3972","messageId":"3973","endLine":450,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4303","line":462,"column":11,"nodeType":"3965","messageId":"3966","endLine":462,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4303","line":479,"column":7,"nodeType":"3965","messageId":"3966","endLine":479,"endColumn":10},{"ruleId":"3970","severity":1,"message":"3971","line":629,"column":22,"nodeType":"3972","messageId":"3973","endLine":629,"endColumn":24},{"ruleId":"3963","severity":1,"message":"3968","line":19,"column":11,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4152","line":22,"column":37,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4301","line":23,"column":21,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4251","line":24,"column":12,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":26,"column":12,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4304","line":26,"column":16,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4305","line":34,"column":12,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4306","line":34,"column":18,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4263","line":40,"column":12,"nodeType":"3965","messageId":"3966","endLine":40,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4303","line":56,"column":15,"nodeType":"3965","messageId":"3966","endLine":56,"endColumn":18},{"ruleId":"3974","severity":1,"message":"4179","line":69,"column":8,"nodeType":"3976","endLine":69,"endColumn":10,"suggestions":"4534"},{"ruleId":"3963","severity":1,"message":"4409","line":131,"column":11,"nodeType":"3965","messageId":"3966","endLine":131,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":274,"column":48,"nodeType":"3972","messageId":"3973","endLine":274,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":291,"column":37,"nodeType":"3972","messageId":"3973","endLine":291,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":322,"column":34,"nodeType":"3972","messageId":"3973","endLine":322,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":341,"column":34,"nodeType":"3972","messageId":"3973","endLine":341,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":30,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":65,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":67},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":104,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":106},{"ruleId":"3970","severity":1,"message":"3971","line":352,"column":142,"nodeType":"3972","messageId":"3973","endLine":352,"endColumn":144},{"ruleId":"3963","severity":1,"message":"3968","line":23,"column":11,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4152","line":26,"column":37,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4301","line":27,"column":21,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":29},{"ruleId":"3963","severity":1,"message":"4251","line":28,"column":12,"nodeType":"3965","messageId":"3966","endLine":28,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4535","line":31,"column":12,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4536","line":31,"column":21,"nodeType":"3965","messageId":"3966","endLine":31,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4308","line":35,"column":12,"nodeType":"3965","messageId":"3966","endLine":35,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4305","line":38,"column":12,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4306","line":38,"column":18,"nodeType":"3965","messageId":"3966","endLine":38,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4303","line":60,"column":11,"nodeType":"3965","messageId":"3966","endLine":60,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4179","line":78,"column":8,"nodeType":"3976","endLine":78,"endColumn":10,"suggestions":"4537"},{"ruleId":"3970","severity":1,"message":"3991","line":96,"column":29,"nodeType":"3972","messageId":"3973","endLine":96,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":276,"column":48,"nodeType":"3972","messageId":"3973","endLine":276,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":293,"column":37,"nodeType":"3972","messageId":"3973","endLine":293,"endColumn":39},{"ruleId":"3970","severity":1,"message":"3971","line":324,"column":34,"nodeType":"3972","messageId":"3973","endLine":324,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":343,"column":34,"nodeType":"3972","messageId":"3973","endLine":343,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":353,"column":43,"nodeType":"3972","messageId":"3973","endLine":353,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3971","line":353,"column":78,"nodeType":"3972","messageId":"3973","endLine":353,"endColumn":80},{"ruleId":"3970","severity":1,"message":"3991","line":353,"column":113,"nodeType":"3972","messageId":"3973","endLine":353,"endColumn":115},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":43,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":45},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":78,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":80},{"ruleId":"3970","severity":1,"message":"3971","line":365,"column":117,"nodeType":"3972","messageId":"3973","endLine":365,"endColumn":119},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4249","line":20,"column":12,"nodeType":"3965","messageId":"3966","endLine":20,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4286","line":23,"column":11,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":22},{"ruleId":"3974","severity":1,"message":"4287","line":37,"column":8,"nodeType":"3976","endLine":37,"endColumn":10,"suggestions":"4538"},{"ruleId":"3970","severity":1,"message":"3971","line":187,"column":44,"nodeType":"3972","messageId":"3973","endLine":187,"endColumn":46},{"ruleId":"4020","severity":1,"message":"4021","line":253,"column":37,"nodeType":"4022","messageId":"4023","endLine":256,"endColumn":38,"fix":"4539"},{"ruleId":"3970","severity":1,"message":"3971","line":296,"column":48,"nodeType":"3972","messageId":"3973","endLine":296,"endColumn":50},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4251","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":17},{"ruleId":"3974","severity":1,"message":"4287","line":38,"column":8,"nodeType":"3976","endLine":38,"endColumn":10,"suggestions":"4540"},{"ruleId":"3970","severity":1,"message":"3971","line":188,"column":44,"nodeType":"3972","messageId":"3973","endLine":188,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":194,"column":48,"nodeType":"3972","messageId":"3973","endLine":194,"endColumn":50},{"ruleId":"3970","severity":1,"message":"3971","line":199,"column":52,"nodeType":"3972","messageId":"3973","endLine":199,"endColumn":54},{"ruleId":"3970","severity":1,"message":"3971","line":262,"column":50,"nodeType":"3972","messageId":"3973","endLine":262,"endColumn":52},{"ruleId":"3970","severity":1,"message":"3971","line":273,"column":53,"nodeType":"3972","messageId":"3973","endLine":273,"endColumn":55},{"ruleId":"3970","severity":1,"message":"3971","line":286,"column":72,"nodeType":"3972","messageId":"3973","endLine":286,"endColumn":74},{"ruleId":"4020","severity":1,"message":"4021","line":289,"column":37,"nodeType":"4022","messageId":"4023","endLine":292,"endColumn":38,"fix":"4541"},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4255","line":27,"column":6,"nodeType":"3976","endLine":27,"endColumn":8,"suggestions":"4542"},{"ruleId":"3970","severity":1,"message":"3971","line":135,"column":28,"nodeType":"3972","messageId":"3973","endLine":135,"endColumn":30},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4255","line":29,"column":6,"nodeType":"3976","endLine":29,"endColumn":8,"suggestions":"4543"},{"ruleId":"3970","severity":1,"message":"3971","line":137,"column":28,"nodeType":"3972","messageId":"3973","endLine":137,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":142,"column":30,"nodeType":"3972","messageId":"3973","endLine":142,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":147,"column":32,"nodeType":"3972","messageId":"3973","endLine":147,"endColumn":34},{"ruleId":"3963","severity":1,"message":"3998","line":6,"column":3,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4046","line":7,"column":3,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":6},{"ruleId":"3963","severity":1,"message":"4047","line":8,"column":3,"nodeType":"3965","messageId":"3966","endLine":8,"endColumn":6},{"ruleId":"3963","severity":1,"message":"3999","line":9,"column":3,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":8},{"ruleId":"3974","severity":1,"message":"4255","line":34,"column":6,"nodeType":"3976","endLine":34,"endColumn":8,"suggestions":"4544"},{"ruleId":"3970","severity":1,"message":"3971","line":142,"column":28,"nodeType":"3972","messageId":"3973","endLine":142,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":147,"column":30,"nodeType":"3972","messageId":"3973","endLine":147,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":152,"column":32,"nodeType":"3972","messageId":"3973","endLine":152,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":174,"column":31,"nodeType":"3972","messageId":"3973","endLine":174,"endColumn":33},{"ruleId":"3970","severity":1,"message":"3971","line":185,"column":29,"nodeType":"3972","messageId":"3973","endLine":185,"endColumn":31},{"ruleId":"3974","severity":1,"message":"4268","line":42,"column":6,"nodeType":"3976","endLine":42,"endColumn":8,"suggestions":"4545"},{"ruleId":"3963","severity":1,"message":"4030","line":2,"column":8,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3998","line":5,"column":38,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":47},{"ruleId":"3963","severity":1,"message":"4046","line":5,"column":49,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":52},{"ruleId":"3963","severity":1,"message":"4047","line":5,"column":54,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":57},{"ruleId":"3963","severity":1,"message":"4494","line":9,"column":8,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4495","line":10,"column":8,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4290","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":26},{"ruleId":"3963","severity":1,"message":"4251","line":23,"column":12,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4314","line":23,"column":19,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":27},{"ruleId":"3974","severity":1,"message":"4287","line":54,"column":8,"nodeType":"3976","endLine":54,"endColumn":10,"suggestions":"4546"},{"ruleId":"3970","severity":1,"message":"3971","line":193,"column":35,"nodeType":"3972","messageId":"3973","endLine":193,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":214,"column":34,"nodeType":"3972","messageId":"3973","endLine":214,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":216,"column":34,"nodeType":"3972","messageId":"3973","endLine":216,"endColumn":36},{"ruleId":"4020","severity":1,"message":"4021","line":232,"column":25,"nodeType":"4022","messageId":"4023","endLine":235,"endColumn":20,"fix":"4547"},{"ruleId":"3970","severity":1,"message":"3971","line":238,"column":44,"nodeType":"3972","messageId":"3973","endLine":238,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":250,"column":40,"nodeType":"3972","messageId":"3973","endLine":250,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3991","line":276,"column":29,"nodeType":"3972","messageId":"3973","endLine":276,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3991","line":276,"column":51,"nodeType":"3972","messageId":"3973","endLine":276,"endColumn":53},{"ruleId":"3970","severity":1,"message":"3991","line":280,"column":32,"nodeType":"3972","messageId":"3973","endLine":280,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3991","line":280,"column":54,"nodeType":"3972","messageId":"3973","endLine":280,"endColumn":56},{"ruleId":"3970","severity":1,"message":"3991","line":280,"column":75,"nodeType":"3972","messageId":"3973","endLine":280,"endColumn":77},{"ruleId":"3970","severity":1,"message":"3991","line":285,"column":33,"nodeType":"3972","messageId":"3973","endLine":285,"endColumn":35},{"ruleId":"3970","severity":1,"message":"3991","line":285,"column":55,"nodeType":"3972","messageId":"3973","endLine":285,"endColumn":57},{"ruleId":"4016","severity":1,"message":"4017","line":339,"column":21,"nodeType":"4018","messageId":"4019","endLine":339,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":63,"column":32,"nodeType":"3972","messageId":"3973","endLine":63,"endColumn":34},{"ruleId":"3963","severity":1,"message":"4323","line":19,"column":12,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":59,"column":24,"nodeType":"3972","messageId":"3973","endLine":59,"endColumn":26},{"ruleId":"3974","severity":1,"message":"4325","line":80,"column":6,"nodeType":"3976","endLine":80,"endColumn":24,"suggestions":"4548"},{"ruleId":"3963","severity":1,"message":"4044","line":81,"column":45,"nodeType":"3965","messageId":"3966","endLine":81,"endColumn":54},{"ruleId":"3963","severity":1,"message":"3985","line":81,"column":56,"nodeType":"3965","messageId":"3966","endLine":81,"endColumn":61},{"ruleId":"4085","severity":1,"message":"4086","line":89,"column":35,"nodeType":"4087","messageId":"4088","endLine":89,"endColumn":37},{"ruleId":"3970","severity":1,"message":"3971","line":173,"column":27,"nodeType":"3972","messageId":"3973","endLine":173,"endColumn":29},{"ruleId":"4085","severity":1,"message":"4086","line":274,"column":21,"nodeType":"4087","messageId":"4088","endLine":274,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":276,"column":14,"nodeType":"3972","messageId":"3973","endLine":276,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3968","line":17,"column":9,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4152","line":11,"column":27,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3985","line":11,"column":35,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4277","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":14},{"ruleId":"3974","severity":1,"message":"4278","line":21,"column":6,"nodeType":"3976","endLine":21,"endColumn":14,"suggestions":"4549"},{"ruleId":"3970","severity":1,"message":"3991","line":25,"column":14,"nodeType":"3972","messageId":"3973","endLine":25,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":53,"column":41,"nodeType":"3972","messageId":"3973","endLine":53,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3971","line":59,"column":32,"nodeType":"3972","messageId":"3973","endLine":59,"endColumn":34},{"ruleId":"3963","severity":1,"message":"4152","line":10,"column":35,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":41},{"ruleId":"3963","severity":1,"message":"4275","line":26,"column":5,"nodeType":"3965","messageId":"3966","endLine":26,"endColumn":15},{"ruleId":"3970","severity":1,"message":"3991","line":45,"column":23,"nodeType":"3972","messageId":"3973","endLine":45,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":94,"column":18,"nodeType":"3972","messageId":"3973","endLine":94,"endColumn":20},{"ruleId":"3970","severity":1,"message":"3971","line":112,"column":30,"nodeType":"3972","messageId":"3973","endLine":112,"endColumn":32},{"ruleId":"3970","severity":1,"message":"3971","line":131,"column":25,"nodeType":"3972","messageId":"3973","endLine":131,"endColumn":27},{"ruleId":"3970","severity":1,"message":"3971","line":149,"column":23,"nodeType":"3972","messageId":"3973","endLine":149,"endColumn":25},{"ruleId":"3970","severity":1,"message":"3971","line":165,"column":28,"nodeType":"3972","messageId":"3973","endLine":165,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":184,"column":21,"nodeType":"3972","messageId":"3973","endLine":184,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":203,"column":28,"nodeType":"3972","messageId":"3973","endLine":203,"endColumn":30},{"ruleId":"3970","severity":1,"message":"3971","line":222,"column":17,"nodeType":"3972","messageId":"3973","endLine":222,"endColumn":19},{"ruleId":"3970","severity":1,"message":"3971","line":240,"column":20,"nodeType":"3972","messageId":"3973","endLine":240,"endColumn":22},{"ruleId":"3970","severity":1,"message":"3971","line":256,"column":16,"nodeType":"3972","messageId":"3973","endLine":256,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3971","line":272,"column":14,"nodeType":"3972","messageId":"3973","endLine":272,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3971","line":390,"column":29,"nodeType":"3972","messageId":"3973","endLine":390,"endColumn":31},{"ruleId":"3970","severity":1,"message":"3971","line":404,"column":36,"nodeType":"3972","messageId":"3973","endLine":404,"endColumn":38},{"ruleId":"3970","severity":1,"message":"3971","line":420,"column":34,"nodeType":"3972","messageId":"3973","endLine":420,"endColumn":36},{"ruleId":"3970","severity":1,"message":"3971","line":433,"column":32,"nodeType":"3972","messageId":"3973","endLine":433,"endColumn":34},{"ruleId":"3970","severity":1,"message":"3971","line":447,"column":39,"nodeType":"3972","messageId":"3973","endLine":447,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":460,"column":31,"nodeType":"3972","messageId":"3973","endLine":460,"endColumn":33},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3992","line":6,"column":10,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":18},{"ruleId":"3963","severity":1,"message":"3985","line":25,"column":35,"nodeType":"3965","messageId":"3966","endLine":25,"endColumn":40},{"ruleId":"3963","severity":1,"message":"3988","line":4,"column":10,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4371","line":10,"column":3,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4372","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4373","line":34,"column":9,"nodeType":"3965","messageId":"3966","endLine":34,"endColumn":11},{"ruleId":"3963","severity":1,"message":"4375","line":43,"column":20,"nodeType":"3965","messageId":"3966","endLine":43,"endColumn":31},{"ruleId":"3963","severity":1,"message":"4376","line":44,"column":21,"nodeType":"3965","messageId":"3966","endLine":44,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4377","line":45,"column":24,"nodeType":"3965","messageId":"3966","endLine":45,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4379","line":46,"column":24,"nodeType":"3965","messageId":"3966","endLine":46,"endColumn":39},{"ruleId":"3963","severity":1,"message":"4380","line":55,"column":23,"nodeType":"3965","messageId":"3966","endLine":55,"endColumn":37},{"ruleId":"3974","severity":1,"message":"4449","line":61,"column":6,"nodeType":"3976","endLine":61,"endColumn":8,"suggestions":"4550"},{"ruleId":"4078","severity":1,"message":"4383","line":386,"column":17,"nodeType":"3965","messageId":"4080","endLine":386,"endColumn":20},{"ruleId":"4085","severity":1,"message":"4106","line":400,"column":26,"nodeType":"4087","messageId":"4088","endLine":400,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":401,"column":21,"nodeType":"3972","messageId":"3973","endLine":401,"endColumn":23},{"ruleId":"4078","severity":1,"message":"4384","line":409,"column":13,"nodeType":"3965","messageId":"4080","endLine":409,"endColumn":21},{"ruleId":"3963","severity":1,"message":"4331","line":1,"column":10,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":16},{"ruleId":"3963","severity":1,"message":"4266","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4276","line":3,"column":10,"nodeType":"3965","messageId":"3966","endLine":3,"endColumn":17},{"ruleId":"3963","severity":1,"message":"4332","line":14,"column":7,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":13},{"ruleId":"3974","severity":1,"message":"4160","line":88,"column":6,"nodeType":"3976","endLine":88,"endColumn":14,"suggestions":"4551"},{"ruleId":"4020","severity":1,"message":"4021","line":148,"column":27,"nodeType":"4022","messageId":"4023","endLine":151,"endColumn":28,"fix":"4552"},{"ruleId":"4020","severity":1,"message":"4021","line":161,"column":23,"nodeType":"4022","messageId":"4023","endLine":164,"endColumn":28,"fix":"4553"},{"ruleId":"3970","severity":1,"message":"3971","line":171,"column":41,"nodeType":"3972","messageId":"3973","endLine":171,"endColumn":43},{"ruleId":"4336","severity":1,"message":"4337","line":171,"column":46,"nodeType":"4338","messageId":"4339","endLine":171,"endColumn":48},{"ruleId":"4336","severity":1,"message":"4337","line":171,"column":64,"nodeType":"4338","messageId":"4339","endLine":171,"endColumn":66},{"ruleId":"4336","severity":1,"message":"4340","line":171,"column":64,"nodeType":"4338","messageId":"4339","endLine":171,"endColumn":66},{"ruleId":"3970","severity":1,"message":"3971","line":171,"column":81,"nodeType":"3972","messageId":"3973","endLine":171,"endColumn":83},{"ruleId":"4336","severity":1,"message":"4340","line":171,"column":86,"nodeType":"4338","messageId":"4339","endLine":171,"endColumn":88},{"ruleId":"3970","severity":1,"message":"3971","line":176,"column":39,"nodeType":"3972","messageId":"3973","endLine":176,"endColumn":41},{"ruleId":"3970","severity":1,"message":"3971","line":179,"column":40,"nodeType":"3972","messageId":"3973","endLine":179,"endColumn":42},{"ruleId":"3970","severity":1,"message":"3971","line":182,"column":42,"nodeType":"3972","messageId":"3973","endLine":182,"endColumn":44},{"ruleId":"3970","severity":1,"message":"3971","line":193,"column":44,"nodeType":"3972","messageId":"3973","endLine":193,"endColumn":46},{"ruleId":"3970","severity":1,"message":"3971","line":221,"column":46,"nodeType":"3972","messageId":"3973","endLine":221,"endColumn":48},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3983","line":12,"column":9,"nodeType":"3965","messageId":"3966","endLine":12,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":13,"column":35,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4213","line":4,"column":41,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":52},{"ruleId":"3974","severity":1,"message":"4329","line":12,"column":6,"nodeType":"3976","endLine":12,"endColumn":11,"suggestions":"4554"},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3983","line":14,"column":9,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3985","line":15,"column":35,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":40},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3985","line":23,"column":35,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4555","line":4,"column":8,"nodeType":"3965","messageId":"3966","endLine":4,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4556","line":5,"column":8,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":18},{"ruleId":"3963","severity":1,"message":"4036","line":11,"column":8,"nodeType":"3965","messageId":"3966","endLine":11,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4210","line":13,"column":3,"nodeType":"3965","messageId":"3966","endLine":13,"endColumn":8},{"ruleId":"3963","severity":1,"message":"4557","line":14,"column":3,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":13},{"ruleId":"3963","severity":1,"message":"4211","line":15,"column":3,"nodeType":"3965","messageId":"3966","endLine":15,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4212","line":16,"column":3,"nodeType":"3965","messageId":"3966","endLine":16,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4213","line":17,"column":3,"nodeType":"3965","messageId":"3966","endLine":17,"endColumn":14},{"ruleId":"3963","severity":1,"message":"3979","line":18,"column":3,"nodeType":"3965","messageId":"3966","endLine":18,"endColumn":9},{"ruleId":"3963","severity":1,"message":"4389","line":22,"column":17,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":20},{"ruleId":"4390","severity":1,"message":"4391","line":150,"column":153,"nodeType":"3972","messageId":"4392","endLine":150,"endColumn":154},{"ruleId":"4390","severity":1,"message":"4391","line":150,"column":156,"nodeType":"3972","messageId":"4392","endLine":150,"endColumn":157},{"ruleId":"4154","severity":1,"message":"4155","line":151,"column":33,"nodeType":"4156","messageId":"4157","endLine":151,"endColumn":34,"fix":"4558"},{"ruleId":"4085","severity":1,"message":"4086","line":232,"column":45,"nodeType":"4087","messageId":"4088","endLine":232,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":284,"column":31,"nodeType":"4087","messageId":"4088","endLine":284,"endColumn":33},{"ruleId":"4085","severity":1,"message":"4086","line":301,"column":31,"nodeType":"4087","messageId":"4088","endLine":301,"endColumn":33},{"ruleId":"4085","severity":1,"message":"4086","line":321,"column":45,"nodeType":"4087","messageId":"4088","endLine":321,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":353,"column":27,"nodeType":"4087","messageId":"4088","endLine":353,"endColumn":29},{"ruleId":"4085","severity":1,"message":"4086","line":366,"column":27,"nodeType":"4087","messageId":"4088","endLine":366,"endColumn":29},{"ruleId":"4394","severity":1,"message":"4395","line":450,"column":9,"nodeType":"4396","messageId":"3973","endLine":450,"endColumn":13,"fix":"4559"},{"ruleId":"4085","severity":1,"message":"4086","line":460,"column":45,"nodeType":"4087","messageId":"4088","endLine":460,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":477,"column":33,"nodeType":"3972","messageId":"3973","endLine":477,"endColumn":35},{"ruleId":"4078","severity":1,"message":"4398","line":527,"column":14,"nodeType":"3965","messageId":"4080","endLine":527,"endColumn":28},{"ruleId":"4078","severity":1,"message":"4398","line":534,"column":13,"nodeType":"3965","messageId":"4080","endLine":534,"endColumn":27},{"ruleId":"4085","severity":1,"message":"4086","line":594,"column":21,"nodeType":"4087","messageId":"4088","endLine":594,"endColumn":23},{"ruleId":"4524","severity":1,"message":"4525","line":665,"column":11,"nodeType":"4156","messageId":"4526","endLine":665,"endColumn":21},{"ruleId":"3970","severity":1,"message":"3971","line":853,"column":31,"nodeType":"3972","messageId":"3973","endLine":853,"endColumn":33},{"ruleId":"4399","severity":1,"message":"4400","line":855,"column":6,"nodeType":"3965","messageId":"4401","endLine":855,"endColumn":16},{"ruleId":"3970","severity":1,"message":"3991","line":898,"column":26,"nodeType":"3972","messageId":"3973","endLine":898,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":1056,"column":29,"nodeType":"3972","messageId":"3973","endLine":1056,"endColumn":31},{"ruleId":"4402","severity":1,"message":"4403","line":1058,"column":6,"nodeType":"4022","endLine":1058,"endColumn":55},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"4213","line":2,"column":41,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":52},{"ruleId":"3963","severity":1,"message":"3985","line":24,"column":35,"nodeType":"3965","messageId":"3966","endLine":24,"endColumn":40},{"ruleId":"3963","severity":1,"message":"4389","line":10,"column":17,"nodeType":"3965","messageId":"3966","endLine":10,"endColumn":20},{"ruleId":"3963","severity":1,"message":"4036","line":14,"column":8,"nodeType":"3965","messageId":"3966","endLine":14,"endColumn":22},{"ruleId":"4390","severity":1,"message":"4391","line":138,"column":153,"nodeType":"3972","messageId":"4392","endLine":138,"endColumn":154},{"ruleId":"4390","severity":1,"message":"4391","line":138,"column":156,"nodeType":"3972","messageId":"4392","endLine":138,"endColumn":157},{"ruleId":"4154","severity":1,"message":"4155","line":139,"column":33,"nodeType":"4156","messageId":"4157","endLine":139,"endColumn":34,"fix":"4560"},{"ruleId":"4085","severity":1,"message":"4086","line":148,"column":17,"nodeType":"4087","messageId":"4088","endLine":148,"endColumn":19},{"ruleId":"4085","severity":1,"message":"4086","line":233,"column":45,"nodeType":"4087","messageId":"4088","endLine":233,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":285,"column":31,"nodeType":"4087","messageId":"4088","endLine":285,"endColumn":33},{"ruleId":"4085","severity":1,"message":"4086","line":303,"column":31,"nodeType":"4087","messageId":"4088","endLine":303,"endColumn":33},{"ruleId":"4085","severity":1,"message":"4086","line":323,"column":45,"nodeType":"4087","messageId":"4088","endLine":323,"endColumn":47},{"ruleId":"4085","severity":1,"message":"4086","line":356,"column":27,"nodeType":"4087","messageId":"4088","endLine":356,"endColumn":29},{"ruleId":"4085","severity":1,"message":"4086","line":369,"column":27,"nodeType":"4087","messageId":"4088","endLine":369,"endColumn":29},{"ruleId":"4394","severity":1,"message":"4395","line":480,"column":10,"nodeType":"4396","messageId":"3973","endLine":480,"endColumn":14,"fix":"4561"},{"ruleId":"4085","severity":1,"message":"4086","line":490,"column":45,"nodeType":"4087","messageId":"4088","endLine":490,"endColumn":47},{"ruleId":"3970","severity":1,"message":"3971","line":509,"column":35,"nodeType":"3972","messageId":"3973","endLine":509,"endColumn":37},{"ruleId":"4078","severity":1,"message":"4398","line":561,"column":14,"nodeType":"3965","messageId":"4080","endLine":561,"endColumn":28},{"ruleId":"4078","severity":1,"message":"4398","line":568,"column":14,"nodeType":"3965","messageId":"4080","endLine":568,"endColumn":28},{"ruleId":"4085","severity":1,"message":"4086","line":629,"column":21,"nodeType":"4087","messageId":"4088","endLine":629,"endColumn":23},{"ruleId":"4524","severity":1,"message":"4525","line":695,"column":13,"nodeType":"4156","messageId":"4526","endLine":695,"endColumn":23},{"ruleId":"3970","severity":1,"message":"3971","line":877,"column":33,"nodeType":"3972","messageId":"3973","endLine":877,"endColumn":35},{"ruleId":"4399","severity":1,"message":"4400","line":879,"column":8,"nodeType":"3965","messageId":"4401","endLine":879,"endColumn":18},{"ruleId":"3970","severity":1,"message":"3991","line":922,"column":26,"nodeType":"3972","messageId":"3973","endLine":922,"endColumn":28},{"ruleId":"3970","severity":1,"message":"3971","line":1084,"column":29,"nodeType":"3972","messageId":"3973","endLine":1084,"endColumn":31},{"ruleId":"4402","severity":1,"message":"4403","line":1086,"column":6,"nodeType":"4022","endLine":1086,"endColumn":55},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4036","line":6,"column":8,"nodeType":"3965","messageId":"3966","endLine":6,"endColumn":22},{"ruleId":"3963","severity":1,"message":"4277","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":14},{"ruleId":"3963","severity":1,"message":"4002","line":9,"column":8,"nodeType":"3965","messageId":"3966","endLine":9,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4152","line":22,"column":37,"nodeType":"3965","messageId":"3966","endLine":22,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4404","line":27,"column":38,"nodeType":"3965","messageId":"3966","endLine":27,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3991","line":35,"column":30,"nodeType":"3972","messageId":"3973","endLine":35,"endColumn":32},{"ruleId":"3963","severity":1,"message":"4405","line":41,"column":25,"nodeType":"3965","messageId":"3966","endLine":41,"endColumn":33},{"ruleId":"3963","severity":1,"message":"4123","line":1,"column":17,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":25},{"ruleId":"3963","severity":1,"message":"3984","line":1,"column":27,"nodeType":"3965","messageId":"3966","endLine":1,"endColumn":36},{"ruleId":"3963","severity":1,"message":"3979","line":2,"column":54,"nodeType":"3965","messageId":"3966","endLine":2,"endColumn":60},{"ruleId":"3963","severity":1,"message":"4002","line":7,"column":8,"nodeType":"3965","messageId":"3966","endLine":7,"endColumn":12},{"ruleId":"3963","severity":1,"message":"4152","line":19,"column":37,"nodeType":"3965","messageId":"3966","endLine":19,"endColumn":43},{"ruleId":"3963","severity":1,"message":"4404","line":23,"column":38,"nodeType":"3965","messageId":"3966","endLine":23,"endColumn":43},{"ruleId":"3970","severity":1,"message":"3991","line":36,"column":22,"nodeType":"3972","messageId":"3973","endLine":36,"endColumn":24},{"ruleId":"3963","severity":1,"message":"4405","line":42,"column":17,"nodeType":"3965","messageId":"3966","endLine":42,"endColumn":25},{"ruleId":"3963","severity":1,"message":"4262","line":5,"column":10,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":19},{"ruleId":"3963","severity":1,"message":"4319","line":5,"column":21,"nodeType":"3965","messageId":"3966","endLine":5,"endColumn":31},"no-native-reassign",["4562"],"no-negated-in-lhs",["4563"],"no-unused-vars","'LoginFun' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'history' is assigned a value but never used.","'declinedStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["4564"],"'useRef' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.",["4565"],"'LoginForm' is defined but never used.","'alert' is assigned a value but never used.","'useEffect' is defined but never used.","'reset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["4566"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["4567"],"Expected '!==' and instead saw '!='.","'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["4568"],"React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["4569"],"'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.",["4570"],"'s' is assigned a value but never used.","'classNames' is defined but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalDetails'. Either include it or remove the dependency array.",["4571"],"'date' is assigned a value but never used.","'convert' is defined but never used.","'val3' is assigned a value but never used.","'setVal3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["4572"],"'timer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"4573","text":"4574"},"'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["4575"],"React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["4576"],"'Layout' is defined but never used.","'userId' is assigned a value but never used.","'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.obj'. Either include it or remove the dependency array.",["4577"],["4578"],"'CommonServices' is defined but never used.","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["4579"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["4580"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","'getValues' is assigned a value but never used.","'TaxProffesionalService' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'Option' is assigned a value but never used.","'store2' is assigned a value but never used.","'setStore2' is assigned a value but never used.","'mcategory' is assigned a value but never used.","'mdata' is assigned a value but never used.","'setmdata' is assigned a value but never used.","'mdataName' is assigned a value but never used.","'setMdataname' is assigned a value but never used.","'numAvail' is assigned a value but never used.","'display' is assigned a value but never used.","'mcatname' is assigned a value but never used.","'error' is assigned a value but never used.","'error2' is assigned a value but never used.","'custCate2' is assigned a value but never used.","'teamleader' is assigned a value but never used.","'setTeamLeader' is assigned a value but never used.","'tl' is assigned a value but never used.","'setTl' is assigned a value but never used.","'post1' is assigned a value but never used.","'setPost1' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'post_na' is assigned a value but never used.","'setPost_na' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'a' is defined but never used.","'dirvalue' is assigned a value but never used.","'indirvalue' is assigned a value but never used.","'allsubcatvalue' is assigned a value but never used.","no-redeclare","'vv' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'getTutorial'. Either include it or remove the dependency array.",["4581"],"'kk' is assigned a value but never used.","'parentCategoryName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Card' is defined but never used.","'CardHeader' is defined but never used.","'setDisplayQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["4582"],"'nn' is assigned a value but never used.","'postValue' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'post_name' is defined but never used.","'teamleader1' is assigned a value but never used.","'categeryName' is already defined.","'a' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","'Redirect' is defined but never used.","'expectedDate' is assigned a value but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["4583"],["4584"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'createContext' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Recording' is defined but never used.","'tabIndex' is assigned a value but never used.","'setTabIndex' is assigned a value but never used.","'useState' is defined but never used.","'userid' is assigned a value but never used.",["4585"],["4586"],["4587"],["4588"],"Block is redundant.","redundantBlock","'subCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'custCate' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'allData1' is assigned a value but never used.","'dir' is assigned a value but never used.","'indir' is assigned a value but never used.","'firstDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getTeamLeader'. Either include them or remove the dependency array.",["4589"],"'dd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["4590"],{"range":"4591","text":"4574"},"'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["4592"],"'myPurpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","'del' is assigned a value but never used.","'errors' is assigned a value but never used.","'digit2' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"4593","text":"4594"},"'deleteCliente' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["4595"],{"range":"4596","text":"4574"},"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["4597"],["4598"],"'useLayoutEffect' is defined but never used.","'declined2' is assigned a value but never used.",["4599"],"React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["4600"],["4601"],["4602"],["4603"],["4604"],"'declined' is assigned a value but never used.",["4605"],"'setValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["4606"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["4607"],{"range":"4608","text":"4574"},"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["4609"],{"range":"4610","text":"4574"},"'result' is defined but never used.","'clientDiscussion' is assigned a value but never used.",["4611"],"'Reset' is defined but never used.","'register' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["4612"],"'data8' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data5', 'defSubValue', and 'defValue'. Either include them or remove the dependency array.",["4613"],"React Hook useEffect has a missing dependency: 'getSubCategory'. Either include it or remove the dependency array.",["4614"],"'store' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'setError' is assigned a value but never used.",["4615"],"'getId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRecording'. Either include it or remove the dependency array.",["4616"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["4617"],"'PaymentIcon' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'baseUrl2' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'paydetails2'. Either include it or remove the dependency array.",["4618"],{"range":"4619","text":"4574"},{"range":"4620","text":"4574"},"'modalData' is assigned a value but never used.","'showTable' is assigned a value but never used.","'paymentUrlcopy' is assigned a value but never used.","'setPaymentUrlCopy' is assigned a value but never used.",["4621"],"'openModal' is assigned a value but never used.",{"range":"4622","text":"4574"},"'Container' is assigned a value but never used.","'subCat' is assigned a value but never used.","'setsubCat' is assigned a value but never used.",["4623"],"'emailPost' is assigned a value but never used.","'setEmailPost' is assigned a value but never used.","'valiEmailPost' is assigned a value but never used.","'setValiemailPost' is assigned a value but never used.","'invalidPost' is assigned a value but never used.","'setInvalidPost' is assigned a value but never used.","'wEmailPost' is assigned a value but never used.","'setWemailPost' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'emailValidation' is assigned a value but never used.","'setpassError' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.",["4624"],"'Footer' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ChangeHistoryIcon' is defined but never used.","'id' is assigned a value but never used.","'cust_id' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["4625"],{"range":"4626","text":"4574"},"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["4627"],"'selectedData' is assigned a value but never used.","'tax2' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'status1' is assigned a value but never used.","'item' is assigned a value but never used.","'useParams' is defined but never used.","'assignNo' is assigned a value but never used.","'ViewDiscussionToggel' is assigned a value but never used.",["4628"],"'Spinner' is defined but never used.",["4629"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["4630"],"'AssessmentIcon' is defined but never used.",["4631"],["4632"],{"range":"4633","text":"4574"},"'ChangeFormateDate' is defined but never used.","'assignment' is assigned a value but never used.","'useForm' is defined but never used.","'Alerts' is defined but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["4634"],"'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeedback2'. Either include it or remove the dependency array.",["4635"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'name' is assigned a value but never used.","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["4636"],{"range":"4637","text":"4574"},"'AccountBalanceIcon' is defined but never used.","'id2' is assigned a value but never used.","'setId2' is assigned a value but never used.","'tds' is assigned a value but never used.","'setTds' is assigned a value but never used.",["4638"],{"range":"4639","text":"4574"},["4640"],{"range":"4641","text":"4574"},["4642"],{"range":"4643","text":"4574"},"'OptGroup' is assigned a value but never used.",["4644"],"'des' is assigned a value but never used.","'setId' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["4645"],"'status' is assigned a value but never used.",["4646"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["4647"],"'setCount' is assigned a value but never used.","'ViewDiscussion' is assigned a value but never used.","'setViewDiscussion' is assigned a value but never used.","'copied' is assigned a value but never used.",{"range":"4648","text":"4574"},"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","'services2' is assigned a value but never used.","'disabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4649"],"'feedbackNumber' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["4650"],"'values' is defined but never used.","'Schema' is assigned a value but never used.",["4651"],{"range":"4652","text":"4574"},{"range":"4653","text":"4574"},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'ModalVideo' is defined but never used.","'ReactHlsPlayer' is defined but never used.",["4654"],{"range":"4655","text":"4574"},{"range":"4656","text":"4574"},["4657"],"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'difference' is assigned a value but never used.",{"range":"4658","text":"4574"},{"range":"4659","text":"4574"},"'baseUrl3' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.","'tlname' is assigned a value but never used.",{"range":"4660","text":"4574"},"React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', 'props.id', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4661"],["4662"],"'setSelectedData' is assigned a value but never used.",["4663"],"'Select' is defined but never used.",{"range":"4664","text":"4574"},"'NavLink' is defined but never used.",{"range":"4665","text":"4574"},{"range":"4666","text":"4574"},{"range":"4667","text":"4574"},"'paymentcount' is assigned a value but never used.",{"range":"4668","text":"4574"},{"range":"4669","text":"4574"},"'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'em' is assigned a value but never used.","'loading' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'setShowVideoIcon' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["4670"],"'msg' is already defined.","'variable' is already defined.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["4671"],"'records' is assigned a value but never used.","'red' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"4672","text":"4673"},"no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"4674","text":"4675"},"'praticipantVar' is already defined.","no-use-before-define","'resourceId' was used before it was defined.","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'start' is assigned a value but never used.","'fileList' is assigned a value but never used.","'formData2' is assigned a value but never used.","'AdminFilter' is defined but never used.","'assignmentCount' is assigned a value but never used.","'assingmentStatus' is assigned a value but never used.","'viewData' is assigned a value but never used.","'ViewHandler' is assigned a value but never used.",["4676"],"'defaultSorted' is assigned a value but never used.",["4677"],["4678"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'FeedbackIcon' is defined but never used.","'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","'setRejected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["4679"],{"range":"4680","text":"4574"},["4681"],["4682"],"'rightAli' is assigned a value but never used.",{"range":"4683","text":"4574"},"'Cookies' is defined but never used.","'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["4684"],"Unexpected mix of '>' and '==='. Use parentheses to clarify the intended order of operations.",["4685"],"'arr' is assigned a value but never used.",["4686"],{"range":"4687","text":"4574"},"'rejected' is assigned a value but never used.","'viewStyle' is assigned a value but never used.",["4688"],{"range":"4689","text":"4574"},{"range":"4690","text":"4574"},["4691"],"'date' is defined but never used.",["4692"],"'IntegratedEditing' is defined but never used.","'owner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["4693"],"'messages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["4694"],["4695"],["4696"],["4697"],["4698"],["4699"],["4700"],"'modalBox' is assigned a value but never used.","'canBtn' is assigned a value but never used.",["4701"],["4702"],"'myStyle1' is assigned a value but never used.","'myStyle2' is assigned a value but never used.",["4703"],["4704"],["4705"],["4706"],"'amount' is assigned a value but never used.","'payment_terms' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'installment_amount' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","'installAmount' is assigned a value but never used.","'localeData' is defined but never used.",["4707"],["4708"],["4709"],{"range":"4710","text":"4574"},{"range":"4711","text":"4574"},"'copyFun' is assigned a value but never used.","'complete' is assigned a value but never used.",["4712"],["4713"],["4714"],["4715"],{"range":"4716","text":"4574"},{"range":"4717","text":"4574"},["4718"],{"range":"4719","text":"4574"},{"range":"4720","text":"4574"},"'TeamFilter' is defined but never used.","'ChatHistory' is defined but never used.","'OutlinedInputIcons' is defined but never used.",["4721"],["4722"],["4723"],{"range":"4724","text":"4574"},["4725"],"'selectInputRef2' is assigned a value but never used.",["4726"],["4727"],"'options4' is assigned a value but never used.","'taxProfessional' is assigned a value but never used.",["4728"],["4729"],"React Hook useEffect has a missing dependency: 'checkAssigned'. Either include it or remove the dependency array.",["4730"],["4731"],["4732"],{"range":"4733","text":"4574"},["4734"],{"range":"4735","text":"4574"},["4736"],["4737"],["4738"],"'RecordVoiceOverIcon' is defined but never used.","'customer_id' is assigned a value but never used.","'customer_secret' is assigned a value but never used.",{"range":"4739","text":"4740"},{"range":"4741","text":"4675"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation",["4742"],{"range":"4743","text":"4574"},["4744"],["4745"],{"range":"4746","text":"4574"},"'TaxProfessionalFilter' is defined but never used.",["4747"],["4748"],"'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.",["4749"],["4750"],{"range":"4751","text":"4574"},["4752"],{"range":"4753","text":"4574"},["4754"],["4755"],["4756"],["4757"],["4758"],{"range":"4759","text":"4574"},["4760"],["4761"],["4762"],["4763"],{"range":"4764","text":"4574"},{"range":"4765","text":"4574"},["4766"],"'MicNoneIcon' is defined but never used.","'MicOffIcon' is defined but never used.","'ModalTitle' is defined but never used.",{"range":"4767","text":"4673"},{"range":"4768","text":"4675"},{"range":"4769","text":"4673"},{"range":"4770","text":"4675"},"no-global-assign","no-unsafe-negation",{"desc":"4771","fix":"4772"},{"desc":"4773","fix":"4774"},{"desc":"4775","fix":"4776"},{"desc":"4777","fix":"4778"},{"desc":"4779","fix":"4780"},{"desc":"4781","fix":"4782"},{"desc":"4773","fix":"4783"},{"desc":"4784","fix":"4785"},{"desc":"4786","fix":"4787"},[18658,18658]," rel=\"noreferrer\"",{"desc":"4788","fix":"4789"},{"desc":"4790","fix":"4791"},{"desc":"4792","fix":"4793"},{"desc":"4773","fix":"4794"},{"desc":"4795","fix":"4796"},{"desc":"4795","fix":"4797"},{"desc":"4798","fix":"4799"},{"desc":"4800","fix":"4801"},{"desc":"4802","fix":"4803"},{"desc":"4804","fix":"4805"},{"desc":"4790","fix":"4806"},{"desc":"4792","fix":"4807"},{"desc":"4800","fix":"4808"},{"desc":"4795","fix":"4809"},{"desc":"4810","fix":"4811"},{"desc":"4812","fix":"4813"},[6864,6864],{"desc":"4814","fix":"4815"},[4131,4140],"\r\n      .",{"desc":"4816","fix":"4817"},[3298,3298],{"desc":"4818","fix":"4819"},{"desc":"4804","fix":"4820"},{"desc":"4771","fix":"4821"},{"desc":"4822","fix":"4823"},{"desc":"4814","fix":"4824"},{"desc":"4814","fix":"4825"},{"desc":"4826","fix":"4827"},{"desc":"4788","fix":"4828"},{"desc":"4814","fix":"4829"},{"desc":"4830","fix":"4831"},{"desc":"4832","fix":"4833"},[13147,13147],{"desc":"4834","fix":"4835"},[2434,2434],{"desc":"4830","fix":"4836"},{"desc":"4837","fix":"4838"},{"desc":"4839","fix":"4840"},{"desc":"4841","fix":"4842"},{"desc":"4786","fix":"4843"},{"desc":"4844","fix":"4845"},{"desc":"4846","fix":"4847"},{"desc":"4848","fix":"4849"},[6592,6592],[7754,7754],{"desc":"4848","fix":"4850"},[5746,5746],{"desc":"4851","fix":"4852"},{"desc":"4773","fix":"4853"},{"desc":"4854","fix":"4855"},[17248,17248],{"desc":"4856","fix":"4857"},{"desc":"4856","fix":"4858"},{"desc":"4856","fix":"4859"},{"desc":"4860","fix":"4861"},{"desc":"4854","fix":"4862"},{"desc":"4854","fix":"4863"},[16956,16956],{"desc":"4864","fix":"4865"},{"desc":"4866","fix":"4867"},{"desc":"4868","fix":"4869"},[9578,9578],{"desc":"4868","fix":"4870"},[10692,10692],{"desc":"4868","fix":"4871"},[12098,12098],{"desc":"4868","fix":"4872"},[8212,8212],{"desc":"4830","fix":"4873"},{"desc":"4830","fix":"4874"},{"desc":"4830","fix":"4875"},{"desc":"4876","fix":"4877"},[7403,7403],{"desc":"4878","fix":"4879"},{"desc":"4880","fix":"4881"},{"desc":"4882","fix":"4883"},[4236,4236],[4764,4764],{"desc":"4844","fix":"4884"},[2205,2205],[1152,1152],{"desc":"4885","fix":"4886"},[3971,3971],[2366,2366],[8500,8500],{"desc":"4887","fix":"4888"},{"desc":"4864","fix":"4889"},{"desc":"4851","fix":"4890"},[6757,6757],[7236,7236],[6678,6678],[6403,6403],[13606,13606],[14293,14293],{"desc":"4891","fix":"4892"},{"desc":"4893","fix":"4894"},[4064,4070],"\r\n   .",[12823,12834],"",{"desc":"4854","fix":"4895"},{"desc":"4854","fix":"4896"},{"desc":"4854","fix":"4897"},{"desc":"4898","fix":"4899"},[10040,10040],{"desc":"4898","fix":"4900"},{"desc":"4898","fix":"4901"},[13729,13729],{"desc":"4902","fix":"4903"},{"desc":"4902","fix":"4904"},{"desc":"4898","fix":"4905"},[11620,11620],{"desc":"4882","fix":"4906"},[3026,3026],[3557,3557],{"desc":"4902","fix":"4907"},{"desc":"4902","fix":"4908"},{"desc":"4909","fix":"4910"},{"desc":"4911","fix":"4912"},{"desc":"4911","fix":"4913"},{"desc":"4911","fix":"4914"},{"desc":"4911","fix":"4915"},{"desc":"4788","fix":"4916"},{"desc":"4864","fix":"4917"},{"desc":"4844","fix":"4918"},{"desc":"4790","fix":"4919"},{"desc":"4920","fix":"4921"},{"desc":"4830","fix":"4922"},{"desc":"4795","fix":"4923"},{"desc":"4822","fix":"4924"},{"desc":"4814","fix":"4925"},{"desc":"4814","fix":"4926"},{"desc":"4786","fix":"4927"},{"desc":"4848","fix":"4928"},[5700,5700],[6497,6497],{"desc":"4814","fix":"4929"},{"desc":"4814","fix":"4930"},{"desc":"4771","fix":"4931"},{"desc":"4848","fix":"4932"},[5701,5701],[6532,6532],{"desc":"4882","fix":"4933"},[4357,4357],[4885,4885],{"desc":"4868","fix":"4934"},{"desc":"4868","fix":"4935"},{"desc":"4868","fix":"4936"},[7183,7183],{"desc":"4844","fix":"4937"},{"desc":"4810","fix":"4938"},{"desc":"4812","fix":"4939"},{"desc":"4795","fix":"4940"},{"desc":"4920","fix":"4941"},{"desc":"4942","fix":"4943"},{"desc":"4790","fix":"4944"},{"desc":"4854","fix":"4945"},[17912,17912],{"desc":"4854","fix":"4946"},[17010,17010],{"desc":"4854","fix":"4947"},{"desc":"4909","fix":"4948"},{"desc":"4876","fix":"4949"},[3319,3330],"\r\n        .",[11579,11590],{"desc":"4868","fix":"4950"},[9323,9323],{"desc":"4856","fix":"4951"},{"desc":"4868","fix":"4952"},[10384,10384],{"desc":"4830","fix":"4953"},{"desc":"4830","fix":"4954"},{"desc":"4830","fix":"4955"},{"desc":"4868","fix":"4956"},[8249,8249],{"desc":"4868","fix":"4957"},[10280,10280],{"desc":"4856","fix":"4958"},{"desc":"4856","fix":"4959"},{"desc":"4856","fix":"4960"},{"desc":"4860","fix":"4961"},{"desc":"4868","fix":"4962"},[7576,7576],{"desc":"4878","fix":"4963"},{"desc":"4864","fix":"4964"},{"desc":"4909","fix":"4965"},{"desc":"4882","fix":"4966"},[4245,4245],[4772,4772],{"desc":"4880","fix":"4967"},[4171,4177],[12593,12604],[3917,3923],[13400,13411],"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"4968","text":"4969"},"Update the dependencies array to be: [getTime, load]",{"range":"4970","text":"4971"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"4972","text":"4973"},"Update the dependencies array to be: [userId]",{"range":"4974","text":"4975"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"4976","text":"4977"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"4978","text":"4979"},{"range":"4980","text":"4971"},"Update the dependencies array to be: [getProposalDetails]",{"range":"4981","text":"4982"},"Update the dependencies array to be: [getQuery]",{"range":"4983","text":"4984"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"4985","text":"4986"},"Update the dependencies array to be: [getChatting, id]",{"range":"4987","text":"4988"},"Update the dependencies array to be: [item, props.location.obj]",{"range":"4989","text":"4990"},{"range":"4991","text":"4971"},"Update the dependencies array to be: [getMessage]",{"range":"4992","text":"4993"},{"range":"4994","text":"4993"},"Update the dependencies array to be: [getTutorial, id]",{"range":"4995","text":"4996"},"Update the dependencies array to be: [assingNo, id]",{"range":"4997","text":"4998"},"Update the dependencies array to be: [getQueryData]",{"range":"4999","text":"5000"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"5001","text":"5002"},{"range":"5003","text":"4988"},{"range":"5004","text":"4990"},{"range":"5005","text":"4998"},{"range":"5006","text":"4993"},"Update the dependencies array to be: [getData, getTeamLeader]",{"range":"5007","text":"5008"},"Update the dependencies array to be: [getTaxProf, taxId]",{"range":"5009","text":"5010"},"Update the dependencies array to be: [userid]",{"range":"5011","text":"5012"},"Update the dependencies array to be: [getData]",{"range":"5013","text":"5014"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"5015","text":"5016"},{"range":"5017","text":"5002"},{"range":"5018","text":"4969"},"Update the dependencies array to be: [getFeedback]",{"range":"5019","text":"5020"},{"range":"5021","text":"5012"},{"range":"5022","text":"5012"},"Update the dependencies array to be: [getTaxProf]",{"range":"5023","text":"5024"},{"range":"5025","text":"4986"},{"range":"5026","text":"5012"},"Update the dependencies array to be: [getAssignmentList]",{"range":"5027","text":"5028"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"5029","text":"5030"},"Update the dependencies array to be: [getReport]",{"range":"5031","text":"5032"},{"range":"5033","text":"5028"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"5034","text":"5035"},"Update the dependencies array to be: [data5, defSubValue, defValue, showDel]",{"range":"5036","text":"5037"},"Update the dependencies array to be: [getSubCategory, store]",{"range":"5038","text":"5039"},{"range":"5040","text":"4984"},"Update the dependencies array to be: [getRecording]",{"range":"5041","text":"5042"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"5043","text":"5044"},"Update the dependencies array to be: [paydetails2]",{"range":"5045","text":"5046"},{"range":"5047","text":"5046"},"Update the dependencies array to be: [getTeamLeader]",{"range":"5048","text":"5049"},{"range":"5050","text":"4971"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"5051","text":"5052"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"5053","text":"5054"},{"range":"5055","text":"5054"},{"range":"5056","text":"5054"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"5057","text":"5058"},{"range":"5059","text":"5052"},{"range":"5060","text":"5052"},"Update the dependencies array to be: [getHistory, report]",{"range":"5061","text":"5062"},"Update the dependencies array to be: [adminDashboard, getFeedback2]",{"range":"5063","text":"5064"},"Update the dependencies array to be: [getProposalList]",{"range":"5065","text":"5066"},{"range":"5067","text":"5066"},{"range":"5068","text":"5066"},{"range":"5069","text":"5066"},{"range":"5070","text":"5028"},{"range":"5071","text":"5028"},{"range":"5072","text":"5028"},"Update the dependencies array to be: [id, userid]",{"range":"5073","text":"5074"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",{"range":"5075","text":"5076"},"Update the dependencies array to be: [getNotification, qno]",{"range":"5077","text":"5078"},"Update the dependencies array to be: [getData, report]",{"range":"5079","text":"5080"},{"range":"5081","text":"5042"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"5082","text":"5083"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",{"range":"5084","text":"5085"},{"range":"5086","text":"5062"},{"range":"5087","text":"5049"},"Update the dependencies array to be: [getData, getUsers]",{"range":"5088","text":"5089"},"Update the dependencies array to be: [allData, getAllQueriesData]",{"range":"5090","text":"5091"},{"range":"5092","text":"5052"},{"range":"5093","text":"5052"},{"range":"5094","text":"5052"},"Update the dependencies array to be: [getProposalData]",{"range":"5095","text":"5096"},{"range":"5097","text":"5096"},{"range":"5098","text":"5096"},"Update the dependencies array to be: [getQueriesData]",{"range":"5099","text":"5100"},{"range":"5101","text":"5100"},{"range":"5102","text":"5096"},{"range":"5103","text":"5080"},{"range":"5104","text":"5100"},{"range":"5105","text":"5100"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"5106","text":"5107"},"Update the dependencies array to be: [getAssignmentData]",{"range":"5108","text":"5109"},{"range":"5110","text":"5109"},{"range":"5111","text":"5109"},{"range":"5112","text":"5109"},{"range":"5113","text":"4986"},{"range":"5114","text":"5062"},{"range":"5115","text":"5042"},{"range":"5116","text":"4988"},"Update the dependencies array to be: [props.location.obj]",{"range":"5117","text":"5118"},{"range":"5119","text":"5028"},{"range":"5120","text":"4993"},{"range":"5121","text":"5020"},{"range":"5122","text":"5012"},{"range":"5123","text":"5012"},{"range":"5124","text":"4984"},{"range":"5125","text":"5046"},{"range":"5126","text":"5012"},{"range":"5127","text":"5012"},{"range":"5128","text":"4969"},{"range":"5129","text":"5046"},{"range":"5130","text":"5080"},{"range":"5131","text":"5066"},{"range":"5132","text":"5066"},{"range":"5133","text":"5066"},{"range":"5134","text":"5042"},{"range":"5135","text":"5008"},{"range":"5136","text":"5010"},{"range":"5137","text":"4993"},{"range":"5138","text":"5118"},"Update the dependencies array to be: [checkAssigned, item]",{"range":"5139","text":"5140"},{"range":"5141","text":"4988"},{"range":"5142","text":"5052"},{"range":"5143","text":"5052"},{"range":"5144","text":"5052"},{"range":"5145","text":"5107"},{"range":"5146","text":"5074"},{"range":"5147","text":"5066"},{"range":"5148","text":"5054"},{"range":"5149","text":"5066"},{"range":"5150","text":"5028"},{"range":"5151","text":"5028"},{"range":"5152","text":"5028"},{"range":"5153","text":"5066"},{"range":"5154","text":"5066"},{"range":"5155","text":"5054"},{"range":"5156","text":"5054"},{"range":"5157","text":"5054"},{"range":"5158","text":"5058"},{"range":"5159","text":"5066"},{"range":"5160","text":"5076"},{"range":"5161","text":"5062"},{"range":"5162","text":"5107"},{"range":"5163","text":"5080"},{"range":"5164","text":"5078"},[6541,6551],"[assingNo, getQuery, id]",[1645,1651],"[getTime, load]",[1180,1182],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[4121,4123],"[userId]",[1167,1169],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[1149,1151],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[1488,1494],[1892,1894],"[getProposalDetails]",[2206,2208],"[getQuery]",[839,841],"[getAllPaid, getPaid, getUnpaid]",[625,629],"[getChatting, id]",[1622,1628],"[item, props.location.obj]",[1340,1346],[699,701],"[getMessage]",[1034,1036],[4242,4246],"[getTutorial, id]",[6984,6994],"[assingNo, id]",[2169,2171],"[getQueryData]",[2855,2864],"[getQuery, queryNo]",[711,715],[1672,1678],[1261,1271],[874,876],[2988,2990],"[getData, getTeamLeader]",[3301,3308],"[getTaxProf, taxId]",[5215,5217],"[userid]",[709,711],"[getData]",[2156,2158],"[getQueryData, getTaxProfession]",[2951,2960],[6931,6941],[742,744],"[getFeedback]",[3184,3186],[2296,2298],[706,708],"[getTaxProf]",[841,843],[3010,3012],[961,963],"[getAssignmentList]",[1280,1290],"[assignNo, getDetails]",[655,657],"[getReport]",[1050,1052],[3179,3183],"[getTeamLeader, id]",[4197,4206],"[data5, defSubValue, defValue, showDel]",[4268,4275],"[getSubCategory, store]",[2064,2066],[1465,1467],"[getRecording]",[926,936],"[assingNo, getAdditionalQuery, getQueryDetails]",[1733,1735],"[paydetails2]",[1682,1684],[5415,5417],"[getTeamLeader]",[2756,2762],[1937,1939],"[getPaymentStatus]",[1001,1003],"[getInCompleteAssingment]",[1189,1191],[976,978],[1165,1167],"[getPendingforAcceptance]",[1771,1773],[1932,1934],[604,612],"[getHistory, report]",[1732,1748],"[adminDashboard, getFeedback2]",[1304,1306],"[getProposalList]",[1663,1665],[1341,1343],[1300,1302],[2450,2452],[2220,2222],[2440,2442],[2282,2284],"[id, userid]",[2752,2770],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",[436,441],"[getNotification, qno]",[2302,2310],"[getData, report]",[1128,1130],[382,392],"[getNotification, tokenKey]",[2628,2646],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",[607,615],[1379,1381],[2338,2340],"[getData, getUsers]",[951,960],"[allData, getAllQueriesData]",[2388,2390],[2503,2505],[2417,2419],[1420,1422],"[getProposalData]",[1349,1351],[1717,1719],[1105,1107],"[getQueriesData]",[1674,1676],[1452,1454],[992,1000],[1346,1348],[2121,2123],[1622,1624],"[getAssignmentNo, getData, getUsers]",[1487,1489],"[getAssignmentData]",[1628,1630],[1382,1384],[1411,1413],[841,843],[499,507],[1454,1456],[708,712],[1627,1629],"[props.location.obj]",[1018,1020],[1059,1061],[742,744],[2296,2298],[5209,5211],[2050,2052],[1636,1638],[3118,3120],[3196,3198],[6115,6125],[1637,1639],[1215,1223],[2104,2106],[1640,1642],[1704,1706],[1379,1381],[2985,2987],[3298,3305],[1060,1062],[1670,1672],[1726,1732],"[checkAssigned, item]",[708,712],[1717,1719],[1943,1945],[1658,1660],[1827,1829],[2253,2255],[1086,1088],[1012,1014],[1370,1372],[2479,2481],[2448,2450],[2588,2590],[1318,1320],[1361,1363],[701,703],[687,689],[987,989],[1252,1254],[2122,2124],[2754,2772],[604,612],[1923,1925],[2312,2320],[436,441]]